mexpr
external externalExp : Float -> Float
in
let exp = lam x766: Float.
    externalExp x766 in
external externalLog : Float -> Float
in
let log = lam x765: Float.
    externalLog x765 in
external externalSin : Float -> Float
in
let sin = lam x764: Float.
    externalSin x764 in
external externalCos : Float -> Float
in
let cos = lam x763: Float.
    externalCos x763 in
external externalPow : Float -> Float -> Float
in
let pow =
  lam x762: Float.
    lam y15: Float.
      externalPow x762 y15
in
external externalSqrt : Float -> Float
in
let sqrt: Float -> Float = lam x761.
    externalSqrt x761 in
let compileOptions =
  { subsample = false,
    subsampleSize = 1,
    printSamples = true,
    seedIsSome = false,
    seed = 0,
    resample = "manual",
    cps = "partial",
    earlyStop = true,
    mcmcLightweightGlobalProb = 0.1,
    mcmcLightweightReuseLocal = true,
    printAcceptanceRate = false }
in
let not: Bool -> Bool =
  lam a1671.
    match
      a1671
    with
      true
    then
      false
    else
      true
in
let and: Bool -> Bool -> Bool =
  lam a1670.
    lam b119.
      match
        a1670
      with
        true
      then
        b119
      else
        false
in
let allb: [Bool] -> Bool = foldl and true in
let or: Bool -> Bool -> Bool =
  lam a1669.
    lam b118.
      match
        a1669
      with
        true
      then
        true
      else
        b118
in
let someb: [Bool] -> Bool = foldl or false in
let xor: Bool -> Bool -> Bool =
  lam a1668.
    lam b117.
      match
        a1668
      with
        true
      then
        not b117
      else
        b117
in
let xnor: Bool -> Bool -> Bool = lam a1667.
    lam b116.
      not (xor a1667 b116)
in
let eqBool: Bool -> Bool -> Bool =
  lam b115: Bool.
    lam b211: Bool.
      match
        b115
      with
        true
      then
        b211
      else match
        b211
      with
        true
      then
        false
      else
        true
in
let cmpBool: Bool -> Bool -> Int =
  lam b114: Bool.
    lam b210: Bool.
      match
        b114
      with
        true
      then
        match
          b210
        with
          true
        then
          0
        else
          1
      else match
        b210
      with
        true
      then
        negi 1
      else
        0
in
let bool2string: Bool -> [Char] =
  lam b113.
    match
      b113
    with
      true
    then
      "true"
    else
      "false"
in
let string2bool: [Char] -> Bool =
  lam s423.
    match
      s423
    with
      "true"
    then
      true
    else match
      s423
    with
      "false"
    then
      false
    else
      error (concat "Cannot convert string " (concat s423 " to Bool."))
in
let inf: Float = divf 1. 0. in
let nan: Float = mulf 0. inf in
let isNaN: Float -> Bool =
  lam a1666.
    match
      eqf a1666 a1666
    with
      true
    then
      false
    else
      true
in
let maxf: Float -> Float -> Float =
  lam l68.
    lam r414.
      match
        or (isNaN l68) (isNaN r414)
      with
        true
      then
        nan
      else match
        gtf l68 r414
      with
        true
      then
        l68
      else
        r414
in
let minf: Float -> Float -> Float =
  lam r413.
    lam l67.
      match
        or (isNaN l67) (isNaN r413)
      with
        true
      then
        nan
      else match
        ltf r413 l67
      with
        true
      then
        r413
      else
        l67
in
let absf: Float -> Float = lam f2728.
    maxf f2728 (negf f2728)
in
let cmpf: Float -> Float -> Int =
  lam l66.
    lam r412.
      let lIsNaN1 = isNaN l66 in
      let rIsNaN1 = isNaN r412 in
      match
        and lIsNaN1 rIsNaN1
      with
        true
      then
        0
      else match
        lIsNaN1
      with
        true
      then
        (negi 1)
      else match
        rIsNaN1
      with
        true
      then
        1
      else match
        ltf l66 r412
      with
        true
      then
        (negi 1)
      else match
        gtf l66 r412
      with
        true
      then
        1
      else
        0
in
let eqfApprox =
  lam epsilon1.
    lam l65.
      lam r411.
        match
          or (ltf epsilon1 0.) (isNaN epsilon1)
        with
          true
        then
          false
        else match
          eqf l65 r411
        with
          true
        then
          true
        else
          leqf (absf (subf l65 r411)) epsilon1
in
let cmpfApprox: Float -> Float -> Float -> Int =
  lam epsilon.
    lam l64.
      lam r410.
        match
          or (ltf epsilon 0.) (isNaN epsilon)
        with
          true
        then
          error
            "eqfApprox: Invalid input, epsilon must be a number greater than or equal to zero."
        else
          let lIsNaN = isNaN l64 in
          let rIsNaN = isNaN r410 in
          match
            and lIsNaN rIsNaN
          with
            true
          then
            0
          else match
            lIsNaN
          with
            true
          then
            (negi 1)
          else match
            rIsNaN
          with
            true
          then
            1
          else match
            eqfApprox epsilon l64 r410
          with
            true
          then
            0
          else match
            ltf l64 r410
          with
            true
          then
            (negi 1)
          else
            1
in
let _eqf = eqfApprox 1e-15 in
let exp1 = lam x760: Float.
    externalExp x760 in
let log1 = lam x759: Float.
    externalLog x759 in
external externalAtan : Float -> Float
in
let atan = lam x758: Float.
    externalAtan x758 in
let pi = mulf 4. (atan 1.) in
let sin1 = lam x757: Float.
    externalSin x757 in
let cos1 = lam x756: Float.
    externalCos x756 in
external externalAtan2 : Float -> Float -> Float
in
let atan2 =
  lam x755: Float.
    lam y14: Float.
      externalAtan2 x755 y14
in
let pow1 =
  lam x754: Float.
    lam y13: Float.
      externalPow x754 y13
in
let sqrt1: Float -> Float = lam x753.
    externalSqrt x753 in
external externalLogGamma : Float -> Float
in
let logGamma: Float -> Float = lam x752.
    externalLogGamma x752
in
external externalLogCombination : Int -> Int -> Float
in
let logCombination: Int -> Int -> Float = lam n65.
    lam c61.
      externalLogCombination n65 c61
in
let maxi =
  lam a1665.
    lam b112.
      match
        gti a1665 b112
      with
        true
      then
        a1665
      else
        b112
in
let mini =
  lam a1664.
    lam b111.
      match
        lti a1664 b111
      with
        true
      then
        a1664
      else
        b111
in
let absi = lam i31.
    maxi i31 (negi i31) in
let succ = lam x751.
    addi x751 1 in
let pred = lam x750.
    subi x750 1 in
let isEven: Int -> Bool = lam n64.
    eqi (modi n64 2) 0 in
let eqSign: Int -> Int -> Bool =
  lam a1663.
    lam b109.
      match
        lti a1663 0
      with
        true
      then
        lti b109 0
      else match
        gti a1663 0
      with
        true
      then
        gti b109 0
      else
        eqi b109 0
in
let neqSign: Int -> Int -> Bool = lam a1662.
    lam b108.
      not (eqSign a1662 b108)
in
let logFactorial: Int -> Float =
  lam n62.
    recursive
      let work24 =
        lam acc4975.
          lam n63.
            match
              gti n63 0
            with
              true
            then
              work24 (addf (log1 (int2float n63)) acc4975) (subi n63 1)
            else
              acc4975
    in
    work24 0. n62
in
let fact: Int -> Int =
  lam n60.
    match
      lti n60 0
    with
      true
    then
      error "fact: undefined"
    else
      recursive
        let recur6 =
          lam acc4974.
            lam n61.
              match
                lti n61 2
              with
                true
              then
                acc4974
              else
                recur6 (muli acc4974 n61) (pred n61)
      in
      recur6 1 n60
in
let binomial: Int -> Int -> Int =
  lam n59.
    lam k179.
      match
        or (or (lti n59 0) (lti k179 0)) (gti k179 n59)
      with
        true
      then
        0
      else
        divi (fact n59) (muli (fact k179) (fact (subi n59 k179)))
in
let pascal: Int -> [[Int]] =
  lam n57.
    let nextRow =
      lam row3.
        recursive
          let recur5 =
            lam acc4973.
              lam cs1.
                let #var"X39" = cs1 in
                match
                  #var"X39"
                with
                  ""
                then
                  [ 1 ]
                else match
                  #var"X39"
                with
                  [ 1 ]
                then
                  [ 1, 1 ]
                else match
                  #var"X39"
                with
                  [ c118,
                    c217 ]
                then
                  snoc (cons 1 (snoc acc4973 (addi c118 c217))) 1
                else match
                  #var"X39"
                with
                  [ c119,
                    c218 ] ++ cs2
                then
                  recur5 (snoc acc4973 (addi c119 c218)) (cons c218 cs2)
                else match
                  #var"X39"
                with
                  _
                in
                error "impossible"
        in
        recur5 "" row3
    in
    recursive
      let recur4 =
        lam acc4972.
          lam prow.
            lam n58.
              match
                lti n58 0
              with
                true
              then
                acc4972
              else
                let row2 = nextRow prow in
                recur4 (snoc acc4972 row2) row2 (pred n58)
    in
    recur4 "" "" (pred n57)
in
let pascalrow: Int -> [Int] =
  lam n56.
    match
      lti n56 0
    with
      true
    then
      ""
    else
      let k178 = divi n56 2 in
      let row1 = create (succ k178) (binomial n56) in
      let rrow = reverse row1 in
      match
        isEven n56
      with
        true
      then
        concat row1 (tail rrow)
      else
        concat row1 rrow
in
type Option a
in
con Some: all a1. a1 -> Option a1 in
con None: all a2. () -> Option a2 in
type These a3 b
in
con This: all a4. all b1. a4 -> These a4 b1 in
con That: all a5. all b2. b2 -> These a5 b2 in
con These1: all a6. all b3. (a6, b3) -> These a6 b3 in
type Either a7 b4
in
con Left: all a8. all b5. a8 -> Either a8 b5 in
con Right: all a9. all b6. b6 -> Either a9 b6 in
let optionEq: all a1661. all b107. (a1661 -> b107 -> Bool) -> Option a1661 -> Option b107 -> Bool =
  lam eq10.
    lam o112.
      lam o211.
        match
          (o112, o211)
        with
          (Some v180, Some v220)
        then
          eq10 v180 v220
        else match
          (o112, o211)
        with
          (None {}, None {})
        then
          true
        else
          false
in
let optionCmp: all a1659. (a1659 -> a1659 -> Int) -> Option a1659 -> Option a1659 -> Int =
  lam cmp37.
    lam o111.
      lam o210.
        let #var"X38" = (o111, o210) in
        match
          #var"X38"
        with
          (None _, None _)
        then
          0
        else match
          #var"X38"
        with
          (None _, Some _)
        then
          negi 1
        else match
          #var"X38"
        with
          (Some _, None _)
        then
          1
        else match
          #var"X38"
        with
          (Some a1660, Some b106)
        in
        cmp37 a1660 b106
in
let optionMap: all a1658. all b105. (a1658 -> b105) -> Option a1658 -> Option b105 =
  lam f2727.
    lam o32.
      match
        o32
      with
        Some t1234
      then
        Some
          (f2727 t1234)
      else
        None
          {}
in
let optionMapAccum: all a1656. all b103. all acc4969. (acc4969 -> a1656 -> (acc4969, b103)) -> acc4969 -> Option a1656 -> (acc4969, Option b103) =
  lam f2726.
    lam acc4970.
      lam o31.
        match
          o31
        with
          Some a1657
        then
          match
            f2726 acc4970 a1657
          with
            (acc4971, b104)
          in
          (acc4971, Some
              b104)
        else
          (acc4970, None
            {})
in
let optionJoin: all a1655. Option (Option a1655) -> Option a1655 =
  lam o30.
    match
      o30
    with
      Some t1233
    then
      t1233
    else
      None
        {}
in
let optionBind: all a1654. all b102. Option a1654 -> (a1654 -> Option b102) -> Option b102 =
  lam o29.
    lam f2725.
      optionJoin (optionMap f2725 o29)
in
let optionCompose: all a1653. all b101. all c60. (b101 -> Option c60) -> (a1653 -> Option b101) -> a1653 -> Option c60 =
  lam f2724.
    lam g4.
      lam x749.
        optionBind (g4 x749) f2724
in
let optionZipWith: all a1652. all b100. all c59. (a1652 -> b100 -> c59) -> Option a1652 -> Option b100 -> Option c59 =
  lam f2723.
    lam o110.
      lam o28.
        match
          (o110, o28)
        with
          (Some v179, Some v219)
        then
          Some
            (f2723 v179 v219)
        else
          None
            {}
in
let optionGetOrElse: all a1651. (() -> a1651) -> Option a1651 -> a1651 =
  lam d120.
    lam o20.
      match
        o20
      with
        Some t1232
      then
        t1232
      else
        d120 {}
in
let optionGetOr: all a1650. a1650 -> Option a1650 -> a1650 = lam d119.
    optionGetOrElse (lam #var"943".
         d119)
in
let optionMapOrElse: all a1649. all b99. (() -> b99) -> (a1649 -> b99) -> Option a1649 -> b99 =
  lam d118.
    lam f2722.
      lam o19.
        optionGetOrElse d118 (optionMap f2722 o19)
in
let optionMapOr: all a1648. all b98. b98 -> (a1648 -> b98) -> Option a1648 -> b98 =
  lam d117.
    lam f2721.
      lam o18.
        optionGetOr d117 (optionMap f2721 o18)
in
let optionZipWithOrElse: all a1647. all b97. all c58. (() -> c58) -> (a1647 -> b97 -> c58) -> Option a1647 -> Option b97 -> c58 =
  lam d116.
    lam f2720.
      lam o17.
        lam o27.
          optionGetOrElse d116 (optionZipWith f2720 o17 o27)
in
let optionZipWithOr: all a1646. all b96. all c57. c57 -> (a1646 -> b96 -> c57) -> Option a1646 -> Option b96 -> c57 =
  lam v178.
    optionZipWithOrElse (lam #var"942".
         v178)
in
let optionMapM: all a1645. all b95. (a1645 -> Option b95) -> [a1645] -> Option [b95] =
  lam f2719.
    lam l62.
      recursive
        let g3 =
          lam l63.
            lam acc4968.
              match
                l63
              with
                [ hd1 ] ++ rest1
              then
                match
                  f2719 hd1
                with
                  Some x748
                then
                  g3 rest1 (snoc acc4968 x748)
                else
                  None
                    {}
              else
                Some
                  acc4968
      in
      g3 l62 ""
in
let optionMapAccumLM: all a1644. all b94. all acc4965. (acc4965 -> a1644 -> Option (acc4965, b94)) -> acc4965 -> [a1644] -> Option (acc4965, [b94]) =
  lam f2718.
    recursive
      let work23 =
        lam prefix5.
          lam acc4966.
            lam l60.
              match
                l60
              with
                [ x746 ] ++ l61
              then
                match
                  f2718 acc4966 x746
                with
                  Some (acc4967, x747)
                then
                  work23 (snoc prefix5 x747) acc4967 l61
                else
                  None
                    {}
              else
                Some
                  (acc4966, prefix5)
    in
    work23 ""
in
let optionMapiAccumLM: all a1643. all b93. all acc4962. (acc4962 -> Int -> a1643 -> Option (acc4962, b93)) -> acc4962 -> [a1643] -> Option (acc4962, [b93]) =
  lam f2717.
    recursive
      let work22 =
        lam prefix4.
          lam idx5.
            lam acc4963.
              lam l58.
                match
                  l58
                with
                  [ x744 ] ++ l59
                then
                  match
                    f2717 acc4963 idx5 x744
                  with
                    Some (acc4964, x745)
                  then
                    work22 (snoc prefix4 x745) (addi idx5 1) acc4964 l59
                  else
                    None
                      {}
                else
                  Some
                    (acc4963, prefix4)
    in
    work22 "" 0
in
let optionFoldlM: all a1640. all b91. (a1640 -> b91 -> Option a1640) -> a1640 -> [b91] -> Option a1640 =
  lam f2716.
    recursive
      let recur3 =
        lam a1641.
          lam bs4.
            match
              bs4
            with
              [ b92 ] ++ bs5
            then
              let res832 = f2716 a1641 b92 in
              match
                res832
              with
                Some a1642
              then
                recur3 a1642 bs5
              else match
                res832
              with
                None {}
              in
              None
                  {}
            else match
              bs4
            with
              ""
            in
            Some
                a1641
    in
    recur3
in
let optionContains: all a1639. Option a1639 -> (a1639 -> Bool) -> Bool = lam o16.
    lam p2158.
      optionMapOr false p2158 o16
in
let optionIsSome: all a1638. Option a1638 -> Bool =
  lam o10.
    optionContains o10 (lam #var"941".
         true)
in
let optionIsNone: all a1637. Option a1637 -> Bool = lam o9.
    not (optionIsSome o9)
in
let optionFilter: all a1636. (a1636 -> Bool) -> Option a1636 -> Option a1636 =
  lam p2157.
    lam o8.
      match
        optionContains o8 p2157
      with
        true
      then
        o8
      else
        None
          {}
in
let optionAnd: all a1635. Option a1635 -> Option a1635 -> Option a1635 =
  lam o15.
    lam o26.
      optionZipWith
        (lam x743.
           lam #var"940".
             x743)
        o15
        o26
in
let optionCombine: all a1633. (a1633 -> a1633 -> Option a1633) -> Option a1633 -> Option a1633 -> Option a1633 =
  lam f2715.
    lam o14.
      lam o25.
        let #var"X37" = (o14, o25) in
        match
          #var"X37"
        with
          (None {}, rhs22)
        then
          rhs22
        else match
          #var"X37"
        with
          (lhs22, None {})
        then
          lhs22
        else match
          #var"X37"
        with
          (Some a1634, Some b90)
        in
        f2715 a1634 b90
in
let optionOrWith: all a1632. (a1632 -> a1632 -> a1632) -> Option a1632 -> Option a1632 -> Option a1632 =
  lam f2714.
    lam o13.
      lam o24.
        optionCombine
          (lam x742.
             lam y12.
               Some
                 (f2714 x742 y12))
          o13
          o24
in
let optionOr: all a1631. Option a1631 -> Option a1631 -> Option a1631 =
  lam o12.
    lam o23.
      optionCombine
        (lam x741.
           lam #var"939".
             Some
               x741)
        o12
        o23
in
let optionOrElse: all a1630. (() -> Option a1630) -> Option a1630 -> Option a1630 =
  lam f2713.
    lam o7.
      match
        o7
      with
        Some _
      then
        o7
      else
        f2713 {}
in
let optionXor: all a1629. Option a1629 -> Option a1629 -> Option a1629 =
  lam o11.
    lam o22.
      optionCombine
        (lam #var"937".
           lam #var"938".
             None
               {})
        o11
        o22
in
let make: all a1628. Int -> a1628 -> [a1628] =
  lam n55.
    lam v177.
      create n55 (lam #var"936".
           v177)
in
let last: all a1627. [a1627] -> a1627 = lam seq48.
    get seq48 (subi (length seq48) 1)
in
let init: all a1626. [a1626] -> [a1626] = lam seq47.
    subsequence seq47 0 (subi (length seq47) 1)
in
let eqSeq: all a1625. all b89. (a1625 -> b89 -> Bool) -> [a1625] -> [b89] -> Bool =
  lam eq9.
    lam s1114.
      lam s2114.
        recursive
          let work21 =
            lam s1115.
              lam s2115.
                match
                  (s1115, s2115)
                with
                  ([ h15 ] ++ t1231, [ h25 ] ++ t2103)
                then
                  match
                    eq9 h15 h25
                  with
                    true
                  then
                    work21 t1231 t2103
                  else
                    false
                else
                  true
        in
        let n116 = length s1114 in
        let n217 = length s2114 in
        let ndiff3 = subi n116 n217 in
        match
          eqi ndiff3 0
        with
          true
        then
          work21 s1114 s2114
        else
          false
in
let toRope =
  lam seq45.
    recursive
      let work20 =
        lam acc4961.
          lam seq46.
            match
              seq46
            with
              [ h10 ] ++ t1230
            then
              work20 (cons h10 acc4961) t1230
            else
              acc4961
    in
    match
      isRope seq45
    with
      true
    then
      seq45
    else
      let s422 = work20 "" seq45 in
      reverse s422
in
let toList =
  lam seq44.
    createList (length seq44) (lam i30.
         get seq44 i30)
in
let mapOption: all a1623. all b87. (a1623 -> Option b87) -> [a1623] -> [b87] =
  lam f2712.
    recursive
      let work19 =
        lam as6.
          match
            as6
          with
            [ a1624 ] ++ as7
          then
            match
              f2712 a1624
            with
              Some b88
            then
              cons b88 (work19 as7)
            else
              work19 as7
          else
            ""
    in
    work19
in
let mapiOption: all a1621. all b85. (Int -> a1621 -> Option b85) -> [a1621] -> [b85] =
  lam f2711.
    recursive
      let work18 =
        lam idx4.
          lam as4.
            match
              as4
            with
              [ a1622 ] ++ as5
            then
              match
                f2711 idx4 a1622
              with
                Some b86
              then
                cons b86 (work18 (addi idx4 1) as5)
              else
                work18 (addi idx4 1) as5
            else
              ""
    in
    work18 0
in
let for_: all a1620. [a1620] -> (a1620 -> ()) -> () = lam xs13.
    lam f2710.
      iter f2710 xs13
in
let mapReverse: all a1619. all b84. (a1619 -> b84) -> [a1619] -> [b84] =
  lam f2709.
    lam lst2.
      foldl
        (lam acc4960.
           lam x740.
             cons (f2709 x740) acc4960)
        (toList "")
        lst2
in
let foldl1: all a1618. (a1618 -> a1618 -> a1618) -> [a1618] -> a1618 =
  lam f2708.
    lam l57.
      foldl f2708 (head l57) (tail l57)
in
let foldr1: all a1617. (a1617 -> a1617 -> a1617) -> [a1617] -> a1617 =
  lam f2707.
    lam seq43.
      foldr f2707 (last seq43) (init seq43)
in
recursive
  let unfoldr: all a1616. all c56. (a1616 -> Option (c56, a1616)) -> a1616 -> [c56] =
    lam f2706.
      lam b0.
        let fb = f2706 b0 in
        match
          fb
        with
          None _
        then
          ""
        else match
          fb
        with
          Some (x739, b110)
        in
        cons x739 (unfoldr f2706 b110)
in
let range: Int -> Int -> Int -> [Int] =
  lam s421.
    lam e41.
      lam by.
        unfoldr
          (lam b83.
             match
               leqi e41 b83
             with
               true
             then
               None
                 {}
             else
               Some
                 (b83, addi b83 by))
          s421
in
recursive
  let foldl2: all a1615. all b82. all c55. (a1615 -> b82 -> c55 -> a1615) -> a1615 -> [b82] -> [c55] -> a1615 =
    lam f2705.
      lam acc4955.
        lam seq113.
          lam seq212.
            let g2 =
              lam acc4958: (a1615, [b82]).
                lam x2103.
                  match
                    acc4958
                  with
                    (acc4959, [ x1103 ] ++ xs12)
                  then
                    (f2705 acc4959 x1103 x2103, xs12)
                  else
                    error "foldl2: Cannot happen!"
            in
            match
              geqi (length seq113) (length seq212)
            with
              true
            then
              match
                foldl g2 (acc4955, seq113) seq212
              with
                (acc4956, _)
              in
              acc4956
            else
              foldl2
                (lam acc4957.
                   lam x1102.
                     lam x2102.
                       f2705 acc4957 x2102 x1102)
                acc4955
                seq212
                seq113
in
let foldli: all a1614. all b81. (a1614 -> Int -> b81 -> a1614) -> a1614 -> [b81] -> a1614 =
  lam fn.
    lam initAcc.
      lam seq42.
        recursive
          let work17 =
            lam acc4954.
              lam i29.
                lam s420.
                  match
                    s420
                  with
                    [ e40 ] ++ rest
                  then
                    work17 (fn acc4954 i29 e40) (addi i29 1) rest
                  else
                    acc4954
        in
        work17 initAcc 0 seq42
in
let mapK: all a1613. all b80. all c54. (a1613 -> (b80 -> c54) -> c54) -> [a1613] -> ([b80] -> c54) -> c54 =
  lam f2704.
    lam seq41.
      lam k176.
        foldl
          (lam k177.
             lam x737.
               lam xs11.
                 f2704
                   x737 (lam x738.
                      k177 (snoc xs11 x738)))
          k176
          (reverse seq41)
          ""
in
let mapiK: all a1612. all b79. all c53. (Int -> a1612 -> (b79 -> c53) -> c53) -> [a1612] -> ([b79] -> c53) -> c53 =
  lam f2703.
    lam seq40.
      lam k174.
        (foldl
           (lam ik.
              match
                ik
              with
                (i28, k175)
              in
              lam x735.
                  (subi i28 1, lam xs10.
                    f2703
                      i28
                      x735
                      (lam x736.
                         k175 (snoc xs10 x736))))
           (subi (length seq40) 1, k174)
           (reverse seq40)).1 ""
in
let foldlK: all a1611. all b78. all c52. all d115. (a1611 -> b78 -> (a1611 -> c52) -> c52) -> a1611 -> [b78] -> (a1611 -> c52) -> c52 =
  lam f2702.
    lam acc4951.
      lam seq38.
        lam k172.
          recursive
            let recur2 =
              lam acc4952.
                lam seq39.
                  lam k173.
                    match
                      null seq39
                    with
                      true
                    then
                      k173 acc4952
                    else
                      f2702
                        acc4952
                        (head seq39)
                        (lam acc4953.
                           recur2 acc4953 (tail seq39) k173)
          in
          recur2 acc4951 seq38 k172
in
let iterK: all a1610. all b77. (a1610 -> (() -> ()) -> ()) -> [a1610] -> (() -> ()) -> () =
  lam f2701.
    lam seq36.
      lam k170.
        recursive
          let recur1 =
            lam seq37.
              lam k171.
                match
                  null seq37
                with
                  true
                then
                  k171 {}
                else
                  f2701
                    (head seq37)
                    (lam #var"935".
                       recur1 (tail seq37) k171)
        in
        recur1 seq36 k170
in
let zipWith: all a1609. all b76. all c51. (a1609 -> b76 -> c51) -> [a1609] -> [b76] -> [c51] =
  lam f2700.
    foldl2
      (lam acc4950.
         lam x1101.
           lam x2101.
             snoc acc4950 (f2700 x1101 x2101))
      ""
in
let zipWithIndex: all a1607. all b75. all c50. (Int -> a1607 -> b75 -> c50) -> [a1607] -> [b75] -> [c50] =
  lam f2699.
    lam a1608.
      lam a2100.
        recursive
          let work16 =
            lam acc4949.
              lam i27.
                lam seq112.
                  lam seq211.
                    match
                      seq112
                    with
                      [ e110 ] ++ seq1tail
                    then
                      match
                        seq211
                      with
                        [ e210 ] ++ seq2tail
                      then
                        work16
                          (cons (f2699 i27 e110 e210) acc4949)
                          (addi i27 1)
                          seq1tail
                          seq2tail
                      else
                        reverse acc4949
                    else
                      reverse acc4949
        in
        work16 (toList "") 0 a1608 a2100
in
let zip: all a1606. all b74. [a1606] -> [b74] -> [(a1606, b74)] =
  lam l110.
    lam l210.
      zipWith
        (lam x734.
           lam y11.
             (x734, y11))
        l110
        l210
in
let mapAccumL: all a1605. all b73. all c49. (a1605 -> b73 -> (a1605, c49)) -> a1605 -> [b73] -> (a1605, [c49]) =
  lam f2698: a1605 -> b73 -> (a1605, c49).
    lam acc4947.
      lam seq35.
        foldl
          (lam tacc2: (a1605, [c49]).
             lam x733.
               match
                 f2698 tacc2.0 x733
               with
                 (acc4948, y10)
               in
               (acc4948, snoc tacc2.1 y10))
          (acc4947, "")
          seq35
in
let mapAccumR: all a1604. all b72. all c48. (a1604 -> b72 -> (a1604, c48)) -> a1604 -> [b72] -> (a1604, [c48]) =
  lam f2697: a1604 -> b72 -> (a1604, c48).
    lam acc4945.
      lam seq34.
        foldr
          (lam x732.
             lam tacc1: (a1604, [c48]).
               match
                 f2697 tacc1.0 x732
               with
                 (acc4946, y9)
               in
               (acc4946, cons y9 tacc1.1))
          (acc4945, "")
          seq34
in
let unzip: all a1603. all b71. [(a1603, b71)] -> ([a1603], [b71]) =
  lam l55.
    mapAccumL
      (lam l56.
         lam p2156: (a1603, b71).
           (snoc l56 p2156.0, p2156.1))
      ""
      l55
in
let iter2: all a1602. all b70. (a1602 -> b70 -> ()) -> [a1602] -> [b70] -> () =
  lam f2695.
    lam seq111.
      lam seq210.
        let f2696 =
          lam x731: (a1602, b70).
            match
              x731
            with
              (x1100, x2100)
            in
            f2695 x1100 x2100
        in
        iter f2696 (zip seq111 seq210)
in
recursive
  let any: all a1601. (a1601 -> Bool) -> [a1601] -> Bool =
    lam p2155.
      lam seq33.
        match
          null seq33
        with
          true
        then
          false
        else match
          p2155 (head seq33)
        with
          true
        then
          true
        else
          any p2155 (tail seq33)
in
recursive
  let forAll: all a1600. (a1600 -> Bool) -> [a1600] -> Bool =
    lam p2154.
      lam seq32.
        match
          null seq32
        with
          true
        then
          true
        else match
          p2154 (head seq32)
        with
          true
        then
          forAll p2154 (tail seq32)
        else
          false
in
let join: all a1599. [[a1599]] -> [a1599] = lam seqs1.
    foldl concat "" seqs1
in
let joinMap: all a1597. all b69. (a1597 -> [b69]) -> [a1597] -> [b69] =
  lam f2694.
    lam a1598.
      foldl
        (lam s419.
           lam x730.
             concat s419 (f2694 x730))
        ""
        a1598
in
let seqLiftA2: all a1595. all b68. all c47. (a1595 -> b68 -> c47) -> [a1595] -> [b68] -> [c47] =
  lam f2693.
    lam as3.
      lam bs3.
        match
          null bs3
        with
          true
        then
          ""
        else
          joinMap (lam a1596.
               map (f2693 a1596) bs3) as3
in
let seqLiftA3: all a1593. all b67. all c46. all d114. (a1593 -> b67 -> c46 -> d114) -> [a1593] -> [b67] -> [c46] -> [d114] =
  lam f2692.
    lam as2.
      lam bs2.
        lam cs.
          joinMap
            (lam a1594.
               seqLiftA2 (f2692 a1594) bs2 cs)
            as2
in
let seqMapM: all a1589. all b65. (a1589 -> [b65]) -> [a1589] -> [[b65]] =
  lam f2691.
    recursive
      let work15 =
        lam g1.
          lam a1591.
            lam bs.
              match
                bs
              with
                [ b66 ] ++ bs1
              then
                match
                  g1 a1591 b66
                with
                  a1592 & !""
                then
                  work15 g1 a1592 bs1
                else
                  ""
              else
                a1591
    in
    work15
      (lam acc4944.
         lam a1590.
           seqLiftA2 snoc acc4944 (f2691 a1590))
      [ "" ]
in
recursive
  let filter: all a1588. (a1588 -> Bool) -> [a1588] -> [a1588] =
    lam p2153.
      lam seq31.
        match
          null seq31
        with
          true
        then
          ""
        else match
          p2153 (head seq31)
        with
          true
        then
          cons (head seq31) (filter p2153 (tail seq31))
        else
          filter p2153 (tail seq31)
in
recursive
  let filterOption: all a1587. [Option a1587] -> [a1587] =
    lam optSeq.
      match
        optSeq
      with
        [ Some x729 ] ++ optSeq1
      then
        cons x729 (filterOption optSeq1)
      else match
        optSeq
      with
        [ None _ ] ++ optSeq2
      then
        filterOption optSeq2
      else
        ""
in
recursive
  let find1: all a1586. (a1586 -> Bool) -> [a1586] -> Option a1586 =
    lam p2152.
      lam seq30.
        match
          null seq30
        with
          true
        then
          None
            {}
        else match
          p2152 (head seq30)
        with
          true
        then
          Some
            (head seq30)
        else
          find1 p2152 (tail seq30)
in
let findLast: all a1585. (a1585 -> Bool) -> [a1585] -> Option a1585 = lam p2151.
    lam seq29.
      find1 p2151 (reverse seq29)
in
let findi: all a1584. (a1584 -> Bool) -> [a1584] -> Option Int =
  lam p2149.
    lam seq27.
      recursive
        let work14 =
          lam p2150.
            lam seq28.
              lam i26.
                match
                  null seq28
                with
                  true
                then
                  None
                    {}
                else match
                  p2150 (head seq28)
                with
                  true
                then
                  Some
                    i26
                else
                  work14 p2150 (tail seq28) (addi i26 1)
      in
      work14 p2149 seq27 0
in
let findiLast: all a1583. (a1583 -> Bool) -> [a1583] -> Option Int =
  lam p2147.
    lam seq25.
      recursive
        let work13 =
          lam p2148.
            lam seq26.
              lam i25.
                match
                  null seq26
                with
                  true
                then
                  None
                    {}
                else match
                  p2148 (last seq26)
                with
                  true
                then
                  Some
                    i25
                else
                  work13 p2148 (init seq26) (subi i25 1)
      in
      work13 p2147 seq25 (subi (length seq25) 1)
in
let seqMem: all a1582. (a1582 -> a1582 -> Bool) -> [a1582] -> a1582 -> Bool =
  lam eq8.
    lam xs9.
      lam x728.
        foldl or false (map (eq8 x728) xs9)
in
recursive
  let findMap: all a1581. all b64. (a1581 -> Option b64) -> [a1581] -> Option b64 =
    lam f2690.
      lam seq24.
        match
          seq24
        with
          [ h9 ] ++ t1229
        then
          match
            f2690 h9
          with
            Some x727
          then
            Some
              x727
          else
            findMap f2690 t1229
        else
          None
            {}
in
let lowerBoundBinarySearch: all a1580. (a1580 -> Int) -> [a1580] -> Option Int =
  lam f2689.
    lam s418.
      recursive
        let work12 =
          lam first.
            lam count1050.
              match
                gti count1050 0
              with
                true
              then
                let step1 = divi count1050 2 in
                let idx3 = addi first step1 in
                match
                  lti (f2689 (get s418 idx3)) 0
                with
                  true
                then
                  work12 (addi first (addi step1 1)) (subi count1050 (addi step1 1))
                else
                  work12 first step1
              else
                first
      in
      let idx2 = work12 0 (length s418) in
      match
        eqi idx2 (length s418)
      with
        true
      then
        None
          {}
      else
        Some
          idx2
in
let s = [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ] in
let partition: all a1579. (a1579 -> Bool) -> [a1579] -> ([a1579], [a1579]) =
  lam p2146.
    lam seq20.
      recursive
        let work11 =
          lam l54.
            lam r409.
              lam seq22.
                match
                  seq22
                with
                  ""
                then
                  (l54, r409)
                else match
                  seq22
                with
                  [ s417 ] ++ seq23
                in
                match
                    p2146 s417
                  with
                    true
                  then
                    work11 (cons s417 l54) r409 seq23
                  else
                    work11 l54 (cons s417 r409) seq23
      in
      work11 "" "" (reverse seq20)
in
let distinct: all a1578. (a1578 -> a1578 -> Bool) -> [a1578] -> [a1578] =
  lam eq7.
    lam seq19.
      recursive
        let work10 =
          lam seq110.
            lam seq21.
              match
                seq110
              with
                [ h8 ] ++ t1228
              then
                match
                  find1 (eq7 h8) seq21
                with
                  Some _
                then
                  work10 t1228 seq21
                else
                  cons h8 (work10 t1228 (cons h8 seq21))
              else
                ""
      in
      work10 seq19 ""
in
let distinctSorted: all a1577. (a1577 -> a1577 -> Bool) -> [a1577] -> [a1577] =
  lam eq6.
    lam s415.
      recursive
        let work9 =
          lam acc4943.
            lam s416.
              match
                s416
              with
                [ h14 ] ++ t1227
              then
                match
                  acc4943
                with
                  [ h24 ] ++ _
                then
                  match
                    eq6 h14 h24
                  with
                    true
                  then
                    work9 acc4943 t1227
                  else
                    work9 (cons h14 acc4943) t1227
                else
                  work9 [ h14 ] t1227
              else
                acc4943
      in
      reverse (work9 "" s415)
in
recursive
  let quickSort: all a1576. (a1576 -> a1576 -> Int) -> [a1576] -> [a1576] =
    lam cmp36.
      lam seq18.
        match
          null seq18
        with
          true
        then
          seq18
        else
          let h7 = head seq18 in
          let t1226 = tail seq18 in
          let lr7 =
            partition (lam x726.
                 lti (cmp36 x726 h7) 0) t1226
          in
          concat (quickSort cmp36 lr7.0) (cons h7 (quickSort cmp36 lr7.1))
in
recursive
  let merge: all a1575. (a1575 -> a1575 -> Int) -> [a1575] -> [a1575] -> [a1575] =
    lam cmp35.
      lam l53.
        lam r408.
          match
            l53
          with
            ""
          then
            r408
          else match
            r408
          with
            ""
          then
            l53
          else match
            (l53, r408)
          with
            ([ x725 ] ++ xs8, [ y8 ] ++ ys1)
          in
          match
              leqi (cmp35 x725 y8) 0
            with
              true
            then
              cons x725 (merge cmp35 xs8 r408)
            else
              cons y8 (merge cmp35 l53 ys1)
in
recursive
  let mergeSort: all a1574. (a1574 -> a1574 -> Int) -> [a1574] -> [a1574] =
    lam cmp34.
      lam seq17.
        match
          seq17
        with
          ""
        then
          ""
        else match
          seq17
        with
          [ x724 ]
        then
          [ x724 ]
        else
          let lr6 = splitAt seq17 (divi (length seq17) 2) in
          merge cmp34 (mergeSort cmp34 lr6.0) (mergeSort cmp34 lr6.1)
in
let sort = quickSort in
let minIdx: all a1573. (a1573 -> a1573 -> Int) -> [a1573] -> Option (Int, a1573) =
  lam cmp33: a1573 -> a1573 -> Int.
    lam seq16: [a1573].
      match
        null seq16
      with
        true
      then
        None
          {}
      else match
        foldl
          (lam acc4942: (Int, Int, a1573).
             lam e39: a1573.
               match
                 acc4942
               with
                 (curi, mini1, m53)
               in
               match
                   lti (cmp33 m53 e39) 0
                 with
                   true
                 then
                   (addi curi 1, mini1, m53)
                 else
                   (addi curi 1, curi, e39))
          (1, 0, head seq16)
          (tail seq16)
      with
        (_, i24, m54)
      in
      Some
          (i24, m54)
in
let min: all a1572. (a1572 -> a1572 -> Int) -> [a1572] -> Option a1572 =
  lam cmp32.
    lam seq15.
      optionMap
        (lam r407.
           match
             r407
           with
             (_, m52)
           in
           m52)
        (minIdx cmp32 seq15)
in
let max: all a1571. (a1571 -> a1571 -> Int) -> [a1571] -> Option a1571 =
  lam cmp31.
    min (lam l52.
         lam r406.
           cmp31 r406 l52)
in
let minOrElse: all a1570. (() -> a1570) -> (a1570 -> a1570 -> Int) -> [a1570] -> a1570 =
  lam d113.
    lam cmp30.
      lam seq14.
        optionGetOrElse d113 (min cmp30 seq14)
in
let maxOrElse: all a1569. (() -> a1569) -> (a1569 -> a1569 -> Int) -> [a1569] -> a1569 =
  lam d112.
    lam cmp29.
      minOrElse
        d112
        (lam l51.
           lam r405.
             cmp29 r405 l51)
in
let index: all a1568. (a1568 -> Bool) -> [a1568] -> Option Int =
  lam pred4.
    lam seq12.
      recursive
        let index_rechelper =
          lam i23.
            lam pred5.
              lam seq13.
                match
                  null seq13
                with
                  true
                then
                  None
                    {}
                else match
                  pred5 (head seq13)
                with
                  true
                then
                  Some
                    i23
                else
                  index_rechelper (addi i23 1) pred5 (tail seq13)
      in
      index_rechelper 0 pred4 seq12
in
let lastIndex: all a1567. (a1567 -> Bool) -> [a1567] -> Option Int =
  lam pred2.
    lam seq10.
      recursive
        let lastIndex_rechelper =
          lam i22.
            lam acc4941.
              lam pred3.
                lam seq11.
                  match
                    null seq11
                  with
                    true
                  then
                    acc4941
                  else match
                    pred3 (head seq11)
                  with
                    true
                  then
                    lastIndex_rechelper
                      (addi i22 1)
                      (Some
                         i22)
                      pred3
                      (tail seq11)
                  else
                    lastIndex_rechelper (addi i22 1) acc4941 pred3 (tail seq11)
      in
      lastIndex_rechelper 0 (None
           {}) pred2 seq10
in
let indices: all a1566. (a1566 -> Bool) -> [a1566] -> [Int] =
  lam pred1.
    lam seq8.
      recursive
        let rec14 =
          lam i20.
            lam acc4940.
              lam seq9.
                match
                  null seq9
                with
                  true
                then
                  acc4940
                else match
                  pred1 (head seq9)
                with
                  true
                then
                  rec14 (addi i20 1) (cons i20 acc4940) (tail seq9)
                else
                  rec14 (addi i20 1) acc4940 (tail seq9)
      in
      reverse (rec14 0 "" seq8)
in
recursive
  let isPrefix: all a1565. all b63. (a1565 -> b63 -> Bool) -> [a1565] -> [b63] -> Bool =
    lam eq5.
      lam s1113.
        lam s2113.
          match
            null s1113
          with
            true
          then
            true
          else match
            null s2113
          with
            true
          then
            false
          else
            and
              (eq5 (head s1113) (head s2113))
              (isPrefix eq5 (tail s1113) (tail s2113))
in
let isSuffix: all a1564. all b62. (a1564 -> b62 -> Bool) -> [a1564] -> [b62] -> Bool =
  lam eq4.
    lam s1112.
      lam s2112.
        isPrefix eq4 (reverse s1112) (reverse s2112)
in
let seqCmp: all a1563. (a1563 -> a1563 -> Int) -> [a1563] -> [a1563] -> Int =
  lam cmp28.
    lam s1110.
      lam s2110.
        recursive
          let work8 =
            lam s1111.
              lam s2111.
                match
                  (s1111, s2111)
                with
                  ([ h13 ] ++ t1225, [ h23 ] ++ t2102)
                then
                  let c45 = cmp28 h13 h23 in
                  match
                    eqi c45 0
                  with
                    true
                  then
                    work8 t1225 t2102
                  else
                    c45
                else
                  0
        in
        let n115 = length s1110 in
        let n216 = length s2110 in
        let ndiff2 = subi n115 n216 in
        match
          eqi ndiff2 0
        with
          true
        then
          work8 s1110 s2110
        else
          ndiff2
in
let randIndex: all a1562. [a1562] -> Option Int =
  lam seq7.
    match
      seq7
    with
      ""
    then
      None
        {}
    else
      Some
        (randIntU 0 (length seq7))
in
let randElem: all a1561. [a1561] -> Option a1561 = lam seq6.
    optionMap (get seq6) (randIndex seq6)
in
let permute: all a1560. [a1560] -> [Int] -> [a1560] =
  lam elems.
    lam permutation.
      match
        eqi (length elems) (length permutation)
      with
        true
      then
        let ordered =
          sort
            (lam x723: (a1560, Int).
               lam y7: (a1560, Int).
                 subi x723.1 y7.1)
            (zip elems permutation)
        in
        match
          unzip ordered
        with
          (orderedElems, _)
        in
        orderedElems
      else
        error "Expected sequences of equal length"
in
recursive
  let pairWithLater: all a1559. [a1559] -> [(a1559, a1559)] =
    lam lst1.
      match
        lst1
      with
        [ x722 ] ++ xs7
      then
        concat
          (map (lam y6.
                (x722, y6)) xs7)
          (pairWithLater xs7)
      else
        ""
in
recursive
  let seqJoin1: all a1558. [a1558] -> [[a1558]] -> [a1558] =
    lam delim2.
      lam ss5.
        match
          null ss5
        with
          true
        then
          ""
        else match
          eqi (length ss5) 1
        with
          true
        then
          head ss5
        else
          concat (concat (head ss5) delim2) (seqJoin1 delim2 (tail ss5))
in
let subseqReplace: all a1557. (a1557 -> a1557 -> Bool) -> [a1557] -> [a1557] -> [a1557] -> [a1557] =
  lam eq3.
    lam check.
      lam replacement.
        lam seq5.
          match
            null check
          with
            true
          then
            seq5
          else
            recursive
              let work7 =
                lam checkIdx.
                  lam seqIdx.
                    lam acc4939.
                      match
                        eqi checkIdx (length check)
                      with
                        true
                      then
                        work7 0 seqIdx (concat acc4939 replacement)
                      else match
                        eqi seqIdx (length seq5)
                      with
                        true
                      then
                        concat
                          acc4939
                          (subsequence seq5 (subi seqIdx checkIdx) (addi checkIdx 1))
                      else
                        let eCheck = get check checkIdx in
                        let eSeq = get seq5 seqIdx in
                        match
                          eq3 eCheck eSeq
                        with
                          true
                        then
                          work7 (addi checkIdx 1) (addi seqIdx 1) acc4939
                        else
                          let seqIdx1 = subi seqIdx checkIdx in
                          work7 0 (addi seqIdx1 1) (snoc acc4939 (get seq5 seqIdx1))
            in
            work7 0 0 ""
in
type PruneGraph_PruneVar
in
type PruneGraph_Value
in
type PruneGraph_Param
in
con PruneGraph_PruneRVar: {dist: [Float], states: [Int], lastWeight: Ref Float, likelihood: Ref [Float], incomingMessages: Ref [[Float]]} -> PruneGraph_PruneVar in
con PruneGraph_PruneFVar: {input: PruneGraph_PruneVar, values: [[Float]]} -> PruneGraph_PruneVar in
con PruneGraph_PrunedValue: PruneGraph_PruneVar -> PruneGraph_Value in
con PruneGraph_IntValue: Int -> PruneGraph_Value in
con PruneGraph_PruneFParam: PruneGraph_PruneVar -> PruneGraph_Param in
con PruneGraph_SeqFParam: [Float] -> PruneGraph_Param in
recursive
  let vPruneGraph_zip =
    lam x721.
      lam __sem_target3419.
        match
          __sem_target3419
        with
          y5
        in
        mapi
            (lam i19.
               lam e38.
                 (get x721 i19, e38))
            y5
  let vPruneGraph_getStates =
    lam __sem_target3420.
      match
        __sem_target3420
      with
        PruneGraph_SeqFParam f2686
      then
        range 0 (length f2686) 1
      else match
        __sem_target3420
      with
        PruneGraph_PruneFParam f2687
      in
      match
          f2687
        with
          PruneGraph_PruneFVar f2688
        in
        range 0 (length f2688.values) 1
  let vPruneGraph_getLikelihood =
    lam __sem_target3421.
      match
        __sem_target3421
      with
        PruneGraph_PruneRVar v174
      in
      deref v174.likelihood
  let vPruneGraph_getIncomingMsgs: PruneGraph_PruneVar -> [[Float]] =
    lam __sem_target3422.
      match
        __sem_target3422
      with
        PruneGraph_PruneRVar v175
      in
      deref v175.incomingMessages
  let vPruneGraph_addMsgToPruneVar: [Float] -> PruneGraph_PruneVar -> () =
    lam msg5.
      lam __sem_target3423.
        match
          __sem_target3423
        with
          PruneGraph_PruneRVar v176
        in
        modref
            v176.incomingMessages
            (cons msg5 (deref v176.incomingMessages))
in
recursive
  let vPrunedSampling_zip =
    lam x717.
      lam __sem_target3407.
        match
          __sem_target3407
        with
          y4
        in
        mapi
            (lam i17.
               lam e37.
                 (get x717 i17, e37))
            y4
  let vPrunedSampling_getStates =
    lam __sem_target3408.
      match
        __sem_target3408
      with
        PruneGraph_SeqFParam f2682
      then
        range 0 (length f2682) 1
      else match
        __sem_target3408
      with
        PruneGraph_PruneFParam f2683
      in
      match
          f2683
        with
          PruneGraph_PruneFVar f2684
        in
        range 0 (length f2684.values) 1
  let vPrunedSampling_weightPrune =
    lam __sem_target3409.
      match
        __sem_target3409
      with
        PruneGraph_PruneRVar p2141
      in
      let uw = negf (deref p2141.lastWeight) in
        let w7 =
          vPrunedSampling_calculateLogWeight (PruneGraph_PruneRVar
               p2141)
        in
        let #var"931" = modref p2141.lastWeight w7 in
        addf uw w7
  let vPrunedSampling_calculateMsg: Bool -> [Float] -> PruneGraph_PruneVar -> [Float] =
    lam cancel.
      lam lh5.
        lam __sem_target3410.
          match
            __sem_target3410
          with
            PruneGraph_PruneFVar v168
          in
          map
              (lam p2142.
                 let t1224 =
                   foldl
                     (lam acc4935.
                        lam x718.
                          addf acc4935 (mulf x718.0 x718.1))
                     0.
                     (vPrunedSampling_zip p2142 lh5)
                 in
                 match
                   cancel
                 with
                   true
                 then
                   divf 1. t1224
                 else
                   t1224)
              v168.values
  let vPrunedSampling_observePrune =
    lam cancel1.
      lam value19.
        lam __sem_target3411.
          match
            __sem_target3411
          with
            PruneGraph_SeqFParam p2143 & d108
          then
            let likelihood = vPrunedSampling_calculateObservedLH d108 value19
            in
            let w8 =
              foldl
                (lam acc4936.
                   lam x719.
                     addf acc4936 (mulf x719.0 x719.1))
                0.
                (vPrunedSampling_zip p2143 likelihood)
            in
            match
              cancel1
            with
              true
            then
              negf (log1 w8)
            else
              log1 w8
          else match
            __sem_target3411
          with
            PruneGraph_PruneFParam (PruneGraph_PruneFVar v169) & d109
          in
          let likelihood1 = vPrunedSampling_calculateObservedLH d109 value19
            in
            let msg3 =
              vPrunedSampling_calculateMsg
                cancel1
                likelihood1
                (PruneGraph_PruneFVar
                   v169)
            in
            let #var"932" = vPrunedSampling_addMsgToPruneVar msg3 v169.input
            in
            vPrunedSampling_weightPrune v169.input
  let vPrunedSampling_getLikelihood =
    lam __sem_target3412.
      match
        __sem_target3412
      with
        PruneGraph_PruneRVar v170
      in
      deref v170.likelihood
  let vPrunedSampling_getIncomingMsgs: PruneGraph_PruneVar -> [[Float]] =
    lam __sem_target3413.
      match
        __sem_target3413
      with
        PruneGraph_PruneRVar v171
      in
      deref v171.incomingMessages
  let vPrunedSampling_addMsgToPruneVar: [Float] -> PruneGraph_PruneVar -> () =
    lam msg4.
      lam __sem_target3414.
        match
          __sem_target3414
        with
          PruneGraph_PruneRVar v172
        in
        modref
            v172.incomingMessages
            (cons msg4 (deref v172.incomingMessages))
  let vPrunedSampling_calculateLogWeight =
    lam __sem_target3415.
      match
        __sem_target3415
      with
        PruneGraph_PruneRVar p2144
      in
      match
          deref p2144.incomingMessages
        with
          msgs1
        in
        let msgMul =
            foldl
              (lam acc4938.
                 lam m50.
                   map
                     (lam m51.
                        mulf m51.0 m51.1)
                     (vPrunedSampling_zip acc4938 m50))
              (head msgs1)
              (tail msgs1)
          in
          let #var"933" = modref p2144.likelihood msgMul in
          let w9 =
            foldl
              (lam acc4937.
                 lam x720.
                   addf acc4937 (mulf x720.0 x720.1))
              0.
              (vPrunedSampling_zip msgMul p2144.dist)
          in
          log1 w9
  let vPrunedSampling_calculateObservedLH =
    lam d110.
      lam __sem_target3416.
        match
          __sem_target3416
        with
          PruneGraph_PrunedValue (PruneGraph_PruneRVar obs4)
        then
          deref obs4.likelihood
        else match
          __sem_target3416
        with
          PruneGraph_IntValue obs5
        in
        match
            d110
          with
            PruneGraph_PruneFParam (PruneGraph_PruneFVar v173)
          in
          let states = vPrunedSampling_getStates d110 in
            mapi
              (lam i18.
                 lam #var"934".
                   match
                     eqi obs5 i18
                   with
                     true
                   then
                     1.
                   else
                     0.)
              states
  let vPrunedSampling_initializePruneFVar =
    lam f2685.
      lam __sem_target3417.
        match
          __sem_target3417
        with
          PruneGraph_PruneRVar p2145
        in
        PruneGraph_PruneFVar
            { input = PruneGraph_PruneRVar
                  p2145,
              values = map f2685 p2145.states }
  let vPrunedSampling_initializePruneRVar: [Float] -> PruneGraph_PruneVar =
    lam __sem_target3418.
      match
        __sem_target3418
      with
        d111
      in
      PruneGraph_PruneRVar
          { dist = d111,
            states = range 0 (length d111) 1,
            lastWeight = ref 0.,
            likelihood = ref (make (length d111) 1.),
            incomingMessages = ref "" }
in
let initializePruneRVar = lam d107.
    vPrunedSampling_initializePruneRVar d107
in
let initializePruneFVar =
  lam f2681.
    lam p2140.
      vPrunedSampling_initializePruneFVar f2681 p2140
in
let observePrune =
  lam c44.
    lam v167.
      lam d106.
        vPrunedSampling_observePrune c44 v167 d106
in
let eqChar = lam c117.
    lam c216.
      eqc c117 c216 in
let neqChar = lam c116.
    lam c215.
      not (eqc c116 c215)
in
let ltChar =
  lam c115.
    lam c214.
      lti (char2int c115) (char2int c214)
in
let gtChar =
  lam c114.
    lam c213.
      gti (char2int c114) (char2int c213)
in
let leqChar =
  lam c113.
    lam c212.
      leqi (char2int c113) (char2int c212)
in
let geqChar =
  lam c112.
    lam c211.
      geqi (char2int c112) (char2int c211)
in
let cmpChar =
  lam c111.
    lam c210.
      subi (char2int c111) (char2int c210)
in
let _escapes =
  [ ('\n', "\\n"),
    ('\t', "\\t"),
    ('\r', "\\r"),
    ('\\', "\\\\"),
    ('\"', "\\\""),
    ('\'', "\\\'") ]
in
let escapeChar =
  lam c43.
    match
      find1
        (lam e36: (Char, [Char]).
           eqChar c43 e36.0)
        _escapes
    with
      Some n53
    then
      let n54: (Char, [Char]) = n53 in
      n54.1
    else
      [ c43 ]
in
let showChar =
  lam c42.
    join [ "\'",
        escapeChar c42,
        "\'" ]
in
let char2upper =
  lam c41.
    match
      and (geqChar c41 'a') (leqChar c41 'z')
    with
      true
    then
      int2char (subi (char2int c41) 32)
    else
      c41
in
let char2lower =
  lam c40.
    match
      and (geqChar c40 'A') (leqChar c40 'Z')
    with
      true
    then
      int2char (addi (char2int c40) 32)
    else
      c40
in
let isWhitespace = lam c39.
    any (eqChar c39) " \n\t\r" in
let isLowerAlpha =
  lam c38.
    let i16 = char2int c38 in
    match
      leqi (char2int 'a') i16
    with
      true
    then
      leqi i16 (char2int 'z')
    else
      false
in
let isUpperAlpha =
  lam c37.
    let i15 = char2int c37 in
    match
      leqi (char2int 'A') i15
    with
      true
    then
      leqi i15 (char2int 'Z')
    else
      false
in
let isAlpha =
  lam c36.
    match
      isLowerAlpha c36
    with
      true
    then
      true
    else
      isUpperAlpha c36
in
let isLowerAlphaOrUnderscore =
  lam c35.
    match
      isLowerAlpha c35
    with
      true
    then
      true
    else
      eqChar c35 '_'
in
let isAlphaOrUnderscore =
  lam c34.
    match
      isAlpha c34
    with
      true
    then
      true
    else
      eqChar c34 '_'
in
let isDigit =
  lam c33.
    let i14 = char2int c33 in
    match
      leqi (char2int '0') i14
    with
      true
    then
      leqi i14 (char2int '9')
    else
      false
in
let isAlphanum =
  lam c32.
    match
      isAlpha c32
    with
      true
    then
      true
    else
      isDigit c32
in
let randAlphanum: () -> Char =
  lam #var"930".
    let r404 = randIntU 0 62 in
    match
      lti r404 10
    with
      true
    then
      int2char (addi r404 48)
    else match
      lti r404 36
    with
      true
    then
      int2char (addi r404 55)
    else
      int2char (addi r404 61)
in
let emptyStr: [Char] = "" in
let escapeString = lam s414.
    join (map escapeChar s414) in
let eqString = lam s1109.
    lam s2109.
      eqSeq eqc s1109 s2109
in
let neqString = lam s1108.
    lam s2108.
      not (eqString s1108 s2108)
in
let eqStringSlice =
  lam s1107.
    lam s2107.
      lam o21.
        lam n215.
          recursive
            let work6 =
              lam i13.
                match
                  eqi i13 n215
                with
                  true
                then
                  true
                else match
                  eqc (get s1107 i13) (get s2107 (addi o21 i13))
                with
                  true
                then
                  work6 (addi i13 1)
                else
                  false
          in
          match
            eqi (length s1107) n215
          with
            true
          then
            work6 0
          else
            false
in
recursive
  let ltString: [Char] -> [Char] -> Bool =
    lam s1106.
      lam s2106.
        match
          null s2106
        with
          true
        then
          false
        else match
          null s1106
        with
          true
        then
          true
        else match
          eqChar (head s1106) (head s2106)
        with
          true
        then
          ltString (tail s1106) (tail s2106)
        else
          ltChar (head s1106) (head s2106)
in
let gtString: [Char] -> [Char] -> Bool = lam s1105.
    lam s2105.
      ltString s2105 s1105
in
let cmpString: [Char] -> [Char] -> Int = seqCmp cmpChar in
let str2upper = lam s413.
    map char2upper s413 in
let str2lower = lam s412.
    map char2lower s412 in
let string2int =
  lam s410.
    recursive
      let string2int_rechelper1 =
        lam s411.
          lam acc4934.
            match
              null s411
            with
              true
            then
              acc4934
            else
              let fsd1 = subi (char2int (head s411)) (char2int '0') in
              string2int_rechelper1 (tail s411) (addi (muli 10 acc4934) fsd1)
    in
    match
      s410
    with
      ""
    then
      0
    else match
      eqChar '-' (head s410)
    with
      true
    then
      negi (string2int_rechelper1 (tail s410) 0)
    else
      string2int_rechelper1 s410 0
in
let digit2char = lam d105.
    int2char (addi d105 (char2int '0'))
in
let int2string =
  lam n51.
    recursive
      let int2string_rechelper1 =
        lam n52.
          lam acc4933.
            match
              lti n52 10
            with
              true
            then
              cons (digit2char n52) acc4933
            else
              int2string_rechelper1 (divi n52 10) (cons (digit2char (modi n52 10)) acc4933)
    in
    match
      lti n51 0
    with
      true
    then
      cons '-' (int2string_rechelper1 (negi n51) "")
    else
      int2string_rechelper1 n51 ""
in
let stringIsInt: [Char] -> Bool = lam s409.
    eqString s409 (int2string (string2int s409))
in
let strIndex =
  lam c30.
    lam s407.
      recursive
        let strIndex_rechelper =
          lam i12.
            lam c31.
              lam s408.
                match
                  null s408
                with
                  true
                then
                  None
                    {}
                else match
                  eqChar c31 (head s408)
                with
                  true
                then
                  Some
                    i12
                else
                  strIndex_rechelper (addi i12 1) c31 (tail s408)
      in
      strIndex_rechelper 0 c30 s407
in
let strLastIndex =
  lam c28.
    lam s405.
      recursive
        let strLastIndex_rechelper =
          lam i10.
            lam acc4932.
              lam c29.
                lam s406.
                  match
                    null s406
                  with
                    true
                  then
                    match
                      eqi acc4932 (negi 1)
                    with
                      true
                    then
                      None
                        {}
                    else
                      Some
                        acc4932
                  else match
                    eqChar c29 (head s406)
                  with
                    true
                  then
                    strLastIndex_rechelper (addi i10 1) i10 c29 (tail s406)
                  else
                    strLastIndex_rechelper (addi i10 1) acc4932 c29 (tail s406)
      in
      strLastIndex_rechelper 0 (negi 1) c28 s405
in
let strSplit =
  lam delim1.
    lam s404.
      let n50 = length s404 in
      let m49 = length delim1 in
      recursive
        let work5 =
          lam acc4931.
            lam lastMatch.
              lam i9.
                match
                  lti (subi n50 m49) i9
                with
                  true
                then
                  snoc acc4931 (subsequence s404 lastMatch n50)
                else match
                  eqStringSlice delim1 s404 i9 m49
                with
                  true
                then
                  let nexti = addi i9 m49 in
                  work5
                    (snoc acc4931 (subsequence s404 lastMatch (subi i9 lastMatch)))
                    nexti
                    nexti
                else
                  work5 acc4931 lastMatch (addi i9 1)
      in
      match
        null delim1
      with
        true
      then
        [ s404 ]
      else
        work5 "" 0 0
in
let strTrim =
  lam s402.
    recursive
      let strTrim_init =
        lam s403.
          match
            eqString s403 ""
          with
            true
          then
            s403
          else match
            isWhitespace (head s403)
          with
            true
          then
            strTrim_init (tail s403)
          else
            s403
    in
    reverse (strTrim_init (reverse (strTrim_init s402)))
in
let strEndsWith: [Char] -> [Char] -> Bool = isSuffix eqChar in
let strStartsWith: [Char] -> [Char] -> Bool = isPrefix eqChar
in
let stringIsInt1 =
  lam s400.
    match
      null s400
    with
      true
    then
      false
    else
      let s401 =
        match
          eqChar (get s400 0) '-'
        with
          true
        then
          tail s400
        else
          s400
      in
      forAll isDigit s401
in
let strJoin: [Char] -> [[Char]] -> [Char] = seqJoin1 in
let strReplace: [Char] -> [Char] -> [Char] -> [Char] = subseqReplace eqChar
in
type Info
in
con Info1: {col1: Int, col2: Int, row1: Int, row2: Int, filename: [Char]} -> Info in
con NoInfo: () -> Info in
let testinfo_: Info =
  Info1
    { col1 = 5, col2 = 10, row1 = 1, row2 = 1, filename = "testinfo_" }
in
type Pos =
  {col: Int, row: Int, filename: [Char]}
in
let initPos: [Char] -> Pos =
  lam filename3.
    { filename = filename3, col = 0, row = 1 }
in
let posVal: [Char] -> Int -> Int -> Pos =
  lam filename2.
    lam row.
      lam col.
        { filename = filename2, col = col, row = row }
in
let advanceCol: Pos -> Int -> Pos =
  lam p2139: Pos.
    lam n49.
      { p2139 with col = addi p2139.col n49 }
in
let advanceRow: Pos -> Int -> Pos =
  lam p2138: Pos.
    lam n48.
      { p2138 with row = addi p2138.row n48, col = 0 }
in
let makeInfo: Pos -> Pos -> Info =
  lam p11000: Pos.
    lam p2137: Pos.
      Info1
        { col1 = p11000.col,
          col2 = p2137.col,
          row1 = p11000.row,
          row2 = p2137.row,
          filename = p11000.filename }
in
let mergeInfo: Info -> Info -> Info =
  lam fi11: Info.
    lam fi21: Info.
      match
        fi11
      with
        Info1 r1101
      then
        match
          fi21
        with
          Info1 r2101
        then
          Info1
            { col1 = r1101.col1,
              col2 = r2101.col2,
              row1 = r1101.row1,
              row2 = r2101.row2,
              filename = r1101.filename }
        else
          fi11
      else
        fi21
in
let infoVal: [Char] -> Int -> Int -> Int -> Int -> Info =
  lam filename1.
    lam r1100.
      lam c110.
        lam r2100.
          lam c27.
            Info1
              { col1 = c110,
                col2 = c27,
                row1 = r1100,
                row2 = r2100,
                filename = filename1 }
in
let info2str: Info -> [Char] =
  lam fi3.
    match
      fi3
    with
      NoInfo {}
    then
      "<No file info>"
    else match
      fi3
    with
      Info1 (r402 & {row1 = 0})
    then
      join [ "<",
          r402.filename,
          ">" ]
    else match
      fi3
    with
      Info1 r403
    in
    join
        [ "<",
          r403.filename,
          " ",
          int2string r403.row1,
          ":",
          int2string r403.col1,
          "-",
          int2string r403.row2,
          ":",
          int2string r403.col2,
          ">" ]
in
let infoErrorString: Info -> [Char] -> [Char] =
  lam fi2.
    lam str5.
      join
        [ "ERROR ",
          info2str fi2,
          ":\n",
          str5 ]
in
let infoWarningString: Info -> [Char] -> [Char] =
  lam fi1.
    lam str4.
      join
        [ "WARNING ",
          info2str fi1,
          ":\n",
          str4 ]
in
let infoErrorExit: Info -> [Char] -> Unknown =
  lam fi.
    lam str3.
      let #var"929" =
        print
          (join
             [ "\n",
               infoErrorString fi str3,
               "\n" ])
      in
      exit 1
in
let posErrorExit: Pos -> [Char] -> Unknown =
  lam p2136: Pos.
    lam str2.
      infoErrorExit
        (infoVal p2136.filename p2136.row p2136.col p2136.row p2136.col)
        str2
in
let infoCmp: Info -> Info -> Int =
  lam i11.
    lam i21.
      cmpString (info2str i11) (info2str i21)
in
type Name =
  ([Char], Symbol)
in
let _noSymbol = gensym {} in
let nameNoSym: [Char] -> Name = lam x716.
    (x716, _noSymbol)
in
let nameSym: [Char] -> Name = lam x715.
    (x715, gensym {})
in
let nameEqStr: Name -> Name -> Bool =
  lam n114: Name.
    lam n214: Name.
      eqString n114.0 n214.0
in
let _t1 = nameNoSym "foo" in
let _t2 = nameSym "foo" in
let _t3 = nameSym "bar" in
let nameHasSym: Name -> Bool = lam n47: Name.
    not (eqsym n47.1 _noSymbol)
in
let nameEqSym: Name -> Name -> Bool =
  lam n113: Name.
    lam n213: Name.
      match
        nameHasSym n113
      with
        true
      then
        match
          nameHasSym n213
        with
          true
        then
          eqsym n113.1 n213.1
        else
          false
      else
        false
in
let _t11 = nameNoSym "foo" in
let _t21 = nameSym "foo" in
let _t31 = nameSym "foo" in
let nameEqSymUnsafe: Name -> Name -> Bool = lam n112.
    lam n212.
      eqsym n112.1 n212.1
in
let nameEq: Name -> Name -> Bool =
  lam n111: Name.
    lam n211: Name.
      match
        nameEqSym n111 n211
      with
        true
      then
        true
      else match
        nameHasSym n111
      with
        true
      then
        false
      else match
        nameHasSym n211
      with
        true
      then
        false
      else
        nameEqStr n111 n211
in
let _t12 = nameNoSym "foo" in
let _t22 = nameSym "foo" in
let _t32 = nameSym "foo" in
let nameSetNewSym: Name -> Name = lam n46: Name.
    (n46.0, gensym {})
in
let _t13 = nameNoSym "foo" in
let _t23 = nameSym "foo" in
let nameSetSym: Name -> Symbol -> Name = lam n45: Name.
    lam s399.
      (n45.0, s399)
in
let _t14 = nameNoSym "foo" in
let _t24 = nameSym "foo" in
let _s = gensym {} in
let nameRemoveSym: Name -> Name = lam n44.
    (n44.0, _noSymbol)
in
let _t15 = nameSym "Foo" in
let _t25 = nameNoSym "Foo" in
let nameSetStr: Name -> [Char] -> Name = lam n43: Name.
    lam str1.
      (str1, n43.1)
in
let _t16 = nameNoSym "foo" in
let _t26 = nameSym "bar" in
let nameGetStr: Name -> [Char] = lam n42: Name.
    n42.0 in
let nameGetSym: Name -> Option Symbol =
  lam n41: Name.
    match
      eqsym n41.1 _noSymbol
    with
      true
    then
      None
        {}
    else
      Some
        n41.1
in
let _s1 = gensym {} in
let nameCmp: Name -> Name -> Int =
  lam n110: Name.
    lam n210: Name.
      match
        nameGetSym n110
      with
        Some a1556
      then
        match
          nameGetSym n210
        with
          Some b61
        then
          subi (sym2hash a1556) (sym2hash b61)
        else
          negi 1
      else match
        nameGetSym n210
      with
        Some _
      then
        1
      else
        cmpString (nameGetStr n110) (nameGetStr n210)
in
let _s11 = gensym {} in
let _s2 = gensym {} in
type AVLTreeImpl_AuxTree a10 a11
in
type AVLTreeImpl_AVL a12 a13
in
con AVLTreeImpl_Cont: all k. all v. {r: AVLTreeImpl_AVL k v, key: k, next: AVLTreeImpl_AuxTree k v, value: v} -> AVLTreeImpl_AuxTree k v in
con AVLTreeImpl_End: all k1. all v1. () -> AVLTreeImpl_AuxTree k1 v1 in
con AVLTreeImpl_Node: all k2. all v2. {h: Int, l: AVLTreeImpl_AVL k2 v2, r: AVLTreeImpl_AVL k2 v2, key: k2, value: v2} -> AVLTreeImpl_AVL k2 v2 in
con AVLTreeImpl_Leaf: all k3. all v3. () -> AVLTreeImpl_AVL k3 v3 in
recursive
  let vAVLTreeImpl_avlEq: all k112. all v109. (k112 -> k112 -> Int) -> (v109 -> v109 -> Bool) -> AVLTreeImpl_AVL k112 v109 -> AVLTreeImpl_AVL k112 v109 -> Bool =
    lam cmpk.
      lam eqv1.
        lam l31.
          lam __sem_target3367.
            match
              __sem_target3367
            with
              r382
            in
            vAVLTreeImpl_avlEqH
                cmpk
                eqv1
                (vAVLTreeImpl_avlToAux (AVLTreeImpl_End
                     {}) l31, vAVLTreeImpl_avlToAux (AVLTreeImpl_End
                     {}) r382)
  let vAVLTreeImpl_avlCmp: all k113. all v118. (k113 -> k113 -> Int) -> (v118 -> v118 -> Int) -> AVLTreeImpl_AVL k113 v118 -> AVLTreeImpl_AVL k113 v118 -> Int =
    lam cmpk1.
      lam cmpv1.
        lam l32.
          lam __sem_target3368.
            match
              __sem_target3368
            with
              r383
            in
            vAVLTreeImpl_avlCmpH
                cmpk1
                cmpv1
                (vAVLTreeImpl_avlToAux (AVLTreeImpl_End
                     {}) l32, vAVLTreeImpl_avlToAux (AVLTreeImpl_End
                     {}) r383)
  let vAVLTreeImpl_avlEqH: all k114. all v119. (k114 -> k114 -> Int) -> (v119 -> v119 -> Bool) -> (AVLTreeImpl_AuxTree k114 v119, AVLTreeImpl_AuxTree k114 v119) -> Bool =
    lam cmpk2.
      lam eqv2.
        lam __sem_target3369.
          match
            __sem_target3369
          with
            (AVLTreeImpl_End _, AVLTreeImpl_End _)
          then
            true
          else match
            __sem_target3369
          with
            (AVLTreeImpl_End _, AVLTreeImpl_Cont _)
          then
            false
          else match
            __sem_target3369
          with
            (AVLTreeImpl_Cont _, AVLTreeImpl_End _)
          then
            false
          else match
            __sem_target3369
          with
            (AVLTreeImpl_Cont l33, AVLTreeImpl_Cont r384)
          in
          match
              eqi (cmpk2 l33.key r384.key) 0
            with
              true
            then
              match
                eqv2 l33.value r384.value
              with
                true
              then
                vAVLTreeImpl_avlEqH
                  cmpk2
                  eqv2
                  (vAVLTreeImpl_avlToAux l33.next l33.r, vAVLTreeImpl_avlToAux r384.next r384.r)
              else
                false
            else
              false
  let vAVLTreeImpl_avlMap: all k115. all a1549. all b55. (k115 -> a1549 -> b55) -> AVLTreeImpl_AVL k115 a1549 -> AVLTreeImpl_AVL k115 b55 =
    lam f2674.
      lam __sem_target3370.
        match
          __sem_target3370
        with
          AVLTreeImpl_Leaf _
        then
          AVLTreeImpl_Leaf
            {}
        else match
          __sem_target3370
        with
          AVLTreeImpl_Node t1205
        in
        AVLTreeImpl_Node
            { r = vAVLTreeImpl_avlMap f2674 t1205.r,
              key = t1205.key,
              value = f2674 t1205.key t1205.value,
              h = t1205.h,
              l = vAVLTreeImpl_avlMap f2674 t1205.l }
  let vAVLTreeImpl_avlCmpH: all k116. all v120. (k116 -> k116 -> Int) -> (v120 -> v120 -> Int) -> (AVLTreeImpl_AuxTree k116 v120, AVLTreeImpl_AuxTree k116 v120) -> Int =
    lam cmpk3.
      lam cmpv2.
        lam __sem_target3371.
          match
            __sem_target3371
          with
            (AVLTreeImpl_End _, AVLTreeImpl_End _)
          then
            0
          else match
            __sem_target3371
          with
            (AVLTreeImpl_End _, AVLTreeImpl_Cont _)
          then
            negi 1
          else match
            __sem_target3371
          with
            (AVLTreeImpl_Cont _, AVLTreeImpl_End _)
          then
            1
          else match
            __sem_target3371
          with
            (AVLTreeImpl_Cont l34, AVLTreeImpl_Cont r385)
          in
          let dk = cmpk3 l34.key r385.key in
            match
              neqi dk 0
            with
              true
            then
              dk
            else
              let dv1 = cmpv2 l34.value r385.value in
              match
                neqi dv1 0
              with
                true
              then
                dv1
              else
                vAVLTreeImpl_avlCmpH
                  cmpk3
                  cmpv2
                  (vAVLTreeImpl_avlToAux l34.next l34.r, vAVLTreeImpl_avlToAux r385.next r385.r)
  let vAVLTreeImpl_avlFold: all a1550. all k117. all v121. (a1550 -> k117 -> v121 -> a1550) -> a1550 -> AVLTreeImpl_AVL k117 v121 -> a1550 =
    lam f2675.
      lam acc4923.
        lam __sem_target3372.
          match
            __sem_target3372
          with
            AVLTreeImpl_Leaf _
          then
            acc4923
          else match
            __sem_target3372
          with
            AVLTreeImpl_Node t1206
          in
          let acc4924 = vAVLTreeImpl_avlFold f2675 acc4923 t1206.l in
            let acc4925 = f2675 acc4924 t1206.key t1206.value in
            vAVLTreeImpl_avlFold f2675 acc4925 t1206.r
  let vAVLTreeImpl_avlJoin1: all k118. all v122. k118 -> v122 -> AVLTreeImpl_AVL k118 v122 -> AVLTreeImpl_AVL k118 v122 -> AVLTreeImpl_AVL k118 v122 =
    lam k119.
      lam v123.
        lam l35.
          lam __sem_target3373.
            match
              __sem_target3373
            with
              r386
            in
            let lh2 = vAVLTreeImpl_avlHeight1 l35 in
              let rh2 = vAVLTreeImpl_avlHeight1 r386 in
              match
                gti lh2 (addi rh2 1)
              with
                true
              then
                vAVLTreeImpl_avlJoinRight1 k119 v123 r386 l35
              else match
                gti rh2 (addi lh2 1)
              with
                true
              then
                vAVLTreeImpl_avlJoinLeft1 k119 v123 l35 r386
              else
                vAVLTreeImpl_avlCreate1 k119 v123 l35 r386
  let vAVLTreeImpl_avlSize: all k120. all v124. AVLTreeImpl_AVL k120 v124 -> Int =
    lam __sem_target3374.
      match
        __sem_target3374
      with
        AVLTreeImpl_Leaf _
      then
        0
      else match
        __sem_target3374
      with
        AVLTreeImpl_Node {r = r387, l = l36}
      in
      addi
          (addi (vAVLTreeImpl_avlSize l36) (vAVLTreeImpl_avlSize r387))
          1
  let vAVLTreeImpl_avlEmpty1: all k121. all v125. () -> AVLTreeImpl_AVL k121 v125 =
    lam __sem_target3375.
      match
        __sem_target3375
      with
        {}
      in
      AVLTreeImpl_Leaf
          {}
  let vAVLTreeImpl_avlJoin2: all k122. all v126. AVLTreeImpl_AVL k122 v126 -> AVLTreeImpl_AVL k122 v126 -> AVLTreeImpl_AVL k122 v126 =
    lam l37.
      lam __sem_target3376.
        match
          __sem_target3376
        with
          r388
        in
        let #var"X34" = (l37, r388) in
          match
            #var"X34"
          with
            (_, AVLTreeImpl_Leaf _)
          then
            l37
          else match
            #var"X34"
          with
            (AVLTreeImpl_Leaf _, _)
          then
            r388
          else match
            #var"X34"
          with
            _
          in
          match
              vAVLTreeImpl_avlSplitFirst r388
            with
              (rk, rv1, r389)
            in
            vAVLTreeImpl_avlJoin1 rk rv1 l37 r389
  let vAVLTreeImpl_avlMerge: all k123. all a1551. all b56. all c20. (k123 -> k123 -> Int) -> (Option a1551 -> Option b56 -> Option c20) -> AVLTreeImpl_AVL k123 a1551 -> AVLTreeImpl_AVL k123 b56 -> AVLTreeImpl_AVL k123 c20 =
    lam cmp15.
      lam f2676.
        lam l38.
          lam __sem_target3377.
            match
              __sem_target3377
            with
              r390
            in
            vAVLTreeImpl_avlMergeWithKey cmp15 (lam #var"926".
                   f2676) l38 r390
  let vAVLTreeImpl_avlSplit: all k124. all v127. (k124 -> k124 -> Int) -> k124 -> AVLTreeImpl_AVL k124 v127 -> (AVLTreeImpl_AVL k124 v127, Option v127, AVLTreeImpl_AVL k124 v127) =
    lam cmp16.
      lam k125.
        lam __sem_target3378.
          match
            __sem_target3378
          with
            AVLTreeImpl_Leaf _
          then
            (AVLTreeImpl_Leaf
              {}, None
              {}, AVLTreeImpl_Leaf
              {})
          else match
            __sem_target3378
          with
            AVLTreeImpl_Node t1207
          in
          let d99 = cmp16 k125 t1207.key in
            match
              lti d99 0
            with
              true
            then
              match
                vAVLTreeImpl_avlSplit cmp16 k125 t1207.l
              with
                (ll1, v128, lr1)
              in
              (ll1, v128, vAVLTreeImpl_avlJoin1 t1207.key t1207.value lr1 t1207.r)
            else match
              gti d99 0
            with
              true
            then
              match
                vAVLTreeImpl_avlSplit cmp16 k125 t1207.r
              with
                (rl1, v129, rr1)
              in
              (vAVLTreeImpl_avlJoin1 t1207.key t1207.value t1207.l rl1, v129, rr1)
            else
              (t1207.l, Some
                t1207.value, t1207.r)
  let vAVLTreeImpl_avlToAux: all k126. all v130. AVLTreeImpl_AuxTree k126 v130 -> AVLTreeImpl_AVL k126 v130 -> AVLTreeImpl_AuxTree k126 v130 =
    lam acc4926.
      lam __sem_target3379.
        match
          __sem_target3379
        with
          AVLTreeImpl_Node t1208
        then
          vAVLTreeImpl_avlToAux
            (AVLTreeImpl_Cont
               { r = t1208.r, key = t1208.key, next = acc4926, value = t1208.value })
            t1208.l
        else match
          __sem_target3379
        with
          AVLTreeImpl_Leaf _
        in
        acc4926
  let vAVLTreeImpl_avlToSeq: all k127. all v131. [(k127, v131)] -> AVLTreeImpl_AVL k127 v131 -> [(k127, v131)] =
    lam acc4927.
      lam __sem_target3380.
        match
          __sem_target3380
        with
          AVLTreeImpl_Leaf _
        then
          acc4927
        else match
          __sem_target3380
        with
          AVLTreeImpl_Node t1209
        in
        let acc4928 = vAVLTreeImpl_avlToSeq acc4927 t1209.r in
          let acc4929 = cons (t1209.key, t1209.value) acc4928 in
          vAVLTreeImpl_avlToSeq acc4929 t1209.l
  let vAVLTreeImpl_avlChoose: all k128. all v132. AVLTreeImpl_AVL k128 v132 -> Option (k128, v132) =
    lam __sem_target3381.
      match
        __sem_target3381
      with
        AVLTreeImpl_Leaf _
      then
        None
          {}
      else match
        __sem_target3381
      with
        AVLTreeImpl_Node t1210
      in
      Some
          (t1210.key, t1210.value)
  let vAVLTreeImpl_avlCreate1: all k129. all v133. k129 -> v133 -> AVLTreeImpl_AVL k129 v133 -> AVLTreeImpl_AVL k129 v133 -> AVLTreeImpl_AVL k129 v133 =
    lam k130.
      lam v134.
        lam l39.
          lam __sem_target3382.
            match
              __sem_target3382
            with
              r391
            in
            let lh3 = vAVLTreeImpl_avlHeight1 l39 in
              let rh3 = vAVLTreeImpl_avlHeight1 r391 in
              let h5 =
                addi
                  (match
                     geqi lh3 rh3
                   with
                     true
                   then
                     lh3
                   else
                     rh3)
                  1
              in
              AVLTreeImpl_Node
                { r = r391, key = k130, value = v134, h = h5, l = l39 }
  let vAVLTreeImpl_avlFilter: all k131. all v135. (k131 -> v135 -> Bool) -> AVLTreeImpl_AVL k131 v135 -> AVLTreeImpl_AVL k131 v135 =
    lam p2135.
      lam __sem_target3383.
        match
          __sem_target3383
        with
          AVLTreeImpl_Node t1211
        then
          let lhs12 = vAVLTreeImpl_avlFilter p2135 t1211.l in
          let rhs12 = vAVLTreeImpl_avlFilter p2135 t1211.r in
          match
            p2135 t1211.key t1211.value
          with
            true
          then
            vAVLTreeImpl_avlJoin1 t1211.key t1211.value lhs12 rhs12
          else
            vAVLTreeImpl_avlJoin2 lhs12 rhs12
        else match
          __sem_target3383
        with
          AVLTreeImpl_Leaf _
        in
        AVLTreeImpl_Leaf
            {}
  let vAVLTreeImpl_avlHeight1: all k132. all v136. AVLTreeImpl_AVL k132 v136 -> Int =
    lam __sem_target3384.
      match
        __sem_target3384
      with
        AVLTreeImpl_Leaf _
      then
        0
      else match
        __sem_target3384
      with
        AVLTreeImpl_Node {h = h6}
      in
      h6
  let vAVLTreeImpl_avlInsert1: all k133. all v137. (k133 -> k133 -> Int) -> k133 -> v137 -> AVLTreeImpl_AVL k133 v137 -> AVLTreeImpl_AVL k133 v137 =
    lam cmp17.
      lam k134.
        lam v138.
          lam __sem_target3385.
            match
              __sem_target3385
            with
              AVLTreeImpl_Leaf _
            then
              AVLTreeImpl_Node
                { r = AVLTreeImpl_Leaf
                      {},
                  key = k134,
                  value = v138,
                  h = 1,
                  l = AVLTreeImpl_Leaf
                      {} }
            else match
              __sem_target3385
            with
              AVLTreeImpl_Node t1212
            in
            let d100 = cmp17 k134 t1212.key in
              match
                lti d100 0
              with
                true
              then
                vAVLTreeImpl_avlJoin1
                  t1212.key
                  t1212.value
                  (vAVLTreeImpl_avlInsert1 cmp17 k134 v138 t1212.l)
                  t1212.r
              else match
                gti d100 0
              with
                true
              then
                vAVLTreeImpl_avlJoin1
                  t1212.key
                  t1212.value
                  t1212.l
                  (vAVLTreeImpl_avlInsert1 cmp17 k134 v138 t1212.r)
              else
                AVLTreeImpl_Node
                  { t1212 with value = v138 }
  let vAVLTreeImpl_avlLookup1: all k135. all v139. (k135 -> k135 -> Int) -> k135 -> AVLTreeImpl_AVL k135 v139 -> Option v139 =
    lam cmp18.
      lam k136.
        lam __sem_target3386.
          match
            __sem_target3386
          with
            AVLTreeImpl_Leaf _
          then
            None
              {}
          else match
            __sem_target3386
          with
            AVLTreeImpl_Node t1213
          in
          let d101 = cmp18 k136 t1213.key in
            match
              lti d101 0
            with
              true
            then
              vAVLTreeImpl_avlLookup1 cmp18 k136 t1213.l
            else match
              gti d101 0
            with
              true
            then
              vAVLTreeImpl_avlLookup1 cmp18 k136 t1213.r
            else
              Some
                t1213.value
  let vAVLTreeImpl_avlRemove: all k137. all v140. (k137 -> k137 -> Int) -> k137 -> AVLTreeImpl_AVL k137 v140 -> AVLTreeImpl_AVL k137 v140 =
    lam cmp19.
      lam k138.
        lam __sem_target3387.
          match
            __sem_target3387
          with
            AVLTreeImpl_Leaf _
          then
            AVLTreeImpl_Leaf
              {}
          else match
            __sem_target3387
          with
            AVLTreeImpl_Node t1214
          in
          let d102 = cmp19 k138 t1214.key in
            match
              lti d102 0
            with
              true
            then
              vAVLTreeImpl_avlJoin1
                t1214.key
                t1214.value
                (vAVLTreeImpl_avlRemove cmp19 k138 t1214.l)
                t1214.r
            else match
              gti d102 0
            with
              true
            then
              vAVLTreeImpl_avlJoin1
                t1214.key
                t1214.value
                t1214.l
                (vAVLTreeImpl_avlRemove cmp19 k138 t1214.r)
            else
              vAVLTreeImpl_avlJoin2 t1214.l t1214.r
  let vAVLTreeImpl_avlFromSeq: all k139. all v141. (k139 -> k139 -> Int) -> [(k139, v141)] -> AVLTreeImpl_AVL k139 v141 =
    lam cmp20.
      lam __sem_target3388.
        match
          __sem_target3388
        with
          ""
        then
          AVLTreeImpl_Leaf
            {}
        else match
          __sem_target3388
        with
          [ (k140, v142) ]
        then
          AVLTreeImpl_Node
            { r = AVLTreeImpl_Leaf
                  {},
              key = k140,
              value = v142,
              h = 1,
              l = AVLTreeImpl_Leaf
                  {} }
        else match
          __sem_target3388
        with
          s398
        in
        let mid = divi (length s398) 2 in
          match
            splitAt s398 mid
          with
            (lhs13, rhs13)
          in
          let l40 = vAVLTreeImpl_avlFromSeq cmp20 lhs13 in
            let r392 = vAVLTreeImpl_avlFromSeq cmp20 rhs13 in
            vAVLTreeImpl_avlUnionWith
              cmp20
              (lam #var"927".
                 lam rv2.
                   rv2)
              l40
              r392
  let vAVLTreeImpl_avlIsEmpty: all k141. all v143. AVLTreeImpl_AVL k141 v143 -> Bool =
    lam __sem_target3389.
      match
        __sem_target3389
      with
        AVLTreeImpl_Leaf _
      then
        true
      else match
        __sem_target3389
      with
        AVLTreeImpl_Node _
      in
      false
  let vAVLTreeImpl_avlJoinLeft1: all k142. all v144. k142 -> v144 -> AVLTreeImpl_AVL k142 v144 -> AVLTreeImpl_AVL k142 v144 -> AVLTreeImpl_AVL k142 v144 =
    lam k143.
      lam v145.
        lam l41.
          lam __sem_target3390.
            match
              __sem_target3390
            with
              AVLTreeImpl_Node tr2
            then
              match
                leqi
                  (vAVLTreeImpl_avlHeight1 tr2.l)
                  (addi (vAVLTreeImpl_avlHeight1 l41) 1)
              with
                true
              then
                let t1215 = vAVLTreeImpl_avlCreate1 k143 v145 l41 tr2.l in
                match
                  leqi
                    (vAVLTreeImpl_avlHeight1 t1215)
                    (addi (vAVLTreeImpl_avlHeight1 tr2.r) 1)
                with
                  true
                then
                  vAVLTreeImpl_avlCreate1 tr2.key tr2.value t1215 tr2.r
                else
                  vAVLTreeImpl_avlRotateRight1
                    tr2.key
                    tr2.value
                    tr2.r
                    (vAVLTreeImpl_avlRotateLeft1 k143 v145 l41 tr2.l)
              else
                let tx2 = vAVLTreeImpl_avlJoinLeft1 k143 v145 l41 tr2.l in
                match
                  leqi
                    (vAVLTreeImpl_avlHeight1 tx2)
                    (addi (vAVLTreeImpl_avlHeight1 tr2.r) 1)
                with
                  true
                then
                  vAVLTreeImpl_avlCreate1 tr2.key tr2.value tx2 tr2.r
                else
                  vAVLTreeImpl_avlRotateRight1 tr2.key tr2.value tr2.r tx2
            else match
              __sem_target3390
            with
              AVLTreeImpl_Leaf _
            in
            error "avlJoinLeft: empty tree"
  let vAVLTreeImpl_avlValidate: all k144. all v146. (k144 -> k144 -> Int) -> AVLTreeImpl_AVL k144 v146 -> Bool =
    lam cmp21.
      lam __sem_target3391.
        match
          __sem_target3391
        with
          t1216
        in
        match
            vAVLTreeImpl_avlValidateHeight t1216
          with
            true
          then
            let keys =
              vAVLTreeImpl_avlFold
                (lam acc4930.
                   lam k145.
                     lam #var"928".
                       snoc acc4930 k145)
                ""
                t1216
            in
            eqSeq
              (lam l42.
                 lam r393.
                   eqi (cmp21 l42 r393) 0)
              keys
              (sort cmp21 keys)
          else
            false
  let vAVLTreeImpl_avlFindLower: all k146. all v147. (k146 -> k146 -> Int) -> k146 -> AVLTreeImpl_AVL k146 v147 -> Option (k146, v147) =
    lam cmp22.
      lam k147.
        lam __sem_target3392.
          match
            __sem_target3392
          with
            AVLTreeImpl_Node t1217
          then
            let d103 = cmp22 k147 t1217.key in
            match
              lti d103 0
            with
              true
            then
              vAVLTreeImpl_avlFindLower cmp22 k147 t1217.l
            else
              let #var"X35" = vAVLTreeImpl_avlFindLower cmp22 k147 t1217.r in
              match
                #var"X35"
              with
                None _
              then
                Some
                  (t1217.key, t1217.value)
              else match
                #var"X35"
              with
                value14
              in
              value14
          else match
            __sem_target3392
          with
            AVLTreeImpl_Leaf _
          in
          None
              {}
  let vAVLTreeImpl_avlFindUpper: all k148. all v148. (k148 -> k148 -> Int) -> k148 -> AVLTreeImpl_AVL k148 v148 -> Option (k148, v148) =
    lam cmp23.
      lam k149.
        lam __sem_target3393.
          match
            __sem_target3393
          with
            AVLTreeImpl_Node t1218
          then
            let d104 = cmp23 k149 t1218.key in
            match
              gti d104 0
            with
              true
            then
              vAVLTreeImpl_avlFindUpper cmp23 k149 t1218.r
            else
              let #var"X36" = vAVLTreeImpl_avlFindUpper cmp23 k149 t1218.l in
              match
                #var"X36"
              with
                None _
              then
                Some
                  (t1218.key, t1218.value)
              else match
                #var"X36"
              with
                value15
              in
              value15
          else match
            __sem_target3393
          with
            AVLTreeImpl_Leaf _
          in
          None
              {}
  let vAVLTreeImpl_avlJoinRight1: all k150. all v149. k150 -> v149 -> AVLTreeImpl_AVL k150 v149 -> AVLTreeImpl_AVL k150 v149 -> AVLTreeImpl_AVL k150 v149 =
    lam k151.
      lam v150.
        lam r394.
          lam __sem_target3394.
            match
              __sem_target3394
            with
              AVLTreeImpl_Node tl1
            then
              match
                leqi
                  (vAVLTreeImpl_avlHeight1 tl1.r)
                  (addi (vAVLTreeImpl_avlHeight1 r394) 1)
              with
                true
              then
                let t1219 = vAVLTreeImpl_avlCreate1 k151 v150 tl1.r r394 in
                match
                  leqi
                    (vAVLTreeImpl_avlHeight1 t1219)
                    (addi (vAVLTreeImpl_avlHeight1 tl1.l) 1)
                with
                  true
                then
                  vAVLTreeImpl_avlCreate1 tl1.key tl1.value tl1.l t1219
                else
                  vAVLTreeImpl_avlRotateLeft1
                    tl1.key
                    tl1.value
                    tl1.l
                    (vAVLTreeImpl_avlRotateRight1 k151 v150 r394 tl1.r)
              else
                let tx3 = vAVLTreeImpl_avlJoinRight1 k151 v150 r394 tl1.r in
                match
                  leqi
                    (vAVLTreeImpl_avlHeight1 tx3)
                    (addi (vAVLTreeImpl_avlHeight1 tl1.l) 1)
                with
                  true
                then
                  vAVLTreeImpl_avlCreate1 tl1.key tl1.value tl1.l tx3
                else
                  vAVLTreeImpl_avlRotateLeft1 tl1.key tl1.value tl1.l tx3
            else match
              __sem_target3394
            with
              AVLTreeImpl_Leaf _
            in
            error "avlJoinRight: empty tree"
  let vAVLTreeImpl_avlMapOption: all k152. all a1552. all b57. (k152 -> a1552 -> Option b57) -> AVLTreeImpl_AVL k152 a1552 -> AVLTreeImpl_AVL k152 b57 =
    lam f2677.
      lam __sem_target3395.
        match
          __sem_target3395
        with
          AVLTreeImpl_Node t1220
        then
          let lhs14 = vAVLTreeImpl_avlMapOption f2677 t1220.l in
          let rhs14 = vAVLTreeImpl_avlMapOption f2677 t1220.r in
          match
            f2677 t1220.key t1220.value
          with
            Some value16
          then
            vAVLTreeImpl_avlJoin1 t1220.key value16 lhs14 rhs14
          else
            vAVLTreeImpl_avlJoin2 lhs14 rhs14
        else match
          __sem_target3395
        with
          AVLTreeImpl_Leaf _
        in
        AVLTreeImpl_Leaf
            {}
  let vAVLTreeImpl_avlUnionWith: all k153. all v151. (k153 -> k153 -> Int) -> (v151 -> v151 -> v151) -> AVLTreeImpl_AVL k153 v151 -> AVLTreeImpl_AVL k153 v151 -> AVLTreeImpl_AVL k153 v151 =
    lam cmp24.
      lam f2678.
        lam l43.
          lam __sem_target3396.
            match
              __sem_target3396
            with
              r395
            in
            match
                l43
              with
                AVLTreeImpl_Leaf _
              then
                r395
              else match
                r395
              with
                AVLTreeImpl_Leaf _
              then
                l43
              else match
                geqi
                  (vAVLTreeImpl_avlHeight1 l43) (vAVLTreeImpl_avlHeight1 r395)
              with
                true
              then
                match
                  l43
                with
                  AVLTreeImpl_Node lt3
                then
                  match
                    vAVLTreeImpl_avlSplit cmp24 lt3.key r395
                  with
                    (rl2, rv3, rr2)
                  in
                  let lhs15 = vAVLTreeImpl_avlUnionWith cmp24 f2678 lt3.l rl2 in
                    let rhs15 = vAVLTreeImpl_avlUnionWith cmp24 f2678 lt3.r rr2 in
                    let value17 =
                      match
                        rv3
                      with
                        Some x710
                      then
                        f2678 lt3.value x710
                      else lt3.value
                    in
                    vAVLTreeImpl_avlJoin1 lt3.key value17 lhs15 rhs15
                else
                  error "avlUnionWith: empty left tree"
              else match
                r395
              with
                AVLTreeImpl_Node rt1
              then
                match
                  vAVLTreeImpl_avlSplit cmp24 rt1.key l43
                with
                  (ll2, lv, lr2)
                in
                let lhs16 = vAVLTreeImpl_avlUnionWith cmp24 f2678 ll2 rt1.l in
                  let rhs16 = vAVLTreeImpl_avlUnionWith cmp24 f2678 lr2 rt1.r in
                  let value18 =
                    match
                      lv
                    with
                      Some x711
                    then
                      f2678 x711 rt1.value
                    else rt1.value
                  in
                  vAVLTreeImpl_avlJoin1 rt1.key value18 lhs16 rhs16
              else
                error "avlUnionWith: empty right tree"
  let vAVLTreeImpl_avlDifference: all k154. all a1553. all b58. (k154 -> k154 -> Int) -> AVLTreeImpl_AVL k154 a1553 -> AVLTreeImpl_AVL k154 b58 -> AVLTreeImpl_AVL k154 a1553 =
    lam cmp25.
      lam l44.
        lam __sem_target3397.
          match
            __sem_target3397
          with
            r396
          in
          match
              l44
            with
              AVLTreeImpl_Leaf _
            then
              AVLTreeImpl_Leaf
                {}
            else match
              r396
            with
              AVLTreeImpl_Leaf _
            then
              l44
            else match
              l44
            with
              AVLTreeImpl_Node lt4
            then
              match
                vAVLTreeImpl_avlSplit cmp25 lt4.key r396
              with
                (rl3, rv4, rr3)
              in
              let lhs17 = vAVLTreeImpl_avlDifference cmp25 lt4.l rl3 in
                let rhs17 = vAVLTreeImpl_avlDifference cmp25 lt4.r rr3 in
                match
                  rv4
                with
                  Some x712
                then
                  vAVLTreeImpl_avlJoin2 lhs17 rhs17
                else
                  vAVLTreeImpl_avlJoin1 lt4.key lt4.value lhs17 rhs17
            else
              error "avlDifference: empty left tree"
  let vAVLTreeImpl_avlRotateLeft1: all k155. all v152. k155 -> v152 -> AVLTreeImpl_AVL k155 v152 -> AVLTreeImpl_AVL k155 v152 -> AVLTreeImpl_AVL k155 v152 =
    lam k156.
      lam v153.
        lam l45.
          lam __sem_target3398.
            match
              __sem_target3398
            with
              AVLTreeImpl_Node (rt2 & {r = rr4, l = rl4})
            then
              vAVLTreeImpl_avlCreate1
                rt2.key
                rt2.value
                (vAVLTreeImpl_avlCreate1 k156 v153 l45 rl4)
                rr4
            else match
              __sem_target3398
            with
              AVLTreeImpl_Leaf _
            in
            error "avlRotateLeft: empty tree"
  let vAVLTreeImpl_avlSplitFirst: all k157. all v154. AVLTreeImpl_AVL k157 v154 -> (k157, v154, AVLTreeImpl_AVL k157 v154) =
    lam __sem_target3399.
      match
        __sem_target3399
      with
        AVLTreeImpl_Node (t1221 & {l = AVLTreeImpl_Leaf _})
      then
        (t1221.key, t1221.value, t1221.r)
      else match
        __sem_target3399
      with
        AVLTreeImpl_Node t1222
      then
        match
          vAVLTreeImpl_avlSplitFirst t1222.l
        with
          (k158, v155, l46)
        in
        let hd =
            subi
              (vAVLTreeImpl_avlHeight1 l46)
              (vAVLTreeImpl_avlHeight1 t1222.r)
          in
          match
            lti hd (negi 1)
          with
            true
          then
            (k158, v155, vAVLTreeImpl_avlBalanceRight t1222.key t1222.value l46 t1222.r)
          else
            (k158, v155, vAVLTreeImpl_avlCreate1 t1222.key t1222.value l46 t1222.r)
      else match
        __sem_target3399
      with
        AVLTreeImpl_Leaf _
      in
      error "avlSplitLast: empty tree"
  let vAVLTreeImpl_avlRotateRight1: all k159. all v156. k159 -> v156 -> AVLTreeImpl_AVL k159 v156 -> AVLTreeImpl_AVL k159 v156 -> AVLTreeImpl_AVL k159 v156 =
    lam k160.
      lam v157.
        lam r397.
          lam __sem_target3400.
            match
              __sem_target3400
            with
              AVLTreeImpl_Node (lt5 & {r = lr3, l = ll3})
            then
              vAVLTreeImpl_avlCreate1
                lt5.key
                lt5.value
                ll3
                (vAVLTreeImpl_avlCreate1 k160 v157 lr3 r397)
            else match
              __sem_target3400
            with
              AVLTreeImpl_Leaf _
            in
            error "avlRotateRight: empty tree"
  let vAVLTreeImpl_avlBalanceRight: all k161. all v158. k161 -> v158 -> AVLTreeImpl_AVL k161 v158 -> AVLTreeImpl_AVL k161 v158 -> AVLTreeImpl_AVL k161 v158 =
    lam k162.
      lam v159.
        lam l47.
          lam __sem_target3401.
            match
              __sem_target3401
            with
              r398 & AVLTreeImpl_Node rt3
            then
              match
                geqi
                  (vAVLTreeImpl_avlHeight1 rt3.r)
                  (vAVLTreeImpl_avlHeight1 rt3.l)
              with
                true
              then
                vAVLTreeImpl_avlRotateLeft1 k162 v159 l47 r398
              else
                vAVLTreeImpl_avlRotateRightLeft k162 v159 l47 r398
            else match
              __sem_target3401
            with
              AVLTreeImpl_Leaf _
            in
            error "avlBalanceRight: empty tree"
  let vAVLTreeImpl_avlMergeWithKey: all k163. all a1554. all b59. all c25. (k163 -> k163 -> Int) -> (k163 -> Option a1554 -> Option b59 -> Option c25) -> AVLTreeImpl_AVL k163 a1554 -> AVLTreeImpl_AVL k163 b59 -> AVLTreeImpl_AVL k163 c25 =
    lam cmp26.
      lam f2679.
        lam l48.
          lam __sem_target3402.
            match
              __sem_target3402
            with
              r399
            in
            match
                (l48, r399)
              with
                (AVLTreeImpl_Leaf _, AVLTreeImpl_Leaf _)
              then
                AVLTreeImpl_Leaf
                  {}
              else match
                geqi
                  (vAVLTreeImpl_avlHeight1 l48) (vAVLTreeImpl_avlHeight1 r399)
              with
                true
              then
                match
                  l48
                with
                  AVLTreeImpl_Node lt6
                then
                  match
                    vAVLTreeImpl_avlSplit cmp26 lt6.key r399
                  with
                    (rl5, rv5, rr5)
                  in
                  let lhs18 = vAVLTreeImpl_avlMergeWithKey cmp26 f2679 lt6.l rl5
                    in
                    let rhs18 = vAVLTreeImpl_avlMergeWithKey cmp26 f2679 lt6.r rr5
                    in
                    match
                      f2679 lt6.key (Some
                           lt6.value) rv5
                    with
                      Some v160
                    then
                      vAVLTreeImpl_avlJoin1 lt6.key v160 lhs18 rhs18
                    else
                      vAVLTreeImpl_avlJoin2 lhs18 rhs18
                else
                  error "avlMergeWithKey: empty left tree"
              else match
                r399
              with
                AVLTreeImpl_Node rt4
              then
                match
                  vAVLTreeImpl_avlSplit cmp26 rt4.key l48
                with
                  (ll4, lv1, lr4)
                in
                let lhs19 = vAVLTreeImpl_avlMergeWithKey cmp26 f2679 ll4 rt4.l
                  in
                  let rhs19 = vAVLTreeImpl_avlMergeWithKey cmp26 f2679 lr4 rt4.r
                  in
                  match
                    f2679 rt4.key lv1 (Some
                         rt4.value)
                  with
                    Some v161
                  then
                    vAVLTreeImpl_avlJoin1 rt4.key v161 lhs19 rhs19
                  else
                    vAVLTreeImpl_avlJoin2 lhs19 rhs19
              else
                error "avlMergeWithKey: empty right tree"
  let vAVLTreeImpl_avlIntersectWith: all k164. all a1555. all b60. all c26. (k164 -> k164 -> Int) -> (a1555 -> b60 -> c26) -> AVLTreeImpl_AVL k164 a1555 -> AVLTreeImpl_AVL k164 b60 -> AVLTreeImpl_AVL k164 c26 =
    lam cmp27.
      lam f2680.
        lam l49.
          lam __sem_target3403.
            match
              __sem_target3403
            with
              r400
            in
            match
                l49
              with
                AVLTreeImpl_Leaf _
              then
                AVLTreeImpl_Leaf
                  {}
              else match
                r400
              with
                AVLTreeImpl_Leaf _
              then
                AVLTreeImpl_Leaf
                  {}
              else match
                geqi
                  (vAVLTreeImpl_avlHeight1 l49) (vAVLTreeImpl_avlHeight1 r400)
              with
                true
              then
                match
                  l49
                with
                  AVLTreeImpl_Node lt7
                then
                  match
                    vAVLTreeImpl_avlSplit cmp27 lt7.key r400
                  with
                    (rl6, rv6, rr6)
                  in
                  let lhs20 = vAVLTreeImpl_avlIntersectWith cmp27 f2680 lt7.l rl6
                    in
                    let rhs20 = vAVLTreeImpl_avlIntersectWith cmp27 f2680 lt7.r rr6
                    in
                    match
                      rv6
                    with
                      Some x713
                    then
                      vAVLTreeImpl_avlJoin1 lt7.key (f2680 lt7.value x713) lhs20 rhs20
                    else
                      vAVLTreeImpl_avlJoin2 lhs20 rhs20
                else
                  error "avlIntersectWith: empty left tree"
              else match
                r400
              with
                AVLTreeImpl_Node rt5
              then
                match
                  vAVLTreeImpl_avlSplit cmp27 rt5.key l49
                with
                  (ll5, lv2, lr5)
                in
                let lhs21 = vAVLTreeImpl_avlIntersectWith cmp27 f2680 ll5 rt5.l
                  in
                  let rhs21 = vAVLTreeImpl_avlIntersectWith cmp27 f2680 lr5 rt5.r
                  in
                  match
                    lv2
                  with
                    Some x714
                  then
                    vAVLTreeImpl_avlJoin1 rt5.key (f2680 x714 rt5.value) lhs21 rhs21
                  else
                    vAVLTreeImpl_avlJoin2 lhs21 rhs21
              else
                error "avlIntersectWith: empty right tree"
  let vAVLTreeImpl_avlValidateHeight: all k165. all v162. AVLTreeImpl_AVL k165 v162 -> Bool =
    lam __sem_target3404.
      match
        __sem_target3404
      with
        AVLTreeImpl_Node t1223
      then
        let lh4 = vAVLTreeImpl_avlHeight1 t1223.l in
        let rh4 = vAVLTreeImpl_avlHeight1 t1223.r in
        match
          or (gti lh4 (addi rh4 1)) (gti rh4 (addi lh4 1))
        with
          true
        then
          false
        else
          and
            (vAVLTreeImpl_avlValidateHeight t1223.l)
            (vAVLTreeImpl_avlValidateHeight t1223.r)
      else match
        __sem_target3404
      with
        AVLTreeImpl_Leaf _
      in
      true
  let vAVLTreeImpl_avlRotateLeftRight: all k166. all v163. k166 -> v163 -> AVLTreeImpl_AVL k166 v163 -> AVLTreeImpl_AVL k166 v163 -> AVLTreeImpl_AVL k166 v163 =
    lam k167.
      lam v164.
        lam r401.
          lam __sem_target3405.
            match
              __sem_target3405
            with
              AVLTreeImpl_Node (lt8 & {r = AVLTreeImpl_Node lrt, l = ll6})
            then
              vAVLTreeImpl_avlCreate1
                lrt.key
                lrt.value
                (vAVLTreeImpl_avlCreate1 lt8.key lt8.value ll6 lrt.l)
                (vAVLTreeImpl_avlCreate1 k167 v164 lrt.r r401)
            else match
              __sem_target3405
            with
              AVLTreeImpl_Node _
            then
              error "avlRotateLeftRight: invalid shape of tree"
            else match
              __sem_target3405
            with
              AVLTreeImpl_Leaf _
            in
            error "avlRotateLeftRight: empty tree"
  let vAVLTreeImpl_avlRotateRightLeft: all k168. all v165. k168 -> v165 -> AVLTreeImpl_AVL k168 v165 -> AVLTreeImpl_AVL k168 v165 -> AVLTreeImpl_AVL k168 v165 =
    lam k169.
      lam v166.
        lam l50.
          lam __sem_target3406.
            match
              __sem_target3406
            with
              AVLTreeImpl_Node (rt6 & {r = rr7, l = AVLTreeImpl_Node rlt})
            then
              vAVLTreeImpl_avlCreate1
                rlt.key
                rlt.value
                (vAVLTreeImpl_avlCreate1 k169 v166 l50 rlt.l)
                (vAVLTreeImpl_avlCreate1 rt6.key rt6.value rlt.r rr7)
            else match
              __sem_target3406
            with
              AVLTreeImpl_Node _
            then
              error "avlRotateRightLeft: invalid shape of tree"
            else match
              __sem_target3406
            with
              AVLTreeImpl_Leaf _
            in
            error "avlRotateRightLeft: empty tree"
in
type Map k4 v4 =
  {cmp: k4 -> k4 -> Int, root: AVLTreeImpl_AVL k4 v4}
in
let mapEmpty: all k111. all v108. (k111 -> k111 -> Int) -> Map k111 v108 =
  lam cmp14.
    { cmp = cmp14, root = vAVLTreeImpl_avlEmpty1 {} }
in
let mapSize: all k110. all v107. Map k110 v107 -> Int = lam m48.
    vAVLTreeImpl_avlSize m48.root
in
let mapLength: all k109. all v106. Map k109 v106 -> Int = lam m47.
    mapSize m47
in
let mapIsEmpty: all k108. all v105. Map k108 v105 -> Bool = lam m46.
    vAVLTreeImpl_avlIsEmpty m46.root
in
let mapRemove: all k106. all v104. k106 -> Map k106 v104 -> Map k106 v104 =
  lam k107.
    lam m45.
      { m45 with root = vAVLTreeImpl_avlRemove m45.cmp k107 m45.root }
in
let mapFindExn: all k104. all v103. k104 -> Map k104 v103 -> v103 =
  lam k105.
    lam m44.
      optionGetOrElse
        (lam #var"925".
           error "mapFindExn: key not found")
        (vAVLTreeImpl_avlLookup1 m44.cmp k105 m44.root)
in
let mapFindOrElse: all k102. all v102. (() -> v102) -> k102 -> Map k102 v102 -> v102 =
  lam f2673.
    lam k103.
      lam m43.
        optionGetOrElse f2673 (vAVLTreeImpl_avlLookup1 m43.cmp k103 m43.root)
in
let mapFindApplyOrElse: all k100. all v117. all v218. (v117 -> v218) -> (() -> v218) -> k100 -> Map k100 v117 -> v218 =
  lam fnThn.
    lam fnEls.
      lam k101.
        lam m42.
          optionMapOrElse fnEls fnThn (vAVLTreeImpl_avlLookup1 m42.cmp k101 m42.root)
in
let mapLookup: all k98. all v101. k98 -> Map k98 v101 -> Option v101 =
  lam k99.
    lam m41.
      vAVLTreeImpl_avlLookup1 m41.cmp k99 m41.root
in
let mapLookupOrElse: all k96. all v100. (() -> v100) -> k96 -> Map k96 v100 -> v100 =
  lam f2672.
    lam k97.
      lam m40.
        mapFindOrElse f2672 k97 m40
in
let mapLookupApplyOrElse: all k94. all v116. all v217. (v116 -> v217) -> (() -> v217) -> k94 -> Map k94 v116 -> v217 =
  lam f11000.
    lam f2671.
      lam k95.
        lam m39.
          mapFindApplyOrElse f11000 f2671 k95 m39
in
let mapLookupOr: all k92. all v99. v99 -> k92 -> Map k92 v99 -> v99 =
  lam dv.
    lam k93.
      lam m38.
        mapLookupOrElse (lam #var"924".
             dv) k93 m38
in
let mapFindUpper: all k90. all v98. k90 -> Map k90 v98 -> Option (k90, v98) =
  lam k91.
    lam m37.
      vAVLTreeImpl_avlFindUpper m37.cmp k91 m37.root
in
let mapFindLower: all k88. all v97. k88 -> Map k88 v97 -> Option (k88, v97) =
  lam k89.
    lam m36.
      vAVLTreeImpl_avlFindLower m36.cmp k89 m36.root
in
let mapInsert: all k86. all v95. k86 -> v95 -> Map k86 v95 -> Map k86 v95 =
  lam k87.
    lam v96.
      lam m35.
        { m35 with root = vAVLTreeImpl_avlInsert1 m35.cmp k87 v96 m35.root }
in
let mapInsertWith: all k84. all v93. (v93 -> v93 -> v93) -> k84 -> v93 -> Map k84 v93 -> Map k84 v93 =
  lam f2670.
    lam k85.
      lam v94.
        lam m34.
          match
            mapLookup k85 m34
          with
            Some prev
          then
            mapInsert k85 (f2670 prev v94) m34
          else
            mapInsert k85 v94 m34
in
let mapUpdate: all k82. all v91. k82 -> (Option v91 -> Option v91) -> Map k82 v91 -> Map k82 v91 =
  lam k83.
    lam f2669.
      lam m33.
        let #var"X33" = f2669 (mapLookup k83 m33) in
        match
          #var"X33"
        with
          Some v92
        then
          mapInsert k83 v92 m33
        else match
          #var"X33"
        with
          None _
        in
        mapRemove k83 m33
in
let mapSingleton: all k80. all v89. (k80 -> k80 -> Int) -> k80 -> v89 -> Map k80 v89 =
  lam cmp13.
    lam k81.
      lam v90.
        mapInsert k81 v90 (mapEmpty cmp13)
in
let mapChoose: all k79. all v88. Map k79 v88 -> Option (k79, v88) = lam m32.
    vAVLTreeImpl_avlChoose m32.root
in
let mapChooseExn: all k78. all v87. Map k78 v87 -> (k78, v87) =
  lam m31.
    optionGetOrElse
      (lam #var"923".
         error "mapChooseExn: empty map")
      (vAVLTreeImpl_avlChoose m31.root)
in
let mapChooseOrElse: all k77. all v86. (() -> (k77, v86)) -> Map k77 v86 -> (k77, v86) =
  lam f2668.
    lam m30.
      optionGetOrElse f2668 (vAVLTreeImpl_avlChoose m30.root)
in
let mapMem: all k75. all v85. k75 -> Map k75 v85 -> Bool =
  lam k76.
    lam m29.
      optionIsSome (vAVLTreeImpl_avlLookup1 m29.cmp k76 m29.root)
in
let mapEq: all k74. all v84. (v84 -> v84 -> Bool) -> Map k74 v84 -> Map k74 v84 -> Bool =
  lam eqv.
    lam m111.
      lam m28.
        vAVLTreeImpl_avlEq m111.cmp eqv m111.root m28.root
in
let mapCmp: all k73. all v83. (v83 -> v83 -> Int) -> Map k73 v83 -> Map k73 v83 -> Int =
  lam cmpv.
    lam m110.
      lam m27.
        vAVLTreeImpl_avlCmp m110.cmp cmpv m110.root m27.root
in
let mapGetCmpFun: all k72. all v82. Map k72 v82 -> k72 -> k72 -> Int = lam m26.
    m26.cmp
in
let mapBindings: all k71. all v81. Map k71 v81 -> [(k71, v81)] = lam m25.
    vAVLTreeImpl_avlToSeq "" m25.root
in
let mapToSeq: all k70. all v80. Map k70 v80 -> [(k70, v80)] = lam m24.
    mapBindings m24
in
let mapFromSeq: all k69. all v79. (k69 -> k69 -> Int) -> [(k69, v79)] -> Map k69 v79 =
  lam cmp12.
    lam bindings20.
      { cmp = cmp12, root = vAVLTreeImpl_avlFromSeq cmp12 bindings20 }
in
let mapFoldWithKey: all k68. all v78. all a1548. (a1548 -> k68 -> v78 -> a1548) -> a1548 -> Map k68 v78 -> a1548 =
  lam f2667.
    lam acc4922.
      lam m23.
        vAVLTreeImpl_avlFold f2667 acc4922 m23.root
in
let mapMapWithKey: all k67. all v115. all v216. (k67 -> v115 -> v216) -> Map k67 v115 -> Map k67 v216 =
  lam f2666.
    lam m20.
      { cmp = m20.cmp, root = vAVLTreeImpl_avlMap f2666 m20.root }
in
let mapMap: all k66. all v114. all v215. (v114 -> v215) -> Map k66 v114 -> Map k66 v215 =
  lam f2665.
    lam m19.
      mapMapWithKey
        (lam #var"922".
           lam v77.
             f2665 v77)
        m19
in
let mapFoldlOption: all k65. all v76. all acc4919. (acc4919 -> k65 -> v76 -> Option acc4919) -> acc4919 -> Map k65 v76 -> Option acc4919 =
  lam f2664.
    lam acc4920.
      lam m18.
        optionFoldlM
          (lam acc4921.
             lam t1204: (k65, v76).
               f2664 acc4921 t1204.0 t1204.1)
          acc4920
          (mapBindings m18)
in
let mapMapAccum: all k63. all v112. all v213. all acc4916. (acc4916 -> k63 -> v112 -> (acc4916, v213)) -> acc4916 -> Map k63 v112 -> (acc4916, Map k63 v213) =
  lam f2663.
    lam acc4917.
      lam m17.
        mapFoldWithKey
          (lam tacc: (acc4916, Map k63 v213).
             lam k64.
               lam v113.
                 let fval: (acc4916, v213) = f2663 tacc.0 k64 v113 in
                 match
                   fval
                 with
                   (acc4918, v214)
                 in
                 (acc4918, mapInsert k64 v214 tacc.1))
          (acc4917, mapEmpty (mapGetCmpFun m17))
          m17
in
let mapMapWithKeyK: all k60. all v111. all v212. all a1547. (k60 -> v111 -> (v212 -> a1547) -> a1547) -> Map k60 v111 -> (Map k60 v212 -> a1547) -> a1547 =
  lam f2662.
    lam m15.
      lam k61.
        mapFoldWithKey
          (lam k62.
             lam key1.
               lam val.
                 lam m16.
                   f2662
                     key1
                     val
                     (lam val1.
                        k62 (mapInsert key1 val1 m16)))
          k61
          m15
          (mapEmpty (mapGetCmpFun m15))
in
let mapMapK: all k59. all v110. all v211. all a1546. (v110 -> (v211 -> a1546) -> a1546) -> Map k59 v110 -> (Map k59 v211 -> a1546) -> a1546 =
  lam f2661.
    mapMapWithKeyK (lam #var"921".
         f2661)
in
let mapAny: all k57. all v74. (k57 -> v74 -> Bool) -> Map k57 v74 -> Bool =
  lam f2660.
    lam m14.
      let anyFn =
        lam acc4915.
          lam k58.
            lam v75.
              match
                acc4915
              with
                true
              then
                acc4915
              else
                f2660 k58 v75
      in
      vAVLTreeImpl_avlFold anyFn false m14.root
in
let mapAll: all k56. all v72. (v72 -> Bool) -> Map k56 v72 -> Bool =
  lam f2659.
    lam m13.
      mapFoldWithKey
        (lam acc4914.
           lam #var"920".
             lam v73.
               and acc4914 (f2659 v73))
        true
        m13
in
let mapAllWithKey: all k54. all v70. (k54 -> v70 -> Bool) -> Map k54 v70 -> Bool =
  lam f2658.
    lam m10.
      mapFoldWithKey
        (lam acc4913.
           lam k55.
             lam v71.
               and acc4913 (f2658 k55 v71))
        true
        m10
in
let mapGetMin: all k52. all v68. Map k52 v68 -> Option (k52, v68) =
  lam m9.
    match
      mapIsEmpty m9
    with
      true
    then
      None
        {}
    else match
      vAVLTreeImpl_avlSplitFirst m9.root
    with
      (k53, v69, _)
    in
    Some
        (k53, v69)
in
let mapKeys: all k50. all v67. Map k50 v67 -> [k50] =
  lam m8.
    mapFoldWithKey
      (lam ks.
         lam k51.
           lam #var"919".
             snoc ks k51)
      ""
      m8
in
let mapValues: all k49. all v65. Map k49 v65 -> [v65] =
  lam m7.
    mapFoldWithKey
      (lam vs1.
         lam #var"918".
           lam v66.
             snoc vs1 v66)
      ""
      m7
in
let mapMerge: all k48. all a1545. all b54. all c19. (Option a1545 -> Option b54 -> Option c19) -> Map k48 a1545 -> Map k48 b54 -> Map k48 c19 =
  lam f2657.
    lam l30.
      lam r381.
        { cmp = l30.cmp,
          root = vAVLTreeImpl_avlMerge l30.cmp f2657 l30.root r381.root }
in
let mapMergeWithKey: all k47. all a1544. all b53. all c18. (k47 -> Option a1544 -> Option b53 -> Option c18) -> Map k47 a1544 -> Map k47 b53 -> Map k47 c18 =
  lam f2656.
    lam l29.
      lam r380.
        { cmp = l29.cmp,
          root =
            vAVLTreeImpl_avlMergeWithKey l29.cmp f2656 l29.root r380.root }
in
let mapUnion: all k46. all v64. Map k46 v64 -> Map k46 v64 -> Map k46 v64 =
  lam l28.
    lam r379.
      { l28
        with
        root =
          vAVLTreeImpl_avlUnionWith
            l28.cmp
            (lam #var"917".
               lam rv.
                 rv)
            l28.root
            r379.root }
in
let mapUnionWith: all k45. all v63. (v63 -> v63 -> v63) -> Map k45 v63 -> Map k45 v63 -> Map k45 v63 =
  lam f2655.
    lam l27.
      lam r378.
        { l27
          with
          root =
            vAVLTreeImpl_avlUnionWith l27.cmp f2655 l27.root r378.root }
in
let mapIntersectWith: all k44. all a1543. all b52. all c17. (a1543 -> b52 -> c17) -> Map k44 a1543 -> Map k44 b52 -> Map k44 c17 =
  lam f2654.
    lam l26.
      lam r377.
        { cmp = l26.cmp,
          root =
            vAVLTreeImpl_avlIntersectWith l26.cmp f2654 l26.root r377.root }
in
let mapDifference: all k43. all v62. all v210. Map k43 v62 -> Map k43 v210 -> Map k43 v62 =
  lam l25.
    lam r376.
      { l25
        with
        root = vAVLTreeImpl_avlDifference l25.cmp l25.root r376.root }
in
let mapMapOptionWithKey: all k42. all a1542. all b51. (k42 -> a1542 -> Option b51) -> Map k42 a1542 -> Map k42 b51 =
  lam f2653.
    lam m6.
      { cmp = m6.cmp, root = vAVLTreeImpl_avlMapOption f2653 m6.root }
in
let mapMapOption: all k41. all a1541. all b50. (a1541 -> Option b50) -> Map k41 a1541 -> Map k41 b50 =
  lam f2652.
    lam m5.
      { cmp = m5.cmp,
        root =
          vAVLTreeImpl_avlMapOption (lam #var"916".
               f2652) m5.root }
in
let mapFilterWithKey: all k40. all v61. (k40 -> v61 -> Bool) -> Map k40 v61 -> Map k40 v61 =
  lam p2134.
    lam m4.
      { cmp = m4.cmp, root = vAVLTreeImpl_avlFilter p2134 m4.root }
in
let mapFilter: all k39. all v60. (v60 -> Bool) -> Map k39 v60 -> Map k39 v60 =
  lam p2133.
    lam m3.
      { cmp = m3.cmp,
        root =
          vAVLTreeImpl_avlFilter (lam #var"915".
               p2133) m3.root }
in
type SID =
  Int
in
let cmpSID = subi in
let eqSID = eqi in
let _sidCounter = ref 0 in
let _mapStringToSid = ref (mapEmpty cmpString) in
let _mapSidToString = ref (mapEmpty subi) in
let sidToString: SID -> [Char] =
  lam sid2.
    mapFindOrElse
      (lam #var"914".
         error "SID is not defined")
      sid2
      (deref _mapSidToString)
in
let stringToSid: [Char] -> SID =
  lam str.
    mapFindOrElse
      (lam #var"910".
         let #var"911" = modref _sidCounter (addi (deref _sidCounter) 1)
         in
         let sid1 = deref _sidCounter in
         let #var"912" =
           modref
             _mapStringToSid (mapInsert str sid1 (deref _mapStringToSid))
         in
         let #var"913" =
           modref
             _mapSidToString (mapInsert sid1 str (deref _mapSidToString))
         in
         sid1)
      str
      (deref _mapStringToSid)
in
let lengthSID: SID -> Int = lam sid.
    length (sidToString sid)
in
type Set a14 =
  Map a14 ()
in
let setEmpty: all a1540. (a1540 -> a1540 -> Int) -> Set a1540 = lam cmp11.
    mapEmpty cmp11
in
let setSize: all a1539. Set a1539 -> Int = mapSize in
let setIsEmpty: all a1538. Set a1538 -> Bool = mapIsEmpty in
let setInsert: all a1537. a1537 -> Set a1537 -> Set a1537 = lam e35.
    lam s397.
      mapInsert e35 {} s397
in
let setRemove: all a1536. a1536 -> Set a1536 -> Set a1536 = lam e34.
    lam s396.
      mapRemove e34 s396
in
let setMem: all a1535. a1535 -> Set a1535 -> Bool = lam e33.
    lam s395.
      mapMem e33 s395
in
let setSubset: all a1534. Set a1534 -> Set a1534 -> Bool =
  lam s1104.
    lam s2104.
      mapAllWithKey
        (lam e32.
           lam #var"909".
             mapMem e32 s2104)
        s1104
in
let setUnion: all a1533. Set a1533 -> Set a1533 -> Set a1533 = lam s1103.
    lam s2103.
      mapUnion s1103 s2103
in
let setIntersect: all a1532. Set a1532 -> Set a1532 -> Set a1532 =
  lam s1102.
    lam s2102.
      mapIntersectWith
        (lam #var"907".
           lam #var"908".
             {})
        s1102
        s2102
in
let setDisjoint: all a1531. Set a1531 -> Set a1531 -> Bool =
  lam s1101.
    lam s2101.
      setIsEmpty (setIntersect s1101 s2101)
in
let setSubtract: all a1530. Set a1530 -> Set a1530 -> Set a1530 = lam s1100.
    lam s2100.
      mapDifference s1100 s2100
in
let setOfSeq: all a1529. (a1529 -> a1529 -> Int) -> [a1529] -> Set a1529 =
  lam cmp10.
    lam seq4.
      foldr setInsert (setEmpty cmp10) seq4
in
let setSingleton: all a1528. (a1528 -> a1528 -> Int) -> a1528 -> Set a1528 = lam cmp9.
    lam x709.
      setInsert x709 (setEmpty cmp9)
in
let setFold: all a1527. all acc4910. (acc4910 -> a1527 -> acc4910) -> acc4910 -> Set a1527 -> acc4910 =
  lam f2651.
    lam acc4911.
      lam s394.
        mapFoldWithKey
          (lam acc4912.
             lam k38.
               lam #var"906".
                 f2651 acc4912 k38)
          acc4911
          s394
in
let setEq: all a1526. Set a1526 -> Set a1526 -> Bool =
  lam m12.
    lam m22.
      mapEq
        (lam #var"904".
           lam #var"905".
             true)
        m12
        m22
in
let setMap: all a1525. all b49. (b49 -> b49 -> Int) -> (a1525 -> b49) -> Set a1525 -> Set b49 =
  lam cmp8.
    lam f2650.
      lam s393.
        mapFoldWithKey
          (lam acc4909.
             lam k37.
               lam #var"903".
                 mapInsert (f2650 k37) {} acc4909)
          (mapEmpty cmp8)
          s393
in
let setToSeq: all a1524. Set a1524 -> [a1524] = lam s392.
    mapKeys s392
in
let setCmp: all a1523. Set a1523 -> Set a1523 -> Int =
  lam m11.
    lam m21.
      mapCmp
        (lam #var"901".
           lam #var"902".
             0)
        m11
        m21
in
let setChoose: all a1522. Set a1522 -> Option a1522 =
  lam s391.
    match
      mapChoose s391
    with
      Some (k36, _)
    then
      Some
        k36
    else
      None
        {}
in
let setChooseExn: all a1521. Set a1521 -> a1521 =
  lam s390.
    match
      mapChooseExn s390
    with
      (k35, _)
    in
    k35
in
let setAny: all a1520. (a1520 -> Bool) -> Set a1520 -> Bool =
  lam p2132.
    lam s389.
      mapFoldWithKey
        (lam acc4908.
           lam v59.
             lam #var"900".
               match
                 acc4908
               with
                 true
               then
                 acc4908
               else
                 p2132 v59)
        false
        s389
in
let setOfKeys: all k34. all v58. Map k34 v58 -> Set k34 = lam m2.
    mapMap (lam #var"899".
         {}) m2
in
let setFilter: all a1519. (a1519 -> Bool) -> Set a1519 -> Set a1519 =
  lam p2131.
    lam s388.
      mapFilterWithKey
        (lam k33.
           lam #var"898".
             p2131 k33)
        s388
in
type Ast_Type
in
type Ast_Kind
in
type Ast_Expr
in
type Ast_Pat
in
recursive
  let vAst_tyTm: Ast_Expr -> Ast_Type = lam x697.
      never
  let vAst_tyPat: Ast_Pat -> Ast_Type = lam x698.
      never
  let vAst_infoTm: Ast_Expr -> Info = lam x699.
      never
  let vAst_infoTy: Ast_Type -> Info = lam x700.
      never
  let vAst_infoPat: Ast_Pat -> Info = lam x701.
      never
  let vAst_withInfo: Info -> Ast_Expr -> Ast_Expr = lam x702.
      never
  let vAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr = lam x703.
      never
  let vAst_tyWithInfo: Info -> Ast_Type -> Ast_Type = lam x704.
      never
  let vAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target3327.
      match
        __sem_target3327
      with
        ty473
      in
      vAst_rapp_Type_Type vAst_unwrapType ty473
  let vAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target3328.
      match
        __sem_target3328
      with
        ty474
      in
      vAst_rapp_Type_Type vAst_inspectType ty474
  let vAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x705.
      never
  let vAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x706.
      never
  let vAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f2615.
      lam __sem_target3329.
        match
          __sem_target3329
        with
          p2104
        in
        let res821 =
            vAst_smapAccumL_Pat_Pat
              (lam #var"888".
                 lam a1501.
                   ({}, f2615 a1501))
              {}
              p2104
          in
          res821.1
  let vAst_countPatNodes =
    lam count1036.
      lam __sem_target3330.
        match
          __sem_target3330
        with
          t1200
        in
        let count1037 = addi count1036 1 in
          let count1038 = vAst_sfold_Pat_Pat vAst_countPatNodes count1037 t1200
          in
          let count1039 = vAst_sfold_Pat_Expr vAst_countExprNodes count1038 t1200
          in
          let count1040 = vAst_sfold_Pat_Type vAst_countTypeNodes count1039 t1200
          in
          count1040
  let vAst_sfold_Pat_Pat: all acc4847. (acc4847 -> Ast_Pat -> acc4847) -> acc4847 -> Ast_Pat -> acc4847 =
    lam f2616.
      lam acc4848.
        lam __sem_target3331.
          match
            __sem_target3331
          with
            p2105
          in
          let res822 =
              vAst_smapAccumL_Pat_Pat
                (lam acc4849.
                   lam a1502.
                     (f2616 acc4849 a1502, a1502))
                acc4848
                p2105
            in
            res822.0
  let vAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f2617.
      lam __sem_target3332.
        match
          __sem_target3332
        with
          p2106
        in
        match
            vAst_smapAccumL_Expr_Pat
              (lam #var"889".
                 lam a1503.
                   ({}, f2617 a1503))
              {}
              p2106
          with
            (_, p2107)
          in
          p2107
  let vAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f2618.
      lam __sem_target3333.
        match
          __sem_target3333
        with
          p2108
        in
        match
            vAst_smapAccumL_Pat_Expr
              (lam #var"890".
                 lam a1504.
                   ({}, f2618 a1504))
              {}
              p2108
          with
            (_, p2109)
          in
          p2109
  let vAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f2619.
      lam __sem_target3334.
        match
          __sem_target3334
        with
          p2110
        in
        match
            vAst_smapAccumL_Pat_Type
              (lam #var"891".
                 lam a1505.
                   ({}, f2619 a1505))
              {}
              p2110
          with
            (_, p2111)
          in
          p2111
  let vAst_countExprNodes =
    lam count1041.
      lam __sem_target3335.
        match
          __sem_target3335
        with
          t1201
        in
        let count1042 = addi count1041 1 in
          let count1043 = vAst_sfold_Expr_Expr vAst_countExprNodes count1042 t1201
          in
          let count1044 = vAst_sfold_Expr_Type vAst_countTypeNodes count1043 t1201
          in
          let count1045 =
            vAst_sfold_Expr_TypeLabel vAst_countTypeNodes count1044 t1201
          in
          let count1046 = vAst_sfold_Expr_Pat vAst_countPatNodes count1045 t1201
          in
          count1046
  let vAst_countTypeNodes =
    lam count1047.
      lam __sem_target3336.
        match
          __sem_target3336
        with
          t1202
        in
        let count1048 = addi count1047 1 in
          let count1049 = vAst_sfold_Type_Type vAst_countTypeNodes count1048 t1202
          in
          count1049
  let vAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f2620.
      lam __sem_target3337.
        match
          __sem_target3337
        with
          ty475
        in
        let res823 =
            vAst_rappAccumL_Type_Type
              (lam #var"892".
                 lam t1203.
                   ({}, f2620 t1203))
              {}
              ty475
          in
          res823.1
  let vAst_sfold_Expr_Pat: all acc4850. (acc4850 -> Ast_Pat -> acc4850) -> acc4850 -> Ast_Expr -> acc4850 =
    lam f2621.
      lam acc4851.
        lam __sem_target3338.
          match
            __sem_target3338
          with
            p2112
          in
          match
              vAst_smapAccumL_Expr_Pat
                (lam acc4852.
                   lam a1506.
                     (f2621 acc4852 a1506, a1506))
                acc4851
                p2112
            with
              (acc4853, _)
            in
            acc4853
  let vAst_sfold_Pat_Expr: all acc4854. (acc4854 -> Ast_Expr -> acc4854) -> acc4854 -> Ast_Pat -> acc4854 =
    lam f2622.
      lam acc4855.
        lam __sem_target3339.
          match
            __sem_target3339
          with
            p2113
          in
          match
              vAst_smapAccumL_Pat_Expr
                (lam acc4856.
                   lam a1507.
                     (f2622 acc4856 a1507, a1507))
                acc4855
                p2113
            with
              (acc4857, _)
            in
            acc4857
  let vAst_sfold_Pat_Type: all acc4858. (acc4858 -> Ast_Type -> acc4858) -> acc4858 -> Ast_Pat -> acc4858 =
    lam f2623.
      lam acc4859.
        lam __sem_target3340.
          match
            __sem_target3340
          with
            p2114
          in
          match
              vAst_smapAccumL_Pat_Type
                (lam acc4860.
                   lam a1508.
                     (f2623 acc4860 a1508, a1508))
                acc4859
                p2114
            with
              (acc4861, _)
            in
            acc4861
  let vAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f2624.
      lam __sem_target3341.
        match
          __sem_target3341
        with
          p2115
        in
        let res824 =
            vAst_smapAccumL_Expr_Expr
              (lam #var"893".
                 lam a1509.
                   ({}, f2624 a1509))
              {}
              p2115
          in
          res824.1
  let vAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f2625.
      lam __sem_target3342.
        match
          __sem_target3342
        with
          p2116
        in
        let res825 =
            vAst_smapAccumL_Expr_Type
              (lam #var"894".
                 lam a1510.
                   ({}, f2625 a1510))
              {}
              p2116
          in
          res825.1
  let vAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f2626: Ast_Type -> Ast_Type.
      lam __sem_target3343.
        match
          __sem_target3343
        with
          s384
        in
        match
            vAst_smapAccumL_Kind_Type
              (lam #var"895".
                 lam x707.
                   ({}, f2626 x707))
              {}
              s384
          with
            (_, s385)
          in
          s385
  let vAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f2627.
      lam __sem_target3344.
        match
          __sem_target3344
        with
          p2117
        in
        let res826 =
            vAst_smapAccumL_Type_Type
              (lam #var"896".
                 lam a1511.
                   ({}, f2627 a1511))
              {}
              p2117
          in
          res826.1
  let vAst_sfold_Expr_Expr: all acc4862. (acc4862 -> Ast_Expr -> acc4862) -> acc4862 -> Ast_Expr -> acc4862 =
    lam f2628.
      lam acc4863.
        lam __sem_target3345.
          match
            __sem_target3345
          with
            p2118
          in
          let res827 =
              vAst_smapAccumL_Expr_Expr
                (lam acc4864.
                   lam a1512.
                     (f2628 acc4864 a1512, a1512))
                acc4863
                p2118
            in
            res827.0
  let vAst_sfold_Expr_Type: all acc4865. (acc4865 -> Ast_Type -> acc4865) -> acc4865 -> Ast_Expr -> acc4865 =
    lam f2629.
      lam acc4866.
        lam __sem_target3346.
          match
            __sem_target3346
          with
            p2119
          in
          let res828 =
              vAst_smapAccumL_Expr_Type
                (lam acc4867.
                   lam a1513.
                     (f2629 acc4867 a1513, a1513))
                acc4866
                p2119
            in
            res828.0
  let vAst_sfold_Kind_Type: all acc4868. (acc4868 -> Ast_Type -> acc4868) -> acc4868 -> Ast_Kind -> acc4868 =
    lam f2630: acc4868 -> Ast_Type -> acc4868.
      lam acc4869: acc4868.
        lam __sem_target3347.
          match
            __sem_target3347
          with
            s386
          in
          match
              vAst_smapAccumL_Kind_Type
                (lam a1514.
                   lam x708.
                     (f2630 a1514 x708, x708))
                acc4869
                s386
            with
              (a1515, _)
            in
            a1515
  let vAst_sfold_Type_Type: all acc4870. (acc4870 -> Ast_Type -> acc4870) -> acc4870 -> Ast_Type -> acc4870 =
    lam f2631.
      lam acc4871.
        lam __sem_target3348.
          match
            __sem_target3348
          with
            p2120
          in
          let res829 =
              vAst_smapAccumL_Type_Type
                (lam acc4872.
                   lam a1516.
                     (f2631 acc4872 a1516, a1516))
                acc4871
                p2120
            in
            res829.0
  let vAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f2632.
      lam __sem_target3349.
        match
          __sem_target3349
        with
          expr666
        in
        let expr667 = f2632 expr666 in
          vAst_smap_Expr_Expr (vAst_mapPre_Expr_Expr f2632) expr667
  let vAst_foldPre_Expr_Expr: all acc4873. (acc4873 -> Ast_Expr -> acc4873) -> acc4873 -> Ast_Expr -> acc4873 =
    lam f2633.
      lam acc4874.
        lam __sem_target3350.
          match
            __sem_target3350
          with
            expr668
          in
          let acc4875 = f2633 acc4874 expr668 in
            vAst_sfold_Expr_Expr (vAst_foldPre_Expr_Expr f2633) acc4875 expr668
  let vAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f2634.
      lam __sem_target3351.
        match
          __sem_target3351
        with
          expr669
        in
        f2634
            (vAst_smap_Expr_Expr (vAst_mapPost_Expr_Expr f2634) expr669)
  let vAst_foldPost_Expr_Expr: all acc4876. (acc4876 -> Ast_Expr -> acc4876) -> acc4876 -> Ast_Expr -> acc4876 =
    lam f2635.
      lam acc4877.
        lam __sem_target3352.
          match
            __sem_target3352
          with
            expr670
          in
          f2635
              (vAst_sfold_Expr_Expr (vAst_foldPost_Expr_Expr f2635) acc4877 expr670)
              expr670
  let vAst_smapAccumL_Pat_Pat: all acc4878. (acc4878 -> Ast_Pat -> (acc4878, Ast_Pat)) -> acc4878 -> Ast_Pat -> (acc4878, Ast_Pat) =
    lam f2636.
      lam acc4879.
        lam __sem_target3353.
          match
            __sem_target3353
          with
            p2121
          in
          (acc4879, p2121)
  let vAst_smapAccumL_Expr_Pat: all acc4880. (acc4880 -> Ast_Pat -> (acc4880, Ast_Pat)) -> acc4880 -> Ast_Expr -> (acc4880, Ast_Expr) =
    lam f2637.
      lam acc4881.
        lam __sem_target3354.
          match
            __sem_target3354
          with
            p2122
          in
          (acc4881, p2122)
  let vAst_smapAccumL_Pat_Expr: all acc4882. (acc4882 -> Ast_Expr -> (acc4882, Ast_Expr)) -> acc4882 -> Ast_Pat -> (acc4882, Ast_Pat) =
    lam f2638.
      lam acc4883.
        lam __sem_target3355.
          match
            __sem_target3355
          with
            p2123
          in
          (acc4883, p2123)
  let vAst_smapAccumL_Pat_Type: all acc4884. (acc4884 -> Ast_Type -> (acc4884, Ast_Type)) -> acc4884 -> Ast_Pat -> (acc4884, Ast_Pat) =
    lam f2639.
      lam acc4885.
        lam __sem_target3356.
          match
            __sem_target3356
          with
            p2124
          in
          (acc4885, p2124)
  let vAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f2640.
      lam __sem_target3357.
        match
          __sem_target3357
        with
          p2125
        in
        let res830 =
            vAst_smapAccumL_Expr_TypeLabel
              (lam #var"897".
                 lam a1517.
                   ({}, f2640 a1517))
              {}
              p2125
          in
          res830.1
  let vAst_rappAccumL_Type_Type: all acc4886. (acc4886 -> Ast_Type -> (acc4886, Ast_Type)) -> acc4886 -> Ast_Type -> (acc4886, Ast_Type) =
    lam f2641.
      lam acc4887.
        lam __sem_target3358.
          match
            __sem_target3358
          with
            ty476
          in
          (acc4887, ty476)
  let vAst_sfold_Expr_TypeLabel: all acc4888. (acc4888 -> Ast_Type -> acc4888) -> acc4888 -> Ast_Expr -> acc4888 =
    lam f2642.
      lam acc4889.
        lam __sem_target3359.
          match
            __sem_target3359
          with
            p2126
          in
          let res831 =
              vAst_smapAccumL_Expr_TypeLabel
                (lam acc4890.
                   lam a1518.
                     (f2642 acc4890 a1518, a1518))
                acc4889
                p2126
            in
            res831.0
  let vAst_smapAccumL_Expr_Expr: all acc4891. (acc4891 -> Ast_Expr -> (acc4891, Ast_Expr)) -> acc4891 -> Ast_Expr -> (acc4891, Ast_Expr) =
    lam f2643.
      lam acc4892.
        lam __sem_target3360.
          match
            __sem_target3360
          with
            p2127
          in
          (acc4892, p2127)
  let vAst_smapAccumL_Expr_Type: all acc4893. (acc4893 -> Ast_Type -> (acc4893, Ast_Type)) -> acc4893 -> Ast_Expr -> (acc4893, Ast_Expr) =
    lam f2644.
      lam acc4894.
        lam __sem_target3361.
          match
            __sem_target3361
          with
            p2128
          in
          (acc4894, p2128)
  let vAst_smapAccumL_Kind_Type: all acc4895. (acc4895 -> Ast_Type -> (acc4895, Ast_Type)) -> acc4895 -> Ast_Kind -> (acc4895, Ast_Kind) =
    lam f2645.
      lam acc4896.
        lam __sem_target3362.
          match
            __sem_target3362
          with
            s387
          in
          (acc4896, s387)
  let vAst_smapAccumL_Type_Type: all acc4897. (acc4897 -> Ast_Type -> (acc4897, Ast_Type)) -> acc4897 -> Ast_Type -> (acc4897, Ast_Type) =
    lam f2646.
      lam acc4898.
        lam __sem_target3363.
          match
            __sem_target3363
          with
            p2129
          in
          (acc4898, p2129)
  let vAst_mapAccumLPre_Expr_Expr: all acc4899. (acc4899 -> Ast_Expr -> (acc4899, Ast_Expr)) -> acc4899 -> Ast_Expr -> (acc4899, Ast_Expr) =
    lam f2647.
      lam acc4900.
        lam __sem_target3364.
          match
            __sem_target3364
          with
            expr671
          in
          match
              f2647 acc4900 expr671
            with
              (acc4901, expr672)
            in
            vAst_smapAccumL_Expr_Expr (vAst_mapAccumLPre_Expr_Expr f2647) acc4901 expr672
  let vAst_mapAccumLPost_Expr_Expr: all acc4902. (acc4902 -> Ast_Expr -> (acc4902, Ast_Expr)) -> acc4902 -> Ast_Expr -> (acc4902, Ast_Expr) =
    lam f2648.
      lam acc4903.
        lam __sem_target3365.
          match
            __sem_target3365
          with
            expr673
          in
          match
              vAst_smapAccumL_Expr_Expr (vAst_mapAccumLPost_Expr_Expr f2648) acc4903 expr673
            with
              (acc4904, expr674)
            in
            f2648 acc4904 expr674
  let vAst_smapAccumL_Expr_TypeLabel: all acc4905. (acc4905 -> Ast_Type -> (acc4905, Ast_Type)) -> acc4905 -> Ast_Expr -> (acc4905, Ast_Expr) =
    lam f2649.
      lam acc4906.
        lam __sem_target3366.
          match
            __sem_target3366
          with
            p2130
          in
          match
              f2649 acc4906 (vAst_tyTm p2130)
            with
              (acc4907, ty477)
            in
            (acc4907, vAst_withType ty477 p2130)
in
con VarAst_TmVar: {ty: Ast_Type, info: Info, ident: Name, frozen: Bool} -> Ast_Expr in
recursive
  let vVarAst_tyTm: Ast_Expr -> Ast_Type =
    lam __sem_target3283.
      match
        __sem_target3283
      with
        VarAst_TmVar t1193
      in
      t1193.ty
  let vVarAst_tyPat: Ast_Pat -> Ast_Type = lam x689.
      never
  let vVarAst_infoTm: Ast_Expr -> Info =
    lam __sem_target3284.
      match
        __sem_target3284
      with
        VarAst_TmVar r375
      in
      r375.info
  let vVarAst_infoTy: Ast_Type -> Info = lam x690.
      never
  let vVarAst_infoPat: Ast_Pat -> Info = lam x691.
      never
  let vVarAst_withInfo: Info -> Ast_Expr -> Ast_Expr =
    lam info78.
      lam __sem_target3285.
        match
          __sem_target3285
        with
          VarAst_TmVar t1194
        in
        VarAst_TmVar
            { t1194 with info = info78 }
  let vVarAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr =
    lam ty467: Ast_Type.
      lam __sem_target3286.
        match
          __sem_target3286
        with
          VarAst_TmVar t1195
        in
        VarAst_TmVar
            { t1195 with ty = ty467 }
  let vVarAst_tyWithInfo: Info -> Ast_Type -> Ast_Type = lam x692.
      never
  let vVarAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target3287.
      match
        __sem_target3287
      with
        ty468
      in
      vVarAst_rapp_Type_Type vVarAst_unwrapType ty468
  let vVarAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target3288.
      match
        __sem_target3288
      with
        ty469
      in
      vVarAst_rapp_Type_Type vVarAst_inspectType ty469
  let vVarAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x693.
      never
  let vVarAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x694.
      never
  let vVarAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f2580.
      lam __sem_target3289.
        match
          __sem_target3289
        with
          p2077
        in
        let res810 =
            vVarAst_smapAccumL_Pat_Pat
              (lam #var"878".
                 lam a1483.
                   ({}, f2580 a1483))
              {}
              p2077
          in
          res810.1
  let vVarAst_countPatNodes =
    lam count1022.
      lam __sem_target3290.
        match
          __sem_target3290
        with
          t1196
        in
        let count1023 = addi count1022 1 in
          let count1024 = vVarAst_sfold_Pat_Pat vVarAst_countPatNodes count1023 t1196
          in
          let count1025 =
            vVarAst_sfold_Pat_Expr vVarAst_countExprNodes count1024 t1196
          in
          let count1026 =
            vVarAst_sfold_Pat_Type vVarAst_countTypeNodes count1025 t1196
          in
          count1026
  let vVarAst_sfold_Pat_Pat: all acc4786. (acc4786 -> Ast_Pat -> acc4786) -> acc4786 -> Ast_Pat -> acc4786 =
    lam f2581.
      lam acc4787.
        lam __sem_target3291.
          match
            __sem_target3291
          with
            p2078
          in
          let res811 =
              vVarAst_smapAccumL_Pat_Pat
                (lam acc4788.
                   lam a1484.
                     (f2581 acc4788 a1484, a1484))
                acc4787
                p2078
            in
            res811.0
  let vVarAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f2582.
      lam __sem_target3292.
        match
          __sem_target3292
        with
          p2079
        in
        match
            vVarAst_smapAccumL_Expr_Pat
              (lam #var"879".
                 lam a1485.
                   ({}, f2582 a1485))
              {}
              p2079
          with
            (_, p2080)
          in
          p2080
  let vVarAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f2583.
      lam __sem_target3293.
        match
          __sem_target3293
        with
          p2081
        in
        match
            vVarAst_smapAccumL_Pat_Expr
              (lam #var"880".
                 lam a1486.
                   ({}, f2583 a1486))
              {}
              p2081
          with
            (_, p2082)
          in
          p2082
  let vVarAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f2584.
      lam __sem_target3294.
        match
          __sem_target3294
        with
          p2083
        in
        match
            vVarAst_smapAccumL_Pat_Type
              (lam #var"881".
                 lam a1487.
                   ({}, f2584 a1487))
              {}
              p2083
          with
            (_, p2084)
          in
          p2084
  let vVarAst_countExprNodes =
    lam count1027.
      lam __sem_target3295.
        match
          __sem_target3295
        with
          t1197
        in
        let count1028 = addi count1027 1 in
          let count1029 =
            vVarAst_sfold_Expr_Expr vVarAst_countExprNodes count1028 t1197
          in
          let count1030 =
            vVarAst_sfold_Expr_Type vVarAst_countTypeNodes count1029 t1197
          in
          let count1031 =
            vVarAst_sfold_Expr_TypeLabel vVarAst_countTypeNodes count1030 t1197
          in
          let count1032 = vVarAst_sfold_Expr_Pat vVarAst_countPatNodes count1031 t1197
          in
          count1032
  let vVarAst_countTypeNodes =
    lam count1033.
      lam __sem_target3296.
        match
          __sem_target3296
        with
          t1198
        in
        let count1034 = addi count1033 1 in
          let count1035 =
            vVarAst_sfold_Type_Type vVarAst_countTypeNodes count1034 t1198
          in
          count1035
  let vVarAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f2585.
      lam __sem_target3297.
        match
          __sem_target3297
        with
          ty470
        in
        let res812 =
            vVarAst_rappAccumL_Type_Type
              (lam #var"882".
                 lam t1199.
                   ({}, f2585 t1199))
              {}
              ty470
          in
          res812.1
  let vVarAst_sfold_Expr_Pat: all acc4789. (acc4789 -> Ast_Pat -> acc4789) -> acc4789 -> Ast_Expr -> acc4789 =
    lam f2586.
      lam acc4790.
        lam __sem_target3298.
          match
            __sem_target3298
          with
            p2085
          in
          match
              vVarAst_smapAccumL_Expr_Pat
                (lam acc4791.
                   lam a1488.
                     (f2586 acc4791 a1488, a1488))
                acc4790
                p2085
            with
              (acc4792, _)
            in
            acc4792
  let vVarAst_sfold_Pat_Expr: all acc4793. (acc4793 -> Ast_Expr -> acc4793) -> acc4793 -> Ast_Pat -> acc4793 =
    lam f2587.
      lam acc4794.
        lam __sem_target3299.
          match
            __sem_target3299
          with
            p2086
          in
          match
              vVarAst_smapAccumL_Pat_Expr
                (lam acc4795.
                   lam a1489.
                     (f2587 acc4795 a1489, a1489))
                acc4794
                p2086
            with
              (acc4796, _)
            in
            acc4796
  let vVarAst_sfold_Pat_Type: all acc4797. (acc4797 -> Ast_Type -> acc4797) -> acc4797 -> Ast_Pat -> acc4797 =
    lam f2588.
      lam acc4798.
        lam __sem_target3300.
          match
            __sem_target3300
          with
            p2087
          in
          match
              vVarAst_smapAccumL_Pat_Type
                (lam acc4799.
                   lam a1490.
                     (f2588 acc4799 a1490, a1490))
                acc4798
                p2087
            with
              (acc4800, _)
            in
            acc4800
  let vVarAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f2589.
      lam __sem_target3301.
        match
          __sem_target3301
        with
          p2088
        in
        let res813 =
            vVarAst_smapAccumL_Expr_Expr
              (lam #var"883".
                 lam a1491.
                   ({}, f2589 a1491))
              {}
              p2088
          in
          res813.1
  let vVarAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f2590.
      lam __sem_target3302.
        match
          __sem_target3302
        with
          p2089
        in
        let res814 =
            vVarAst_smapAccumL_Expr_Type
              (lam #var"884".
                 lam a1492.
                   ({}, f2590 a1492))
              {}
              p2089
          in
          res814.1
  let vVarAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f2591: Ast_Type -> Ast_Type.
      lam __sem_target3303.
        match
          __sem_target3303
        with
          s380
        in
        match
            vVarAst_smapAccumL_Kind_Type
              (lam #var"885".
                 lam x695.
                   ({}, f2591 x695))
              {}
              s380
          with
            (_, s381)
          in
          s381
  let vVarAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f2592.
      lam __sem_target3304.
        match
          __sem_target3304
        with
          p2090
        in
        let res815 =
            vVarAst_smapAccumL_Type_Type
              (lam #var"886".
                 lam a1493.
                   ({}, f2592 a1493))
              {}
              p2090
          in
          res815.1
  let vVarAst_sfold_Expr_Expr: all acc4801. (acc4801 -> Ast_Expr -> acc4801) -> acc4801 -> Ast_Expr -> acc4801 =
    lam f2593.
      lam acc4802.
        lam __sem_target3305.
          match
            __sem_target3305
          with
            p2091
          in
          let res816 =
              vVarAst_smapAccumL_Expr_Expr
                (lam acc4803.
                   lam a1494.
                     (f2593 acc4803 a1494, a1494))
                acc4802
                p2091
            in
            res816.0
  let vVarAst_sfold_Expr_Type: all acc4804. (acc4804 -> Ast_Type -> acc4804) -> acc4804 -> Ast_Expr -> acc4804 =
    lam f2594.
      lam acc4805.
        lam __sem_target3306.
          match
            __sem_target3306
          with
            p2092
          in
          let res817 =
              vVarAst_smapAccumL_Expr_Type
                (lam acc4806.
                   lam a1495.
                     (f2594 acc4806 a1495, a1495))
                acc4805
                p2092
            in
            res817.0
  let vVarAst_sfold_Kind_Type: all acc4807. (acc4807 -> Ast_Type -> acc4807) -> acc4807 -> Ast_Kind -> acc4807 =
    lam f2595: acc4807 -> Ast_Type -> acc4807.
      lam acc4808: acc4807.
        lam __sem_target3307.
          match
            __sem_target3307
          with
            s382
          in
          match
              vVarAst_smapAccumL_Kind_Type
                (lam a1496.
                   lam x696.
                     (f2595 a1496 x696, x696))
                acc4808
                s382
            with
              (a1497, _)
            in
            a1497
  let vVarAst_sfold_Type_Type: all acc4809. (acc4809 -> Ast_Type -> acc4809) -> acc4809 -> Ast_Type -> acc4809 =
    lam f2596.
      lam acc4810.
        lam __sem_target3308.
          match
            __sem_target3308
          with
            p2093
          in
          let res818 =
              vVarAst_smapAccumL_Type_Type
                (lam acc4811.
                   lam a1498.
                     (f2596 acc4811 a1498, a1498))
                acc4810
                p2093
            in
            res818.0
  let vVarAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f2597.
      lam __sem_target3309.
        match
          __sem_target3309
        with
          expr657
        in
        let expr658 = f2597 expr657 in
          vVarAst_smap_Expr_Expr (vVarAst_mapPre_Expr_Expr f2597) expr658
  let vVarAst_foldPre_Expr_Expr: all acc4812. (acc4812 -> Ast_Expr -> acc4812) -> acc4812 -> Ast_Expr -> acc4812 =
    lam f2598.
      lam acc4813.
        lam __sem_target3310.
          match
            __sem_target3310
          with
            expr659
          in
          let acc4814 = f2598 acc4813 expr659 in
            vVarAst_sfold_Expr_Expr (vVarAst_foldPre_Expr_Expr f2598) acc4814 expr659
  let vVarAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f2599.
      lam __sem_target3311.
        match
          __sem_target3311
        with
          expr660
        in
        f2599
            (vVarAst_smap_Expr_Expr (vVarAst_mapPost_Expr_Expr f2599) expr660)
  let vVarAst_foldPost_Expr_Expr: all acc4815. (acc4815 -> Ast_Expr -> acc4815) -> acc4815 -> Ast_Expr -> acc4815 =
    lam f2600.
      lam acc4816.
        lam __sem_target3312.
          match
            __sem_target3312
          with
            expr661
          in
          f2600
              (vVarAst_sfold_Expr_Expr (vVarAst_foldPost_Expr_Expr f2600) acc4816 expr661)
              expr661
  let vVarAst_smapAccumL_Pat_Pat: all acc4817. (acc4817 -> Ast_Pat -> (acc4817, Ast_Pat)) -> acc4817 -> Ast_Pat -> (acc4817, Ast_Pat) =
    lam f2601.
      lam acc4818.
        lam __sem_target3313.
          match
            __sem_target3313
          with
            p2094
          in
          (acc4818, p2094)
  let vVarAst_smapAccumL_Expr_Pat: all acc4819. (acc4819 -> Ast_Pat -> (acc4819, Ast_Pat)) -> acc4819 -> Ast_Expr -> (acc4819, Ast_Expr) =
    lam f2602.
      lam acc4820.
        lam __sem_target3314.
          match
            __sem_target3314
          with
            p2095
          in
          (acc4820, p2095)
  let vVarAst_smapAccumL_Pat_Expr: all acc4821. (acc4821 -> Ast_Expr -> (acc4821, Ast_Expr)) -> acc4821 -> Ast_Pat -> (acc4821, Ast_Pat) =
    lam f2603.
      lam acc4822.
        lam __sem_target3315.
          match
            __sem_target3315
          with
            p2096
          in
          (acc4822, p2096)
  let vVarAst_smapAccumL_Pat_Type: all acc4823. (acc4823 -> Ast_Type -> (acc4823, Ast_Type)) -> acc4823 -> Ast_Pat -> (acc4823, Ast_Pat) =
    lam f2604.
      lam acc4824.
        lam __sem_target3316.
          match
            __sem_target3316
          with
            p2097
          in
          (acc4824, p2097)
  let vVarAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f2605.
      lam __sem_target3317.
        match
          __sem_target3317
        with
          p2098
        in
        let res819 =
            vVarAst_smapAccumL_Expr_TypeLabel
              (lam #var"887".
                 lam a1499.
                   ({}, f2605 a1499))
              {}
              p2098
          in
          res819.1
  let vVarAst_rappAccumL_Type_Type: all acc4825. (acc4825 -> Ast_Type -> (acc4825, Ast_Type)) -> acc4825 -> Ast_Type -> (acc4825, Ast_Type) =
    lam f2606.
      lam acc4826.
        lam __sem_target3318.
          match
            __sem_target3318
          with
            ty471
          in
          (acc4826, ty471)
  let vVarAst_sfold_Expr_TypeLabel: all acc4827. (acc4827 -> Ast_Type -> acc4827) -> acc4827 -> Ast_Expr -> acc4827 =
    lam f2607.
      lam acc4828.
        lam __sem_target3319.
          match
            __sem_target3319
          with
            p2099
          in
          let res820 =
              vVarAst_smapAccumL_Expr_TypeLabel
                (lam acc4829.
                   lam a1500.
                     (f2607 acc4829 a1500, a1500))
                acc4828
                p2099
            in
            res820.0
  let vVarAst_smapAccumL_Expr_Expr: all acc4830. (acc4830 -> Ast_Expr -> (acc4830, Ast_Expr)) -> acc4830 -> Ast_Expr -> (acc4830, Ast_Expr) =
    lam f2608.
      lam acc4831.
        lam __sem_target3320.
          match
            __sem_target3320
          with
            p2100
          in
          (acc4831, p2100)
  let vVarAst_smapAccumL_Expr_Type: all acc4832. (acc4832 -> Ast_Type -> (acc4832, Ast_Type)) -> acc4832 -> Ast_Expr -> (acc4832, Ast_Expr) =
    lam f2609.
      lam acc4833.
        lam __sem_target3321.
          match
            __sem_target3321
          with
            p2101
          in
          (acc4833, p2101)
  let vVarAst_smapAccumL_Kind_Type: all acc4834. (acc4834 -> Ast_Type -> (acc4834, Ast_Type)) -> acc4834 -> Ast_Kind -> (acc4834, Ast_Kind) =
    lam f2610.
      lam acc4835.
        lam __sem_target3322.
          match
            __sem_target3322
          with
            s383
          in
          (acc4835, s383)
  let vVarAst_smapAccumL_Type_Type: all acc4836. (acc4836 -> Ast_Type -> (acc4836, Ast_Type)) -> acc4836 -> Ast_Type -> (acc4836, Ast_Type) =
    lam f2611.
      lam acc4837.
        lam __sem_target3323.
          match
            __sem_target3323
          with
            p2102
          in
          (acc4837, p2102)
  let vVarAst_mapAccumLPre_Expr_Expr: all acc4838. (acc4838 -> Ast_Expr -> (acc4838, Ast_Expr)) -> acc4838 -> Ast_Expr -> (acc4838, Ast_Expr) =
    lam f2612.
      lam acc4839.
        lam __sem_target3324.
          match
            __sem_target3324
          with
            expr662
          in
          match
              f2612 acc4839 expr662
            with
              (acc4840, expr663)
            in
            vVarAst_smapAccumL_Expr_Expr (vVarAst_mapAccumLPre_Expr_Expr f2612) acc4840 expr663
  let vVarAst_mapAccumLPost_Expr_Expr: all acc4841. (acc4841 -> Ast_Expr -> (acc4841, Ast_Expr)) -> acc4841 -> Ast_Expr -> (acc4841, Ast_Expr) =
    lam f2613.
      lam acc4842.
        lam __sem_target3325.
          match
            __sem_target3325
          with
            expr664
          in
          match
              vVarAst_smapAccumL_Expr_Expr (vVarAst_mapAccumLPost_Expr_Expr f2613) acc4842 expr664
            with
              (acc4843, expr665)
            in
            f2613 acc4843 expr665
  let vVarAst_smapAccumL_Expr_TypeLabel: all acc4844. (acc4844 -> Ast_Type -> (acc4844, Ast_Type)) -> acc4844 -> Ast_Expr -> (acc4844, Ast_Expr) =
    lam f2614.
      lam acc4845.
        lam __sem_target3326.
          match
            __sem_target3326
          with
            p2103
          in
          match
              f2614 acc4845 (vVarAst_tyTm p2103)
            with
              (acc4846, ty472)
            in
            (acc4846, vVarAst_withType ty472 p2103)
in
con AppAst_TmApp: {ty: Ast_Type, lhs: Ast_Expr, rhs: Ast_Expr, info: Info} -> Ast_Expr in
recursive
  let vAppAst_tyTm: Ast_Expr -> Ast_Type =
    lam __sem_target3239.
      match
        __sem_target3239
      with
        AppAst_TmApp t1185
      in
      t1185.ty
  let vAppAst_tyPat: Ast_Pat -> Ast_Type = lam x681.
      never
  let vAppAst_infoTm: Ast_Expr -> Info =
    lam __sem_target3240.
      match
        __sem_target3240
      with
        AppAst_TmApp r374
      in
      r374.info
  let vAppAst_infoTy: Ast_Type -> Info = lam x682.
      never
  let vAppAst_infoPat: Ast_Pat -> Info = lam x683.
      never
  let vAppAst_withInfo: Info -> Ast_Expr -> Ast_Expr =
    lam info77.
      lam __sem_target3241.
        match
          __sem_target3241
        with
          AppAst_TmApp t1186
        in
        AppAst_TmApp
            { t1186 with info = info77 }
  let vAppAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr =
    lam ty461: Ast_Type.
      lam __sem_target3242.
        match
          __sem_target3242
        with
          AppAst_TmApp t1187
        in
        AppAst_TmApp
            { t1187 with ty = ty461 }
  let vAppAst_tyWithInfo: Info -> Ast_Type -> Ast_Type = lam x684.
      never
  let vAppAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target3243.
      match
        __sem_target3243
      with
        ty462
      in
      vAppAst_rapp_Type_Type vAppAst_unwrapType ty462
  let vAppAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target3244.
      match
        __sem_target3244
      with
        ty463
      in
      vAppAst_rapp_Type_Type vAppAst_inspectType ty463
  let vAppAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x685.
      never
  let vAppAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x686.
      never
  let vAppAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f2545.
      lam __sem_target3245.
        match
          __sem_target3245
        with
          p2050
        in
        let res799 =
            vAppAst_smapAccumL_Pat_Pat
              (lam #var"868".
                 lam a1465.
                   ({}, f2545 a1465))
              {}
              p2050
          in
          res799.1
  let vAppAst_countPatNodes =
    lam count1008.
      lam __sem_target3246.
        match
          __sem_target3246
        with
          t1188
        in
        let count1009 = addi count1008 1 in
          let count1010 = vAppAst_sfold_Pat_Pat vAppAst_countPatNodes count1009 t1188
          in
          let count1011 =
            vAppAst_sfold_Pat_Expr vAppAst_countExprNodes count1010 t1188
          in
          let count1012 =
            vAppAst_sfold_Pat_Type vAppAst_countTypeNodes count1011 t1188
          in
          count1012
  let vAppAst_sfold_Pat_Pat: all acc4723. (acc4723 -> Ast_Pat -> acc4723) -> acc4723 -> Ast_Pat -> acc4723 =
    lam f2546.
      lam acc4724.
        lam __sem_target3247.
          match
            __sem_target3247
          with
            p2051
          in
          let res800 =
              vAppAst_smapAccumL_Pat_Pat
                (lam acc4725.
                   lam a1466.
                     (f2546 acc4725 a1466, a1466))
                acc4724
                p2051
            in
            res800.0
  let vAppAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f2547.
      lam __sem_target3248.
        match
          __sem_target3248
        with
          p2052
        in
        match
            vAppAst_smapAccumL_Expr_Pat
              (lam #var"869".
                 lam a1467.
                   ({}, f2547 a1467))
              {}
              p2052
          with
            (_, p2053)
          in
          p2053
  let vAppAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f2548.
      lam __sem_target3249.
        match
          __sem_target3249
        with
          p2054
        in
        match
            vAppAst_smapAccumL_Pat_Expr
              (lam #var"870".
                 lam a1468.
                   ({}, f2548 a1468))
              {}
              p2054
          with
            (_, p2055)
          in
          p2055
  let vAppAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f2549.
      lam __sem_target3250.
        match
          __sem_target3250
        with
          p2056
        in
        match
            vAppAst_smapAccumL_Pat_Type
              (lam #var"871".
                 lam a1469.
                   ({}, f2549 a1469))
              {}
              p2056
          with
            (_, p2057)
          in
          p2057
  let vAppAst_countExprNodes =
    lam count1013.
      lam __sem_target3251.
        match
          __sem_target3251
        with
          t1189
        in
        let count1014 = addi count1013 1 in
          let count1015 =
            vAppAst_sfold_Expr_Expr vAppAst_countExprNodes count1014 t1189
          in
          let count1016 =
            vAppAst_sfold_Expr_Type vAppAst_countTypeNodes count1015 t1189
          in
          let count1017 =
            vAppAst_sfold_Expr_TypeLabel vAppAst_countTypeNodes count1016 t1189
          in
          let count1018 = vAppAst_sfold_Expr_Pat vAppAst_countPatNodes count1017 t1189
          in
          count1018
  let vAppAst_countTypeNodes =
    lam count1019.
      lam __sem_target3252.
        match
          __sem_target3252
        with
          t1190
        in
        let count1020 = addi count1019 1 in
          let count1021 =
            vAppAst_sfold_Type_Type vAppAst_countTypeNodes count1020 t1190
          in
          count1021
  let vAppAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f2550.
      lam __sem_target3253.
        match
          __sem_target3253
        with
          ty464
        in
        let res801 =
            vAppAst_rappAccumL_Type_Type
              (lam #var"872".
                 lam t1191.
                   ({}, f2550 t1191))
              {}
              ty464
          in
          res801.1
  let vAppAst_sfold_Expr_Pat: all acc4726. (acc4726 -> Ast_Pat -> acc4726) -> acc4726 -> Ast_Expr -> acc4726 =
    lam f2551.
      lam acc4727.
        lam __sem_target3254.
          match
            __sem_target3254
          with
            p2058
          in
          match
              vAppAst_smapAccumL_Expr_Pat
                (lam acc4728.
                   lam a1470.
                     (f2551 acc4728 a1470, a1470))
                acc4727
                p2058
            with
              (acc4729, _)
            in
            acc4729
  let vAppAst_sfold_Pat_Expr: all acc4730. (acc4730 -> Ast_Expr -> acc4730) -> acc4730 -> Ast_Pat -> acc4730 =
    lam f2552.
      lam acc4731.
        lam __sem_target3255.
          match
            __sem_target3255
          with
            p2059
          in
          match
              vAppAst_smapAccumL_Pat_Expr
                (lam acc4732.
                   lam a1471.
                     (f2552 acc4732 a1471, a1471))
                acc4731
                p2059
            with
              (acc4733, _)
            in
            acc4733
  let vAppAst_sfold_Pat_Type: all acc4734. (acc4734 -> Ast_Type -> acc4734) -> acc4734 -> Ast_Pat -> acc4734 =
    lam f2553.
      lam acc4735.
        lam __sem_target3256.
          match
            __sem_target3256
          with
            p2060
          in
          match
              vAppAst_smapAccumL_Pat_Type
                (lam acc4736.
                   lam a1472.
                     (f2553 acc4736 a1472, a1472))
                acc4735
                p2060
            with
              (acc4737, _)
            in
            acc4737
  let vAppAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f2554.
      lam __sem_target3257.
        match
          __sem_target3257
        with
          p2061
        in
        let res802 =
            vAppAst_smapAccumL_Expr_Expr
              (lam #var"873".
                 lam a1473.
                   ({}, f2554 a1473))
              {}
              p2061
          in
          res802.1
  let vAppAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f2555.
      lam __sem_target3258.
        match
          __sem_target3258
        with
          p2062
        in
        let res803 =
            vAppAst_smapAccumL_Expr_Type
              (lam #var"874".
                 lam a1474.
                   ({}, f2555 a1474))
              {}
              p2062
          in
          res803.1
  let vAppAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f2556: Ast_Type -> Ast_Type.
      lam __sem_target3259.
        match
          __sem_target3259
        with
          s376
        in
        match
            vAppAst_smapAccumL_Kind_Type
              (lam #var"875".
                 lam x687.
                   ({}, f2556 x687))
              {}
              s376
          with
            (_, s377)
          in
          s377
  let vAppAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f2557.
      lam __sem_target3260.
        match
          __sem_target3260
        with
          p2063
        in
        let res804 =
            vAppAst_smapAccumL_Type_Type
              (lam #var"876".
                 lam a1475.
                   ({}, f2557 a1475))
              {}
              p2063
          in
          res804.1
  let vAppAst_sfold_Expr_Expr: all acc4738. (acc4738 -> Ast_Expr -> acc4738) -> acc4738 -> Ast_Expr -> acc4738 =
    lam f2558.
      lam acc4739.
        lam __sem_target3261.
          match
            __sem_target3261
          with
            p2064
          in
          let res805 =
              vAppAst_smapAccumL_Expr_Expr
                (lam acc4740.
                   lam a1476.
                     (f2558 acc4740 a1476, a1476))
                acc4739
                p2064
            in
            res805.0
  let vAppAst_sfold_Expr_Type: all acc4741. (acc4741 -> Ast_Type -> acc4741) -> acc4741 -> Ast_Expr -> acc4741 =
    lam f2559.
      lam acc4742.
        lam __sem_target3262.
          match
            __sem_target3262
          with
            p2065
          in
          let res806 =
              vAppAst_smapAccumL_Expr_Type
                (lam acc4743.
                   lam a1477.
                     (f2559 acc4743 a1477, a1477))
                acc4742
                p2065
            in
            res806.0
  let vAppAst_sfold_Kind_Type: all acc4744. (acc4744 -> Ast_Type -> acc4744) -> acc4744 -> Ast_Kind -> acc4744 =
    lam f2560: acc4744 -> Ast_Type -> acc4744.
      lam acc4745: acc4744.
        lam __sem_target3263.
          match
            __sem_target3263
          with
            s378
          in
          match
              vAppAst_smapAccumL_Kind_Type
                (lam a1478.
                   lam x688.
                     (f2560 a1478 x688, x688))
                acc4745
                s378
            with
              (a1479, _)
            in
            a1479
  let vAppAst_sfold_Type_Type: all acc4746. (acc4746 -> Ast_Type -> acc4746) -> acc4746 -> Ast_Type -> acc4746 =
    lam f2561.
      lam acc4747.
        lam __sem_target3264.
          match
            __sem_target3264
          with
            p2066
          in
          let res807 =
              vAppAst_smapAccumL_Type_Type
                (lam acc4748.
                   lam a1480.
                     (f2561 acc4748 a1480, a1480))
                acc4747
                p2066
            in
            res807.0
  let vAppAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f2562.
      lam __sem_target3265.
        match
          __sem_target3265
        with
          expr648
        in
        let expr649 = f2562 expr648 in
          vAppAst_smap_Expr_Expr (vAppAst_mapPre_Expr_Expr f2562) expr649
  let vAppAst_foldPre_Expr_Expr: all acc4749. (acc4749 -> Ast_Expr -> acc4749) -> acc4749 -> Ast_Expr -> acc4749 =
    lam f2563.
      lam acc4750.
        lam __sem_target3266.
          match
            __sem_target3266
          with
            expr650
          in
          let acc4751 = f2563 acc4750 expr650 in
            vAppAst_sfold_Expr_Expr (vAppAst_foldPre_Expr_Expr f2563) acc4751 expr650
  let vAppAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f2564.
      lam __sem_target3267.
        match
          __sem_target3267
        with
          expr651
        in
        f2564
            (vAppAst_smap_Expr_Expr (vAppAst_mapPost_Expr_Expr f2564) expr651)
  let vAppAst_foldPost_Expr_Expr: all acc4752. (acc4752 -> Ast_Expr -> acc4752) -> acc4752 -> Ast_Expr -> acc4752 =
    lam f2565.
      lam acc4753.
        lam __sem_target3268.
          match
            __sem_target3268
          with
            expr652
          in
          f2565
              (vAppAst_sfold_Expr_Expr (vAppAst_foldPost_Expr_Expr f2565) acc4753 expr652)
              expr652
  let vAppAst_smapAccumL_Pat_Pat: all acc4754. (acc4754 -> Ast_Pat -> (acc4754, Ast_Pat)) -> acc4754 -> Ast_Pat -> (acc4754, Ast_Pat) =
    lam f2566.
      lam acc4755.
        lam __sem_target3269.
          match
            __sem_target3269
          with
            p2067
          in
          (acc4755, p2067)
  let vAppAst_smapAccumL_Expr_Pat: all acc4756. (acc4756 -> Ast_Pat -> (acc4756, Ast_Pat)) -> acc4756 -> Ast_Expr -> (acc4756, Ast_Expr) =
    lam f2567.
      lam acc4757.
        lam __sem_target3270.
          match
            __sem_target3270
          with
            p2068
          in
          (acc4757, p2068)
  let vAppAst_smapAccumL_Pat_Expr: all acc4758. (acc4758 -> Ast_Expr -> (acc4758, Ast_Expr)) -> acc4758 -> Ast_Pat -> (acc4758, Ast_Pat) =
    lam f2568.
      lam acc4759.
        lam __sem_target3271.
          match
            __sem_target3271
          with
            p2069
          in
          (acc4759, p2069)
  let vAppAst_smapAccumL_Pat_Type: all acc4760. (acc4760 -> Ast_Type -> (acc4760, Ast_Type)) -> acc4760 -> Ast_Pat -> (acc4760, Ast_Pat) =
    lam f2569.
      lam acc4761.
        lam __sem_target3272.
          match
            __sem_target3272
          with
            p2070
          in
          (acc4761, p2070)
  let vAppAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f2570.
      lam __sem_target3273.
        match
          __sem_target3273
        with
          p2071
        in
        let res808 =
            vAppAst_smapAccumL_Expr_TypeLabel
              (lam #var"877".
                 lam a1481.
                   ({}, f2570 a1481))
              {}
              p2071
          in
          res808.1
  let vAppAst_rappAccumL_Type_Type: all acc4762. (acc4762 -> Ast_Type -> (acc4762, Ast_Type)) -> acc4762 -> Ast_Type -> (acc4762, Ast_Type) =
    lam f2571.
      lam acc4763.
        lam __sem_target3274.
          match
            __sem_target3274
          with
            ty465
          in
          (acc4763, ty465)
  let vAppAst_sfold_Expr_TypeLabel: all acc4764. (acc4764 -> Ast_Type -> acc4764) -> acc4764 -> Ast_Expr -> acc4764 =
    lam f2572.
      lam acc4765.
        lam __sem_target3275.
          match
            __sem_target3275
          with
            p2072
          in
          let res809 =
              vAppAst_smapAccumL_Expr_TypeLabel
                (lam acc4766.
                   lam a1482.
                     (f2572 acc4766 a1482, a1482))
                acc4765
                p2072
            in
            res809.0
  let vAppAst_smapAccumL_Expr_Expr: all acc4767. (acc4767 -> Ast_Expr -> (acc4767, Ast_Expr)) -> acc4767 -> Ast_Expr -> (acc4767, Ast_Expr) =
    lam f2573.
      lam acc4768.
        lam __sem_target3276.
          match
            __sem_target3276
          with
            AppAst_TmApp t1192
          then
            match
              f2573 acc4768 t1192.lhs
            with
              (acc4769, lhs11)
            in
            match
                f2573 acc4769 t1192.rhs
              with
                (acc4770, rhs11)
              in
              (acc4770, AppAst_TmApp
                  { t1192 with lhs = lhs11, rhs = rhs11 })
          else match
            __sem_target3276
          with
            p2073
          in
          (acc4768, p2073)
  let vAppAst_smapAccumL_Expr_Type: all acc4771. (acc4771 -> Ast_Type -> (acc4771, Ast_Type)) -> acc4771 -> Ast_Expr -> (acc4771, Ast_Expr) =
    lam f2574.
      lam acc4772.
        lam __sem_target3277.
          match
            __sem_target3277
          with
            p2074
          in
          (acc4772, p2074)
  let vAppAst_smapAccumL_Kind_Type: all acc4773. (acc4773 -> Ast_Type -> (acc4773, Ast_Type)) -> acc4773 -> Ast_Kind -> (acc4773, Ast_Kind) =
    lam f2575.
      lam acc4774.
        lam __sem_target3278.
          match
            __sem_target3278
          with
            s379
          in
          (acc4774, s379)
  let vAppAst_smapAccumL_Type_Type: all acc4775. (acc4775 -> Ast_Type -> (acc4775, Ast_Type)) -> acc4775 -> Ast_Type -> (acc4775, Ast_Type) =
    lam f2576.
      lam acc4776.
        lam __sem_target3279.
          match
            __sem_target3279
          with
            p2075
          in
          (acc4776, p2075)
  let vAppAst_mapAccumLPre_Expr_Expr: all acc4777. (acc4777 -> Ast_Expr -> (acc4777, Ast_Expr)) -> acc4777 -> Ast_Expr -> (acc4777, Ast_Expr) =
    lam f2577.
      lam acc4778.
        lam __sem_target3280.
          match
            __sem_target3280
          with
            expr653
          in
          match
              f2577 acc4778 expr653
            with
              (acc4779, expr654)
            in
            vAppAst_smapAccumL_Expr_Expr (vAppAst_mapAccumLPre_Expr_Expr f2577) acc4779 expr654
  let vAppAst_mapAccumLPost_Expr_Expr: all acc4780. (acc4780 -> Ast_Expr -> (acc4780, Ast_Expr)) -> acc4780 -> Ast_Expr -> (acc4780, Ast_Expr) =
    lam f2578.
      lam acc4781.
        lam __sem_target3281.
          match
            __sem_target3281
          with
            expr655
          in
          match
              vAppAst_smapAccumL_Expr_Expr (vAppAst_mapAccumLPost_Expr_Expr f2578) acc4781 expr655
            with
              (acc4782, expr656)
            in
            f2578 acc4782 expr656
  let vAppAst_smapAccumL_Expr_TypeLabel: all acc4783. (acc4783 -> Ast_Type -> (acc4783, Ast_Type)) -> acc4783 -> Ast_Expr -> (acc4783, Ast_Expr) =
    lam f2579.
      lam acc4784.
        lam __sem_target3282.
          match
            __sem_target3282
          with
            p2076
          in
          match
              f2579 acc4784 (vAppAst_tyTm p2076)
            with
              (acc4785, ty466)
            in
            (acc4785, vAppAst_withType ty466 p2076)
in
con LamAst_TmLam: {ty: Ast_Type, body: Ast_Expr, info: Info, ident: Name, tyAnnot: Ast_Type, tyParam: Ast_Type} -> Ast_Expr in
recursive
  let vLamAst_tyTm: Ast_Expr -> Ast_Type =
    lam __sem_target3195.
      match
        __sem_target3195
      with
        LamAst_TmLam t1175
      in
      t1175.ty
  let vLamAst_tyPat: Ast_Pat -> Ast_Type = lam x673.
      never
  let vLamAst_infoTm: Ast_Expr -> Info =
    lam __sem_target3196.
      match
        __sem_target3196
      with
        LamAst_TmLam r373
      in
      r373.info
  let vLamAst_infoTy: Ast_Type -> Info = lam x674.
      never
  let vLamAst_infoPat: Ast_Pat -> Info = lam x675.
      never
  let vLamAst_withInfo: Info -> Ast_Expr -> Ast_Expr =
    lam info76.
      lam __sem_target3197.
        match
          __sem_target3197
        with
          LamAst_TmLam t1176
        in
        LamAst_TmLam
            { t1176 with info = info76 }
  let vLamAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr =
    lam ty454: Ast_Type.
      lam __sem_target3198.
        match
          __sem_target3198
        with
          LamAst_TmLam t1177
        in
        LamAst_TmLam
            { t1177 with ty = ty454 }
  let vLamAst_tyWithInfo: Info -> Ast_Type -> Ast_Type = lam x676.
      never
  let vLamAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target3199.
      match
        __sem_target3199
      with
        ty455
      in
      vLamAst_rapp_Type_Type vLamAst_unwrapType ty455
  let vLamAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target3200.
      match
        __sem_target3200
      with
        ty456
      in
      vLamAst_rapp_Type_Type vLamAst_inspectType ty456
  let vLamAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x677.
      never
  let vLamAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x678.
      never
  let vLamAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f2510.
      lam __sem_target3201.
        match
          __sem_target3201
        with
          p2023
        in
        let res788 =
            vLamAst_smapAccumL_Pat_Pat
              (lam #var"858".
                 lam a1447.
                   ({}, f2510 a1447))
              {}
              p2023
          in
          res788.1
  let vLamAst_countPatNodes =
    lam count994.
      lam __sem_target3202.
        match
          __sem_target3202
        with
          t1178
        in
        let count995 = addi count994 1 in
          let count996 = vLamAst_sfold_Pat_Pat vLamAst_countPatNodes count995 t1178
          in
          let count997 = vLamAst_sfold_Pat_Expr vLamAst_countExprNodes count996 t1178
          in
          let count998 = vLamAst_sfold_Pat_Type vLamAst_countTypeNodes count997 t1178
          in
          count998
  let vLamAst_sfold_Pat_Pat: all acc4658. (acc4658 -> Ast_Pat -> acc4658) -> acc4658 -> Ast_Pat -> acc4658 =
    lam f2511.
      lam acc4659.
        lam __sem_target3203.
          match
            __sem_target3203
          with
            p2024
          in
          let res789 =
              vLamAst_smapAccumL_Pat_Pat
                (lam acc4660.
                   lam a1448.
                     (f2511 acc4660 a1448, a1448))
                acc4659
                p2024
            in
            res789.0
  let vLamAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f2512.
      lam __sem_target3204.
        match
          __sem_target3204
        with
          p2025
        in
        match
            vLamAst_smapAccumL_Expr_Pat
              (lam #var"859".
                 lam a1449.
                   ({}, f2512 a1449))
              {}
              p2025
          with
            (_, p2026)
          in
          p2026
  let vLamAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f2513.
      lam __sem_target3205.
        match
          __sem_target3205
        with
          p2027
        in
        match
            vLamAst_smapAccumL_Pat_Expr
              (lam #var"860".
                 lam a1450.
                   ({}, f2513 a1450))
              {}
              p2027
          with
            (_, p2028)
          in
          p2028
  let vLamAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f2514.
      lam __sem_target3206.
        match
          __sem_target3206
        with
          p2029
        in
        match
            vLamAst_smapAccumL_Pat_Type
              (lam #var"861".
                 lam a1451.
                   ({}, f2514 a1451))
              {}
              p2029
          with
            (_, p2030)
          in
          p2030
  let vLamAst_countExprNodes =
    lam count999.
      lam __sem_target3207.
        match
          __sem_target3207
        with
          t1179
        in
        let count1000 = addi count999 1 in
          let count1001 =
            vLamAst_sfold_Expr_Expr vLamAst_countExprNodes count1000 t1179
          in
          let count1002 =
            vLamAst_sfold_Expr_Type vLamAst_countTypeNodes count1001 t1179
          in
          let count1003 =
            vLamAst_sfold_Expr_TypeLabel vLamAst_countTypeNodes count1002 t1179
          in
          let count1004 = vLamAst_sfold_Expr_Pat vLamAst_countPatNodes count1003 t1179
          in
          count1004
  let vLamAst_countTypeNodes =
    lam count1005.
      lam __sem_target3208.
        match
          __sem_target3208
        with
          t1180
        in
        let count1006 = addi count1005 1 in
          let count1007 =
            vLamAst_sfold_Type_Type vLamAst_countTypeNodes count1006 t1180
          in
          count1007
  let vLamAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f2515.
      lam __sem_target3209.
        match
          __sem_target3209
        with
          ty457
        in
        let res790 =
            vLamAst_rappAccumL_Type_Type
              (lam #var"862".
                 lam t1181.
                   ({}, f2515 t1181))
              {}
              ty457
          in
          res790.1
  let vLamAst_sfold_Expr_Pat: all acc4661. (acc4661 -> Ast_Pat -> acc4661) -> acc4661 -> Ast_Expr -> acc4661 =
    lam f2516.
      lam acc4662.
        lam __sem_target3210.
          match
            __sem_target3210
          with
            p2031
          in
          match
              vLamAst_smapAccumL_Expr_Pat
                (lam acc4663.
                   lam a1452.
                     (f2516 acc4663 a1452, a1452))
                acc4662
                p2031
            with
              (acc4664, _)
            in
            acc4664
  let vLamAst_sfold_Pat_Expr: all acc4665. (acc4665 -> Ast_Expr -> acc4665) -> acc4665 -> Ast_Pat -> acc4665 =
    lam f2517.
      lam acc4666.
        lam __sem_target3211.
          match
            __sem_target3211
          with
            p2032
          in
          match
              vLamAst_smapAccumL_Pat_Expr
                (lam acc4667.
                   lam a1453.
                     (f2517 acc4667 a1453, a1453))
                acc4666
                p2032
            with
              (acc4668, _)
            in
            acc4668
  let vLamAst_sfold_Pat_Type: all acc4669. (acc4669 -> Ast_Type -> acc4669) -> acc4669 -> Ast_Pat -> acc4669 =
    lam f2518.
      lam acc4670.
        lam __sem_target3212.
          match
            __sem_target3212
          with
            p2033
          in
          match
              vLamAst_smapAccumL_Pat_Type
                (lam acc4671.
                   lam a1454.
                     (f2518 acc4671 a1454, a1454))
                acc4670
                p2033
            with
              (acc4672, _)
            in
            acc4672
  let vLamAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f2519.
      lam __sem_target3213.
        match
          __sem_target3213
        with
          p2034
        in
        let res791 =
            vLamAst_smapAccumL_Expr_Expr
              (lam #var"863".
                 lam a1455.
                   ({}, f2519 a1455))
              {}
              p2034
          in
          res791.1
  let vLamAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f2520.
      lam __sem_target3214.
        match
          __sem_target3214
        with
          p2035
        in
        let res792 =
            vLamAst_smapAccumL_Expr_Type
              (lam #var"864".
                 lam a1456.
                   ({}, f2520 a1456))
              {}
              p2035
          in
          res792.1
  let vLamAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f2521: Ast_Type -> Ast_Type.
      lam __sem_target3215.
        match
          __sem_target3215
        with
          s372
        in
        match
            vLamAst_smapAccumL_Kind_Type
              (lam #var"865".
                 lam x679.
                   ({}, f2521 x679))
              {}
              s372
          with
            (_, s373)
          in
          s373
  let vLamAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f2522.
      lam __sem_target3216.
        match
          __sem_target3216
        with
          p2036
        in
        let res793 =
            vLamAst_smapAccumL_Type_Type
              (lam #var"866".
                 lam a1457.
                   ({}, f2522 a1457))
              {}
              p2036
          in
          res793.1
  let vLamAst_sfold_Expr_Expr: all acc4673. (acc4673 -> Ast_Expr -> acc4673) -> acc4673 -> Ast_Expr -> acc4673 =
    lam f2523.
      lam acc4674.
        lam __sem_target3217.
          match
            __sem_target3217
          with
            p2037
          in
          let res794 =
              vLamAst_smapAccumL_Expr_Expr
                (lam acc4675.
                   lam a1458.
                     (f2523 acc4675 a1458, a1458))
                acc4674
                p2037
            in
            res794.0
  let vLamAst_sfold_Expr_Type: all acc4676. (acc4676 -> Ast_Type -> acc4676) -> acc4676 -> Ast_Expr -> acc4676 =
    lam f2524.
      lam acc4677.
        lam __sem_target3218.
          match
            __sem_target3218
          with
            p2038
          in
          let res795 =
              vLamAst_smapAccumL_Expr_Type
                (lam acc4678.
                   lam a1459.
                     (f2524 acc4678 a1459, a1459))
                acc4677
                p2038
            in
            res795.0
  let vLamAst_sfold_Kind_Type: all acc4679. (acc4679 -> Ast_Type -> acc4679) -> acc4679 -> Ast_Kind -> acc4679 =
    lam f2525: acc4679 -> Ast_Type -> acc4679.
      lam acc4680: acc4679.
        lam __sem_target3219.
          match
            __sem_target3219
          with
            s374
          in
          match
              vLamAst_smapAccumL_Kind_Type
                (lam a1460.
                   lam x680.
                     (f2525 a1460 x680, x680))
                acc4680
                s374
            with
              (a1461, _)
            in
            a1461
  let vLamAst_sfold_Type_Type: all acc4681. (acc4681 -> Ast_Type -> acc4681) -> acc4681 -> Ast_Type -> acc4681 =
    lam f2526.
      lam acc4682.
        lam __sem_target3220.
          match
            __sem_target3220
          with
            p2039
          in
          let res796 =
              vLamAst_smapAccumL_Type_Type
                (lam acc4683.
                   lam a1462.
                     (f2526 acc4683 a1462, a1462))
                acc4682
                p2039
            in
            res796.0
  let vLamAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f2527.
      lam __sem_target3221.
        match
          __sem_target3221
        with
          expr639
        in
        let expr640 = f2527 expr639 in
          vLamAst_smap_Expr_Expr (vLamAst_mapPre_Expr_Expr f2527) expr640
  let vLamAst_foldPre_Expr_Expr: all acc4684. (acc4684 -> Ast_Expr -> acc4684) -> acc4684 -> Ast_Expr -> acc4684 =
    lam f2528.
      lam acc4685.
        lam __sem_target3222.
          match
            __sem_target3222
          with
            expr641
          in
          let acc4686 = f2528 acc4685 expr641 in
            vLamAst_sfold_Expr_Expr (vLamAst_foldPre_Expr_Expr f2528) acc4686 expr641
  let vLamAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f2529.
      lam __sem_target3223.
        match
          __sem_target3223
        with
          expr642
        in
        f2529
            (vLamAst_smap_Expr_Expr (vLamAst_mapPost_Expr_Expr f2529) expr642)
  let vLamAst_foldPost_Expr_Expr: all acc4687. (acc4687 -> Ast_Expr -> acc4687) -> acc4687 -> Ast_Expr -> acc4687 =
    lam f2530.
      lam acc4688.
        lam __sem_target3224.
          match
            __sem_target3224
          with
            expr643
          in
          f2530
              (vLamAst_sfold_Expr_Expr (vLamAst_foldPost_Expr_Expr f2530) acc4688 expr643)
              expr643
  let vLamAst_smapAccumL_Pat_Pat: all acc4689. (acc4689 -> Ast_Pat -> (acc4689, Ast_Pat)) -> acc4689 -> Ast_Pat -> (acc4689, Ast_Pat) =
    lam f2531.
      lam acc4690.
        lam __sem_target3225.
          match
            __sem_target3225
          with
            p2040
          in
          (acc4690, p2040)
  let vLamAst_smapAccumL_Expr_Pat: all acc4691. (acc4691 -> Ast_Pat -> (acc4691, Ast_Pat)) -> acc4691 -> Ast_Expr -> (acc4691, Ast_Expr) =
    lam f2532.
      lam acc4692.
        lam __sem_target3226.
          match
            __sem_target3226
          with
            p2041
          in
          (acc4692, p2041)
  let vLamAst_smapAccumL_Pat_Expr: all acc4693. (acc4693 -> Ast_Expr -> (acc4693, Ast_Expr)) -> acc4693 -> Ast_Pat -> (acc4693, Ast_Pat) =
    lam f2533.
      lam acc4694.
        lam __sem_target3227.
          match
            __sem_target3227
          with
            p2042
          in
          (acc4694, p2042)
  let vLamAst_smapAccumL_Pat_Type: all acc4695. (acc4695 -> Ast_Type -> (acc4695, Ast_Type)) -> acc4695 -> Ast_Pat -> (acc4695, Ast_Pat) =
    lam f2534.
      lam acc4696.
        lam __sem_target3228.
          match
            __sem_target3228
          with
            p2043
          in
          (acc4696, p2043)
  let vLamAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f2535.
      lam __sem_target3229.
        match
          __sem_target3229
        with
          p2044
        in
        let res797 =
            vLamAst_smapAccumL_Expr_TypeLabel
              (lam #var"867".
                 lam a1463.
                   ({}, f2535 a1463))
              {}
              p2044
          in
          res797.1
  let vLamAst_rappAccumL_Type_Type: all acc4697. (acc4697 -> Ast_Type -> (acc4697, Ast_Type)) -> acc4697 -> Ast_Type -> (acc4697, Ast_Type) =
    lam f2536.
      lam acc4698.
        lam __sem_target3230.
          match
            __sem_target3230
          with
            ty458
          in
          (acc4698, ty458)
  let vLamAst_sfold_Expr_TypeLabel: all acc4699. (acc4699 -> Ast_Type -> acc4699) -> acc4699 -> Ast_Expr -> acc4699 =
    lam f2537.
      lam acc4700.
        lam __sem_target3231.
          match
            __sem_target3231
          with
            p2045
          in
          let res798 =
              vLamAst_smapAccumL_Expr_TypeLabel
                (lam acc4701.
                   lam a1464.
                     (f2537 acc4701 a1464, a1464))
                acc4700
                p2045
            in
            res798.0
  let vLamAst_smapAccumL_Expr_Expr: all acc4702. (acc4702 -> Ast_Expr -> (acc4702, Ast_Expr)) -> acc4702 -> Ast_Expr -> (acc4702, Ast_Expr) =
    lam f2538.
      lam acc4703.
        lam __sem_target3232.
          match
            __sem_target3232
          with
            LamAst_TmLam t1182
          then
            match
              f2538 acc4703 t1182.body
            with
              (acc4704, body16)
            in
            (acc4704, LamAst_TmLam
                { t1182 with body = body16 })
          else match
            __sem_target3232
          with
            p2046
          in
          (acc4703, p2046)
  let vLamAst_smapAccumL_Expr_Type: all acc4705. (acc4705 -> Ast_Type -> (acc4705, Ast_Type)) -> acc4705 -> Ast_Expr -> (acc4705, Ast_Expr) =
    lam f2539.
      lam acc4706.
        lam __sem_target3233.
          match
            __sem_target3233
          with
            LamAst_TmLam t1183
          then
            match
              f2539 acc4706 t1183.tyAnnot
            with
              (acc4707, tyAnnot11)
            in
            (acc4707, LamAst_TmLam
                { t1183 with tyAnnot = tyAnnot11 })
          else match
            __sem_target3233
          with
            p2047
          in
          (acc4706, p2047)
  let vLamAst_smapAccumL_Kind_Type: all acc4708. (acc4708 -> Ast_Type -> (acc4708, Ast_Type)) -> acc4708 -> Ast_Kind -> (acc4708, Ast_Kind) =
    lam f2540.
      lam acc4709.
        lam __sem_target3234.
          match
            __sem_target3234
          with
            s375
          in
          (acc4709, s375)
  let vLamAst_smapAccumL_Type_Type: all acc4710. (acc4710 -> Ast_Type -> (acc4710, Ast_Type)) -> acc4710 -> Ast_Type -> (acc4710, Ast_Type) =
    lam f2541.
      lam acc4711.
        lam __sem_target3235.
          match
            __sem_target3235
          with
            p2048
          in
          (acc4711, p2048)
  let vLamAst_mapAccumLPre_Expr_Expr: all acc4712. (acc4712 -> Ast_Expr -> (acc4712, Ast_Expr)) -> acc4712 -> Ast_Expr -> (acc4712, Ast_Expr) =
    lam f2542.
      lam acc4713.
        lam __sem_target3236.
          match
            __sem_target3236
          with
            expr644
          in
          match
              f2542 acc4713 expr644
            with
              (acc4714, expr645)
            in
            vLamAst_smapAccumL_Expr_Expr (vLamAst_mapAccumLPre_Expr_Expr f2542) acc4714 expr645
  let vLamAst_mapAccumLPost_Expr_Expr: all acc4715. (acc4715 -> Ast_Expr -> (acc4715, Ast_Expr)) -> acc4715 -> Ast_Expr -> (acc4715, Ast_Expr) =
    lam f2543.
      lam acc4716.
        lam __sem_target3237.
          match
            __sem_target3237
          with
            expr646
          in
          match
              vLamAst_smapAccumL_Expr_Expr (vLamAst_mapAccumLPost_Expr_Expr f2543) acc4716 expr646
            with
              (acc4717, expr647)
            in
            f2543 acc4717 expr647
  let vLamAst_smapAccumL_Expr_TypeLabel: all acc4718. (acc4718 -> Ast_Type -> (acc4718, Ast_Type)) -> acc4718 -> Ast_Expr -> (acc4718, Ast_Expr) =
    lam f2544.
      lam acc4719.
        lam __sem_target3238.
          match
            __sem_target3238
          with
            LamAst_TmLam t1184
          then
            match
              f2544 acc4719 t1184.tyParam
            with
              (acc4720, tyParam3)
            in
            match
                f2544 acc4720 t1184.ty
              with
                (acc4721, ty459)
              in
              (acc4721, LamAst_TmLam
                  { t1184 with tyParam = tyParam3, ty = ty459 })
          else match
            __sem_target3238
          with
            p2049
          in
          match
              f2544 acc4719 (vLamAst_tyTm p2049)
            with
              (acc4722, ty460)
            in
            (acc4722, vLamAst_withType ty460 p2049)
in
con LetAst_TmLet: {ty: Ast_Type, body: Ast_Expr, info: Info, ident: Name, inexpr: Ast_Expr, tyBody: Ast_Type, tyAnnot: Ast_Type} -> Ast_Expr in
recursive
  let vLetAst_tyTm: Ast_Expr -> Ast_Type =
    lam __sem_target3151.
      match
        __sem_target3151
      with
        VarAst_TmVar t1162
      then
        t1162.ty
      else match
        __sem_target3151
      with
        LetAst_TmLet t1163
      in
      t1163.ty
  let vLetAst_tyPat: Ast_Pat -> Ast_Type = lam x665.
      never
  let vLetAst_infoTm: Ast_Expr -> Info =
    lam __sem_target3152.
      match
        __sem_target3152
      with
        VarAst_TmVar r371
      then
        r371.info
      else match
        __sem_target3152
      with
        LetAst_TmLet r372
      in
      r372.info
  let vLetAst_infoTy: Ast_Type -> Info = lam x666.
      never
  let vLetAst_infoPat: Ast_Pat -> Info = lam x667.
      never
  let vLetAst_withInfo: Info -> Ast_Expr -> Ast_Expr =
    lam info75.
      lam __sem_target3153.
        match
          __sem_target3153
        with
          VarAst_TmVar t1164
        then
          VarAst_TmVar
            { t1164 with info = info75 }
        else match
          __sem_target3153
        with
          LetAst_TmLet t1165
        in
        LetAst_TmLet
            { t1165 with info = info75 }
  let vLetAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr =
    lam ty447: Ast_Type.
      lam __sem_target3154.
        match
          __sem_target3154
        with
          VarAst_TmVar t1166
        then
          VarAst_TmVar
            { t1166 with ty = ty447 }
        else match
          __sem_target3154
        with
          LetAst_TmLet t1167
        in
        LetAst_TmLet
            { t1167 with ty = ty447 }
  let vLetAst_tyWithInfo: Info -> Ast_Type -> Ast_Type = lam x668.
      never
  let vLetAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target3155.
      match
        __sem_target3155
      with
        ty448
      in
      vLetAst_rapp_Type_Type vLetAst_unwrapType ty448
  let vLetAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target3156.
      match
        __sem_target3156
      with
        ty449
      in
      vLetAst_rapp_Type_Type vLetAst_inspectType ty449
  let vLetAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x669.
      never
  let vLetAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x670.
      never
  let vLetAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f2475.
      lam __sem_target3157.
        match
          __sem_target3157
        with
          p1996
        in
        let res777 =
            vLetAst_smapAccumL_Pat_Pat
              (lam #var"848".
                 lam a1429.
                   ({}, f2475 a1429))
              {}
              p1996
          in
          res777.1
  let vLetAst_countPatNodes =
    lam count980.
      lam __sem_target3158.
        match
          __sem_target3158
        with
          t1168
        in
        let count981 = addi count980 1 in
          let count982 = vLetAst_sfold_Pat_Pat vLetAst_countPatNodes count981 t1168
          in
          let count983 = vLetAst_sfold_Pat_Expr vLetAst_countExprNodes count982 t1168
          in
          let count984 = vLetAst_sfold_Pat_Type vLetAst_countTypeNodes count983 t1168
          in
          count984
  let vLetAst_sfold_Pat_Pat: all acc4592. (acc4592 -> Ast_Pat -> acc4592) -> acc4592 -> Ast_Pat -> acc4592 =
    lam f2476.
      lam acc4593.
        lam __sem_target3159.
          match
            __sem_target3159
          with
            p1997
          in
          let res778 =
              vLetAst_smapAccumL_Pat_Pat
                (lam acc4594.
                   lam a1430.
                     (f2476 acc4594 a1430, a1430))
                acc4593
                p1997
            in
            res778.0
  let vLetAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f2477.
      lam __sem_target3160.
        match
          __sem_target3160
        with
          p1998
        in
        match
            vLetAst_smapAccumL_Expr_Pat
              (lam #var"849".
                 lam a1431.
                   ({}, f2477 a1431))
              {}
              p1998
          with
            (_, p1999)
          in
          p1999
  let vLetAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f2478.
      lam __sem_target3161.
        match
          __sem_target3161
        with
          p2000
        in
        match
            vLetAst_smapAccumL_Pat_Expr
              (lam #var"850".
                 lam a1432.
                   ({}, f2478 a1432))
              {}
              p2000
          with
            (_, p2001)
          in
          p2001
  let vLetAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f2479.
      lam __sem_target3162.
        match
          __sem_target3162
        with
          p2002
        in
        match
            vLetAst_smapAccumL_Pat_Type
              (lam #var"851".
                 lam a1433.
                   ({}, f2479 a1433))
              {}
              p2002
          with
            (_, p2003)
          in
          p2003
  let vLetAst_countExprNodes =
    lam count985.
      lam __sem_target3163.
        match
          __sem_target3163
        with
          t1169
        in
        let count986 = addi count985 1 in
          let count987 =
            vLetAst_sfold_Expr_Expr vLetAst_countExprNodes count986 t1169
          in
          let count988 =
            vLetAst_sfold_Expr_Type vLetAst_countTypeNodes count987 t1169
          in
          let count989 =
            vLetAst_sfold_Expr_TypeLabel vLetAst_countTypeNodes count988 t1169
          in
          let count990 = vLetAst_sfold_Expr_Pat vLetAst_countPatNodes count989 t1169
          in
          count990
  let vLetAst_countTypeNodes =
    lam count991.
      lam __sem_target3164.
        match
          __sem_target3164
        with
          t1170
        in
        let count992 = addi count991 1 in
          let count993 =
            vLetAst_sfold_Type_Type vLetAst_countTypeNodes count992 t1170
          in
          count993
  let vLetAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f2480.
      lam __sem_target3165.
        match
          __sem_target3165
        with
          ty450
        in
        let res779 =
            vLetAst_rappAccumL_Type_Type
              (lam #var"852".
                 lam t1171.
                   ({}, f2480 t1171))
              {}
              ty450
          in
          res779.1
  let vLetAst_sfold_Expr_Pat: all acc4595. (acc4595 -> Ast_Pat -> acc4595) -> acc4595 -> Ast_Expr -> acc4595 =
    lam f2481.
      lam acc4596.
        lam __sem_target3166.
          match
            __sem_target3166
          with
            p2004
          in
          match
              vLetAst_smapAccumL_Expr_Pat
                (lam acc4597.
                   lam a1434.
                     (f2481 acc4597 a1434, a1434))
                acc4596
                p2004
            with
              (acc4598, _)
            in
            acc4598
  let vLetAst_sfold_Pat_Expr: all acc4599. (acc4599 -> Ast_Expr -> acc4599) -> acc4599 -> Ast_Pat -> acc4599 =
    lam f2482.
      lam acc4600.
        lam __sem_target3167.
          match
            __sem_target3167
          with
            p2005
          in
          match
              vLetAst_smapAccumL_Pat_Expr
                (lam acc4601.
                   lam a1435.
                     (f2482 acc4601 a1435, a1435))
                acc4600
                p2005
            with
              (acc4602, _)
            in
            acc4602
  let vLetAst_sfold_Pat_Type: all acc4603. (acc4603 -> Ast_Type -> acc4603) -> acc4603 -> Ast_Pat -> acc4603 =
    lam f2483.
      lam acc4604.
        lam __sem_target3168.
          match
            __sem_target3168
          with
            p2006
          in
          match
              vLetAst_smapAccumL_Pat_Type
                (lam acc4605.
                   lam a1436.
                     (f2483 acc4605 a1436, a1436))
                acc4604
                p2006
            with
              (acc4606, _)
            in
            acc4606
  let vLetAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f2484.
      lam __sem_target3169.
        match
          __sem_target3169
        with
          p2007
        in
        let res780 =
            vLetAst_smapAccumL_Expr_Expr
              (lam #var"853".
                 lam a1437.
                   ({}, f2484 a1437))
              {}
              p2007
          in
          res780.1
  let vLetAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f2485.
      lam __sem_target3170.
        match
          __sem_target3170
        with
          p2008
        in
        let res781 =
            vLetAst_smapAccumL_Expr_Type
              (lam #var"854".
                 lam a1438.
                   ({}, f2485 a1438))
              {}
              p2008
          in
          res781.1
  let vLetAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f2486: Ast_Type -> Ast_Type.
      lam __sem_target3171.
        match
          __sem_target3171
        with
          s368
        in
        match
            vLetAst_smapAccumL_Kind_Type
              (lam #var"855".
                 lam x671.
                   ({}, f2486 x671))
              {}
              s368
          with
            (_, s369)
          in
          s369
  let vLetAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f2487.
      lam __sem_target3172.
        match
          __sem_target3172
        with
          p2009
        in
        let res782 =
            vLetAst_smapAccumL_Type_Type
              (lam #var"856".
                 lam a1439.
                   ({}, f2487 a1439))
              {}
              p2009
          in
          res782.1
  let vLetAst_sfold_Expr_Expr: all acc4607. (acc4607 -> Ast_Expr -> acc4607) -> acc4607 -> Ast_Expr -> acc4607 =
    lam f2488.
      lam acc4608.
        lam __sem_target3173.
          match
            __sem_target3173
          with
            p2010
          in
          let res783 =
              vLetAst_smapAccumL_Expr_Expr
                (lam acc4609.
                   lam a1440.
                     (f2488 acc4609 a1440, a1440))
                acc4608
                p2010
            in
            res783.0
  let vLetAst_sfold_Expr_Type: all acc4610. (acc4610 -> Ast_Type -> acc4610) -> acc4610 -> Ast_Expr -> acc4610 =
    lam f2489.
      lam acc4611.
        lam __sem_target3174.
          match
            __sem_target3174
          with
            p2011
          in
          let res784 =
              vLetAst_smapAccumL_Expr_Type
                (lam acc4612.
                   lam a1441.
                     (f2489 acc4612 a1441, a1441))
                acc4611
                p2011
            in
            res784.0
  let vLetAst_sfold_Kind_Type: all acc4613. (acc4613 -> Ast_Type -> acc4613) -> acc4613 -> Ast_Kind -> acc4613 =
    lam f2490: acc4613 -> Ast_Type -> acc4613.
      lam acc4614: acc4613.
        lam __sem_target3175.
          match
            __sem_target3175
          with
            s370
          in
          match
              vLetAst_smapAccumL_Kind_Type
                (lam a1442.
                   lam x672.
                     (f2490 a1442 x672, x672))
                acc4614
                s370
            with
              (a1443, _)
            in
            a1443
  let vLetAst_sfold_Type_Type: all acc4615. (acc4615 -> Ast_Type -> acc4615) -> acc4615 -> Ast_Type -> acc4615 =
    lam f2491.
      lam acc4616.
        lam __sem_target3176.
          match
            __sem_target3176
          with
            p2012
          in
          let res785 =
              vLetAst_smapAccumL_Type_Type
                (lam acc4617.
                   lam a1444.
                     (f2491 acc4617 a1444, a1444))
                acc4616
                p2012
            in
            res785.0
  let vLetAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f2492.
      lam __sem_target3177.
        match
          __sem_target3177
        with
          expr630
        in
        let expr631 = f2492 expr630 in
          vLetAst_smap_Expr_Expr (vLetAst_mapPre_Expr_Expr f2492) expr631
  let vLetAst_foldPre_Expr_Expr: all acc4618. (acc4618 -> Ast_Expr -> acc4618) -> acc4618 -> Ast_Expr -> acc4618 =
    lam f2493.
      lam acc4619.
        lam __sem_target3178.
          match
            __sem_target3178
          with
            expr632
          in
          let acc4620 = f2493 acc4619 expr632 in
            vLetAst_sfold_Expr_Expr (vLetAst_foldPre_Expr_Expr f2493) acc4620 expr632
  let vLetAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f2494.
      lam __sem_target3179.
        match
          __sem_target3179
        with
          expr633
        in
        f2494
            (vLetAst_smap_Expr_Expr (vLetAst_mapPost_Expr_Expr f2494) expr633)
  let vLetAst_foldPost_Expr_Expr: all acc4621. (acc4621 -> Ast_Expr -> acc4621) -> acc4621 -> Ast_Expr -> acc4621 =
    lam f2495.
      lam acc4622.
        lam __sem_target3180.
          match
            __sem_target3180
          with
            expr634
          in
          f2495
              (vLetAst_sfold_Expr_Expr (vLetAst_foldPost_Expr_Expr f2495) acc4622 expr634)
              expr634
  let vLetAst_smapAccumL_Pat_Pat: all acc4623. (acc4623 -> Ast_Pat -> (acc4623, Ast_Pat)) -> acc4623 -> Ast_Pat -> (acc4623, Ast_Pat) =
    lam f2496.
      lam acc4624.
        lam __sem_target3181.
          match
            __sem_target3181
          with
            p2013
          in
          (acc4624, p2013)
  let vLetAst_smapAccumL_Expr_Pat: all acc4625. (acc4625 -> Ast_Pat -> (acc4625, Ast_Pat)) -> acc4625 -> Ast_Expr -> (acc4625, Ast_Expr) =
    lam f2497.
      lam acc4626.
        lam __sem_target3182.
          match
            __sem_target3182
          with
            p2014
          in
          (acc4626, p2014)
  let vLetAst_smapAccumL_Pat_Expr: all acc4627. (acc4627 -> Ast_Expr -> (acc4627, Ast_Expr)) -> acc4627 -> Ast_Pat -> (acc4627, Ast_Pat) =
    lam f2498.
      lam acc4628.
        lam __sem_target3183.
          match
            __sem_target3183
          with
            p2015
          in
          (acc4628, p2015)
  let vLetAst_smapAccumL_Pat_Type: all acc4629. (acc4629 -> Ast_Type -> (acc4629, Ast_Type)) -> acc4629 -> Ast_Pat -> (acc4629, Ast_Pat) =
    lam f2499.
      lam acc4630.
        lam __sem_target3184.
          match
            __sem_target3184
          with
            p2016
          in
          (acc4630, p2016)
  let vLetAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f2500.
      lam __sem_target3185.
        match
          __sem_target3185
        with
          p2017
        in
        let res786 =
            vLetAst_smapAccumL_Expr_TypeLabel
              (lam #var"857".
                 lam a1445.
                   ({}, f2500 a1445))
              {}
              p2017
          in
          res786.1
  let vLetAst_rappAccumL_Type_Type: all acc4631. (acc4631 -> Ast_Type -> (acc4631, Ast_Type)) -> acc4631 -> Ast_Type -> (acc4631, Ast_Type) =
    lam f2501.
      lam acc4632.
        lam __sem_target3186.
          match
            __sem_target3186
          with
            ty451
          in
          (acc4632, ty451)
  let vLetAst_sfold_Expr_TypeLabel: all acc4633. (acc4633 -> Ast_Type -> acc4633) -> acc4633 -> Ast_Expr -> acc4633 =
    lam f2502.
      lam acc4634.
        lam __sem_target3187.
          match
            __sem_target3187
          with
            p2018
          in
          let res787 =
              vLetAst_smapAccumL_Expr_TypeLabel
                (lam acc4635.
                   lam a1446.
                     (f2502 acc4635 a1446, a1446))
                acc4634
                p2018
            in
            res787.0
  let vLetAst_smapAccumL_Expr_Expr: all acc4636. (acc4636 -> Ast_Expr -> (acc4636, Ast_Expr)) -> acc4636 -> Ast_Expr -> (acc4636, Ast_Expr) =
    lam f2503.
      lam acc4637.
        lam __sem_target3188.
          match
            __sem_target3188
          with
            LetAst_TmLet t1172
          then
            match
              f2503 acc4637 t1172.body
            with
              (acc4638, body15)
            in
            match
                f2503 acc4638 t1172.inexpr
              with
                (acc4639, inexpr20)
              in
              (acc4639, LetAst_TmLet
                  { t1172 with body = body15, inexpr = inexpr20 })
          else match
            __sem_target3188
          with
            p2019
          in
          (acc4637, p2019)
  let vLetAst_smapAccumL_Expr_Type: all acc4640. (acc4640 -> Ast_Type -> (acc4640, Ast_Type)) -> acc4640 -> Ast_Expr -> (acc4640, Ast_Expr) =
    lam f2504.
      lam acc4641.
        lam __sem_target3189.
          match
            __sem_target3189
          with
            LetAst_TmLet t1173
          then
            match
              f2504 acc4641 t1173.tyAnnot
            with
              (acc4642, tyAnnot10)
            in
            (acc4642, LetAst_TmLet
                { t1173 with tyAnnot = tyAnnot10 })
          else match
            __sem_target3189
          with
            p2020
          in
          (acc4641, p2020)
  let vLetAst_smapAccumL_Kind_Type: all acc4643. (acc4643 -> Ast_Type -> (acc4643, Ast_Type)) -> acc4643 -> Ast_Kind -> (acc4643, Ast_Kind) =
    lam f2505.
      lam acc4644.
        lam __sem_target3190.
          match
            __sem_target3190
          with
            s371
          in
          (acc4644, s371)
  let vLetAst_smapAccumL_Type_Type: all acc4645. (acc4645 -> Ast_Type -> (acc4645, Ast_Type)) -> acc4645 -> Ast_Type -> (acc4645, Ast_Type) =
    lam f2506.
      lam acc4646.
        lam __sem_target3191.
          match
            __sem_target3191
          with
            p2021
          in
          (acc4646, p2021)
  let vLetAst_mapAccumLPre_Expr_Expr: all acc4647. (acc4647 -> Ast_Expr -> (acc4647, Ast_Expr)) -> acc4647 -> Ast_Expr -> (acc4647, Ast_Expr) =
    lam f2507.
      lam acc4648.
        lam __sem_target3192.
          match
            __sem_target3192
          with
            expr635
          in
          match
              f2507 acc4648 expr635
            with
              (acc4649, expr636)
            in
            vLetAst_smapAccumL_Expr_Expr (vLetAst_mapAccumLPre_Expr_Expr f2507) acc4649 expr636
  let vLetAst_mapAccumLPost_Expr_Expr: all acc4650. (acc4650 -> Ast_Expr -> (acc4650, Ast_Expr)) -> acc4650 -> Ast_Expr -> (acc4650, Ast_Expr) =
    lam f2508.
      lam acc4651.
        lam __sem_target3193.
          match
            __sem_target3193
          with
            expr637
          in
          match
              vLetAst_smapAccumL_Expr_Expr (vLetAst_mapAccumLPost_Expr_Expr f2508) acc4651 expr637
            with
              (acc4652, expr638)
            in
            f2508 acc4652 expr638
  let vLetAst_smapAccumL_Expr_TypeLabel: all acc4653. (acc4653 -> Ast_Type -> (acc4653, Ast_Type)) -> acc4653 -> Ast_Expr -> (acc4653, Ast_Expr) =
    lam f2509.
      lam acc4654.
        lam __sem_target3194.
          match
            __sem_target3194
          with
            LetAst_TmLet t1174
          then
            match
              f2509 acc4654 t1174.tyBody
            with
              (acc4655, tyBody7)
            in
            match
                f2509 acc4655 t1174.ty
              with
                (acc4656, ty452)
              in
              (acc4656, LetAst_TmLet
                  { t1174 with tyBody = tyBody7, ty = ty452 })
          else match
            __sem_target3194
          with
            p2022
          in
          match
              f2509 acc4654 (vLetAst_tyTm p2022)
            with
              (acc4657, ty453)
            in
            (acc4657, vLetAst_withType ty453 p2022)
in
type RecLetsAst_RecLetBinding =
  {body: Ast_Expr, info: Info, ident: Name, tyBody: Ast_Type, tyAnnot: Ast_Type}
in
con RecLetsAst_TmRecLets: {ty: Ast_Type, info: Info, inexpr: Ast_Expr, bindings: [RecLetsAst_RecLetBinding]} -> Ast_Expr in
recursive
  let vRecLetsAst_tyTm: Ast_Expr -> Ast_Type =
    lam __sem_target3107.
      match
        __sem_target3107
      with
        VarAst_TmVar t1149
      then
        t1149.ty
      else match
        __sem_target3107
      with
        RecLetsAst_TmRecLets t1150
      in
      t1150.ty
  let vRecLetsAst_tyPat: Ast_Pat -> Ast_Type = lam x657.
      never
  let vRecLetsAst_infoTm: Ast_Expr -> Info =
    lam __sem_target3108.
      match
        __sem_target3108
      with
        VarAst_TmVar r369
      then
        r369.info
      else match
        __sem_target3108
      with
        RecLetsAst_TmRecLets r370
      in
      r370.info
  let vRecLetsAst_infoTy: Ast_Type -> Info = lam x658.
      never
  let vRecLetsAst_infoPat: Ast_Pat -> Info = lam x659.
      never
  let vRecLetsAst_withInfo: Info -> Ast_Expr -> Ast_Expr =
    lam info74.
      lam __sem_target3109.
        match
          __sem_target3109
        with
          VarAst_TmVar t1151
        then
          VarAst_TmVar
            { t1151 with info = info74 }
        else match
          __sem_target3109
        with
          RecLetsAst_TmRecLets t1152
        in
        RecLetsAst_TmRecLets
            { t1152 with info = info74 }
  let vRecLetsAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr =
    lam ty440: Ast_Type.
      lam __sem_target3110.
        match
          __sem_target3110
        with
          VarAst_TmVar t1153
        then
          VarAst_TmVar
            { t1153 with ty = ty440 }
        else match
          __sem_target3110
        with
          RecLetsAst_TmRecLets t1154
        in
        RecLetsAst_TmRecLets
            { t1154 with ty = ty440 }
  let vRecLetsAst_tyWithInfo: Info -> Ast_Type -> Ast_Type = lam x660.
      never
  let vRecLetsAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target3111.
      match
        __sem_target3111
      with
        ty441
      in
      vRecLetsAst_rapp_Type_Type vRecLetsAst_unwrapType ty441
  let vRecLetsAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target3112.
      match
        __sem_target3112
      with
        ty442
      in
      vRecLetsAst_rapp_Type_Type vRecLetsAst_inspectType ty442
  let vRecLetsAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x661.
      never
  let vRecLetsAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x662.
      never
  let vRecLetsAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f2440.
      lam __sem_target3113.
        match
          __sem_target3113
        with
          p1969
        in
        let res766 =
            vRecLetsAst_smapAccumL_Pat_Pat
              (lam #var"838".
                 lam a1411.
                   ({}, f2440 a1411))
              {}
              p1969
          in
          res766.1
  let vRecLetsAst_countPatNodes =
    lam count966.
      lam __sem_target3114.
        match
          __sem_target3114
        with
          t1155
        in
        let count967 = addi count966 1 in
          let count968 =
            vRecLetsAst_sfold_Pat_Pat vRecLetsAst_countPatNodes count967 t1155
          in
          let count969 =
            vRecLetsAst_sfold_Pat_Expr vRecLetsAst_countExprNodes count968 t1155
          in
          let count970 =
            vRecLetsAst_sfold_Pat_Type vRecLetsAst_countTypeNodes count969 t1155
          in
          count970
  let vRecLetsAst_sfold_Pat_Pat: all acc4520. (acc4520 -> Ast_Pat -> acc4520) -> acc4520 -> Ast_Pat -> acc4520 =
    lam f2441.
      lam acc4521.
        lam __sem_target3115.
          match
            __sem_target3115
          with
            p1970
          in
          let res767 =
              vRecLetsAst_smapAccumL_Pat_Pat
                (lam acc4522.
                   lam a1412.
                     (f2441 acc4522 a1412, a1412))
                acc4521
                p1970
            in
            res767.0
  let vRecLetsAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f2442.
      lam __sem_target3116.
        match
          __sem_target3116
        with
          p1971
        in
        match
            vRecLetsAst_smapAccumL_Expr_Pat
              (lam #var"839".
                 lam a1413.
                   ({}, f2442 a1413))
              {}
              p1971
          with
            (_, p1972)
          in
          p1972
  let vRecLetsAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f2443.
      lam __sem_target3117.
        match
          __sem_target3117
        with
          p1973
        in
        match
            vRecLetsAst_smapAccumL_Pat_Expr
              (lam #var"840".
                 lam a1414.
                   ({}, f2443 a1414))
              {}
              p1973
          with
            (_, p1974)
          in
          p1974
  let vRecLetsAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f2444.
      lam __sem_target3118.
        match
          __sem_target3118
        with
          p1975
        in
        match
            vRecLetsAst_smapAccumL_Pat_Type
              (lam #var"841".
                 lam a1415.
                   ({}, f2444 a1415))
              {}
              p1975
          with
            (_, p1976)
          in
          p1976
  let vRecLetsAst_countExprNodes =
    lam count971.
      lam __sem_target3119.
        match
          __sem_target3119
        with
          t1156
        in
        let count972 = addi count971 1 in
          let count973 =
            vRecLetsAst_sfold_Expr_Expr vRecLetsAst_countExprNodes count972 t1156
          in
          let count974 =
            vRecLetsAst_sfold_Expr_Type vRecLetsAst_countTypeNodes count973 t1156
          in
          let count975 =
            vRecLetsAst_sfold_Expr_TypeLabel vRecLetsAst_countTypeNodes count974 t1156
          in
          let count976 =
            vRecLetsAst_sfold_Expr_Pat vRecLetsAst_countPatNodes count975 t1156
          in
          count976
  let vRecLetsAst_countTypeNodes =
    lam count977.
      lam __sem_target3120.
        match
          __sem_target3120
        with
          t1157
        in
        let count978 = addi count977 1 in
          let count979 =
            vRecLetsAst_sfold_Type_Type vRecLetsAst_countTypeNodes count978 t1157
          in
          count979
  let vRecLetsAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f2445.
      lam __sem_target3121.
        match
          __sem_target3121
        with
          ty443
        in
        let res768 =
            vRecLetsAst_rappAccumL_Type_Type
              (lam #var"842".
                 lam t1158.
                   ({}, f2445 t1158))
              {}
              ty443
          in
          res768.1
  let vRecLetsAst_sfold_Expr_Pat: all acc4523. (acc4523 -> Ast_Pat -> acc4523) -> acc4523 -> Ast_Expr -> acc4523 =
    lam f2446.
      lam acc4524.
        lam __sem_target3122.
          match
            __sem_target3122
          with
            p1977
          in
          match
              vRecLetsAst_smapAccumL_Expr_Pat
                (lam acc4525.
                   lam a1416.
                     (f2446 acc4525 a1416, a1416))
                acc4524
                p1977
            with
              (acc4526, _)
            in
            acc4526
  let vRecLetsAst_sfold_Pat_Expr: all acc4527. (acc4527 -> Ast_Expr -> acc4527) -> acc4527 -> Ast_Pat -> acc4527 =
    lam f2447.
      lam acc4528.
        lam __sem_target3123.
          match
            __sem_target3123
          with
            p1978
          in
          match
              vRecLetsAst_smapAccumL_Pat_Expr
                (lam acc4529.
                   lam a1417.
                     (f2447 acc4529 a1417, a1417))
                acc4528
                p1978
            with
              (acc4530, _)
            in
            acc4530
  let vRecLetsAst_sfold_Pat_Type: all acc4531. (acc4531 -> Ast_Type -> acc4531) -> acc4531 -> Ast_Pat -> acc4531 =
    lam f2448.
      lam acc4532.
        lam __sem_target3124.
          match
            __sem_target3124
          with
            p1979
          in
          match
              vRecLetsAst_smapAccumL_Pat_Type
                (lam acc4533.
                   lam a1418.
                     (f2448 acc4533 a1418, a1418))
                acc4532
                p1979
            with
              (acc4534, _)
            in
            acc4534
  let vRecLetsAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f2449.
      lam __sem_target3125.
        match
          __sem_target3125
        with
          p1980
        in
        let res769 =
            vRecLetsAst_smapAccumL_Expr_Expr
              (lam #var"843".
                 lam a1419.
                   ({}, f2449 a1419))
              {}
              p1980
          in
          res769.1
  let vRecLetsAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f2450.
      lam __sem_target3126.
        match
          __sem_target3126
        with
          p1981
        in
        let res770 =
            vRecLetsAst_smapAccumL_Expr_Type
              (lam #var"844".
                 lam a1420.
                   ({}, f2450 a1420))
              {}
              p1981
          in
          res770.1
  let vRecLetsAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f2451: Ast_Type -> Ast_Type.
      lam __sem_target3127.
        match
          __sem_target3127
        with
          s364
        in
        match
            vRecLetsAst_smapAccumL_Kind_Type
              (lam #var"845".
                 lam x663.
                   ({}, f2451 x663))
              {}
              s364
          with
            (_, s365)
          in
          s365
  let vRecLetsAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f2452.
      lam __sem_target3128.
        match
          __sem_target3128
        with
          p1982
        in
        let res771 =
            vRecLetsAst_smapAccumL_Type_Type
              (lam #var"846".
                 lam a1421.
                   ({}, f2452 a1421))
              {}
              p1982
          in
          res771.1
  let vRecLetsAst_sfold_Expr_Expr: all acc4535. (acc4535 -> Ast_Expr -> acc4535) -> acc4535 -> Ast_Expr -> acc4535 =
    lam f2453.
      lam acc4536.
        lam __sem_target3129.
          match
            __sem_target3129
          with
            p1983
          in
          let res772 =
              vRecLetsAst_smapAccumL_Expr_Expr
                (lam acc4537.
                   lam a1422.
                     (f2453 acc4537 a1422, a1422))
                acc4536
                p1983
            in
            res772.0
  let vRecLetsAst_sfold_Expr_Type: all acc4538. (acc4538 -> Ast_Type -> acc4538) -> acc4538 -> Ast_Expr -> acc4538 =
    lam f2454.
      lam acc4539.
        lam __sem_target3130.
          match
            __sem_target3130
          with
            p1984
          in
          let res773 =
              vRecLetsAst_smapAccumL_Expr_Type
                (lam acc4540.
                   lam a1423.
                     (f2454 acc4540 a1423, a1423))
                acc4539
                p1984
            in
            res773.0
  let vRecLetsAst_sfold_Kind_Type: all acc4541. (acc4541 -> Ast_Type -> acc4541) -> acc4541 -> Ast_Kind -> acc4541 =
    lam f2455: acc4541 -> Ast_Type -> acc4541.
      lam acc4542: acc4541.
        lam __sem_target3131.
          match
            __sem_target3131
          with
            s366
          in
          match
              vRecLetsAst_smapAccumL_Kind_Type
                (lam a1424.
                   lam x664.
                     (f2455 a1424 x664, x664))
                acc4542
                s366
            with
              (a1425, _)
            in
            a1425
  let vRecLetsAst_sfold_Type_Type: all acc4543. (acc4543 -> Ast_Type -> acc4543) -> acc4543 -> Ast_Type -> acc4543 =
    lam f2456.
      lam acc4544.
        lam __sem_target3132.
          match
            __sem_target3132
          with
            p1985
          in
          let res774 =
              vRecLetsAst_smapAccumL_Type_Type
                (lam acc4545.
                   lam a1426.
                     (f2456 acc4545 a1426, a1426))
                acc4544
                p1985
            in
            res774.0
  let vRecLetsAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f2457.
      lam __sem_target3133.
        match
          __sem_target3133
        with
          expr621
        in
        let expr622 = f2457 expr621 in
          vRecLetsAst_smap_Expr_Expr (vRecLetsAst_mapPre_Expr_Expr f2457) expr622
  let vRecLetsAst_foldPre_Expr_Expr: all acc4546. (acc4546 -> Ast_Expr -> acc4546) -> acc4546 -> Ast_Expr -> acc4546 =
    lam f2458.
      lam acc4547.
        lam __sem_target3134.
          match
            __sem_target3134
          with
            expr623
          in
          let acc4548 = f2458 acc4547 expr623 in
            vRecLetsAst_sfold_Expr_Expr (vRecLetsAst_foldPre_Expr_Expr f2458) acc4548 expr623
  let vRecLetsAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f2459.
      lam __sem_target3135.
        match
          __sem_target3135
        with
          expr624
        in
        f2459
            (vRecLetsAst_smap_Expr_Expr (vRecLetsAst_mapPost_Expr_Expr f2459) expr624)
  let vRecLetsAst_foldPost_Expr_Expr: all acc4549. (acc4549 -> Ast_Expr -> acc4549) -> acc4549 -> Ast_Expr -> acc4549 =
    lam f2460.
      lam acc4550.
        lam __sem_target3136.
          match
            __sem_target3136
          with
            expr625
          in
          f2460
              (vRecLetsAst_sfold_Expr_Expr (vRecLetsAst_foldPost_Expr_Expr f2460) acc4550 expr625)
              expr625
  let vRecLetsAst_smapAccumL_Pat_Pat: all acc4551. (acc4551 -> Ast_Pat -> (acc4551, Ast_Pat)) -> acc4551 -> Ast_Pat -> (acc4551, Ast_Pat) =
    lam f2461.
      lam acc4552.
        lam __sem_target3137.
          match
            __sem_target3137
          with
            p1986
          in
          (acc4552, p1986)
  let vRecLetsAst_smapAccumL_Expr_Pat: all acc4553. (acc4553 -> Ast_Pat -> (acc4553, Ast_Pat)) -> acc4553 -> Ast_Expr -> (acc4553, Ast_Expr) =
    lam f2462.
      lam acc4554.
        lam __sem_target3138.
          match
            __sem_target3138
          with
            p1987
          in
          (acc4554, p1987)
  let vRecLetsAst_smapAccumL_Pat_Expr: all acc4555. (acc4555 -> Ast_Expr -> (acc4555, Ast_Expr)) -> acc4555 -> Ast_Pat -> (acc4555, Ast_Pat) =
    lam f2463.
      lam acc4556.
        lam __sem_target3139.
          match
            __sem_target3139
          with
            p1988
          in
          (acc4556, p1988)
  let vRecLetsAst_smapAccumL_Pat_Type: all acc4557. (acc4557 -> Ast_Type -> (acc4557, Ast_Type)) -> acc4557 -> Ast_Pat -> (acc4557, Ast_Pat) =
    lam f2464.
      lam acc4558.
        lam __sem_target3140.
          match
            __sem_target3140
          with
            p1989
          in
          (acc4558, p1989)
  let vRecLetsAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f2465.
      lam __sem_target3141.
        match
          __sem_target3141
        with
          p1990
        in
        let res775 =
            vRecLetsAst_smapAccumL_Expr_TypeLabel
              (lam #var"847".
                 lam a1427.
                   ({}, f2465 a1427))
              {}
              p1990
          in
          res775.1
  let vRecLetsAst_rappAccumL_Type_Type: all acc4559. (acc4559 -> Ast_Type -> (acc4559, Ast_Type)) -> acc4559 -> Ast_Type -> (acc4559, Ast_Type) =
    lam f2466.
      lam acc4560.
        lam __sem_target3142.
          match
            __sem_target3142
          with
            ty444
          in
          (acc4560, ty444)
  let vRecLetsAst_sfold_Expr_TypeLabel: all acc4561. (acc4561 -> Ast_Type -> acc4561) -> acc4561 -> Ast_Expr -> acc4561 =
    lam f2467.
      lam acc4562.
        lam __sem_target3143.
          match
            __sem_target3143
          with
            p1991
          in
          let res776 =
              vRecLetsAst_smapAccumL_Expr_TypeLabel
                (lam acc4563.
                   lam a1428.
                     (f2467 acc4563 a1428, a1428))
                acc4562
                p1991
            in
            res776.0
  let vRecLetsAst_smapAccumL_Expr_Expr: all acc4564. (acc4564 -> Ast_Expr -> (acc4564, Ast_Expr)) -> acc4564 -> Ast_Expr -> (acc4564, Ast_Expr) =
    lam f2468.
      lam acc4565.
        lam __sem_target3144.
          match
            __sem_target3144
          with
            RecLetsAst_TmRecLets t1159
          then
            let bindingFunc9 =
              lam acc4568.
                lam b46: RecLetsAst_RecLetBinding.
                  match
                    f2468 acc4568 b46.body
                  with
                    (acc4569, body14)
                  in
                  (acc4569, { b46 with body = body14 })
            in
            match
              mapAccumL bindingFunc9 acc4565 t1159.bindings
            with
              (acc4566, bindings17)
            in
            match
                f2468 acc4566 t1159.inexpr
              with
                (acc4567, inexpr19)
              in
              (acc4567, RecLetsAst_TmRecLets
                  { t1159 with bindings = bindings17, inexpr = inexpr19 })
          else match
            __sem_target3144
          with
            p1992
          in
          (acc4565, p1992)
  let vRecLetsAst_smapAccumL_Expr_Type: all acc4570. (acc4570 -> Ast_Type -> (acc4570, Ast_Type)) -> acc4570 -> Ast_Expr -> (acc4570, Ast_Expr) =
    lam f2469.
      lam acc4571.
        lam __sem_target3145.
          match
            __sem_target3145
          with
            RecLetsAst_TmRecLets t1160
          then
            let bindingFunc10 =
              lam acc4573.
                lam b47: RecLetsAst_RecLetBinding.
                  match
                    f2469 acc4573 b47.tyAnnot
                  with
                    (acc4574, tyAnnot9)
                  in
                  (acc4574, { b47 with tyAnnot = tyAnnot9 })
            in
            match
              mapAccumL bindingFunc10 acc4571 t1160.bindings
            with
              (acc4572, bindings18)
            in
            (acc4572, RecLetsAst_TmRecLets
                { t1160 with bindings = bindings18 })
          else match
            __sem_target3145
          with
            p1993
          in
          (acc4571, p1993)
  let vRecLetsAst_smapAccumL_Kind_Type: all acc4575. (acc4575 -> Ast_Type -> (acc4575, Ast_Type)) -> acc4575 -> Ast_Kind -> (acc4575, Ast_Kind) =
    lam f2470.
      lam acc4576.
        lam __sem_target3146.
          match
            __sem_target3146
          with
            s367
          in
          (acc4576, s367)
  let vRecLetsAst_smapAccumL_Type_Type: all acc4577. (acc4577 -> Ast_Type -> (acc4577, Ast_Type)) -> acc4577 -> Ast_Type -> (acc4577, Ast_Type) =
    lam f2471.
      lam acc4578.
        lam __sem_target3147.
          match
            __sem_target3147
          with
            p1994
          in
          (acc4578, p1994)
  let vRecLetsAst_mapAccumLPre_Expr_Expr: all acc4579. (acc4579 -> Ast_Expr -> (acc4579, Ast_Expr)) -> acc4579 -> Ast_Expr -> (acc4579, Ast_Expr) =
    lam f2472.
      lam acc4580.
        lam __sem_target3148.
          match
            __sem_target3148
          with
            expr626
          in
          match
              f2472 acc4580 expr626
            with
              (acc4581, expr627)
            in
            vRecLetsAst_smapAccumL_Expr_Expr (vRecLetsAst_mapAccumLPre_Expr_Expr f2472) acc4581 expr627
  let vRecLetsAst_mapAccumLPost_Expr_Expr: all acc4582. (acc4582 -> Ast_Expr -> (acc4582, Ast_Expr)) -> acc4582 -> Ast_Expr -> (acc4582, Ast_Expr) =
    lam f2473.
      lam acc4583.
        lam __sem_target3149.
          match
            __sem_target3149
          with
            expr628
          in
          match
              vRecLetsAst_smapAccumL_Expr_Expr (vRecLetsAst_mapAccumLPost_Expr_Expr f2473) acc4583 expr628
            with
              (acc4584, expr629)
            in
            f2473 acc4584 expr629
  let vRecLetsAst_smapAccumL_Expr_TypeLabel: all acc4585. (acc4585 -> Ast_Type -> (acc4585, Ast_Type)) -> acc4585 -> Ast_Expr -> (acc4585, Ast_Expr) =
    lam f2474.
      lam acc4586.
        lam __sem_target3150.
          match
            __sem_target3150
          with
            RecLetsAst_TmRecLets t1161
          then
            let bindingFunc11 =
              lam acc4589.
                lam b48: RecLetsAst_RecLetBinding.
                  match
                    f2474 acc4589 b48.tyBody
                  with
                    (acc4590, tyBody6)
                  in
                  (acc4590, { b48 with tyBody = tyBody6 })
            in
            match
              mapAccumL bindingFunc11 acc4586 t1161.bindings
            with
              (acc4587, bindings19)
            in
            match
                f2474 acc4587 t1161.ty
              with
                (acc4588, ty445)
              in
              (acc4588, RecLetsAst_TmRecLets
                  { t1161 with bindings = bindings19, ty = ty445 })
          else match
            __sem_target3150
          with
            p1995
          in
          match
              f2474 acc4586 (vRecLetsAst_tyTm p1995)
            with
              (acc4591, ty446)
            in
            (acc4591, vRecLetsAst_withType ty446 p1995)
in
type ConstAst_Const
in
con ConstAst_TmConst: {ty: Ast_Type, val: ConstAst_Const, info: Info} -> Ast_Expr in
recursive
  let vConstAst_tyTm: Ast_Expr -> Ast_Type =
    lam __sem_target3063.
      match
        __sem_target3063
      with
        ConstAst_TmConst t1142
      in
      t1142.ty
  let vConstAst_tyPat: Ast_Pat -> Ast_Type = lam x649.
      never
  let vConstAst_infoTm: Ast_Expr -> Info =
    lam __sem_target3064.
      match
        __sem_target3064
      with
        ConstAst_TmConst r368
      in
      r368.info
  let vConstAst_infoTy: Ast_Type -> Info = lam x650.
      never
  let vConstAst_infoPat: Ast_Pat -> Info = lam x651.
      never
  let vConstAst_withInfo: Info -> Ast_Expr -> Ast_Expr =
    lam info73.
      lam __sem_target3065.
        match
          __sem_target3065
        with
          ConstAst_TmConst t1143
        in
        ConstAst_TmConst
            { t1143 with info = info73 }
  let vConstAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr =
    lam ty434: Ast_Type.
      lam __sem_target3066.
        match
          __sem_target3066
        with
          ConstAst_TmConst t1144
        in
        ConstAst_TmConst
            { t1144 with ty = ty434 }
  let vConstAst_tyWithInfo: Info -> Ast_Type -> Ast_Type = lam x652.
      never
  let vConstAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target3067.
      match
        __sem_target3067
      with
        ty435
      in
      vConstAst_rapp_Type_Type vConstAst_unwrapType ty435
  let vConstAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target3068.
      match
        __sem_target3068
      with
        ty436
      in
      vConstAst_rapp_Type_Type vConstAst_inspectType ty436
  let vConstAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x653.
      never
  let vConstAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x654.
      never
  let vConstAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f2405.
      lam __sem_target3069.
        match
          __sem_target3069
        with
          p1942
        in
        let res755 =
            vConstAst_smapAccumL_Pat_Pat
              (lam #var"828".
                 lam a1393.
                   ({}, f2405 a1393))
              {}
              p1942
          in
          res755.1
  let vConstAst_countPatNodes =
    lam count952.
      lam __sem_target3070.
        match
          __sem_target3070
        with
          t1145
        in
        let count953 = addi count952 1 in
          let count954 =
            vConstAst_sfold_Pat_Pat vConstAst_countPatNodes count953 t1145
          in
          let count955 =
            vConstAst_sfold_Pat_Expr vConstAst_countExprNodes count954 t1145
          in
          let count956 =
            vConstAst_sfold_Pat_Type vConstAst_countTypeNodes count955 t1145
          in
          count956
  let vConstAst_sfold_Pat_Pat: all acc4459. (acc4459 -> Ast_Pat -> acc4459) -> acc4459 -> Ast_Pat -> acc4459 =
    lam f2406.
      lam acc4460.
        lam __sem_target3071.
          match
            __sem_target3071
          with
            p1943
          in
          let res756 =
              vConstAst_smapAccumL_Pat_Pat
                (lam acc4461.
                   lam a1394.
                     (f2406 acc4461 a1394, a1394))
                acc4460
                p1943
            in
            res756.0
  let vConstAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f2407.
      lam __sem_target3072.
        match
          __sem_target3072
        with
          p1944
        in
        match
            vConstAst_smapAccumL_Expr_Pat
              (lam #var"829".
                 lam a1395.
                   ({}, f2407 a1395))
              {}
              p1944
          with
            (_, p1945)
          in
          p1945
  let vConstAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f2408.
      lam __sem_target3073.
        match
          __sem_target3073
        with
          p1946
        in
        match
            vConstAst_smapAccumL_Pat_Expr
              (lam #var"830".
                 lam a1396.
                   ({}, f2408 a1396))
              {}
              p1946
          with
            (_, p1947)
          in
          p1947
  let vConstAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f2409.
      lam __sem_target3074.
        match
          __sem_target3074
        with
          p1948
        in
        match
            vConstAst_smapAccumL_Pat_Type
              (lam #var"831".
                 lam a1397.
                   ({}, f2409 a1397))
              {}
              p1948
          with
            (_, p1949)
          in
          p1949
  let vConstAst_countExprNodes =
    lam count957.
      lam __sem_target3075.
        match
          __sem_target3075
        with
          t1146
        in
        let count958 = addi count957 1 in
          let count959 =
            vConstAst_sfold_Expr_Expr vConstAst_countExprNodes count958 t1146
          in
          let count960 =
            vConstAst_sfold_Expr_Type vConstAst_countTypeNodes count959 t1146
          in
          let count961 =
            vConstAst_sfold_Expr_TypeLabel vConstAst_countTypeNodes count960 t1146
          in
          let count962 =
            vConstAst_sfold_Expr_Pat vConstAst_countPatNodes count961 t1146
          in
          count962
  let vConstAst_countTypeNodes =
    lam count963.
      lam __sem_target3076.
        match
          __sem_target3076
        with
          t1147
        in
        let count964 = addi count963 1 in
          let count965 =
            vConstAst_sfold_Type_Type vConstAst_countTypeNodes count964 t1147
          in
          count965
  let vConstAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f2410.
      lam __sem_target3077.
        match
          __sem_target3077
        with
          ty437
        in
        let res757 =
            vConstAst_rappAccumL_Type_Type
              (lam #var"832".
                 lam t1148.
                   ({}, f2410 t1148))
              {}
              ty437
          in
          res757.1
  let vConstAst_sfold_Expr_Pat: all acc4462. (acc4462 -> Ast_Pat -> acc4462) -> acc4462 -> Ast_Expr -> acc4462 =
    lam f2411.
      lam acc4463.
        lam __sem_target3078.
          match
            __sem_target3078
          with
            p1950
          in
          match
              vConstAst_smapAccumL_Expr_Pat
                (lam acc4464.
                   lam a1398.
                     (f2411 acc4464 a1398, a1398))
                acc4463
                p1950
            with
              (acc4465, _)
            in
            acc4465
  let vConstAst_sfold_Pat_Expr: all acc4466. (acc4466 -> Ast_Expr -> acc4466) -> acc4466 -> Ast_Pat -> acc4466 =
    lam f2412.
      lam acc4467.
        lam __sem_target3079.
          match
            __sem_target3079
          with
            p1951
          in
          match
              vConstAst_smapAccumL_Pat_Expr
                (lam acc4468.
                   lam a1399.
                     (f2412 acc4468 a1399, a1399))
                acc4467
                p1951
            with
              (acc4469, _)
            in
            acc4469
  let vConstAst_sfold_Pat_Type: all acc4470. (acc4470 -> Ast_Type -> acc4470) -> acc4470 -> Ast_Pat -> acc4470 =
    lam f2413.
      lam acc4471.
        lam __sem_target3080.
          match
            __sem_target3080
          with
            p1952
          in
          match
              vConstAst_smapAccumL_Pat_Type
                (lam acc4472.
                   lam a1400.
                     (f2413 acc4472 a1400, a1400))
                acc4471
                p1952
            with
              (acc4473, _)
            in
            acc4473
  let vConstAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f2414.
      lam __sem_target3081.
        match
          __sem_target3081
        with
          p1953
        in
        let res758 =
            vConstAst_smapAccumL_Expr_Expr
              (lam #var"833".
                 lam a1401.
                   ({}, f2414 a1401))
              {}
              p1953
          in
          res758.1
  let vConstAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f2415.
      lam __sem_target3082.
        match
          __sem_target3082
        with
          p1954
        in
        let res759 =
            vConstAst_smapAccumL_Expr_Type
              (lam #var"834".
                 lam a1402.
                   ({}, f2415 a1402))
              {}
              p1954
          in
          res759.1
  let vConstAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f2416: Ast_Type -> Ast_Type.
      lam __sem_target3083.
        match
          __sem_target3083
        with
          s360
        in
        match
            vConstAst_smapAccumL_Kind_Type
              (lam #var"835".
                 lam x655.
                   ({}, f2416 x655))
              {}
              s360
          with
            (_, s361)
          in
          s361
  let vConstAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f2417.
      lam __sem_target3084.
        match
          __sem_target3084
        with
          p1955
        in
        let res760 =
            vConstAst_smapAccumL_Type_Type
              (lam #var"836".
                 lam a1403.
                   ({}, f2417 a1403))
              {}
              p1955
          in
          res760.1
  let vConstAst_sfold_Expr_Expr: all acc4474. (acc4474 -> Ast_Expr -> acc4474) -> acc4474 -> Ast_Expr -> acc4474 =
    lam f2418.
      lam acc4475.
        lam __sem_target3085.
          match
            __sem_target3085
          with
            p1956
          in
          let res761 =
              vConstAst_smapAccumL_Expr_Expr
                (lam acc4476.
                   lam a1404.
                     (f2418 acc4476 a1404, a1404))
                acc4475
                p1956
            in
            res761.0
  let vConstAst_sfold_Expr_Type: all acc4477. (acc4477 -> Ast_Type -> acc4477) -> acc4477 -> Ast_Expr -> acc4477 =
    lam f2419.
      lam acc4478.
        lam __sem_target3086.
          match
            __sem_target3086
          with
            p1957
          in
          let res762 =
              vConstAst_smapAccumL_Expr_Type
                (lam acc4479.
                   lam a1405.
                     (f2419 acc4479 a1405, a1405))
                acc4478
                p1957
            in
            res762.0
  let vConstAst_sfold_Kind_Type: all acc4480. (acc4480 -> Ast_Type -> acc4480) -> acc4480 -> Ast_Kind -> acc4480 =
    lam f2420: acc4480 -> Ast_Type -> acc4480.
      lam acc4481: acc4480.
        lam __sem_target3087.
          match
            __sem_target3087
          with
            s362
          in
          match
              vConstAst_smapAccumL_Kind_Type
                (lam a1406.
                   lam x656.
                     (f2420 a1406 x656, x656))
                acc4481
                s362
            with
              (a1407, _)
            in
            a1407
  let vConstAst_sfold_Type_Type: all acc4482. (acc4482 -> Ast_Type -> acc4482) -> acc4482 -> Ast_Type -> acc4482 =
    lam f2421.
      lam acc4483.
        lam __sem_target3088.
          match
            __sem_target3088
          with
            p1958
          in
          let res763 =
              vConstAst_smapAccumL_Type_Type
                (lam acc4484.
                   lam a1408.
                     (f2421 acc4484 a1408, a1408))
                acc4483
                p1958
            in
            res763.0
  let vConstAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f2422.
      lam __sem_target3089.
        match
          __sem_target3089
        with
          expr612
        in
        let expr613 = f2422 expr612 in
          vConstAst_smap_Expr_Expr (vConstAst_mapPre_Expr_Expr f2422) expr613
  let vConstAst_foldPre_Expr_Expr: all acc4485. (acc4485 -> Ast_Expr -> acc4485) -> acc4485 -> Ast_Expr -> acc4485 =
    lam f2423.
      lam acc4486.
        lam __sem_target3090.
          match
            __sem_target3090
          with
            expr614
          in
          let acc4487 = f2423 acc4486 expr614 in
            vConstAst_sfold_Expr_Expr (vConstAst_foldPre_Expr_Expr f2423) acc4487 expr614
  let vConstAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f2424.
      lam __sem_target3091.
        match
          __sem_target3091
        with
          expr615
        in
        f2424
            (vConstAst_smap_Expr_Expr (vConstAst_mapPost_Expr_Expr f2424) expr615)
  let vConstAst_foldPost_Expr_Expr: all acc4488. (acc4488 -> Ast_Expr -> acc4488) -> acc4488 -> Ast_Expr -> acc4488 =
    lam f2425.
      lam acc4489.
        lam __sem_target3092.
          match
            __sem_target3092
          with
            expr616
          in
          f2425
              (vConstAst_sfold_Expr_Expr (vConstAst_foldPost_Expr_Expr f2425) acc4489 expr616)
              expr616
  let vConstAst_smapAccumL_Pat_Pat: all acc4490. (acc4490 -> Ast_Pat -> (acc4490, Ast_Pat)) -> acc4490 -> Ast_Pat -> (acc4490, Ast_Pat) =
    lam f2426.
      lam acc4491.
        lam __sem_target3093.
          match
            __sem_target3093
          with
            p1959
          in
          (acc4491, p1959)
  let vConstAst_smapAccumL_Expr_Pat: all acc4492. (acc4492 -> Ast_Pat -> (acc4492, Ast_Pat)) -> acc4492 -> Ast_Expr -> (acc4492, Ast_Expr) =
    lam f2427.
      lam acc4493.
        lam __sem_target3094.
          match
            __sem_target3094
          with
            p1960
          in
          (acc4493, p1960)
  let vConstAst_smapAccumL_Pat_Expr: all acc4494. (acc4494 -> Ast_Expr -> (acc4494, Ast_Expr)) -> acc4494 -> Ast_Pat -> (acc4494, Ast_Pat) =
    lam f2428.
      lam acc4495.
        lam __sem_target3095.
          match
            __sem_target3095
          with
            p1961
          in
          (acc4495, p1961)
  let vConstAst_smapAccumL_Pat_Type: all acc4496. (acc4496 -> Ast_Type -> (acc4496, Ast_Type)) -> acc4496 -> Ast_Pat -> (acc4496, Ast_Pat) =
    lam f2429.
      lam acc4497.
        lam __sem_target3096.
          match
            __sem_target3096
          with
            p1962
          in
          (acc4497, p1962)
  let vConstAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f2430.
      lam __sem_target3097.
        match
          __sem_target3097
        with
          p1963
        in
        let res764 =
            vConstAst_smapAccumL_Expr_TypeLabel
              (lam #var"837".
                 lam a1409.
                   ({}, f2430 a1409))
              {}
              p1963
          in
          res764.1
  let vConstAst_rappAccumL_Type_Type: all acc4498. (acc4498 -> Ast_Type -> (acc4498, Ast_Type)) -> acc4498 -> Ast_Type -> (acc4498, Ast_Type) =
    lam f2431.
      lam acc4499.
        lam __sem_target3098.
          match
            __sem_target3098
          with
            ty438
          in
          (acc4499, ty438)
  let vConstAst_sfold_Expr_TypeLabel: all acc4500. (acc4500 -> Ast_Type -> acc4500) -> acc4500 -> Ast_Expr -> acc4500 =
    lam f2432.
      lam acc4501.
        lam __sem_target3099.
          match
            __sem_target3099
          with
            p1964
          in
          let res765 =
              vConstAst_smapAccumL_Expr_TypeLabel
                (lam acc4502.
                   lam a1410.
                     (f2432 acc4502 a1410, a1410))
                acc4501
                p1964
            in
            res765.0
  let vConstAst_smapAccumL_Expr_Expr: all acc4503. (acc4503 -> Ast_Expr -> (acc4503, Ast_Expr)) -> acc4503 -> Ast_Expr -> (acc4503, Ast_Expr) =
    lam f2433.
      lam acc4504.
        lam __sem_target3100.
          match
            __sem_target3100
          with
            p1965
          in
          (acc4504, p1965)
  let vConstAst_smapAccumL_Expr_Type: all acc4505. (acc4505 -> Ast_Type -> (acc4505, Ast_Type)) -> acc4505 -> Ast_Expr -> (acc4505, Ast_Expr) =
    lam f2434.
      lam acc4506.
        lam __sem_target3101.
          match
            __sem_target3101
          with
            p1966
          in
          (acc4506, p1966)
  let vConstAst_smapAccumL_Kind_Type: all acc4507. (acc4507 -> Ast_Type -> (acc4507, Ast_Type)) -> acc4507 -> Ast_Kind -> (acc4507, Ast_Kind) =
    lam f2435.
      lam acc4508.
        lam __sem_target3102.
          match
            __sem_target3102
          with
            s363
          in
          (acc4508, s363)
  let vConstAst_smapAccumL_Type_Type: all acc4509. (acc4509 -> Ast_Type -> (acc4509, Ast_Type)) -> acc4509 -> Ast_Type -> (acc4509, Ast_Type) =
    lam f2436.
      lam acc4510.
        lam __sem_target3103.
          match
            __sem_target3103
          with
            p1967
          in
          (acc4510, p1967)
  let vConstAst_mapAccumLPre_Expr_Expr: all acc4511. (acc4511 -> Ast_Expr -> (acc4511, Ast_Expr)) -> acc4511 -> Ast_Expr -> (acc4511, Ast_Expr) =
    lam f2437.
      lam acc4512.
        lam __sem_target3104.
          match
            __sem_target3104
          with
            expr617
          in
          match
              f2437 acc4512 expr617
            with
              (acc4513, expr618)
            in
            vConstAst_smapAccumL_Expr_Expr (vConstAst_mapAccumLPre_Expr_Expr f2437) acc4513 expr618
  let vConstAst_mapAccumLPost_Expr_Expr: all acc4514. (acc4514 -> Ast_Expr -> (acc4514, Ast_Expr)) -> acc4514 -> Ast_Expr -> (acc4514, Ast_Expr) =
    lam f2438.
      lam acc4515.
        lam __sem_target3105.
          match
            __sem_target3105
          with
            expr619
          in
          match
              vConstAst_smapAccumL_Expr_Expr (vConstAst_mapAccumLPost_Expr_Expr f2438) acc4515 expr619
            with
              (acc4516, expr620)
            in
            f2438 acc4516 expr620
  let vConstAst_smapAccumL_Expr_TypeLabel: all acc4517. (acc4517 -> Ast_Type -> (acc4517, Ast_Type)) -> acc4517 -> Ast_Expr -> (acc4517, Ast_Expr) =
    lam f2439.
      lam acc4518.
        lam __sem_target3106.
          match
            __sem_target3106
          with
            p1968
          in
          match
              f2439 acc4518 (vConstAst_tyTm p1968)
            with
              (acc4519, ty439)
            in
            (acc4519, vConstAst_withType ty439 p1968)
in
con SeqAst_TmSeq: {ty: Ast_Type, tms: [Ast_Expr], info: Info} -> Ast_Expr in
recursive
  let vSeqAst_tyTm: Ast_Expr -> Ast_Type =
    lam __sem_target3019.
      match
        __sem_target3019
      with
        SeqAst_TmSeq t1134
      in
      t1134.ty
  let vSeqAst_tyPat: Ast_Pat -> Ast_Type = lam x641.
      never
  let vSeqAst_infoTm: Ast_Expr -> Info =
    lam __sem_target3020.
      match
        __sem_target3020
      with
        SeqAst_TmSeq r367
      in
      r367.info
  let vSeqAst_infoTy: Ast_Type -> Info = lam x642.
      never
  let vSeqAst_infoPat: Ast_Pat -> Info = lam x643.
      never
  let vSeqAst_withInfo: Info -> Ast_Expr -> Ast_Expr =
    lam info72.
      lam __sem_target3021.
        match
          __sem_target3021
        with
          SeqAst_TmSeq t1135
        in
        SeqAst_TmSeq
            { t1135 with info = info72 }
  let vSeqAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr =
    lam ty428: Ast_Type.
      lam __sem_target3022.
        match
          __sem_target3022
        with
          SeqAst_TmSeq t1136
        in
        SeqAst_TmSeq
            { t1136 with ty = ty428 }
  let vSeqAst_tyWithInfo: Info -> Ast_Type -> Ast_Type = lam x644.
      never
  let vSeqAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target3023.
      match
        __sem_target3023
      with
        ty429
      in
      vSeqAst_rapp_Type_Type vSeqAst_unwrapType ty429
  let vSeqAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target3024.
      match
        __sem_target3024
      with
        ty430
      in
      vSeqAst_rapp_Type_Type vSeqAst_inspectType ty430
  let vSeqAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x645.
      never
  let vSeqAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x646.
      never
  let vSeqAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f2370.
      lam __sem_target3025.
        match
          __sem_target3025
        with
          p1915
        in
        let res744 =
            vSeqAst_smapAccumL_Pat_Pat
              (lam #var"818".
                 lam a1375.
                   ({}, f2370 a1375))
              {}
              p1915
          in
          res744.1
  let vSeqAst_countPatNodes =
    lam count938.
      lam __sem_target3026.
        match
          __sem_target3026
        with
          t1137
        in
        let count939 = addi count938 1 in
          let count940 = vSeqAst_sfold_Pat_Pat vSeqAst_countPatNodes count939 t1137
          in
          let count941 = vSeqAst_sfold_Pat_Expr vSeqAst_countExprNodes count940 t1137
          in
          let count942 = vSeqAst_sfold_Pat_Type vSeqAst_countTypeNodes count941 t1137
          in
          count942
  let vSeqAst_sfold_Pat_Pat: all acc4397. (acc4397 -> Ast_Pat -> acc4397) -> acc4397 -> Ast_Pat -> acc4397 =
    lam f2371.
      lam acc4398.
        lam __sem_target3027.
          match
            __sem_target3027
          with
            p1916
          in
          let res745 =
              vSeqAst_smapAccumL_Pat_Pat
                (lam acc4399.
                   lam a1376.
                     (f2371 acc4399 a1376, a1376))
                acc4398
                p1916
            in
            res745.0
  let vSeqAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f2372.
      lam __sem_target3028.
        match
          __sem_target3028
        with
          p1917
        in
        match
            vSeqAst_smapAccumL_Expr_Pat
              (lam #var"819".
                 lam a1377.
                   ({}, f2372 a1377))
              {}
              p1917
          with
            (_, p1918)
          in
          p1918
  let vSeqAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f2373.
      lam __sem_target3029.
        match
          __sem_target3029
        with
          p1919
        in
        match
            vSeqAst_smapAccumL_Pat_Expr
              (lam #var"820".
                 lam a1378.
                   ({}, f2373 a1378))
              {}
              p1919
          with
            (_, p1920)
          in
          p1920
  let vSeqAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f2374.
      lam __sem_target3030.
        match
          __sem_target3030
        with
          p1921
        in
        match
            vSeqAst_smapAccumL_Pat_Type
              (lam #var"821".
                 lam a1379.
                   ({}, f2374 a1379))
              {}
              p1921
          with
            (_, p1922)
          in
          p1922
  let vSeqAst_countExprNodes =
    lam count943.
      lam __sem_target3031.
        match
          __sem_target3031
        with
          t1138
        in
        let count944 = addi count943 1 in
          let count945 =
            vSeqAst_sfold_Expr_Expr vSeqAst_countExprNodes count944 t1138
          in
          let count946 =
            vSeqAst_sfold_Expr_Type vSeqAst_countTypeNodes count945 t1138
          in
          let count947 =
            vSeqAst_sfold_Expr_TypeLabel vSeqAst_countTypeNodes count946 t1138
          in
          let count948 = vSeqAst_sfold_Expr_Pat vSeqAst_countPatNodes count947 t1138
          in
          count948
  let vSeqAst_countTypeNodes =
    lam count949.
      lam __sem_target3032.
        match
          __sem_target3032
        with
          t1139
        in
        let count950 = addi count949 1 in
          let count951 =
            vSeqAst_sfold_Type_Type vSeqAst_countTypeNodes count950 t1139
          in
          count951
  let vSeqAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f2375.
      lam __sem_target3033.
        match
          __sem_target3033
        with
          ty431
        in
        let res746 =
            vSeqAst_rappAccumL_Type_Type
              (lam #var"822".
                 lam t1140.
                   ({}, f2375 t1140))
              {}
              ty431
          in
          res746.1
  let vSeqAst_sfold_Expr_Pat: all acc4400. (acc4400 -> Ast_Pat -> acc4400) -> acc4400 -> Ast_Expr -> acc4400 =
    lam f2376.
      lam acc4401.
        lam __sem_target3034.
          match
            __sem_target3034
          with
            p1923
          in
          match
              vSeqAst_smapAccumL_Expr_Pat
                (lam acc4402.
                   lam a1380.
                     (f2376 acc4402 a1380, a1380))
                acc4401
                p1923
            with
              (acc4403, _)
            in
            acc4403
  let vSeqAst_sfold_Pat_Expr: all acc4404. (acc4404 -> Ast_Expr -> acc4404) -> acc4404 -> Ast_Pat -> acc4404 =
    lam f2377.
      lam acc4405.
        lam __sem_target3035.
          match
            __sem_target3035
          with
            p1924
          in
          match
              vSeqAst_smapAccumL_Pat_Expr
                (lam acc4406.
                   lam a1381.
                     (f2377 acc4406 a1381, a1381))
                acc4405
                p1924
            with
              (acc4407, _)
            in
            acc4407
  let vSeqAst_sfold_Pat_Type: all acc4408. (acc4408 -> Ast_Type -> acc4408) -> acc4408 -> Ast_Pat -> acc4408 =
    lam f2378.
      lam acc4409.
        lam __sem_target3036.
          match
            __sem_target3036
          with
            p1925
          in
          match
              vSeqAst_smapAccumL_Pat_Type
                (lam acc4410.
                   lam a1382.
                     (f2378 acc4410 a1382, a1382))
                acc4409
                p1925
            with
              (acc4411, _)
            in
            acc4411
  let vSeqAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f2379.
      lam __sem_target3037.
        match
          __sem_target3037
        with
          p1926
        in
        let res747 =
            vSeqAst_smapAccumL_Expr_Expr
              (lam #var"823".
                 lam a1383.
                   ({}, f2379 a1383))
              {}
              p1926
          in
          res747.1
  let vSeqAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f2380.
      lam __sem_target3038.
        match
          __sem_target3038
        with
          p1927
        in
        let res748 =
            vSeqAst_smapAccumL_Expr_Type
              (lam #var"824".
                 lam a1384.
                   ({}, f2380 a1384))
              {}
              p1927
          in
          res748.1
  let vSeqAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f2381: Ast_Type -> Ast_Type.
      lam __sem_target3039.
        match
          __sem_target3039
        with
          s356
        in
        match
            vSeqAst_smapAccumL_Kind_Type
              (lam #var"825".
                 lam x647.
                   ({}, f2381 x647))
              {}
              s356
          with
            (_, s357)
          in
          s357
  let vSeqAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f2382.
      lam __sem_target3040.
        match
          __sem_target3040
        with
          p1928
        in
        let res749 =
            vSeqAst_smapAccumL_Type_Type
              (lam #var"826".
                 lam a1385.
                   ({}, f2382 a1385))
              {}
              p1928
          in
          res749.1
  let vSeqAst_sfold_Expr_Expr: all acc4412. (acc4412 -> Ast_Expr -> acc4412) -> acc4412 -> Ast_Expr -> acc4412 =
    lam f2383.
      lam acc4413.
        lam __sem_target3041.
          match
            __sem_target3041
          with
            p1929
          in
          let res750 =
              vSeqAst_smapAccumL_Expr_Expr
                (lam acc4414.
                   lam a1386.
                     (f2383 acc4414 a1386, a1386))
                acc4413
                p1929
            in
            res750.0
  let vSeqAst_sfold_Expr_Type: all acc4415. (acc4415 -> Ast_Type -> acc4415) -> acc4415 -> Ast_Expr -> acc4415 =
    lam f2384.
      lam acc4416.
        lam __sem_target3042.
          match
            __sem_target3042
          with
            p1930
          in
          let res751 =
              vSeqAst_smapAccumL_Expr_Type
                (lam acc4417.
                   lam a1387.
                     (f2384 acc4417 a1387, a1387))
                acc4416
                p1930
            in
            res751.0
  let vSeqAst_sfold_Kind_Type: all acc4418. (acc4418 -> Ast_Type -> acc4418) -> acc4418 -> Ast_Kind -> acc4418 =
    lam f2385: acc4418 -> Ast_Type -> acc4418.
      lam acc4419: acc4418.
        lam __sem_target3043.
          match
            __sem_target3043
          with
            s358
          in
          match
              vSeqAst_smapAccumL_Kind_Type
                (lam a1388.
                   lam x648.
                     (f2385 a1388 x648, x648))
                acc4419
                s358
            with
              (a1389, _)
            in
            a1389
  let vSeqAst_sfold_Type_Type: all acc4420. (acc4420 -> Ast_Type -> acc4420) -> acc4420 -> Ast_Type -> acc4420 =
    lam f2386.
      lam acc4421.
        lam __sem_target3044.
          match
            __sem_target3044
          with
            p1931
          in
          let res752 =
              vSeqAst_smapAccumL_Type_Type
                (lam acc4422.
                   lam a1390.
                     (f2386 acc4422 a1390, a1390))
                acc4421
                p1931
            in
            res752.0
  let vSeqAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f2387.
      lam __sem_target3045.
        match
          __sem_target3045
        with
          expr603
        in
        let expr604 = f2387 expr603 in
          vSeqAst_smap_Expr_Expr (vSeqAst_mapPre_Expr_Expr f2387) expr604
  let vSeqAst_foldPre_Expr_Expr: all acc4423. (acc4423 -> Ast_Expr -> acc4423) -> acc4423 -> Ast_Expr -> acc4423 =
    lam f2388.
      lam acc4424.
        lam __sem_target3046.
          match
            __sem_target3046
          with
            expr605
          in
          let acc4425 = f2388 acc4424 expr605 in
            vSeqAst_sfold_Expr_Expr (vSeqAst_foldPre_Expr_Expr f2388) acc4425 expr605
  let vSeqAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f2389.
      lam __sem_target3047.
        match
          __sem_target3047
        with
          expr606
        in
        f2389
            (vSeqAst_smap_Expr_Expr (vSeqAst_mapPost_Expr_Expr f2389) expr606)
  let vSeqAst_foldPost_Expr_Expr: all acc4426. (acc4426 -> Ast_Expr -> acc4426) -> acc4426 -> Ast_Expr -> acc4426 =
    lam f2390.
      lam acc4427.
        lam __sem_target3048.
          match
            __sem_target3048
          with
            expr607
          in
          f2390
              (vSeqAst_sfold_Expr_Expr (vSeqAst_foldPost_Expr_Expr f2390) acc4427 expr607)
              expr607
  let vSeqAst_smapAccumL_Pat_Pat: all acc4428. (acc4428 -> Ast_Pat -> (acc4428, Ast_Pat)) -> acc4428 -> Ast_Pat -> (acc4428, Ast_Pat) =
    lam f2391.
      lam acc4429.
        lam __sem_target3049.
          match
            __sem_target3049
          with
            p1932
          in
          (acc4429, p1932)
  let vSeqAst_smapAccumL_Expr_Pat: all acc4430. (acc4430 -> Ast_Pat -> (acc4430, Ast_Pat)) -> acc4430 -> Ast_Expr -> (acc4430, Ast_Expr) =
    lam f2392.
      lam acc4431.
        lam __sem_target3050.
          match
            __sem_target3050
          with
            p1933
          in
          (acc4431, p1933)
  let vSeqAst_smapAccumL_Pat_Expr: all acc4432. (acc4432 -> Ast_Expr -> (acc4432, Ast_Expr)) -> acc4432 -> Ast_Pat -> (acc4432, Ast_Pat) =
    lam f2393.
      lam acc4433.
        lam __sem_target3051.
          match
            __sem_target3051
          with
            p1934
          in
          (acc4433, p1934)
  let vSeqAst_smapAccumL_Pat_Type: all acc4434. (acc4434 -> Ast_Type -> (acc4434, Ast_Type)) -> acc4434 -> Ast_Pat -> (acc4434, Ast_Pat) =
    lam f2394.
      lam acc4435.
        lam __sem_target3052.
          match
            __sem_target3052
          with
            p1935
          in
          (acc4435, p1935)
  let vSeqAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f2395.
      lam __sem_target3053.
        match
          __sem_target3053
        with
          p1936
        in
        let res753 =
            vSeqAst_smapAccumL_Expr_TypeLabel
              (lam #var"827".
                 lam a1391.
                   ({}, f2395 a1391))
              {}
              p1936
          in
          res753.1
  let vSeqAst_rappAccumL_Type_Type: all acc4436. (acc4436 -> Ast_Type -> (acc4436, Ast_Type)) -> acc4436 -> Ast_Type -> (acc4436, Ast_Type) =
    lam f2396.
      lam acc4437.
        lam __sem_target3054.
          match
            __sem_target3054
          with
            ty432
          in
          (acc4437, ty432)
  let vSeqAst_sfold_Expr_TypeLabel: all acc4438. (acc4438 -> Ast_Type -> acc4438) -> acc4438 -> Ast_Expr -> acc4438 =
    lam f2397.
      lam acc4439.
        lam __sem_target3055.
          match
            __sem_target3055
          with
            p1937
          in
          let res754 =
              vSeqAst_smapAccumL_Expr_TypeLabel
                (lam acc4440.
                   lam a1392.
                     (f2397 acc4440 a1392, a1392))
                acc4439
                p1937
            in
            res754.0
  let vSeqAst_smapAccumL_Expr_Expr: all acc4441. (acc4441 -> Ast_Expr -> (acc4441, Ast_Expr)) -> acc4441 -> Ast_Expr -> (acc4441, Ast_Expr) =
    lam f2398.
      lam acc4442.
        lam __sem_target3056.
          match
            __sem_target3056
          with
            SeqAst_TmSeq t1141
          then
            match
              mapAccumL f2398 acc4442 t1141.tms
            with
              (acc4443, tms5)
            in
            (acc4443, SeqAst_TmSeq
                { t1141 with tms = tms5 })
          else match
            __sem_target3056
          with
            p1938
          in
          (acc4442, p1938)
  let vSeqAst_smapAccumL_Expr_Type: all acc4444. (acc4444 -> Ast_Type -> (acc4444, Ast_Type)) -> acc4444 -> Ast_Expr -> (acc4444, Ast_Expr) =
    lam f2399.
      lam acc4445.
        lam __sem_target3057.
          match
            __sem_target3057
          with
            p1939
          in
          (acc4445, p1939)
  let vSeqAst_smapAccumL_Kind_Type: all acc4446. (acc4446 -> Ast_Type -> (acc4446, Ast_Type)) -> acc4446 -> Ast_Kind -> (acc4446, Ast_Kind) =
    lam f2400.
      lam acc4447.
        lam __sem_target3058.
          match
            __sem_target3058
          with
            s359
          in
          (acc4447, s359)
  let vSeqAst_smapAccumL_Type_Type: all acc4448. (acc4448 -> Ast_Type -> (acc4448, Ast_Type)) -> acc4448 -> Ast_Type -> (acc4448, Ast_Type) =
    lam f2401.
      lam acc4449.
        lam __sem_target3059.
          match
            __sem_target3059
          with
            p1940
          in
          (acc4449, p1940)
  let vSeqAst_mapAccumLPre_Expr_Expr: all acc4450. (acc4450 -> Ast_Expr -> (acc4450, Ast_Expr)) -> acc4450 -> Ast_Expr -> (acc4450, Ast_Expr) =
    lam f2402.
      lam acc4451.
        lam __sem_target3060.
          match
            __sem_target3060
          with
            expr608
          in
          match
              f2402 acc4451 expr608
            with
              (acc4452, expr609)
            in
            vSeqAst_smapAccumL_Expr_Expr (vSeqAst_mapAccumLPre_Expr_Expr f2402) acc4452 expr609
  let vSeqAst_mapAccumLPost_Expr_Expr: all acc4453. (acc4453 -> Ast_Expr -> (acc4453, Ast_Expr)) -> acc4453 -> Ast_Expr -> (acc4453, Ast_Expr) =
    lam f2403.
      lam acc4454.
        lam __sem_target3061.
          match
            __sem_target3061
          with
            expr610
          in
          match
              vSeqAst_smapAccumL_Expr_Expr (vSeqAst_mapAccumLPost_Expr_Expr f2403) acc4454 expr610
            with
              (acc4455, expr611)
            in
            f2403 acc4455 expr611
  let vSeqAst_smapAccumL_Expr_TypeLabel: all acc4456. (acc4456 -> Ast_Type -> (acc4456, Ast_Type)) -> acc4456 -> Ast_Expr -> (acc4456, Ast_Expr) =
    lam f2404.
      lam acc4457.
        lam __sem_target3062.
          match
            __sem_target3062
          with
            p1941
          in
          match
              f2404 acc4457 (vSeqAst_tyTm p1941)
            with
              (acc4458, ty433)
            in
            (acc4458, vSeqAst_withType ty433 p1941)
in
con RecordAst_TmRecordUpdate: {ty: Ast_Type, key: SID, rec: Ast_Expr, info: Info, value: Ast_Expr} -> Ast_Expr in
con RecordAst_TmRecord: {ty: Ast_Type, info: Info, bindings: Map SID Ast_Expr} -> Ast_Expr in
recursive
  let vRecordAst_tyTm: Ast_Expr -> Ast_Type =
    lam __sem_target2975.
      match
        __sem_target2975
      with
        RecordAst_TmRecord t1122
      then
        t1122.ty
      else match
        __sem_target2975
      with
        RecordAst_TmRecordUpdate t1123
      in
      t1123.ty
  let vRecordAst_tyPat: Ast_Pat -> Ast_Type = lam x633.
      never
  let vRecordAst_infoTm: Ast_Expr -> Info =
    lam __sem_target2976.
      match
        __sem_target2976
      with
        RecordAst_TmRecord r365
      then
        r365.info
      else match
        __sem_target2976
      with
        RecordAst_TmRecordUpdate r366
      in
      r366.info
  let vRecordAst_infoTy: Ast_Type -> Info = lam x634.
      never
  let vRecordAst_infoPat: Ast_Pat -> Info = lam x635.
      never
  let vRecordAst_withInfo: Info -> Ast_Expr -> Ast_Expr =
    lam info71.
      lam __sem_target2977.
        match
          __sem_target2977
        with
          RecordAst_TmRecord t1124
        then
          RecordAst_TmRecord
            { t1124 with info = info71 }
        else match
          __sem_target2977
        with
          RecordAst_TmRecordUpdate t1125
        in
        RecordAst_TmRecordUpdate
            { t1125 with info = info71 }
  let vRecordAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr =
    lam ty422: Ast_Type.
      lam __sem_target2978.
        match
          __sem_target2978
        with
          RecordAst_TmRecord t1126
        then
          RecordAst_TmRecord
            { t1126 with ty = ty422 }
        else match
          __sem_target2978
        with
          RecordAst_TmRecordUpdate t1127
        in
        RecordAst_TmRecordUpdate
            { t1127 with ty = ty422 }
  let vRecordAst_tyWithInfo: Info -> Ast_Type -> Ast_Type = lam x636.
      never
  let vRecordAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target2979.
      match
        __sem_target2979
      with
        ty423
      in
      vRecordAst_rapp_Type_Type vRecordAst_unwrapType ty423
  let vRecordAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target2980.
      match
        __sem_target2980
      with
        ty424
      in
      vRecordAst_rapp_Type_Type vRecordAst_inspectType ty424
  let vRecordAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x637.
      never
  let vRecordAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x638.
      never
  let vRecordAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f2335.
      lam __sem_target2981.
        match
          __sem_target2981
        with
          p1888
        in
        let res733 =
            vRecordAst_smapAccumL_Pat_Pat
              (lam #var"807".
                 lam a1357.
                   ({}, f2335 a1357))
              {}
              p1888
          in
          res733.1
  let vRecordAst_countPatNodes =
    lam count924.
      lam __sem_target2982.
        match
          __sem_target2982
        with
          t1128
        in
        let count925 = addi count924 1 in
          let count926 =
            vRecordAst_sfold_Pat_Pat vRecordAst_countPatNodes count925 t1128
          in
          let count927 =
            vRecordAst_sfold_Pat_Expr vRecordAst_countExprNodes count926 t1128
          in
          let count928 =
            vRecordAst_sfold_Pat_Type vRecordAst_countTypeNodes count927 t1128
          in
          count928
  let vRecordAst_sfold_Pat_Pat: all acc4332. (acc4332 -> Ast_Pat -> acc4332) -> acc4332 -> Ast_Pat -> acc4332 =
    lam f2336.
      lam acc4333.
        lam __sem_target2983.
          match
            __sem_target2983
          with
            p1889
          in
          let res734 =
              vRecordAst_smapAccumL_Pat_Pat
                (lam acc4334.
                   lam a1358.
                     (f2336 acc4334 a1358, a1358))
                acc4333
                p1889
            in
            res734.0
  let vRecordAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f2337.
      lam __sem_target2984.
        match
          __sem_target2984
        with
          p1890
        in
        match
            vRecordAst_smapAccumL_Expr_Pat
              (lam #var"808".
                 lam a1359.
                   ({}, f2337 a1359))
              {}
              p1890
          with
            (_, p1891)
          in
          p1891
  let vRecordAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f2338.
      lam __sem_target2985.
        match
          __sem_target2985
        with
          p1892
        in
        match
            vRecordAst_smapAccumL_Pat_Expr
              (lam #var"809".
                 lam a1360.
                   ({}, f2338 a1360))
              {}
              p1892
          with
            (_, p1893)
          in
          p1893
  let vRecordAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f2339.
      lam __sem_target2986.
        match
          __sem_target2986
        with
          p1894
        in
        match
            vRecordAst_smapAccumL_Pat_Type
              (lam #var"810".
                 lam a1361.
                   ({}, f2339 a1361))
              {}
              p1894
          with
            (_, p1895)
          in
          p1895
  let vRecordAst_countExprNodes =
    lam count929.
      lam __sem_target2987.
        match
          __sem_target2987
        with
          t1129
        in
        let count930 = addi count929 1 in
          let count931 =
            vRecordAst_sfold_Expr_Expr vRecordAst_countExprNodes count930 t1129
          in
          let count932 =
            vRecordAst_sfold_Expr_Type vRecordAst_countTypeNodes count931 t1129
          in
          let count933 =
            vRecordAst_sfold_Expr_TypeLabel vRecordAst_countTypeNodes count932 t1129
          in
          let count934 =
            vRecordAst_sfold_Expr_Pat vRecordAst_countPatNodes count933 t1129
          in
          count934
  let vRecordAst_countTypeNodes =
    lam count935.
      lam __sem_target2988.
        match
          __sem_target2988
        with
          t1130
        in
        let count936 = addi count935 1 in
          let count937 =
            vRecordAst_sfold_Type_Type vRecordAst_countTypeNodes count936 t1130
          in
          count937
  let vRecordAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f2340.
      lam __sem_target2989.
        match
          __sem_target2989
        with
          ty425
        in
        let res735 =
            vRecordAst_rappAccumL_Type_Type
              (lam #var"811".
                 lam t1131.
                   ({}, f2340 t1131))
              {}
              ty425
          in
          res735.1
  let vRecordAst_sfold_Expr_Pat: all acc4335. (acc4335 -> Ast_Pat -> acc4335) -> acc4335 -> Ast_Expr -> acc4335 =
    lam f2341.
      lam acc4336.
        lam __sem_target2990.
          match
            __sem_target2990
          with
            p1896
          in
          match
              vRecordAst_smapAccumL_Expr_Pat
                (lam acc4337.
                   lam a1362.
                     (f2341 acc4337 a1362, a1362))
                acc4336
                p1896
            with
              (acc4338, _)
            in
            acc4338
  let vRecordAst_sfold_Pat_Expr: all acc4339. (acc4339 -> Ast_Expr -> acc4339) -> acc4339 -> Ast_Pat -> acc4339 =
    lam f2342.
      lam acc4340.
        lam __sem_target2991.
          match
            __sem_target2991
          with
            p1897
          in
          match
              vRecordAst_smapAccumL_Pat_Expr
                (lam acc4341.
                   lam a1363.
                     (f2342 acc4341 a1363, a1363))
                acc4340
                p1897
            with
              (acc4342, _)
            in
            acc4342
  let vRecordAst_sfold_Pat_Type: all acc4343. (acc4343 -> Ast_Type -> acc4343) -> acc4343 -> Ast_Pat -> acc4343 =
    lam f2343.
      lam acc4344.
        lam __sem_target2992.
          match
            __sem_target2992
          with
            p1898
          in
          match
              vRecordAst_smapAccumL_Pat_Type
                (lam acc4345.
                   lam a1364.
                     (f2343 acc4345 a1364, a1364))
                acc4344
                p1898
            with
              (acc4346, _)
            in
            acc4346
  let vRecordAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f2344.
      lam __sem_target2993.
        match
          __sem_target2993
        with
          p1899
        in
        let res736 =
            vRecordAst_smapAccumL_Expr_Expr
              (lam #var"812".
                 lam a1365.
                   ({}, f2344 a1365))
              {}
              p1899
          in
          res736.1
  let vRecordAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f2345.
      lam __sem_target2994.
        match
          __sem_target2994
        with
          p1900
        in
        let res737 =
            vRecordAst_smapAccumL_Expr_Type
              (lam #var"813".
                 lam a1366.
                   ({}, f2345 a1366))
              {}
              p1900
          in
          res737.1
  let vRecordAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f2346: Ast_Type -> Ast_Type.
      lam __sem_target2995.
        match
          __sem_target2995
        with
          s352
        in
        match
            vRecordAst_smapAccumL_Kind_Type
              (lam #var"814".
                 lam x639.
                   ({}, f2346 x639))
              {}
              s352
          with
            (_, s353)
          in
          s353
  let vRecordAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f2347.
      lam __sem_target2996.
        match
          __sem_target2996
        with
          p1901
        in
        let res738 =
            vRecordAst_smapAccumL_Type_Type
              (lam #var"815".
                 lam a1367.
                   ({}, f2347 a1367))
              {}
              p1901
          in
          res738.1
  let vRecordAst_sfold_Expr_Expr: all acc4347. (acc4347 -> Ast_Expr -> acc4347) -> acc4347 -> Ast_Expr -> acc4347 =
    lam f2348.
      lam acc4348.
        lam __sem_target2997.
          match
            __sem_target2997
          with
            p1902
          in
          let res739 =
              vRecordAst_smapAccumL_Expr_Expr
                (lam acc4349.
                   lam a1368.
                     (f2348 acc4349 a1368, a1368))
                acc4348
                p1902
            in
            res739.0
  let vRecordAst_sfold_Expr_Type: all acc4350. (acc4350 -> Ast_Type -> acc4350) -> acc4350 -> Ast_Expr -> acc4350 =
    lam f2349.
      lam acc4351.
        lam __sem_target2998.
          match
            __sem_target2998
          with
            p1903
          in
          let res740 =
              vRecordAst_smapAccumL_Expr_Type
                (lam acc4352.
                   lam a1369.
                     (f2349 acc4352 a1369, a1369))
                acc4351
                p1903
            in
            res740.0
  let vRecordAst_sfold_Kind_Type: all acc4353. (acc4353 -> Ast_Type -> acc4353) -> acc4353 -> Ast_Kind -> acc4353 =
    lam f2350: acc4353 -> Ast_Type -> acc4353.
      lam acc4354: acc4353.
        lam __sem_target2999.
          match
            __sem_target2999
          with
            s354
          in
          match
              vRecordAst_smapAccumL_Kind_Type
                (lam a1370.
                   lam x640.
                     (f2350 a1370 x640, x640))
                acc4354
                s354
            with
              (a1371, _)
            in
            a1371
  let vRecordAst_sfold_Type_Type: all acc4355. (acc4355 -> Ast_Type -> acc4355) -> acc4355 -> Ast_Type -> acc4355 =
    lam f2351.
      lam acc4356.
        lam __sem_target3000.
          match
            __sem_target3000
          with
            p1904
          in
          let res741 =
              vRecordAst_smapAccumL_Type_Type
                (lam acc4357.
                   lam a1372.
                     (f2351 acc4357 a1372, a1372))
                acc4356
                p1904
            in
            res741.0
  let vRecordAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f2352.
      lam __sem_target3001.
        match
          __sem_target3001
        with
          expr594
        in
        let expr595 = f2352 expr594 in
          vRecordAst_smap_Expr_Expr (vRecordAst_mapPre_Expr_Expr f2352) expr595
  let vRecordAst_foldPre_Expr_Expr: all acc4358. (acc4358 -> Ast_Expr -> acc4358) -> acc4358 -> Ast_Expr -> acc4358 =
    lam f2353.
      lam acc4359.
        lam __sem_target3002.
          match
            __sem_target3002
          with
            expr596
          in
          let acc4360 = f2353 acc4359 expr596 in
            vRecordAst_sfold_Expr_Expr (vRecordAst_foldPre_Expr_Expr f2353) acc4360 expr596
  let vRecordAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f2354.
      lam __sem_target3003.
        match
          __sem_target3003
        with
          expr597
        in
        f2354
            (vRecordAst_smap_Expr_Expr (vRecordAst_mapPost_Expr_Expr f2354) expr597)
  let vRecordAst_foldPost_Expr_Expr: all acc4361. (acc4361 -> Ast_Expr -> acc4361) -> acc4361 -> Ast_Expr -> acc4361 =
    lam f2355.
      lam acc4362.
        lam __sem_target3004.
          match
            __sem_target3004
          with
            expr598
          in
          f2355
              (vRecordAst_sfold_Expr_Expr (vRecordAst_foldPost_Expr_Expr f2355) acc4362 expr598)
              expr598
  let vRecordAst_smapAccumL_Pat_Pat: all acc4363. (acc4363 -> Ast_Pat -> (acc4363, Ast_Pat)) -> acc4363 -> Ast_Pat -> (acc4363, Ast_Pat) =
    lam f2356.
      lam acc4364.
        lam __sem_target3005.
          match
            __sem_target3005
          with
            p1905
          in
          (acc4364, p1905)
  let vRecordAst_smapAccumL_Expr_Pat: all acc4365. (acc4365 -> Ast_Pat -> (acc4365, Ast_Pat)) -> acc4365 -> Ast_Expr -> (acc4365, Ast_Expr) =
    lam f2357.
      lam acc4366.
        lam __sem_target3006.
          match
            __sem_target3006
          with
            p1906
          in
          (acc4366, p1906)
  let vRecordAst_smapAccumL_Pat_Expr: all acc4367. (acc4367 -> Ast_Expr -> (acc4367, Ast_Expr)) -> acc4367 -> Ast_Pat -> (acc4367, Ast_Pat) =
    lam f2358.
      lam acc4368.
        lam __sem_target3007.
          match
            __sem_target3007
          with
            p1907
          in
          (acc4368, p1907)
  let vRecordAst_smapAccumL_Pat_Type: all acc4369. (acc4369 -> Ast_Type -> (acc4369, Ast_Type)) -> acc4369 -> Ast_Pat -> (acc4369, Ast_Pat) =
    lam f2359.
      lam acc4370.
        lam __sem_target3008.
          match
            __sem_target3008
          with
            p1908
          in
          (acc4370, p1908)
  let vRecordAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f2360.
      lam __sem_target3009.
        match
          __sem_target3009
        with
          p1909
        in
        let res742 =
            vRecordAst_smapAccumL_Expr_TypeLabel
              (lam #var"816".
                 lam a1373.
                   ({}, f2360 a1373))
              {}
              p1909
          in
          res742.1
  let vRecordAst_rappAccumL_Type_Type: all acc4371. (acc4371 -> Ast_Type -> (acc4371, Ast_Type)) -> acc4371 -> Ast_Type -> (acc4371, Ast_Type) =
    lam f2361.
      lam acc4372.
        lam __sem_target3010.
          match
            __sem_target3010
          with
            ty426
          in
          (acc4372, ty426)
  let vRecordAst_sfold_Expr_TypeLabel: all acc4373. (acc4373 -> Ast_Type -> acc4373) -> acc4373 -> Ast_Expr -> acc4373 =
    lam f2362.
      lam acc4374.
        lam __sem_target3011.
          match
            __sem_target3011
          with
            p1910
          in
          let res743 =
              vRecordAst_smapAccumL_Expr_TypeLabel
                (lam acc4375.
                   lam a1374.
                     (f2362 acc4375 a1374, a1374))
                acc4374
                p1910
            in
            res743.0
  let vRecordAst_smapAccumL_Expr_Expr: all acc4376. (acc4376 -> Ast_Expr -> (acc4376, Ast_Expr)) -> acc4376 -> Ast_Expr -> (acc4376, Ast_Expr) =
    lam f2363.
      lam acc4377.
        lam __sem_target3012.
          match
            __sem_target3012
          with
            RecordAst_TmRecord t1132
          then
            match
              mapMapAccum
                (lam acc4378.
                   lam #var"817".
                     lam e31.
                       f2363 acc4378 e31)
                acc4377
                t1132.bindings
            with
              (acc4379, bindings16)
            in
            (acc4379, RecordAst_TmRecord
                { t1132 with bindings = bindings16 })
          else match
            __sem_target3012
          with
            RecordAst_TmRecordUpdate t1133
          then
            match
              f2363 acc4377 t1133.rec
            with
              (acc4380, rec13)
            in
            match
                f2363 acc4380 t1133.value
              with
                (acc4381, value13)
              in
              (acc4381, RecordAst_TmRecordUpdate
                  { t1133 with rec = rec13, value = value13 })
          else match
            __sem_target3012
          with
            p1911
          in
          (acc4377, p1911)
  let vRecordAst_smapAccumL_Expr_Type: all acc4382. (acc4382 -> Ast_Type -> (acc4382, Ast_Type)) -> acc4382 -> Ast_Expr -> (acc4382, Ast_Expr) =
    lam f2364.
      lam acc4383.
        lam __sem_target3013.
          match
            __sem_target3013
          with
            p1912
          in
          (acc4383, p1912)
  let vRecordAst_smapAccumL_Kind_Type: all acc4384. (acc4384 -> Ast_Type -> (acc4384, Ast_Type)) -> acc4384 -> Ast_Kind -> (acc4384, Ast_Kind) =
    lam f2365.
      lam acc4385.
        lam __sem_target3014.
          match
            __sem_target3014
          with
            s355
          in
          (acc4385, s355)
  let vRecordAst_smapAccumL_Type_Type: all acc4386. (acc4386 -> Ast_Type -> (acc4386, Ast_Type)) -> acc4386 -> Ast_Type -> (acc4386, Ast_Type) =
    lam f2366.
      lam acc4387.
        lam __sem_target3015.
          match
            __sem_target3015
          with
            p1913
          in
          (acc4387, p1913)
  let vRecordAst_mapAccumLPre_Expr_Expr: all acc4388. (acc4388 -> Ast_Expr -> (acc4388, Ast_Expr)) -> acc4388 -> Ast_Expr -> (acc4388, Ast_Expr) =
    lam f2367.
      lam acc4389.
        lam __sem_target3016.
          match
            __sem_target3016
          with
            expr599
          in
          match
              f2367 acc4389 expr599
            with
              (acc4390, expr600)
            in
            vRecordAst_smapAccumL_Expr_Expr (vRecordAst_mapAccumLPre_Expr_Expr f2367) acc4390 expr600
  let vRecordAst_mapAccumLPost_Expr_Expr: all acc4391. (acc4391 -> Ast_Expr -> (acc4391, Ast_Expr)) -> acc4391 -> Ast_Expr -> (acc4391, Ast_Expr) =
    lam f2368.
      lam acc4392.
        lam __sem_target3017.
          match
            __sem_target3017
          with
            expr601
          in
          match
              vRecordAst_smapAccumL_Expr_Expr (vRecordAst_mapAccumLPost_Expr_Expr f2368) acc4392 expr601
            with
              (acc4393, expr602)
            in
            f2368 acc4393 expr602
  let vRecordAst_smapAccumL_Expr_TypeLabel: all acc4394. (acc4394 -> Ast_Type -> (acc4394, Ast_Type)) -> acc4394 -> Ast_Expr -> (acc4394, Ast_Expr) =
    lam f2369.
      lam acc4395.
        lam __sem_target3018.
          match
            __sem_target3018
          with
            p1914
          in
          match
              f2369 acc4395 (vRecordAst_tyTm p1914)
            with
              (acc4396, ty427)
            in
            (acc4396, vRecordAst_withType ty427 p1914)
in
con TypeAst_TmType: {ty: Ast_Type, info: Info, ident: Name, inexpr: Ast_Expr, params: [Name], tyIdent: Ast_Type} -> Ast_Expr in
recursive
  let vTypeAst_tyTm: Ast_Expr -> Ast_Type =
    lam __sem_target2931.
      match
        __sem_target2931
      with
        TypeAst_TmType t1113
      in
      t1113.ty
  let vTypeAst_tyPat: Ast_Pat -> Ast_Type = lam x625.
      never
  let vTypeAst_infoTm: Ast_Expr -> Info =
    lam __sem_target2932.
      match
        __sem_target2932
      with
        TypeAst_TmType r364
      in
      r364.info
  let vTypeAst_infoTy: Ast_Type -> Info = lam x626.
      never
  let vTypeAst_infoPat: Ast_Pat -> Info = lam x627.
      never
  let vTypeAst_withInfo: Info -> Ast_Expr -> Ast_Expr =
    lam info70.
      lam __sem_target2933.
        match
          __sem_target2933
        with
          TypeAst_TmType t1114
        in
        TypeAst_TmType
            { t1114 with info = info70 }
  let vTypeAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr =
    lam ty416: Ast_Type.
      lam __sem_target2934.
        match
          __sem_target2934
        with
          TypeAst_TmType t1115
        in
        TypeAst_TmType
            { t1115 with ty = ty416 }
  let vTypeAst_tyWithInfo: Info -> Ast_Type -> Ast_Type = lam x628.
      never
  let vTypeAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target2935.
      match
        __sem_target2935
      with
        ty417
      in
      vTypeAst_rapp_Type_Type vTypeAst_unwrapType ty417
  let vTypeAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target2936.
      match
        __sem_target2936
      with
        ty418
      in
      vTypeAst_rapp_Type_Type vTypeAst_inspectType ty418
  let vTypeAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x629.
      never
  let vTypeAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x630.
      never
  let vTypeAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f2300.
      lam __sem_target2937.
        match
          __sem_target2937
        with
          p1861
        in
        let res722 =
            vTypeAst_smapAccumL_Pat_Pat
              (lam #var"797".
                 lam a1339.
                   ({}, f2300 a1339))
              {}
              p1861
          in
          res722.1
  let vTypeAst_countPatNodes =
    lam count910.
      lam __sem_target2938.
        match
          __sem_target2938
        with
          t1116
        in
        let count911 = addi count910 1 in
          let count912 = vTypeAst_sfold_Pat_Pat vTypeAst_countPatNodes count911 t1116
          in
          let count913 =
            vTypeAst_sfold_Pat_Expr vTypeAst_countExprNodes count912 t1116
          in
          let count914 =
            vTypeAst_sfold_Pat_Type vTypeAst_countTypeNodes count913 t1116
          in
          count914
  let vTypeAst_sfold_Pat_Pat: all acc4269. (acc4269 -> Ast_Pat -> acc4269) -> acc4269 -> Ast_Pat -> acc4269 =
    lam f2301.
      lam acc4270.
        lam __sem_target2939.
          match
            __sem_target2939
          with
            p1862
          in
          let res723 =
              vTypeAst_smapAccumL_Pat_Pat
                (lam acc4271.
                   lam a1340.
                     (f2301 acc4271 a1340, a1340))
                acc4270
                p1862
            in
            res723.0
  let vTypeAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f2302.
      lam __sem_target2940.
        match
          __sem_target2940
        with
          p1863
        in
        match
            vTypeAst_smapAccumL_Expr_Pat
              (lam #var"798".
                 lam a1341.
                   ({}, f2302 a1341))
              {}
              p1863
          with
            (_, p1864)
          in
          p1864
  let vTypeAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f2303.
      lam __sem_target2941.
        match
          __sem_target2941
        with
          p1865
        in
        match
            vTypeAst_smapAccumL_Pat_Expr
              (lam #var"799".
                 lam a1342.
                   ({}, f2303 a1342))
              {}
              p1865
          with
            (_, p1866)
          in
          p1866
  let vTypeAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f2304.
      lam __sem_target2942.
        match
          __sem_target2942
        with
          p1867
        in
        match
            vTypeAst_smapAccumL_Pat_Type
              (lam #var"800".
                 lam a1343.
                   ({}, f2304 a1343))
              {}
              p1867
          with
            (_, p1868)
          in
          p1868
  let vTypeAst_countExprNodes =
    lam count915.
      lam __sem_target2943.
        match
          __sem_target2943
        with
          t1117
        in
        let count916 = addi count915 1 in
          let count917 =
            vTypeAst_sfold_Expr_Expr vTypeAst_countExprNodes count916 t1117
          in
          let count918 =
            vTypeAst_sfold_Expr_Type vTypeAst_countTypeNodes count917 t1117
          in
          let count919 =
            vTypeAst_sfold_Expr_TypeLabel vTypeAst_countTypeNodes count918 t1117
          in
          let count920 =
            vTypeAst_sfold_Expr_Pat vTypeAst_countPatNodes count919 t1117
          in
          count920
  let vTypeAst_countTypeNodes =
    lam count921.
      lam __sem_target2944.
        match
          __sem_target2944
        with
          t1118
        in
        let count922 = addi count921 1 in
          let count923 =
            vTypeAst_sfold_Type_Type vTypeAst_countTypeNodes count922 t1118
          in
          count923
  let vTypeAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f2305.
      lam __sem_target2945.
        match
          __sem_target2945
        with
          ty419
        in
        let res724 =
            vTypeAst_rappAccumL_Type_Type
              (lam #var"801".
                 lam t1119.
                   ({}, f2305 t1119))
              {}
              ty419
          in
          res724.1
  let vTypeAst_sfold_Expr_Pat: all acc4272. (acc4272 -> Ast_Pat -> acc4272) -> acc4272 -> Ast_Expr -> acc4272 =
    lam f2306.
      lam acc4273.
        lam __sem_target2946.
          match
            __sem_target2946
          with
            p1869
          in
          match
              vTypeAst_smapAccumL_Expr_Pat
                (lam acc4274.
                   lam a1344.
                     (f2306 acc4274 a1344, a1344))
                acc4273
                p1869
            with
              (acc4275, _)
            in
            acc4275
  let vTypeAst_sfold_Pat_Expr: all acc4276. (acc4276 -> Ast_Expr -> acc4276) -> acc4276 -> Ast_Pat -> acc4276 =
    lam f2307.
      lam acc4277.
        lam __sem_target2947.
          match
            __sem_target2947
          with
            p1870
          in
          match
              vTypeAst_smapAccumL_Pat_Expr
                (lam acc4278.
                   lam a1345.
                     (f2307 acc4278 a1345, a1345))
                acc4277
                p1870
            with
              (acc4279, _)
            in
            acc4279
  let vTypeAst_sfold_Pat_Type: all acc4280. (acc4280 -> Ast_Type -> acc4280) -> acc4280 -> Ast_Pat -> acc4280 =
    lam f2308.
      lam acc4281.
        lam __sem_target2948.
          match
            __sem_target2948
          with
            p1871
          in
          match
              vTypeAst_smapAccumL_Pat_Type
                (lam acc4282.
                   lam a1346.
                     (f2308 acc4282 a1346, a1346))
                acc4281
                p1871
            with
              (acc4283, _)
            in
            acc4283
  let vTypeAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f2309.
      lam __sem_target2949.
        match
          __sem_target2949
        with
          p1872
        in
        let res725 =
            vTypeAst_smapAccumL_Expr_Expr
              (lam #var"802".
                 lam a1347.
                   ({}, f2309 a1347))
              {}
              p1872
          in
          res725.1
  let vTypeAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f2310.
      lam __sem_target2950.
        match
          __sem_target2950
        with
          p1873
        in
        let res726 =
            vTypeAst_smapAccumL_Expr_Type
              (lam #var"803".
                 lam a1348.
                   ({}, f2310 a1348))
              {}
              p1873
          in
          res726.1
  let vTypeAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f2311: Ast_Type -> Ast_Type.
      lam __sem_target2951.
        match
          __sem_target2951
        with
          s348
        in
        match
            vTypeAst_smapAccumL_Kind_Type
              (lam #var"804".
                 lam x631.
                   ({}, f2311 x631))
              {}
              s348
          with
            (_, s349)
          in
          s349
  let vTypeAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f2312.
      lam __sem_target2952.
        match
          __sem_target2952
        with
          p1874
        in
        let res727 =
            vTypeAst_smapAccumL_Type_Type
              (lam #var"805".
                 lam a1349.
                   ({}, f2312 a1349))
              {}
              p1874
          in
          res727.1
  let vTypeAst_sfold_Expr_Expr: all acc4284. (acc4284 -> Ast_Expr -> acc4284) -> acc4284 -> Ast_Expr -> acc4284 =
    lam f2313.
      lam acc4285.
        lam __sem_target2953.
          match
            __sem_target2953
          with
            p1875
          in
          let res728 =
              vTypeAst_smapAccumL_Expr_Expr
                (lam acc4286.
                   lam a1350.
                     (f2313 acc4286 a1350, a1350))
                acc4285
                p1875
            in
            res728.0
  let vTypeAst_sfold_Expr_Type: all acc4287. (acc4287 -> Ast_Type -> acc4287) -> acc4287 -> Ast_Expr -> acc4287 =
    lam f2314.
      lam acc4288.
        lam __sem_target2954.
          match
            __sem_target2954
          with
            p1876
          in
          let res729 =
              vTypeAst_smapAccumL_Expr_Type
                (lam acc4289.
                   lam a1351.
                     (f2314 acc4289 a1351, a1351))
                acc4288
                p1876
            in
            res729.0
  let vTypeAst_sfold_Kind_Type: all acc4290. (acc4290 -> Ast_Type -> acc4290) -> acc4290 -> Ast_Kind -> acc4290 =
    lam f2315: acc4290 -> Ast_Type -> acc4290.
      lam acc4291: acc4290.
        lam __sem_target2955.
          match
            __sem_target2955
          with
            s350
          in
          match
              vTypeAst_smapAccumL_Kind_Type
                (lam a1352.
                   lam x632.
                     (f2315 a1352 x632, x632))
                acc4291
                s350
            with
              (a1353, _)
            in
            a1353
  let vTypeAst_sfold_Type_Type: all acc4292. (acc4292 -> Ast_Type -> acc4292) -> acc4292 -> Ast_Type -> acc4292 =
    lam f2316.
      lam acc4293.
        lam __sem_target2956.
          match
            __sem_target2956
          with
            p1877
          in
          let res730 =
              vTypeAst_smapAccumL_Type_Type
                (lam acc4294.
                   lam a1354.
                     (f2316 acc4294 a1354, a1354))
                acc4293
                p1877
            in
            res730.0
  let vTypeAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f2317.
      lam __sem_target2957.
        match
          __sem_target2957
        with
          expr585
        in
        let expr586 = f2317 expr585 in
          vTypeAst_smap_Expr_Expr (vTypeAst_mapPre_Expr_Expr f2317) expr586
  let vTypeAst_foldPre_Expr_Expr: all acc4295. (acc4295 -> Ast_Expr -> acc4295) -> acc4295 -> Ast_Expr -> acc4295 =
    lam f2318.
      lam acc4296.
        lam __sem_target2958.
          match
            __sem_target2958
          with
            expr587
          in
          let acc4297 = f2318 acc4296 expr587 in
            vTypeAst_sfold_Expr_Expr (vTypeAst_foldPre_Expr_Expr f2318) acc4297 expr587
  let vTypeAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f2319.
      lam __sem_target2959.
        match
          __sem_target2959
        with
          expr588
        in
        f2319
            (vTypeAst_smap_Expr_Expr (vTypeAst_mapPost_Expr_Expr f2319) expr588)
  let vTypeAst_foldPost_Expr_Expr: all acc4298. (acc4298 -> Ast_Expr -> acc4298) -> acc4298 -> Ast_Expr -> acc4298 =
    lam f2320.
      lam acc4299.
        lam __sem_target2960.
          match
            __sem_target2960
          with
            expr589
          in
          f2320
              (vTypeAst_sfold_Expr_Expr (vTypeAst_foldPost_Expr_Expr f2320) acc4299 expr589)
              expr589
  let vTypeAst_smapAccumL_Pat_Pat: all acc4300. (acc4300 -> Ast_Pat -> (acc4300, Ast_Pat)) -> acc4300 -> Ast_Pat -> (acc4300, Ast_Pat) =
    lam f2321.
      lam acc4301.
        lam __sem_target2961.
          match
            __sem_target2961
          with
            p1878
          in
          (acc4301, p1878)
  let vTypeAst_smapAccumL_Expr_Pat: all acc4302. (acc4302 -> Ast_Pat -> (acc4302, Ast_Pat)) -> acc4302 -> Ast_Expr -> (acc4302, Ast_Expr) =
    lam f2322.
      lam acc4303.
        lam __sem_target2962.
          match
            __sem_target2962
          with
            p1879
          in
          (acc4303, p1879)
  let vTypeAst_smapAccumL_Pat_Expr: all acc4304. (acc4304 -> Ast_Expr -> (acc4304, Ast_Expr)) -> acc4304 -> Ast_Pat -> (acc4304, Ast_Pat) =
    lam f2323.
      lam acc4305.
        lam __sem_target2963.
          match
            __sem_target2963
          with
            p1880
          in
          (acc4305, p1880)
  let vTypeAst_smapAccumL_Pat_Type: all acc4306. (acc4306 -> Ast_Type -> (acc4306, Ast_Type)) -> acc4306 -> Ast_Pat -> (acc4306, Ast_Pat) =
    lam f2324.
      lam acc4307.
        lam __sem_target2964.
          match
            __sem_target2964
          with
            p1881
          in
          (acc4307, p1881)
  let vTypeAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f2325.
      lam __sem_target2965.
        match
          __sem_target2965
        with
          p1882
        in
        let res731 =
            vTypeAst_smapAccumL_Expr_TypeLabel
              (lam #var"806".
                 lam a1355.
                   ({}, f2325 a1355))
              {}
              p1882
          in
          res731.1
  let vTypeAst_rappAccumL_Type_Type: all acc4308. (acc4308 -> Ast_Type -> (acc4308, Ast_Type)) -> acc4308 -> Ast_Type -> (acc4308, Ast_Type) =
    lam f2326.
      lam acc4309.
        lam __sem_target2966.
          match
            __sem_target2966
          with
            ty420
          in
          (acc4309, ty420)
  let vTypeAst_sfold_Expr_TypeLabel: all acc4310. (acc4310 -> Ast_Type -> acc4310) -> acc4310 -> Ast_Expr -> acc4310 =
    lam f2327.
      lam acc4311.
        lam __sem_target2967.
          match
            __sem_target2967
          with
            p1883
          in
          let res732 =
              vTypeAst_smapAccumL_Expr_TypeLabel
                (lam acc4312.
                   lam a1356.
                     (f2327 acc4312 a1356, a1356))
                acc4311
                p1883
            in
            res732.0
  let vTypeAst_smapAccumL_Expr_Expr: all acc4313. (acc4313 -> Ast_Expr -> (acc4313, Ast_Expr)) -> acc4313 -> Ast_Expr -> (acc4313, Ast_Expr) =
    lam f2328.
      lam acc4314.
        lam __sem_target2968.
          match
            __sem_target2968
          with
            TypeAst_TmType t1120
          then
            match
              f2328 acc4314 t1120.inexpr
            with
              (acc4315, inexpr18)
            in
            (acc4315, TypeAst_TmType
                { t1120 with inexpr = inexpr18 })
          else match
            __sem_target2968
          with
            p1884
          in
          (acc4314, p1884)
  let vTypeAst_smapAccumL_Expr_Type: all acc4316. (acc4316 -> Ast_Type -> (acc4316, Ast_Type)) -> acc4316 -> Ast_Expr -> (acc4316, Ast_Expr) =
    lam f2329.
      lam acc4317.
        lam __sem_target2969.
          match
            __sem_target2969
          with
            TypeAst_TmType t1121
          then
            match
              f2329 acc4317 t1121.tyIdent
            with
              (acc4318, tyIdent12)
            in
            (acc4318, TypeAst_TmType
                { t1121 with tyIdent = tyIdent12 })
          else match
            __sem_target2969
          with
            p1885
          in
          (acc4317, p1885)
  let vTypeAst_smapAccumL_Kind_Type: all acc4319. (acc4319 -> Ast_Type -> (acc4319, Ast_Type)) -> acc4319 -> Ast_Kind -> (acc4319, Ast_Kind) =
    lam f2330.
      lam acc4320.
        lam __sem_target2970.
          match
            __sem_target2970
          with
            s351
          in
          (acc4320, s351)
  let vTypeAst_smapAccumL_Type_Type: all acc4321. (acc4321 -> Ast_Type -> (acc4321, Ast_Type)) -> acc4321 -> Ast_Type -> (acc4321, Ast_Type) =
    lam f2331.
      lam acc4322.
        lam __sem_target2971.
          match
            __sem_target2971
          with
            p1886
          in
          (acc4322, p1886)
  let vTypeAst_mapAccumLPre_Expr_Expr: all acc4323. (acc4323 -> Ast_Expr -> (acc4323, Ast_Expr)) -> acc4323 -> Ast_Expr -> (acc4323, Ast_Expr) =
    lam f2332.
      lam acc4324.
        lam __sem_target2972.
          match
            __sem_target2972
          with
            expr590
          in
          match
              f2332 acc4324 expr590
            with
              (acc4325, expr591)
            in
            vTypeAst_smapAccumL_Expr_Expr (vTypeAst_mapAccumLPre_Expr_Expr f2332) acc4325 expr591
  let vTypeAst_mapAccumLPost_Expr_Expr: all acc4326. (acc4326 -> Ast_Expr -> (acc4326, Ast_Expr)) -> acc4326 -> Ast_Expr -> (acc4326, Ast_Expr) =
    lam f2333.
      lam acc4327.
        lam __sem_target2973.
          match
            __sem_target2973
          with
            expr592
          in
          match
              vTypeAst_smapAccumL_Expr_Expr (vTypeAst_mapAccumLPost_Expr_Expr f2333) acc4327 expr592
            with
              (acc4328, expr593)
            in
            f2333 acc4328 expr593
  let vTypeAst_smapAccumL_Expr_TypeLabel: all acc4329. (acc4329 -> Ast_Type -> (acc4329, Ast_Type)) -> acc4329 -> Ast_Expr -> (acc4329, Ast_Expr) =
    lam f2334.
      lam acc4330.
        lam __sem_target2974.
          match
            __sem_target2974
          with
            p1887
          in
          match
              f2334 acc4330 (vTypeAst_tyTm p1887)
            with
              (acc4331, ty421)
            in
            (acc4331, vTypeAst_withType ty421 p1887)
in
con DataAst_TmConDef: {ty: Ast_Type, info: Info, ident: Name, inexpr: Ast_Expr, tyIdent: Ast_Type} -> Ast_Expr in
con DataAst_TmConApp: {ty: Ast_Type, body: Ast_Expr, info: Info, ident: Name} -> Ast_Expr in
recursive
  let vDataAst_tyTm: Ast_Expr -> Ast_Type =
    lam __sem_target2887.
      match
        __sem_target2887
      with
        DataAst_TmConDef t1098
      then
        t1098.ty
      else match
        __sem_target2887
      with
        DataAst_TmConApp t1099
      in
      t1099.ty
  let vDataAst_tyPat: Ast_Pat -> Ast_Type = lam x617.
      never
  let vDataAst_infoTm: Ast_Expr -> Info =
    lam __sem_target2888.
      match
        __sem_target2888
      with
        DataAst_TmConDef r362
      then
        r362.info
      else match
        __sem_target2888
      with
        DataAst_TmConApp r363
      in
      r363.info
  let vDataAst_infoTy: Ast_Type -> Info = lam x618.
      never
  let vDataAst_infoPat: Ast_Pat -> Info = lam x619.
      never
  let vDataAst_withInfo: Info -> Ast_Expr -> Ast_Expr =
    lam info69.
      lam __sem_target2889.
        match
          __sem_target2889
        with
          DataAst_TmConDef t1102
        then
          DataAst_TmConDef
            { t1102 with info = info69 }
        else match
          __sem_target2889
        with
          DataAst_TmConApp t1103
        in
        DataAst_TmConApp
            { t1103 with info = info69 }
  let vDataAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr =
    lam ty410: Ast_Type.
      lam __sem_target2890.
        match
          __sem_target2890
        with
          DataAst_TmConDef t1104
        then
          DataAst_TmConDef
            { t1104 with ty = ty410 }
        else match
          __sem_target2890
        with
          DataAst_TmConApp t1105
        in
        DataAst_TmConApp
            { t1105 with ty = ty410 }
  let vDataAst_tyWithInfo: Info -> Ast_Type -> Ast_Type = lam x620.
      never
  let vDataAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target2891.
      match
        __sem_target2891
      with
        ty411
      in
      vDataAst_rapp_Type_Type vDataAst_unwrapType ty411
  let vDataAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target2892.
      match
        __sem_target2892
      with
        ty412
      in
      vDataAst_rapp_Type_Type vDataAst_inspectType ty412
  let vDataAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x621.
      never
  let vDataAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x622.
      never
  let vDataAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f2265.
      lam __sem_target2893.
        match
          __sem_target2893
        with
          p1834
        in
        let res711 =
            vDataAst_smapAccumL_Pat_Pat
              (lam #var"787".
                 lam a1321.
                   ({}, f2265 a1321))
              {}
              p1834
          in
          res711.1
  let vDataAst_countPatNodes =
    lam count896.
      lam __sem_target2894.
        match
          __sem_target2894
        with
          t1106
        in
        let count897 = addi count896 1 in
          let count898 = vDataAst_sfold_Pat_Pat vDataAst_countPatNodes count897 t1106
          in
          let count899 =
            vDataAst_sfold_Pat_Expr vDataAst_countExprNodes count898 t1106
          in
          let count900 =
            vDataAst_sfold_Pat_Type vDataAst_countTypeNodes count899 t1106
          in
          count900
  let vDataAst_sfold_Pat_Pat: all acc4205. (acc4205 -> Ast_Pat -> acc4205) -> acc4205 -> Ast_Pat -> acc4205 =
    lam f2266.
      lam acc4206.
        lam __sem_target2895.
          match
            __sem_target2895
          with
            p1835
          in
          let res712 =
              vDataAst_smapAccumL_Pat_Pat
                (lam acc4207.
                   lam a1322.
                     (f2266 acc4207 a1322, a1322))
                acc4206
                p1835
            in
            res712.0
  let vDataAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f2267.
      lam __sem_target2896.
        match
          __sem_target2896
        with
          p1836
        in
        match
            vDataAst_smapAccumL_Expr_Pat
              (lam #var"788".
                 lam a1323.
                   ({}, f2267 a1323))
              {}
              p1836
          with
            (_, p1837)
          in
          p1837
  let vDataAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f2268.
      lam __sem_target2897.
        match
          __sem_target2897
        with
          p1838
        in
        match
            vDataAst_smapAccumL_Pat_Expr
              (lam #var"789".
                 lam a1324.
                   ({}, f2268 a1324))
              {}
              p1838
          with
            (_, p1839)
          in
          p1839
  let vDataAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f2269.
      lam __sem_target2898.
        match
          __sem_target2898
        with
          p1840
        in
        match
            vDataAst_smapAccumL_Pat_Type
              (lam #var"790".
                 lam a1325.
                   ({}, f2269 a1325))
              {}
              p1840
          with
            (_, p1841)
          in
          p1841
  let vDataAst_countExprNodes =
    lam count901.
      lam __sem_target2899.
        match
          __sem_target2899
        with
          t1107
        in
        let count902 = addi count901 1 in
          let count903 =
            vDataAst_sfold_Expr_Expr vDataAst_countExprNodes count902 t1107
          in
          let count904 =
            vDataAst_sfold_Expr_Type vDataAst_countTypeNodes count903 t1107
          in
          let count905 =
            vDataAst_sfold_Expr_TypeLabel vDataAst_countTypeNodes count904 t1107
          in
          let count906 =
            vDataAst_sfold_Expr_Pat vDataAst_countPatNodes count905 t1107
          in
          count906
  let vDataAst_countTypeNodes =
    lam count907.
      lam __sem_target2900.
        match
          __sem_target2900
        with
          t1108
        in
        let count908 = addi count907 1 in
          let count909 =
            vDataAst_sfold_Type_Type vDataAst_countTypeNodes count908 t1108
          in
          count909
  let vDataAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f2270.
      lam __sem_target2901.
        match
          __sem_target2901
        with
          ty413
        in
        let res713 =
            vDataAst_rappAccumL_Type_Type
              (lam #var"791".
                 lam t1109.
                   ({}, f2270 t1109))
              {}
              ty413
          in
          res713.1
  let vDataAst_sfold_Expr_Pat: all acc4208. (acc4208 -> Ast_Pat -> acc4208) -> acc4208 -> Ast_Expr -> acc4208 =
    lam f2271.
      lam acc4209.
        lam __sem_target2902.
          match
            __sem_target2902
          with
            p1842
          in
          match
              vDataAst_smapAccumL_Expr_Pat
                (lam acc4210.
                   lam a1326.
                     (f2271 acc4210 a1326, a1326))
                acc4209
                p1842
            with
              (acc4211, _)
            in
            acc4211
  let vDataAst_sfold_Pat_Expr: all acc4212. (acc4212 -> Ast_Expr -> acc4212) -> acc4212 -> Ast_Pat -> acc4212 =
    lam f2272.
      lam acc4213.
        lam __sem_target2903.
          match
            __sem_target2903
          with
            p1843
          in
          match
              vDataAst_smapAccumL_Pat_Expr
                (lam acc4214.
                   lam a1327.
                     (f2272 acc4214 a1327, a1327))
                acc4213
                p1843
            with
              (acc4215, _)
            in
            acc4215
  let vDataAst_sfold_Pat_Type: all acc4216. (acc4216 -> Ast_Type -> acc4216) -> acc4216 -> Ast_Pat -> acc4216 =
    lam f2273.
      lam acc4217.
        lam __sem_target2904.
          match
            __sem_target2904
          with
            p1844
          in
          match
              vDataAst_smapAccumL_Pat_Type
                (lam acc4218.
                   lam a1328.
                     (f2273 acc4218 a1328, a1328))
                acc4217
                p1844
            with
              (acc4219, _)
            in
            acc4219
  let vDataAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f2274.
      lam __sem_target2905.
        match
          __sem_target2905
        with
          p1845
        in
        let res714 =
            vDataAst_smapAccumL_Expr_Expr
              (lam #var"792".
                 lam a1329.
                   ({}, f2274 a1329))
              {}
              p1845
          in
          res714.1
  let vDataAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f2275.
      lam __sem_target2906.
        match
          __sem_target2906
        with
          p1846
        in
        let res715 =
            vDataAst_smapAccumL_Expr_Type
              (lam #var"793".
                 lam a1330.
                   ({}, f2275 a1330))
              {}
              p1846
          in
          res715.1
  let vDataAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f2276: Ast_Type -> Ast_Type.
      lam __sem_target2907.
        match
          __sem_target2907
        with
          s344
        in
        match
            vDataAst_smapAccumL_Kind_Type
              (lam #var"794".
                 lam x623.
                   ({}, f2276 x623))
              {}
              s344
          with
            (_, s345)
          in
          s345
  let vDataAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f2277.
      lam __sem_target2908.
        match
          __sem_target2908
        with
          p1847
        in
        let res716 =
            vDataAst_smapAccumL_Type_Type
              (lam #var"795".
                 lam a1331.
                   ({}, f2277 a1331))
              {}
              p1847
          in
          res716.1
  let vDataAst_sfold_Expr_Expr: all acc4220. (acc4220 -> Ast_Expr -> acc4220) -> acc4220 -> Ast_Expr -> acc4220 =
    lam f2278.
      lam acc4221.
        lam __sem_target2909.
          match
            __sem_target2909
          with
            p1848
          in
          let res717 =
              vDataAst_smapAccumL_Expr_Expr
                (lam acc4222.
                   lam a1332.
                     (f2278 acc4222 a1332, a1332))
                acc4221
                p1848
            in
            res717.0
  let vDataAst_sfold_Expr_Type: all acc4223. (acc4223 -> Ast_Type -> acc4223) -> acc4223 -> Ast_Expr -> acc4223 =
    lam f2279.
      lam acc4224.
        lam __sem_target2910.
          match
            __sem_target2910
          with
            p1849
          in
          let res718 =
              vDataAst_smapAccumL_Expr_Type
                (lam acc4225.
                   lam a1333.
                     (f2279 acc4225 a1333, a1333))
                acc4224
                p1849
            in
            res718.0
  let vDataAst_sfold_Kind_Type: all acc4226. (acc4226 -> Ast_Type -> acc4226) -> acc4226 -> Ast_Kind -> acc4226 =
    lam f2280: acc4226 -> Ast_Type -> acc4226.
      lam acc4227: acc4226.
        lam __sem_target2911.
          match
            __sem_target2911
          with
            s346
          in
          match
              vDataAst_smapAccumL_Kind_Type
                (lam a1334.
                   lam x624.
                     (f2280 a1334 x624, x624))
                acc4227
                s346
            with
              (a1335, _)
            in
            a1335
  let vDataAst_sfold_Type_Type: all acc4228. (acc4228 -> Ast_Type -> acc4228) -> acc4228 -> Ast_Type -> acc4228 =
    lam f2281.
      lam acc4229.
        lam __sem_target2912.
          match
            __sem_target2912
          with
            p1850
          in
          let res719 =
              vDataAst_smapAccumL_Type_Type
                (lam acc4230.
                   lam a1336.
                     (f2281 acc4230 a1336, a1336))
                acc4229
                p1850
            in
            res719.0
  let vDataAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f2282.
      lam __sem_target2913.
        match
          __sem_target2913
        with
          expr576
        in
        let expr577 = f2282 expr576 in
          vDataAst_smap_Expr_Expr (vDataAst_mapPre_Expr_Expr f2282) expr577
  let vDataAst_foldPre_Expr_Expr: all acc4231. (acc4231 -> Ast_Expr -> acc4231) -> acc4231 -> Ast_Expr -> acc4231 =
    lam f2283.
      lam acc4232.
        lam __sem_target2914.
          match
            __sem_target2914
          with
            expr578
          in
          let acc4233 = f2283 acc4232 expr578 in
            vDataAst_sfold_Expr_Expr (vDataAst_foldPre_Expr_Expr f2283) acc4233 expr578
  let vDataAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f2284.
      lam __sem_target2915.
        match
          __sem_target2915
        with
          expr579
        in
        f2284
            (vDataAst_smap_Expr_Expr (vDataAst_mapPost_Expr_Expr f2284) expr579)
  let vDataAst_foldPost_Expr_Expr: all acc4234. (acc4234 -> Ast_Expr -> acc4234) -> acc4234 -> Ast_Expr -> acc4234 =
    lam f2285.
      lam acc4235.
        lam __sem_target2916.
          match
            __sem_target2916
          with
            expr580
          in
          f2285
              (vDataAst_sfold_Expr_Expr (vDataAst_foldPost_Expr_Expr f2285) acc4235 expr580)
              expr580
  let vDataAst_smapAccumL_Pat_Pat: all acc4236. (acc4236 -> Ast_Pat -> (acc4236, Ast_Pat)) -> acc4236 -> Ast_Pat -> (acc4236, Ast_Pat) =
    lam f2286.
      lam acc4237.
        lam __sem_target2917.
          match
            __sem_target2917
          with
            p1851
          in
          (acc4237, p1851)
  let vDataAst_smapAccumL_Expr_Pat: all acc4238. (acc4238 -> Ast_Pat -> (acc4238, Ast_Pat)) -> acc4238 -> Ast_Expr -> (acc4238, Ast_Expr) =
    lam f2287.
      lam acc4239.
        lam __sem_target2918.
          match
            __sem_target2918
          with
            p1852
          in
          (acc4239, p1852)
  let vDataAst_smapAccumL_Pat_Expr: all acc4240. (acc4240 -> Ast_Expr -> (acc4240, Ast_Expr)) -> acc4240 -> Ast_Pat -> (acc4240, Ast_Pat) =
    lam f2288.
      lam acc4241.
        lam __sem_target2919.
          match
            __sem_target2919
          with
            p1853
          in
          (acc4241, p1853)
  let vDataAst_smapAccumL_Pat_Type: all acc4242. (acc4242 -> Ast_Type -> (acc4242, Ast_Type)) -> acc4242 -> Ast_Pat -> (acc4242, Ast_Pat) =
    lam f2289.
      lam acc4243.
        lam __sem_target2920.
          match
            __sem_target2920
          with
            p1854
          in
          (acc4243, p1854)
  let vDataAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f2290.
      lam __sem_target2921.
        match
          __sem_target2921
        with
          p1855
        in
        let res720 =
            vDataAst_smapAccumL_Expr_TypeLabel
              (lam #var"796".
                 lam a1337.
                   ({}, f2290 a1337))
              {}
              p1855
          in
          res720.1
  let vDataAst_rappAccumL_Type_Type: all acc4244. (acc4244 -> Ast_Type -> (acc4244, Ast_Type)) -> acc4244 -> Ast_Type -> (acc4244, Ast_Type) =
    lam f2291.
      lam acc4245.
        lam __sem_target2922.
          match
            __sem_target2922
          with
            ty414
          in
          (acc4245, ty414)
  let vDataAst_sfold_Expr_TypeLabel: all acc4246. (acc4246 -> Ast_Type -> acc4246) -> acc4246 -> Ast_Expr -> acc4246 =
    lam f2292.
      lam acc4247.
        lam __sem_target2923.
          match
            __sem_target2923
          with
            p1856
          in
          let res721 =
              vDataAst_smapAccumL_Expr_TypeLabel
                (lam acc4248.
                   lam a1338.
                     (f2292 acc4248 a1338, a1338))
                acc4247
                p1856
            in
            res721.0
  let vDataAst_smapAccumL_Expr_Expr: all acc4249. (acc4249 -> Ast_Expr -> (acc4249, Ast_Expr)) -> acc4249 -> Ast_Expr -> (acc4249, Ast_Expr) =
    lam f2293.
      lam acc4250.
        lam __sem_target2924.
          match
            __sem_target2924
          with
            DataAst_TmConDef t1110
          then
            match
              f2293 acc4250 t1110.inexpr
            with
              (acc4251, inexpr17)
            in
            (acc4251, DataAst_TmConDef
                { t1110 with inexpr = inexpr17 })
          else match
            __sem_target2924
          with
            DataAst_TmConApp t1111
          then
            match
              f2293 acc4250 t1111.body
            with
              (acc4252, body13)
            in
            (acc4252, DataAst_TmConApp
                { t1111 with body = body13 })
          else match
            __sem_target2924
          with
            p1857
          in
          (acc4250, p1857)
  let vDataAst_smapAccumL_Expr_Type: all acc4253. (acc4253 -> Ast_Type -> (acc4253, Ast_Type)) -> acc4253 -> Ast_Expr -> (acc4253, Ast_Expr) =
    lam f2294.
      lam acc4254.
        lam __sem_target2925.
          match
            __sem_target2925
          with
            DataAst_TmConDef t1112
          then
            match
              f2294 acc4254 t1112.tyIdent
            with
              (acc4255, tyIdent11)
            in
            (acc4255, DataAst_TmConDef
                { t1112 with tyIdent = tyIdent11 })
          else match
            __sem_target2925
          with
            p1858
          in
          (acc4254, p1858)
  let vDataAst_smapAccumL_Kind_Type: all acc4256. (acc4256 -> Ast_Type -> (acc4256, Ast_Type)) -> acc4256 -> Ast_Kind -> (acc4256, Ast_Kind) =
    lam f2295.
      lam acc4257.
        lam __sem_target2926.
          match
            __sem_target2926
          with
            s347
          in
          (acc4257, s347)
  let vDataAst_smapAccumL_Type_Type: all acc4258. (acc4258 -> Ast_Type -> (acc4258, Ast_Type)) -> acc4258 -> Ast_Type -> (acc4258, Ast_Type) =
    lam f2296.
      lam acc4259.
        lam __sem_target2927.
          match
            __sem_target2927
          with
            p1859
          in
          (acc4259, p1859)
  let vDataAst_mapAccumLPre_Expr_Expr: all acc4260. (acc4260 -> Ast_Expr -> (acc4260, Ast_Expr)) -> acc4260 -> Ast_Expr -> (acc4260, Ast_Expr) =
    lam f2297.
      lam acc4261.
        lam __sem_target2928.
          match
            __sem_target2928
          with
            expr581
          in
          match
              f2297 acc4261 expr581
            with
              (acc4262, expr582)
            in
            vDataAst_smapAccumL_Expr_Expr (vDataAst_mapAccumLPre_Expr_Expr f2297) acc4262 expr582
  let vDataAst_mapAccumLPost_Expr_Expr: all acc4263. (acc4263 -> Ast_Expr -> (acc4263, Ast_Expr)) -> acc4263 -> Ast_Expr -> (acc4263, Ast_Expr) =
    lam f2298.
      lam acc4264.
        lam __sem_target2929.
          match
            __sem_target2929
          with
            expr583
          in
          match
              vDataAst_smapAccumL_Expr_Expr (vDataAst_mapAccumLPost_Expr_Expr f2298) acc4264 expr583
            with
              (acc4265, expr584)
            in
            f2298 acc4265 expr584
  let vDataAst_smapAccumL_Expr_TypeLabel: all acc4266. (acc4266 -> Ast_Type -> (acc4266, Ast_Type)) -> acc4266 -> Ast_Expr -> (acc4266, Ast_Expr) =
    lam f2299.
      lam acc4267.
        lam __sem_target2930.
          match
            __sem_target2930
          with
            p1860
          in
          match
              f2299 acc4267 (vDataAst_tyTm p1860)
            with
              (acc4268, ty415)
            in
            (acc4268, vDataAst_withType ty415 p1860)
in
con MatchAst_TmMatch: {ty: Ast_Type, els: Ast_Expr, pat: Ast_Pat, thn: Ast_Expr, info: Info, target: Ast_Expr} -> Ast_Expr in
recursive
  let vMatchAst_tyTm: Ast_Expr -> Ast_Type =
    lam __sem_target2843.
      match
        __sem_target2843
      with
        MatchAst_TmMatch t1089
      in
      t1089.ty
  let vMatchAst_tyPat: Ast_Pat -> Ast_Type = lam x609.
      never
  let vMatchAst_infoTm: Ast_Expr -> Info =
    lam __sem_target2844.
      match
        __sem_target2844
      with
        MatchAst_TmMatch r361
      in
      r361.info
  let vMatchAst_infoTy: Ast_Type -> Info = lam x610.
      never
  let vMatchAst_infoPat: Ast_Pat -> Info = lam x611.
      never
  let vMatchAst_withInfo: Info -> Ast_Expr -> Ast_Expr =
    lam info68.
      lam __sem_target2845.
        match
          __sem_target2845
        with
          MatchAst_TmMatch t1090
        in
        MatchAst_TmMatch
            { t1090 with info = info68 }
  let vMatchAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr =
    lam ty404: Ast_Type.
      lam __sem_target2846.
        match
          __sem_target2846
        with
          MatchAst_TmMatch t1091
        in
        MatchAst_TmMatch
            { t1091 with ty = ty404 }
  let vMatchAst_tyWithInfo: Info -> Ast_Type -> Ast_Type = lam x612.
      never
  let vMatchAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target2847.
      match
        __sem_target2847
      with
        ty405
      in
      vMatchAst_rapp_Type_Type vMatchAst_unwrapType ty405
  let vMatchAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target2848.
      match
        __sem_target2848
      with
        ty406
      in
      vMatchAst_rapp_Type_Type vMatchAst_inspectType ty406
  let vMatchAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x613.
      never
  let vMatchAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x614.
      never
  let vMatchAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f2230.
      lam __sem_target2849.
        match
          __sem_target2849
        with
          p1807
        in
        let res700 =
            vMatchAst_smapAccumL_Pat_Pat
              (lam #var"777".
                 lam a1303.
                   ({}, f2230 a1303))
              {}
              p1807
          in
          res700.1
  let vMatchAst_countPatNodes =
    lam count882.
      lam __sem_target2850.
        match
          __sem_target2850
        with
          t1092
        in
        let count883 = addi count882 1 in
          let count884 =
            vMatchAst_sfold_Pat_Pat vMatchAst_countPatNodes count883 t1092
          in
          let count885 =
            vMatchAst_sfold_Pat_Expr vMatchAst_countExprNodes count884 t1092
          in
          let count886 =
            vMatchAst_sfold_Pat_Type vMatchAst_countTypeNodes count885 t1092
          in
          count886
  let vMatchAst_sfold_Pat_Pat: all acc4140. (acc4140 -> Ast_Pat -> acc4140) -> acc4140 -> Ast_Pat -> acc4140 =
    lam f2231.
      lam acc4141.
        lam __sem_target2851.
          match
            __sem_target2851
          with
            p1808
          in
          let res701 =
              vMatchAst_smapAccumL_Pat_Pat
                (lam acc4142.
                   lam a1304.
                     (f2231 acc4142 a1304, a1304))
                acc4141
                p1808
            in
            res701.0
  let vMatchAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f2232.
      lam __sem_target2852.
        match
          __sem_target2852
        with
          p1809
        in
        match
            vMatchAst_smapAccumL_Expr_Pat
              (lam #var"778".
                 lam a1305.
                   ({}, f2232 a1305))
              {}
              p1809
          with
            (_, p1810)
          in
          p1810
  let vMatchAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f2233.
      lam __sem_target2853.
        match
          __sem_target2853
        with
          p1811
        in
        match
            vMatchAst_smapAccumL_Pat_Expr
              (lam #var"779".
                 lam a1306.
                   ({}, f2233 a1306))
              {}
              p1811
          with
            (_, p1812)
          in
          p1812
  let vMatchAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f2234.
      lam __sem_target2854.
        match
          __sem_target2854
        with
          p1813
        in
        match
            vMatchAst_smapAccumL_Pat_Type
              (lam #var"780".
                 lam a1307.
                   ({}, f2234 a1307))
              {}
              p1813
          with
            (_, p1814)
          in
          p1814
  let vMatchAst_countExprNodes =
    lam count887.
      lam __sem_target2855.
        match
          __sem_target2855
        with
          t1093
        in
        let count888 = addi count887 1 in
          let count889 =
            vMatchAst_sfold_Expr_Expr vMatchAst_countExprNodes count888 t1093
          in
          let count890 =
            vMatchAst_sfold_Expr_Type vMatchAst_countTypeNodes count889 t1093
          in
          let count891 =
            vMatchAst_sfold_Expr_TypeLabel vMatchAst_countTypeNodes count890 t1093
          in
          let count892 =
            vMatchAst_sfold_Expr_Pat vMatchAst_countPatNodes count891 t1093
          in
          count892
  let vMatchAst_countTypeNodes =
    lam count893.
      lam __sem_target2856.
        match
          __sem_target2856
        with
          t1094
        in
        let count894 = addi count893 1 in
          let count895 =
            vMatchAst_sfold_Type_Type vMatchAst_countTypeNodes count894 t1094
          in
          count895
  let vMatchAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f2235.
      lam __sem_target2857.
        match
          __sem_target2857
        with
          ty407
        in
        let res702 =
            vMatchAst_rappAccumL_Type_Type
              (lam #var"781".
                 lam t1095.
                   ({}, f2235 t1095))
              {}
              ty407
          in
          res702.1
  let vMatchAst_sfold_Expr_Pat: all acc4143. (acc4143 -> Ast_Pat -> acc4143) -> acc4143 -> Ast_Expr -> acc4143 =
    lam f2236.
      lam acc4144.
        lam __sem_target2858.
          match
            __sem_target2858
          with
            p1815
          in
          match
              vMatchAst_smapAccumL_Expr_Pat
                (lam acc4145.
                   lam a1308.
                     (f2236 acc4145 a1308, a1308))
                acc4144
                p1815
            with
              (acc4146, _)
            in
            acc4146
  let vMatchAst_sfold_Pat_Expr: all acc4147. (acc4147 -> Ast_Expr -> acc4147) -> acc4147 -> Ast_Pat -> acc4147 =
    lam f2237.
      lam acc4148.
        lam __sem_target2859.
          match
            __sem_target2859
          with
            p1816
          in
          match
              vMatchAst_smapAccumL_Pat_Expr
                (lam acc4149.
                   lam a1309.
                     (f2237 acc4149 a1309, a1309))
                acc4148
                p1816
            with
              (acc4150, _)
            in
            acc4150
  let vMatchAst_sfold_Pat_Type: all acc4151. (acc4151 -> Ast_Type -> acc4151) -> acc4151 -> Ast_Pat -> acc4151 =
    lam f2238.
      lam acc4152.
        lam __sem_target2860.
          match
            __sem_target2860
          with
            p1817
          in
          match
              vMatchAst_smapAccumL_Pat_Type
                (lam acc4153.
                   lam a1310.
                     (f2238 acc4153 a1310, a1310))
                acc4152
                p1817
            with
              (acc4154, _)
            in
            acc4154
  let vMatchAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f2239.
      lam __sem_target2861.
        match
          __sem_target2861
        with
          p1818
        in
        let res703 =
            vMatchAst_smapAccumL_Expr_Expr
              (lam #var"782".
                 lam a1311.
                   ({}, f2239 a1311))
              {}
              p1818
          in
          res703.1
  let vMatchAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f2240.
      lam __sem_target2862.
        match
          __sem_target2862
        with
          p1819
        in
        let res704 =
            vMatchAst_smapAccumL_Expr_Type
              (lam #var"783".
                 lam a1312.
                   ({}, f2240 a1312))
              {}
              p1819
          in
          res704.1
  let vMatchAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f2241: Ast_Type -> Ast_Type.
      lam __sem_target2863.
        match
          __sem_target2863
        with
          s340
        in
        match
            vMatchAst_smapAccumL_Kind_Type
              (lam #var"784".
                 lam x615.
                   ({}, f2241 x615))
              {}
              s340
          with
            (_, s341)
          in
          s341
  let vMatchAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f2242.
      lam __sem_target2864.
        match
          __sem_target2864
        with
          p1820
        in
        let res705 =
            vMatchAst_smapAccumL_Type_Type
              (lam #var"785".
                 lam a1313.
                   ({}, f2242 a1313))
              {}
              p1820
          in
          res705.1
  let vMatchAst_sfold_Expr_Expr: all acc4155. (acc4155 -> Ast_Expr -> acc4155) -> acc4155 -> Ast_Expr -> acc4155 =
    lam f2243.
      lam acc4156.
        lam __sem_target2865.
          match
            __sem_target2865
          with
            p1821
          in
          let res706 =
              vMatchAst_smapAccumL_Expr_Expr
                (lam acc4157.
                   lam a1314.
                     (f2243 acc4157 a1314, a1314))
                acc4156
                p1821
            in
            res706.0
  let vMatchAst_sfold_Expr_Type: all acc4158. (acc4158 -> Ast_Type -> acc4158) -> acc4158 -> Ast_Expr -> acc4158 =
    lam f2244.
      lam acc4159.
        lam __sem_target2866.
          match
            __sem_target2866
          with
            p1822
          in
          let res707 =
              vMatchAst_smapAccumL_Expr_Type
                (lam acc4160.
                   lam a1315.
                     (f2244 acc4160 a1315, a1315))
                acc4159
                p1822
            in
            res707.0
  let vMatchAst_sfold_Kind_Type: all acc4161. (acc4161 -> Ast_Type -> acc4161) -> acc4161 -> Ast_Kind -> acc4161 =
    lam f2245: acc4161 -> Ast_Type -> acc4161.
      lam acc4162: acc4161.
        lam __sem_target2867.
          match
            __sem_target2867
          with
            s342
          in
          match
              vMatchAst_smapAccumL_Kind_Type
                (lam a1316.
                   lam x616.
                     (f2245 a1316 x616, x616))
                acc4162
                s342
            with
              (a1317, _)
            in
            a1317
  let vMatchAst_sfold_Type_Type: all acc4163. (acc4163 -> Ast_Type -> acc4163) -> acc4163 -> Ast_Type -> acc4163 =
    lam f2246.
      lam acc4164.
        lam __sem_target2868.
          match
            __sem_target2868
          with
            p1823
          in
          let res708 =
              vMatchAst_smapAccumL_Type_Type
                (lam acc4165.
                   lam a1318.
                     (f2246 acc4165 a1318, a1318))
                acc4164
                p1823
            in
            res708.0
  let vMatchAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f2247.
      lam __sem_target2869.
        match
          __sem_target2869
        with
          expr567
        in
        let expr568 = f2247 expr567 in
          vMatchAst_smap_Expr_Expr (vMatchAst_mapPre_Expr_Expr f2247) expr568
  let vMatchAst_foldPre_Expr_Expr: all acc4166. (acc4166 -> Ast_Expr -> acc4166) -> acc4166 -> Ast_Expr -> acc4166 =
    lam f2248.
      lam acc4167.
        lam __sem_target2870.
          match
            __sem_target2870
          with
            expr569
          in
          let acc4168 = f2248 acc4167 expr569 in
            vMatchAst_sfold_Expr_Expr (vMatchAst_foldPre_Expr_Expr f2248) acc4168 expr569
  let vMatchAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f2249.
      lam __sem_target2871.
        match
          __sem_target2871
        with
          expr570
        in
        f2249
            (vMatchAst_smap_Expr_Expr (vMatchAst_mapPost_Expr_Expr f2249) expr570)
  let vMatchAst_foldPost_Expr_Expr: all acc4169. (acc4169 -> Ast_Expr -> acc4169) -> acc4169 -> Ast_Expr -> acc4169 =
    lam f2250.
      lam acc4170.
        lam __sem_target2872.
          match
            __sem_target2872
          with
            expr571
          in
          f2250
              (vMatchAst_sfold_Expr_Expr (vMatchAst_foldPost_Expr_Expr f2250) acc4170 expr571)
              expr571
  let vMatchAst_smapAccumL_Pat_Pat: all acc4171. (acc4171 -> Ast_Pat -> (acc4171, Ast_Pat)) -> acc4171 -> Ast_Pat -> (acc4171, Ast_Pat) =
    lam f2251.
      lam acc4172.
        lam __sem_target2873.
          match
            __sem_target2873
          with
            p1824
          in
          (acc4172, p1824)
  let vMatchAst_smapAccumL_Expr_Pat: all acc4173. (acc4173 -> Ast_Pat -> (acc4173, Ast_Pat)) -> acc4173 -> Ast_Expr -> (acc4173, Ast_Expr) =
    lam f2252.
      lam acc4174.
        lam __sem_target2874.
          match
            __sem_target2874
          with
            MatchAst_TmMatch t1096
          then
            match
              f2252 acc4174 t1096.pat
            with
              (acc4175, pat3)
            in
            (acc4175, MatchAst_TmMatch
                { t1096 with pat = pat3 })
          else match
            __sem_target2874
          with
            p1825
          in
          (acc4174, p1825)
  let vMatchAst_smapAccumL_Pat_Expr: all acc4176. (acc4176 -> Ast_Expr -> (acc4176, Ast_Expr)) -> acc4176 -> Ast_Pat -> (acc4176, Ast_Pat) =
    lam f2253.
      lam acc4177.
        lam __sem_target2875.
          match
            __sem_target2875
          with
            p1826
          in
          (acc4177, p1826)
  let vMatchAst_smapAccumL_Pat_Type: all acc4178. (acc4178 -> Ast_Type -> (acc4178, Ast_Type)) -> acc4178 -> Ast_Pat -> (acc4178, Ast_Pat) =
    lam f2254.
      lam acc4179.
        lam __sem_target2876.
          match
            __sem_target2876
          with
            p1827
          in
          (acc4179, p1827)
  let vMatchAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f2255.
      lam __sem_target2877.
        match
          __sem_target2877
        with
          p1828
        in
        let res709 =
            vMatchAst_smapAccumL_Expr_TypeLabel
              (lam #var"786".
                 lam a1319.
                   ({}, f2255 a1319))
              {}
              p1828
          in
          res709.1
  let vMatchAst_rappAccumL_Type_Type: all acc4180. (acc4180 -> Ast_Type -> (acc4180, Ast_Type)) -> acc4180 -> Ast_Type -> (acc4180, Ast_Type) =
    lam f2256.
      lam acc4181.
        lam __sem_target2878.
          match
            __sem_target2878
          with
            ty408
          in
          (acc4181, ty408)
  let vMatchAst_sfold_Expr_TypeLabel: all acc4182. (acc4182 -> Ast_Type -> acc4182) -> acc4182 -> Ast_Expr -> acc4182 =
    lam f2257.
      lam acc4183.
        lam __sem_target2879.
          match
            __sem_target2879
          with
            p1829
          in
          let res710 =
              vMatchAst_smapAccumL_Expr_TypeLabel
                (lam acc4184.
                   lam a1320.
                     (f2257 acc4184 a1320, a1320))
                acc4183
                p1829
            in
            res710.0
  let vMatchAst_smapAccumL_Expr_Expr: all acc4185. (acc4185 -> Ast_Expr -> (acc4185, Ast_Expr)) -> acc4185 -> Ast_Expr -> (acc4185, Ast_Expr) =
    lam f2258.
      lam acc4186.
        lam __sem_target2880.
          match
            __sem_target2880
          with
            MatchAst_TmMatch t1097
          then
            match
              f2258 acc4186 t1097.target
            with
              (acc4187, target3)
            in
            match
                f2258 acc4187 t1097.thn
              with
                (acc4188, thn3)
              in
              match
                  f2258 acc4188 t1097.els
                with
                  (acc4189, els3)
                in
                (acc4189, MatchAst_TmMatch
                    { t1097 with target = target3, thn = thn3, els = els3 })
          else match
            __sem_target2880
          with
            p1830
          in
          (acc4186, p1830)
  let vMatchAst_smapAccumL_Expr_Type: all acc4190. (acc4190 -> Ast_Type -> (acc4190, Ast_Type)) -> acc4190 -> Ast_Expr -> (acc4190, Ast_Expr) =
    lam f2259.
      lam acc4191.
        lam __sem_target2881.
          match
            __sem_target2881
          with
            p1831
          in
          (acc4191, p1831)
  let vMatchAst_smapAccumL_Kind_Type: all acc4192. (acc4192 -> Ast_Type -> (acc4192, Ast_Type)) -> acc4192 -> Ast_Kind -> (acc4192, Ast_Kind) =
    lam f2260.
      lam acc4193.
        lam __sem_target2882.
          match
            __sem_target2882
          with
            s343
          in
          (acc4193, s343)
  let vMatchAst_smapAccumL_Type_Type: all acc4194. (acc4194 -> Ast_Type -> (acc4194, Ast_Type)) -> acc4194 -> Ast_Type -> (acc4194, Ast_Type) =
    lam f2261.
      lam acc4195.
        lam __sem_target2883.
          match
            __sem_target2883
          with
            p1832
          in
          (acc4195, p1832)
  let vMatchAst_mapAccumLPre_Expr_Expr: all acc4196. (acc4196 -> Ast_Expr -> (acc4196, Ast_Expr)) -> acc4196 -> Ast_Expr -> (acc4196, Ast_Expr) =
    lam f2262.
      lam acc4197.
        lam __sem_target2884.
          match
            __sem_target2884
          with
            expr572
          in
          match
              f2262 acc4197 expr572
            with
              (acc4198, expr573)
            in
            vMatchAst_smapAccumL_Expr_Expr (vMatchAst_mapAccumLPre_Expr_Expr f2262) acc4198 expr573
  let vMatchAst_mapAccumLPost_Expr_Expr: all acc4199. (acc4199 -> Ast_Expr -> (acc4199, Ast_Expr)) -> acc4199 -> Ast_Expr -> (acc4199, Ast_Expr) =
    lam f2263.
      lam acc4200.
        lam __sem_target2885.
          match
            __sem_target2885
          with
            expr574
          in
          match
              vMatchAst_smapAccumL_Expr_Expr (vMatchAst_mapAccumLPost_Expr_Expr f2263) acc4200 expr574
            with
              (acc4201, expr575)
            in
            f2263 acc4201 expr575
  let vMatchAst_smapAccumL_Expr_TypeLabel: all acc4202. (acc4202 -> Ast_Type -> (acc4202, Ast_Type)) -> acc4202 -> Ast_Expr -> (acc4202, Ast_Expr) =
    lam f2264.
      lam acc4203.
        lam __sem_target2886.
          match
            __sem_target2886
          with
            p1833
          in
          match
              f2264 acc4203 (vMatchAst_tyTm p1833)
            with
              (acc4204, ty409)
            in
            (acc4204, vMatchAst_withType ty409 p1833)
in
con UtestAst_TmUtest: {ty: Ast_Type, info: Info, next: Ast_Expr, test: Ast_Expr, tusing: Option Ast_Expr, tonfail: Option Ast_Expr, expected: Ast_Expr} -> Ast_Expr in
recursive
  let vUtestAst_tyTm: Ast_Expr -> Ast_Type =
    lam __sem_target2799.
      match
        __sem_target2799
      with
        UtestAst_TmUtest t1081
      in
      t1081.ty
  let vUtestAst_tyPat: Ast_Pat -> Ast_Type = lam x601.
      never
  let vUtestAst_infoTm: Ast_Expr -> Info =
    lam __sem_target2800.
      match
        __sem_target2800
      with
        UtestAst_TmUtest r360
      in
      r360.info
  let vUtestAst_infoTy: Ast_Type -> Info = lam x602.
      never
  let vUtestAst_infoPat: Ast_Pat -> Info = lam x603.
      never
  let vUtestAst_withInfo: Info -> Ast_Expr -> Ast_Expr =
    lam info67.
      lam __sem_target2801.
        match
          __sem_target2801
        with
          UtestAst_TmUtest t1082
        in
        UtestAst_TmUtest
            { t1082 with info = info67 }
  let vUtestAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr =
    lam ty398: Ast_Type.
      lam __sem_target2802.
        match
          __sem_target2802
        with
          UtestAst_TmUtest t1083
        in
        UtestAst_TmUtest
            { t1083 with ty = ty398 }
  let vUtestAst_tyWithInfo: Info -> Ast_Type -> Ast_Type = lam x604.
      never
  let vUtestAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target2803.
      match
        __sem_target2803
      with
        ty399
      in
      vUtestAst_rapp_Type_Type vUtestAst_unwrapType ty399
  let vUtestAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target2804.
      match
        __sem_target2804
      with
        ty400
      in
      vUtestAst_rapp_Type_Type vUtestAst_inspectType ty400
  let vUtestAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x605.
      never
  let vUtestAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x606.
      never
  let vUtestAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f2195.
      lam __sem_target2805.
        match
          __sem_target2805
        with
          p1780
        in
        let res689 =
            vUtestAst_smapAccumL_Pat_Pat
              (lam #var"767".
                 lam a1285.
                   ({}, f2195 a1285))
              {}
              p1780
          in
          res689.1
  let vUtestAst_countPatNodes =
    lam count868.
      lam __sem_target2806.
        match
          __sem_target2806
        with
          t1084
        in
        let count869 = addi count868 1 in
          let count870 =
            vUtestAst_sfold_Pat_Pat vUtestAst_countPatNodes count869 t1084
          in
          let count871 =
            vUtestAst_sfold_Pat_Expr vUtestAst_countExprNodes count870 t1084
          in
          let count872 =
            vUtestAst_sfold_Pat_Type vUtestAst_countTypeNodes count871 t1084
          in
          count872
  let vUtestAst_sfold_Pat_Pat: all acc4074. (acc4074 -> Ast_Pat -> acc4074) -> acc4074 -> Ast_Pat -> acc4074 =
    lam f2196.
      lam acc4075.
        lam __sem_target2807.
          match
            __sem_target2807
          with
            p1781
          in
          let res690 =
              vUtestAst_smapAccumL_Pat_Pat
                (lam acc4076.
                   lam a1286.
                     (f2196 acc4076 a1286, a1286))
                acc4075
                p1781
            in
            res690.0
  let vUtestAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f2197.
      lam __sem_target2808.
        match
          __sem_target2808
        with
          p1782
        in
        match
            vUtestAst_smapAccumL_Expr_Pat
              (lam #var"768".
                 lam a1287.
                   ({}, f2197 a1287))
              {}
              p1782
          with
            (_, p1783)
          in
          p1783
  let vUtestAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f2198.
      lam __sem_target2809.
        match
          __sem_target2809
        with
          p1784
        in
        match
            vUtestAst_smapAccumL_Pat_Expr
              (lam #var"769".
                 lam a1288.
                   ({}, f2198 a1288))
              {}
              p1784
          with
            (_, p1785)
          in
          p1785
  let vUtestAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f2199.
      lam __sem_target2810.
        match
          __sem_target2810
        with
          p1786
        in
        match
            vUtestAst_smapAccumL_Pat_Type
              (lam #var"770".
                 lam a1289.
                   ({}, f2199 a1289))
              {}
              p1786
          with
            (_, p1787)
          in
          p1787
  let vUtestAst_countExprNodes =
    lam count873.
      lam __sem_target2811.
        match
          __sem_target2811
        with
          t1085
        in
        let count874 = addi count873 1 in
          let count875 =
            vUtestAst_sfold_Expr_Expr vUtestAst_countExprNodes count874 t1085
          in
          let count876 =
            vUtestAst_sfold_Expr_Type vUtestAst_countTypeNodes count875 t1085
          in
          let count877 =
            vUtestAst_sfold_Expr_TypeLabel vUtestAst_countTypeNodes count876 t1085
          in
          let count878 =
            vUtestAst_sfold_Expr_Pat vUtestAst_countPatNodes count877 t1085
          in
          count878
  let vUtestAst_countTypeNodes =
    lam count879.
      lam __sem_target2812.
        match
          __sem_target2812
        with
          t1086
        in
        let count880 = addi count879 1 in
          let count881 =
            vUtestAst_sfold_Type_Type vUtestAst_countTypeNodes count880 t1086
          in
          count881
  let vUtestAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f2200.
      lam __sem_target2813.
        match
          __sem_target2813
        with
          ty401
        in
        let res691 =
            vUtestAst_rappAccumL_Type_Type
              (lam #var"771".
                 lam t1087.
                   ({}, f2200 t1087))
              {}
              ty401
          in
          res691.1
  let vUtestAst_sfold_Expr_Pat: all acc4077. (acc4077 -> Ast_Pat -> acc4077) -> acc4077 -> Ast_Expr -> acc4077 =
    lam f2201.
      lam acc4078.
        lam __sem_target2814.
          match
            __sem_target2814
          with
            p1788
          in
          match
              vUtestAst_smapAccumL_Expr_Pat
                (lam acc4079.
                   lam a1290.
                     (f2201 acc4079 a1290, a1290))
                acc4078
                p1788
            with
              (acc4080, _)
            in
            acc4080
  let vUtestAst_sfold_Pat_Expr: all acc4081. (acc4081 -> Ast_Expr -> acc4081) -> acc4081 -> Ast_Pat -> acc4081 =
    lam f2202.
      lam acc4082.
        lam __sem_target2815.
          match
            __sem_target2815
          with
            p1789
          in
          match
              vUtestAst_smapAccumL_Pat_Expr
                (lam acc4083.
                   lam a1291.
                     (f2202 acc4083 a1291, a1291))
                acc4082
                p1789
            with
              (acc4084, _)
            in
            acc4084
  let vUtestAst_sfold_Pat_Type: all acc4085. (acc4085 -> Ast_Type -> acc4085) -> acc4085 -> Ast_Pat -> acc4085 =
    lam f2203.
      lam acc4086.
        lam __sem_target2816.
          match
            __sem_target2816
          with
            p1790
          in
          match
              vUtestAst_smapAccumL_Pat_Type
                (lam acc4087.
                   lam a1292.
                     (f2203 acc4087 a1292, a1292))
                acc4086
                p1790
            with
              (acc4088, _)
            in
            acc4088
  let vUtestAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f2204.
      lam __sem_target2817.
        match
          __sem_target2817
        with
          p1791
        in
        let res692 =
            vUtestAst_smapAccumL_Expr_Expr
              (lam #var"772".
                 lam a1293.
                   ({}, f2204 a1293))
              {}
              p1791
          in
          res692.1
  let vUtestAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f2205.
      lam __sem_target2818.
        match
          __sem_target2818
        with
          p1792
        in
        let res693 =
            vUtestAst_smapAccumL_Expr_Type
              (lam #var"773".
                 lam a1294.
                   ({}, f2205 a1294))
              {}
              p1792
          in
          res693.1
  let vUtestAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f2206: Ast_Type -> Ast_Type.
      lam __sem_target2819.
        match
          __sem_target2819
        with
          s336
        in
        match
            vUtestAst_smapAccumL_Kind_Type
              (lam #var"774".
                 lam x607.
                   ({}, f2206 x607))
              {}
              s336
          with
            (_, s337)
          in
          s337
  let vUtestAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f2207.
      lam __sem_target2820.
        match
          __sem_target2820
        with
          p1793
        in
        let res694 =
            vUtestAst_smapAccumL_Type_Type
              (lam #var"775".
                 lam a1295.
                   ({}, f2207 a1295))
              {}
              p1793
          in
          res694.1
  let vUtestAst_sfold_Expr_Expr: all acc4089. (acc4089 -> Ast_Expr -> acc4089) -> acc4089 -> Ast_Expr -> acc4089 =
    lam f2208.
      lam acc4090.
        lam __sem_target2821.
          match
            __sem_target2821
          with
            p1794
          in
          let res695 =
              vUtestAst_smapAccumL_Expr_Expr
                (lam acc4091.
                   lam a1296.
                     (f2208 acc4091 a1296, a1296))
                acc4090
                p1794
            in
            res695.0
  let vUtestAst_sfold_Expr_Type: all acc4092. (acc4092 -> Ast_Type -> acc4092) -> acc4092 -> Ast_Expr -> acc4092 =
    lam f2209.
      lam acc4093.
        lam __sem_target2822.
          match
            __sem_target2822
          with
            p1795
          in
          let res696 =
              vUtestAst_smapAccumL_Expr_Type
                (lam acc4094.
                   lam a1297.
                     (f2209 acc4094 a1297, a1297))
                acc4093
                p1795
            in
            res696.0
  let vUtestAst_sfold_Kind_Type: all acc4095. (acc4095 -> Ast_Type -> acc4095) -> acc4095 -> Ast_Kind -> acc4095 =
    lam f2210: acc4095 -> Ast_Type -> acc4095.
      lam acc4096: acc4095.
        lam __sem_target2823.
          match
            __sem_target2823
          with
            s338
          in
          match
              vUtestAst_smapAccumL_Kind_Type
                (lam a1298.
                   lam x608.
                     (f2210 a1298 x608, x608))
                acc4096
                s338
            with
              (a1299, _)
            in
            a1299
  let vUtestAst_sfold_Type_Type: all acc4097. (acc4097 -> Ast_Type -> acc4097) -> acc4097 -> Ast_Type -> acc4097 =
    lam f2211.
      lam acc4098.
        lam __sem_target2824.
          match
            __sem_target2824
          with
            p1796
          in
          let res697 =
              vUtestAst_smapAccumL_Type_Type
                (lam acc4099.
                   lam a1300.
                     (f2211 acc4099 a1300, a1300))
                acc4098
                p1796
            in
            res697.0
  let vUtestAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f2212.
      lam __sem_target2825.
        match
          __sem_target2825
        with
          expr558
        in
        let expr559 = f2212 expr558 in
          vUtestAst_smap_Expr_Expr (vUtestAst_mapPre_Expr_Expr f2212) expr559
  let vUtestAst_foldPre_Expr_Expr: all acc4100. (acc4100 -> Ast_Expr -> acc4100) -> acc4100 -> Ast_Expr -> acc4100 =
    lam f2213.
      lam acc4101.
        lam __sem_target2826.
          match
            __sem_target2826
          with
            expr560
          in
          let acc4102 = f2213 acc4101 expr560 in
            vUtestAst_sfold_Expr_Expr (vUtestAst_foldPre_Expr_Expr f2213) acc4102 expr560
  let vUtestAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f2214.
      lam __sem_target2827.
        match
          __sem_target2827
        with
          expr561
        in
        f2214
            (vUtestAst_smap_Expr_Expr (vUtestAst_mapPost_Expr_Expr f2214) expr561)
  let vUtestAst_foldPost_Expr_Expr: all acc4103. (acc4103 -> Ast_Expr -> acc4103) -> acc4103 -> Ast_Expr -> acc4103 =
    lam f2215.
      lam acc4104.
        lam __sem_target2828.
          match
            __sem_target2828
          with
            expr562
          in
          f2215
              (vUtestAst_sfold_Expr_Expr (vUtestAst_foldPost_Expr_Expr f2215) acc4104 expr562)
              expr562
  let vUtestAst_smapAccumL_Pat_Pat: all acc4105. (acc4105 -> Ast_Pat -> (acc4105, Ast_Pat)) -> acc4105 -> Ast_Pat -> (acc4105, Ast_Pat) =
    lam f2216.
      lam acc4106.
        lam __sem_target2829.
          match
            __sem_target2829
          with
            p1797
          in
          (acc4106, p1797)
  let vUtestAst_smapAccumL_Expr_Pat: all acc4107. (acc4107 -> Ast_Pat -> (acc4107, Ast_Pat)) -> acc4107 -> Ast_Expr -> (acc4107, Ast_Expr) =
    lam f2217.
      lam acc4108.
        lam __sem_target2830.
          match
            __sem_target2830
          with
            p1798
          in
          (acc4108, p1798)
  let vUtestAst_smapAccumL_Pat_Expr: all acc4109. (acc4109 -> Ast_Expr -> (acc4109, Ast_Expr)) -> acc4109 -> Ast_Pat -> (acc4109, Ast_Pat) =
    lam f2218.
      lam acc4110.
        lam __sem_target2831.
          match
            __sem_target2831
          with
            p1799
          in
          (acc4110, p1799)
  let vUtestAst_smapAccumL_Pat_Type: all acc4111. (acc4111 -> Ast_Type -> (acc4111, Ast_Type)) -> acc4111 -> Ast_Pat -> (acc4111, Ast_Pat) =
    lam f2219.
      lam acc4112.
        lam __sem_target2832.
          match
            __sem_target2832
          with
            p1800
          in
          (acc4112, p1800)
  let vUtestAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f2220.
      lam __sem_target2833.
        match
          __sem_target2833
        with
          p1801
        in
        let res698 =
            vUtestAst_smapAccumL_Expr_TypeLabel
              (lam #var"776".
                 lam a1301.
                   ({}, f2220 a1301))
              {}
              p1801
          in
          res698.1
  let vUtestAst_rappAccumL_Type_Type: all acc4113. (acc4113 -> Ast_Type -> (acc4113, Ast_Type)) -> acc4113 -> Ast_Type -> (acc4113, Ast_Type) =
    lam f2221.
      lam acc4114.
        lam __sem_target2834.
          match
            __sem_target2834
          with
            ty402
          in
          (acc4114, ty402)
  let vUtestAst_sfold_Expr_TypeLabel: all acc4115. (acc4115 -> Ast_Type -> acc4115) -> acc4115 -> Ast_Expr -> acc4115 =
    lam f2222.
      lam acc4116.
        lam __sem_target2835.
          match
            __sem_target2835
          with
            p1802
          in
          let res699 =
              vUtestAst_smapAccumL_Expr_TypeLabel
                (lam acc4117.
                   lam a1302.
                     (f2222 acc4117 a1302, a1302))
                acc4116
                p1802
            in
            res699.0
  let vUtestAst_smapAccumL_Expr_Expr: all acc4118. (acc4118 -> Ast_Expr -> (acc4118, Ast_Expr)) -> acc4118 -> Ast_Expr -> (acc4118, Ast_Expr) =
    lam f2223.
      lam acc4119.
        lam __sem_target2836.
          match
            __sem_target2836
          with
            UtestAst_TmUtest t1088
          then
            match
              f2223 acc4119 t1088.test
            with
              (acc4120, test3)
            in
            match
                f2223 acc4120 t1088.expected
              with
                (acc4121, expected3)
              in
              match
                  f2223 acc4121 t1088.next
                with
                  (acc4122, next3)
                in
                match
                    optionMapAccum f2223 acc4122 t1088.tusing
                  with
                    (acc4123, tusing3)
                  in
                  match
                      optionMapAccum f2223 acc4123 t1088.tonfail
                    with
                      (acc4124, tonfail3)
                    in
                    (acc4124, UtestAst_TmUtest
                        { t1088
                          with
                          test = test3,
                            expected = expected3,
                            next = next3,
                            tusing = tusing3,
                            tonfail = tonfail3 })
          else match
            __sem_target2836
          with
            p1803
          in
          (acc4119, p1803)
  let vUtestAst_smapAccumL_Expr_Type: all acc4125. (acc4125 -> Ast_Type -> (acc4125, Ast_Type)) -> acc4125 -> Ast_Expr -> (acc4125, Ast_Expr) =
    lam f2224.
      lam acc4126.
        lam __sem_target2837.
          match
            __sem_target2837
          with
            p1804
          in
          (acc4126, p1804)
  let vUtestAst_smapAccumL_Kind_Type: all acc4127. (acc4127 -> Ast_Type -> (acc4127, Ast_Type)) -> acc4127 -> Ast_Kind -> (acc4127, Ast_Kind) =
    lam f2225.
      lam acc4128.
        lam __sem_target2838.
          match
            __sem_target2838
          with
            s339
          in
          (acc4128, s339)
  let vUtestAst_smapAccumL_Type_Type: all acc4129. (acc4129 -> Ast_Type -> (acc4129, Ast_Type)) -> acc4129 -> Ast_Type -> (acc4129, Ast_Type) =
    lam f2226.
      lam acc4130.
        lam __sem_target2839.
          match
            __sem_target2839
          with
            p1805
          in
          (acc4130, p1805)
  let vUtestAst_mapAccumLPre_Expr_Expr: all acc4131. (acc4131 -> Ast_Expr -> (acc4131, Ast_Expr)) -> acc4131 -> Ast_Expr -> (acc4131, Ast_Expr) =
    lam f2227.
      lam acc4132.
        lam __sem_target2840.
          match
            __sem_target2840
          with
            expr563
          in
          match
              f2227 acc4132 expr563
            with
              (acc4133, expr564)
            in
            vUtestAst_smapAccumL_Expr_Expr (vUtestAst_mapAccumLPre_Expr_Expr f2227) acc4133 expr564
  let vUtestAst_mapAccumLPost_Expr_Expr: all acc4134. (acc4134 -> Ast_Expr -> (acc4134, Ast_Expr)) -> acc4134 -> Ast_Expr -> (acc4134, Ast_Expr) =
    lam f2228.
      lam acc4135.
        lam __sem_target2841.
          match
            __sem_target2841
          with
            expr565
          in
          match
              vUtestAst_smapAccumL_Expr_Expr (vUtestAst_mapAccumLPost_Expr_Expr f2228) acc4135 expr565
            with
              (acc4136, expr566)
            in
            f2228 acc4136 expr566
  let vUtestAst_smapAccumL_Expr_TypeLabel: all acc4137. (acc4137 -> Ast_Type -> (acc4137, Ast_Type)) -> acc4137 -> Ast_Expr -> (acc4137, Ast_Expr) =
    lam f2229.
      lam acc4138.
        lam __sem_target2842.
          match
            __sem_target2842
          with
            p1806
          in
          match
              f2229 acc4138 (vUtestAst_tyTm p1806)
            with
              (acc4139, ty403)
            in
            (acc4139, vUtestAst_withType ty403 p1806)
in
con NeverAst_TmNever: {ty: Ast_Type, info: Info} -> Ast_Expr in
recursive
  let vNeverAst_tyTm: Ast_Expr -> Ast_Type =
    lam __sem_target2755.
      match
        __sem_target2755
      with
        NeverAst_TmNever t1074
      in
      t1074.ty
  let vNeverAst_tyPat: Ast_Pat -> Ast_Type = lam x593.
      never
  let vNeverAst_infoTm: Ast_Expr -> Info =
    lam __sem_target2756.
      match
        __sem_target2756
      with
        NeverAst_TmNever r359
      in
      r359.info
  let vNeverAst_infoTy: Ast_Type -> Info = lam x594.
      never
  let vNeverAst_infoPat: Ast_Pat -> Info = lam x595.
      never
  let vNeverAst_withInfo: Info -> Ast_Expr -> Ast_Expr =
    lam info66.
      lam __sem_target2757.
        match
          __sem_target2757
        with
          NeverAst_TmNever t1075
        in
        NeverAst_TmNever
            { t1075 with info = info66 }
  let vNeverAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr =
    lam ty392: Ast_Type.
      lam __sem_target2758.
        match
          __sem_target2758
        with
          NeverAst_TmNever t1076
        in
        NeverAst_TmNever
            { t1076 with ty = ty392 }
  let vNeverAst_tyWithInfo: Info -> Ast_Type -> Ast_Type = lam x596.
      never
  let vNeverAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target2759.
      match
        __sem_target2759
      with
        ty393
      in
      vNeverAst_rapp_Type_Type vNeverAst_unwrapType ty393
  let vNeverAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target2760.
      match
        __sem_target2760
      with
        ty394
      in
      vNeverAst_rapp_Type_Type vNeverAst_inspectType ty394
  let vNeverAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x597.
      never
  let vNeverAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x598.
      never
  let vNeverAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f2160.
      lam __sem_target2761.
        match
          __sem_target2761
        with
          p1753
        in
        let res678 =
            vNeverAst_smapAccumL_Pat_Pat
              (lam #var"757".
                 lam a1267.
                   ({}, f2160 a1267))
              {}
              p1753
          in
          res678.1
  let vNeverAst_countPatNodes =
    lam count854.
      lam __sem_target2762.
        match
          __sem_target2762
        with
          t1077
        in
        let count855 = addi count854 1 in
          let count856 =
            vNeverAst_sfold_Pat_Pat vNeverAst_countPatNodes count855 t1077
          in
          let count857 =
            vNeverAst_sfold_Pat_Expr vNeverAst_countExprNodes count856 t1077
          in
          let count858 =
            vNeverAst_sfold_Pat_Type vNeverAst_countTypeNodes count857 t1077
          in
          count858
  let vNeverAst_sfold_Pat_Pat: all acc4013. (acc4013 -> Ast_Pat -> acc4013) -> acc4013 -> Ast_Pat -> acc4013 =
    lam f2161.
      lam acc4014.
        lam __sem_target2763.
          match
            __sem_target2763
          with
            p1754
          in
          let res679 =
              vNeverAst_smapAccumL_Pat_Pat
                (lam acc4015.
                   lam a1268.
                     (f2161 acc4015 a1268, a1268))
                acc4014
                p1754
            in
            res679.0
  let vNeverAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f2162.
      lam __sem_target2764.
        match
          __sem_target2764
        with
          p1755
        in
        match
            vNeverAst_smapAccumL_Expr_Pat
              (lam #var"758".
                 lam a1269.
                   ({}, f2162 a1269))
              {}
              p1755
          with
            (_, p1756)
          in
          p1756
  let vNeverAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f2163.
      lam __sem_target2765.
        match
          __sem_target2765
        with
          p1757
        in
        match
            vNeverAst_smapAccumL_Pat_Expr
              (lam #var"759".
                 lam a1270.
                   ({}, f2163 a1270))
              {}
              p1757
          with
            (_, p1758)
          in
          p1758
  let vNeverAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f2164.
      lam __sem_target2766.
        match
          __sem_target2766
        with
          p1759
        in
        match
            vNeverAst_smapAccumL_Pat_Type
              (lam #var"760".
                 lam a1271.
                   ({}, f2164 a1271))
              {}
              p1759
          with
            (_, p1760)
          in
          p1760
  let vNeverAst_countExprNodes =
    lam count859.
      lam __sem_target2767.
        match
          __sem_target2767
        with
          t1078
        in
        let count860 = addi count859 1 in
          let count861 =
            vNeverAst_sfold_Expr_Expr vNeverAst_countExprNodes count860 t1078
          in
          let count862 =
            vNeverAst_sfold_Expr_Type vNeverAst_countTypeNodes count861 t1078
          in
          let count863 =
            vNeverAst_sfold_Expr_TypeLabel vNeverAst_countTypeNodes count862 t1078
          in
          let count864 =
            vNeverAst_sfold_Expr_Pat vNeverAst_countPatNodes count863 t1078
          in
          count864
  let vNeverAst_countTypeNodes =
    lam count865.
      lam __sem_target2768.
        match
          __sem_target2768
        with
          t1079
        in
        let count866 = addi count865 1 in
          let count867 =
            vNeverAst_sfold_Type_Type vNeverAst_countTypeNodes count866 t1079
          in
          count867
  let vNeverAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f2165.
      lam __sem_target2769.
        match
          __sem_target2769
        with
          ty395
        in
        let res680 =
            vNeverAst_rappAccumL_Type_Type
              (lam #var"761".
                 lam t1080.
                   ({}, f2165 t1080))
              {}
              ty395
          in
          res680.1
  let vNeverAst_sfold_Expr_Pat: all acc4016. (acc4016 -> Ast_Pat -> acc4016) -> acc4016 -> Ast_Expr -> acc4016 =
    lam f2166.
      lam acc4017.
        lam __sem_target2770.
          match
            __sem_target2770
          with
            p1761
          in
          match
              vNeverAst_smapAccumL_Expr_Pat
                (lam acc4018.
                   lam a1272.
                     (f2166 acc4018 a1272, a1272))
                acc4017
                p1761
            with
              (acc4019, _)
            in
            acc4019
  let vNeverAst_sfold_Pat_Expr: all acc4020. (acc4020 -> Ast_Expr -> acc4020) -> acc4020 -> Ast_Pat -> acc4020 =
    lam f2167.
      lam acc4021.
        lam __sem_target2771.
          match
            __sem_target2771
          with
            p1762
          in
          match
              vNeverAst_smapAccumL_Pat_Expr
                (lam acc4022.
                   lam a1273.
                     (f2167 acc4022 a1273, a1273))
                acc4021
                p1762
            with
              (acc4023, _)
            in
            acc4023
  let vNeverAst_sfold_Pat_Type: all acc4024. (acc4024 -> Ast_Type -> acc4024) -> acc4024 -> Ast_Pat -> acc4024 =
    lam f2168.
      lam acc4025.
        lam __sem_target2772.
          match
            __sem_target2772
          with
            p1763
          in
          match
              vNeverAst_smapAccumL_Pat_Type
                (lam acc4026.
                   lam a1274.
                     (f2168 acc4026 a1274, a1274))
                acc4025
                p1763
            with
              (acc4027, _)
            in
            acc4027
  let vNeverAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f2169.
      lam __sem_target2773.
        match
          __sem_target2773
        with
          p1764
        in
        let res681 =
            vNeverAst_smapAccumL_Expr_Expr
              (lam #var"762".
                 lam a1275.
                   ({}, f2169 a1275))
              {}
              p1764
          in
          res681.1
  let vNeverAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f2170.
      lam __sem_target2774.
        match
          __sem_target2774
        with
          p1765
        in
        let res682 =
            vNeverAst_smapAccumL_Expr_Type
              (lam #var"763".
                 lam a1276.
                   ({}, f2170 a1276))
              {}
              p1765
          in
          res682.1
  let vNeverAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f2171: Ast_Type -> Ast_Type.
      lam __sem_target2775.
        match
          __sem_target2775
        with
          s332
        in
        match
            vNeverAst_smapAccumL_Kind_Type
              (lam #var"764".
                 lam x599.
                   ({}, f2171 x599))
              {}
              s332
          with
            (_, s333)
          in
          s333
  let vNeverAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f2172.
      lam __sem_target2776.
        match
          __sem_target2776
        with
          p1766
        in
        let res683 =
            vNeverAst_smapAccumL_Type_Type
              (lam #var"765".
                 lam a1277.
                   ({}, f2172 a1277))
              {}
              p1766
          in
          res683.1
  let vNeverAst_sfold_Expr_Expr: all acc4028. (acc4028 -> Ast_Expr -> acc4028) -> acc4028 -> Ast_Expr -> acc4028 =
    lam f2173.
      lam acc4029.
        lam __sem_target2777.
          match
            __sem_target2777
          with
            p1767
          in
          let res684 =
              vNeverAst_smapAccumL_Expr_Expr
                (lam acc4030.
                   lam a1278.
                     (f2173 acc4030 a1278, a1278))
                acc4029
                p1767
            in
            res684.0
  let vNeverAst_sfold_Expr_Type: all acc4031. (acc4031 -> Ast_Type -> acc4031) -> acc4031 -> Ast_Expr -> acc4031 =
    lam f2174.
      lam acc4032.
        lam __sem_target2778.
          match
            __sem_target2778
          with
            p1768
          in
          let res685 =
              vNeverAst_smapAccumL_Expr_Type
                (lam acc4033.
                   lam a1279.
                     (f2174 acc4033 a1279, a1279))
                acc4032
                p1768
            in
            res685.0
  let vNeverAst_sfold_Kind_Type: all acc4034. (acc4034 -> Ast_Type -> acc4034) -> acc4034 -> Ast_Kind -> acc4034 =
    lam f2175: acc4034 -> Ast_Type -> acc4034.
      lam acc4035: acc4034.
        lam __sem_target2779.
          match
            __sem_target2779
          with
            s334
          in
          match
              vNeverAst_smapAccumL_Kind_Type
                (lam a1280.
                   lam x600.
                     (f2175 a1280 x600, x600))
                acc4035
                s334
            with
              (a1281, _)
            in
            a1281
  let vNeverAst_sfold_Type_Type: all acc4036. (acc4036 -> Ast_Type -> acc4036) -> acc4036 -> Ast_Type -> acc4036 =
    lam f2176.
      lam acc4037.
        lam __sem_target2780.
          match
            __sem_target2780
          with
            p1769
          in
          let res686 =
              vNeverAst_smapAccumL_Type_Type
                (lam acc4038.
                   lam a1282.
                     (f2176 acc4038 a1282, a1282))
                acc4037
                p1769
            in
            res686.0
  let vNeverAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f2177.
      lam __sem_target2781.
        match
          __sem_target2781
        with
          expr549
        in
        let expr550 = f2177 expr549 in
          vNeverAst_smap_Expr_Expr (vNeverAst_mapPre_Expr_Expr f2177) expr550
  let vNeverAst_foldPre_Expr_Expr: all acc4039. (acc4039 -> Ast_Expr -> acc4039) -> acc4039 -> Ast_Expr -> acc4039 =
    lam f2178.
      lam acc4040.
        lam __sem_target2782.
          match
            __sem_target2782
          with
            expr551
          in
          let acc4041 = f2178 acc4040 expr551 in
            vNeverAst_sfold_Expr_Expr (vNeverAst_foldPre_Expr_Expr f2178) acc4041 expr551
  let vNeverAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f2179.
      lam __sem_target2783.
        match
          __sem_target2783
        with
          expr552
        in
        f2179
            (vNeverAst_smap_Expr_Expr (vNeverAst_mapPost_Expr_Expr f2179) expr552)
  let vNeverAst_foldPost_Expr_Expr: all acc4042. (acc4042 -> Ast_Expr -> acc4042) -> acc4042 -> Ast_Expr -> acc4042 =
    lam f2180.
      lam acc4043.
        lam __sem_target2784.
          match
            __sem_target2784
          with
            expr553
          in
          f2180
              (vNeverAst_sfold_Expr_Expr (vNeverAst_foldPost_Expr_Expr f2180) acc4043 expr553)
              expr553
  let vNeverAst_smapAccumL_Pat_Pat: all acc4044. (acc4044 -> Ast_Pat -> (acc4044, Ast_Pat)) -> acc4044 -> Ast_Pat -> (acc4044, Ast_Pat) =
    lam f2181.
      lam acc4045.
        lam __sem_target2785.
          match
            __sem_target2785
          with
            p1770
          in
          (acc4045, p1770)
  let vNeverAst_smapAccumL_Expr_Pat: all acc4046. (acc4046 -> Ast_Pat -> (acc4046, Ast_Pat)) -> acc4046 -> Ast_Expr -> (acc4046, Ast_Expr) =
    lam f2182.
      lam acc4047.
        lam __sem_target2786.
          match
            __sem_target2786
          with
            p1771
          in
          (acc4047, p1771)
  let vNeverAst_smapAccumL_Pat_Expr: all acc4048. (acc4048 -> Ast_Expr -> (acc4048, Ast_Expr)) -> acc4048 -> Ast_Pat -> (acc4048, Ast_Pat) =
    lam f2183.
      lam acc4049.
        lam __sem_target2787.
          match
            __sem_target2787
          with
            p1772
          in
          (acc4049, p1772)
  let vNeverAst_smapAccumL_Pat_Type: all acc4050. (acc4050 -> Ast_Type -> (acc4050, Ast_Type)) -> acc4050 -> Ast_Pat -> (acc4050, Ast_Pat) =
    lam f2184.
      lam acc4051.
        lam __sem_target2788.
          match
            __sem_target2788
          with
            p1773
          in
          (acc4051, p1773)
  let vNeverAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f2185.
      lam __sem_target2789.
        match
          __sem_target2789
        with
          p1774
        in
        let res687 =
            vNeverAst_smapAccumL_Expr_TypeLabel
              (lam #var"766".
                 lam a1283.
                   ({}, f2185 a1283))
              {}
              p1774
          in
          res687.1
  let vNeverAst_rappAccumL_Type_Type: all acc4052. (acc4052 -> Ast_Type -> (acc4052, Ast_Type)) -> acc4052 -> Ast_Type -> (acc4052, Ast_Type) =
    lam f2186.
      lam acc4053.
        lam __sem_target2790.
          match
            __sem_target2790
          with
            ty396
          in
          (acc4053, ty396)
  let vNeverAst_sfold_Expr_TypeLabel: all acc4054. (acc4054 -> Ast_Type -> acc4054) -> acc4054 -> Ast_Expr -> acc4054 =
    lam f2187.
      lam acc4055.
        lam __sem_target2791.
          match
            __sem_target2791
          with
            p1775
          in
          let res688 =
              vNeverAst_smapAccumL_Expr_TypeLabel
                (lam acc4056.
                   lam a1284.
                     (f2187 acc4056 a1284, a1284))
                acc4055
                p1775
            in
            res688.0
  let vNeverAst_smapAccumL_Expr_Expr: all acc4057. (acc4057 -> Ast_Expr -> (acc4057, Ast_Expr)) -> acc4057 -> Ast_Expr -> (acc4057, Ast_Expr) =
    lam f2188.
      lam acc4058.
        lam __sem_target2792.
          match
            __sem_target2792
          with
            p1776
          in
          (acc4058, p1776)
  let vNeverAst_smapAccumL_Expr_Type: all acc4059. (acc4059 -> Ast_Type -> (acc4059, Ast_Type)) -> acc4059 -> Ast_Expr -> (acc4059, Ast_Expr) =
    lam f2189.
      lam acc4060.
        lam __sem_target2793.
          match
            __sem_target2793
          with
            p1777
          in
          (acc4060, p1777)
  let vNeverAst_smapAccumL_Kind_Type: all acc4061. (acc4061 -> Ast_Type -> (acc4061, Ast_Type)) -> acc4061 -> Ast_Kind -> (acc4061, Ast_Kind) =
    lam f2190.
      lam acc4062.
        lam __sem_target2794.
          match
            __sem_target2794
          with
            s335
          in
          (acc4062, s335)
  let vNeverAst_smapAccumL_Type_Type: all acc4063. (acc4063 -> Ast_Type -> (acc4063, Ast_Type)) -> acc4063 -> Ast_Type -> (acc4063, Ast_Type) =
    lam f2191.
      lam acc4064.
        lam __sem_target2795.
          match
            __sem_target2795
          with
            p1778
          in
          (acc4064, p1778)
  let vNeverAst_mapAccumLPre_Expr_Expr: all acc4065. (acc4065 -> Ast_Expr -> (acc4065, Ast_Expr)) -> acc4065 -> Ast_Expr -> (acc4065, Ast_Expr) =
    lam f2192.
      lam acc4066.
        lam __sem_target2796.
          match
            __sem_target2796
          with
            expr554
          in
          match
              f2192 acc4066 expr554
            with
              (acc4067, expr555)
            in
            vNeverAst_smapAccumL_Expr_Expr (vNeverAst_mapAccumLPre_Expr_Expr f2192) acc4067 expr555
  let vNeverAst_mapAccumLPost_Expr_Expr: all acc4068. (acc4068 -> Ast_Expr -> (acc4068, Ast_Expr)) -> acc4068 -> Ast_Expr -> (acc4068, Ast_Expr) =
    lam f2193.
      lam acc4069.
        lam __sem_target2797.
          match
            __sem_target2797
          with
            expr556
          in
          match
              vNeverAst_smapAccumL_Expr_Expr (vNeverAst_mapAccumLPost_Expr_Expr f2193) acc4069 expr556
            with
              (acc4070, expr557)
            in
            f2193 acc4070 expr557
  let vNeverAst_smapAccumL_Expr_TypeLabel: all acc4071. (acc4071 -> Ast_Type -> (acc4071, Ast_Type)) -> acc4071 -> Ast_Expr -> (acc4071, Ast_Expr) =
    lam f2194.
      lam acc4072.
        lam __sem_target2798.
          match
            __sem_target2798
          with
            p1779
          in
          match
              f2194 acc4072 (vNeverAst_tyTm p1779)
            with
              (acc4073, ty397)
            in
            (acc4073, vNeverAst_withType ty397 p1779)
in
con ExtAst_TmExt: {ty: Ast_Type, info: Info, ident: Name, effect: Bool, inexpr: Ast_Expr, tyIdent: Ast_Type} -> Ast_Expr in
recursive
  let vExtAst_tyTm: Ast_Expr -> Ast_Type =
    lam __sem_target2711.
      match
        __sem_target2711
      with
        VarAst_TmVar t1062
      then
        t1062.ty
      else match
        __sem_target2711
      with
        ExtAst_TmExt t1063
      in
      t1063.ty
  let vExtAst_tyPat: Ast_Pat -> Ast_Type = lam x585.
      never
  let vExtAst_infoTm: Ast_Expr -> Info =
    lam __sem_target2712.
      match
        __sem_target2712
      with
        VarAst_TmVar r357
      then
        r357.info
      else match
        __sem_target2712
      with
        ExtAst_TmExt r358
      in
      r358.info
  let vExtAst_infoTy: Ast_Type -> Info = lam x586.
      never
  let vExtAst_infoPat: Ast_Pat -> Info = lam x587.
      never
  let vExtAst_withInfo: Info -> Ast_Expr -> Ast_Expr =
    lam info65.
      lam __sem_target2713.
        match
          __sem_target2713
        with
          VarAst_TmVar t1064
        then
          VarAst_TmVar
            { t1064 with info = info65 }
        else match
          __sem_target2713
        with
          ExtAst_TmExt t1065
        in
        ExtAst_TmExt
            { t1065 with info = info65 }
  let vExtAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr =
    lam ty386: Ast_Type.
      lam __sem_target2714.
        match
          __sem_target2714
        with
          VarAst_TmVar t1066
        then
          VarAst_TmVar
            { t1066 with ty = ty386 }
        else match
          __sem_target2714
        with
          ExtAst_TmExt t1067
        in
        ExtAst_TmExt
            { t1067 with ty = ty386 }
  let vExtAst_tyWithInfo: Info -> Ast_Type -> Ast_Type = lam x588.
      never
  let vExtAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target2715.
      match
        __sem_target2715
      with
        ty387
      in
      vExtAst_rapp_Type_Type vExtAst_unwrapType ty387
  let vExtAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target2716.
      match
        __sem_target2716
      with
        ty388
      in
      vExtAst_rapp_Type_Type vExtAst_inspectType ty388
  let vExtAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x589.
      never
  let vExtAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x590.
      never
  let vExtAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f2125.
      lam __sem_target2717.
        match
          __sem_target2717
        with
          p1726
        in
        let res667 =
            vExtAst_smapAccumL_Pat_Pat
              (lam #var"747".
                 lam a1249.
                   ({}, f2125 a1249))
              {}
              p1726
          in
          res667.1
  let vExtAst_countPatNodes =
    lam count840.
      lam __sem_target2718.
        match
          __sem_target2718
        with
          t1068
        in
        let count841 = addi count840 1 in
          let count842 = vExtAst_sfold_Pat_Pat vExtAst_countPatNodes count841 t1068
          in
          let count843 = vExtAst_sfold_Pat_Expr vExtAst_countExprNodes count842 t1068
          in
          let count844 = vExtAst_sfold_Pat_Type vExtAst_countTypeNodes count843 t1068
          in
          count844
  let vExtAst_sfold_Pat_Pat: all acc3950. (acc3950 -> Ast_Pat -> acc3950) -> acc3950 -> Ast_Pat -> acc3950 =
    lam f2126.
      lam acc3951.
        lam __sem_target2719.
          match
            __sem_target2719
          with
            p1727
          in
          let res668 =
              vExtAst_smapAccumL_Pat_Pat
                (lam acc3952.
                   lam a1250.
                     (f2126 acc3952 a1250, a1250))
                acc3951
                p1727
            in
            res668.0
  let vExtAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f2127.
      lam __sem_target2720.
        match
          __sem_target2720
        with
          p1728
        in
        match
            vExtAst_smapAccumL_Expr_Pat
              (lam #var"748".
                 lam a1251.
                   ({}, f2127 a1251))
              {}
              p1728
          with
            (_, p1729)
          in
          p1729
  let vExtAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f2128.
      lam __sem_target2721.
        match
          __sem_target2721
        with
          p1730
        in
        match
            vExtAst_smapAccumL_Pat_Expr
              (lam #var"749".
                 lam a1252.
                   ({}, f2128 a1252))
              {}
              p1730
          with
            (_, p1731)
          in
          p1731
  let vExtAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f2129.
      lam __sem_target2722.
        match
          __sem_target2722
        with
          p1732
        in
        match
            vExtAst_smapAccumL_Pat_Type
              (lam #var"750".
                 lam a1253.
                   ({}, f2129 a1253))
              {}
              p1732
          with
            (_, p1733)
          in
          p1733
  let vExtAst_countExprNodes =
    lam count845.
      lam __sem_target2723.
        match
          __sem_target2723
        with
          t1069
        in
        let count846 = addi count845 1 in
          let count847 =
            vExtAst_sfold_Expr_Expr vExtAst_countExprNodes count846 t1069
          in
          let count848 =
            vExtAst_sfold_Expr_Type vExtAst_countTypeNodes count847 t1069
          in
          let count849 =
            vExtAst_sfold_Expr_TypeLabel vExtAst_countTypeNodes count848 t1069
          in
          let count850 = vExtAst_sfold_Expr_Pat vExtAst_countPatNodes count849 t1069
          in
          count850
  let vExtAst_countTypeNodes =
    lam count851.
      lam __sem_target2724.
        match
          __sem_target2724
        with
          t1070
        in
        let count852 = addi count851 1 in
          let count853 =
            vExtAst_sfold_Type_Type vExtAst_countTypeNodes count852 t1070
          in
          count853
  let vExtAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f2130.
      lam __sem_target2725.
        match
          __sem_target2725
        with
          ty389
        in
        let res669 =
            vExtAst_rappAccumL_Type_Type
              (lam #var"751".
                 lam t1071.
                   ({}, f2130 t1071))
              {}
              ty389
          in
          res669.1
  let vExtAst_sfold_Expr_Pat: all acc3953. (acc3953 -> Ast_Pat -> acc3953) -> acc3953 -> Ast_Expr -> acc3953 =
    lam f2131.
      lam acc3954.
        lam __sem_target2726.
          match
            __sem_target2726
          with
            p1734
          in
          match
              vExtAst_smapAccumL_Expr_Pat
                (lam acc3955.
                   lam a1254.
                     (f2131 acc3955 a1254, a1254))
                acc3954
                p1734
            with
              (acc3956, _)
            in
            acc3956
  let vExtAst_sfold_Pat_Expr: all acc3957. (acc3957 -> Ast_Expr -> acc3957) -> acc3957 -> Ast_Pat -> acc3957 =
    lam f2132.
      lam acc3958.
        lam __sem_target2727.
          match
            __sem_target2727
          with
            p1735
          in
          match
              vExtAst_smapAccumL_Pat_Expr
                (lam acc3959.
                   lam a1255.
                     (f2132 acc3959 a1255, a1255))
                acc3958
                p1735
            with
              (acc3960, _)
            in
            acc3960
  let vExtAst_sfold_Pat_Type: all acc3961. (acc3961 -> Ast_Type -> acc3961) -> acc3961 -> Ast_Pat -> acc3961 =
    lam f2133.
      lam acc3962.
        lam __sem_target2728.
          match
            __sem_target2728
          with
            p1736
          in
          match
              vExtAst_smapAccumL_Pat_Type
                (lam acc3963.
                   lam a1256.
                     (f2133 acc3963 a1256, a1256))
                acc3962
                p1736
            with
              (acc3964, _)
            in
            acc3964
  let vExtAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f2134.
      lam __sem_target2729.
        match
          __sem_target2729
        with
          p1737
        in
        let res670 =
            vExtAst_smapAccumL_Expr_Expr
              (lam #var"752".
                 lam a1257.
                   ({}, f2134 a1257))
              {}
              p1737
          in
          res670.1
  let vExtAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f2135.
      lam __sem_target2730.
        match
          __sem_target2730
        with
          p1738
        in
        let res671 =
            vExtAst_smapAccumL_Expr_Type
              (lam #var"753".
                 lam a1258.
                   ({}, f2135 a1258))
              {}
              p1738
          in
          res671.1
  let vExtAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f2136: Ast_Type -> Ast_Type.
      lam __sem_target2731.
        match
          __sem_target2731
        with
          s328
        in
        match
            vExtAst_smapAccumL_Kind_Type
              (lam #var"754".
                 lam x591.
                   ({}, f2136 x591))
              {}
              s328
          with
            (_, s329)
          in
          s329
  let vExtAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f2137.
      lam __sem_target2732.
        match
          __sem_target2732
        with
          p1739
        in
        let res672 =
            vExtAst_smapAccumL_Type_Type
              (lam #var"755".
                 lam a1259.
                   ({}, f2137 a1259))
              {}
              p1739
          in
          res672.1
  let vExtAst_sfold_Expr_Expr: all acc3965. (acc3965 -> Ast_Expr -> acc3965) -> acc3965 -> Ast_Expr -> acc3965 =
    lam f2138.
      lam acc3966.
        lam __sem_target2733.
          match
            __sem_target2733
          with
            p1740
          in
          let res673 =
              vExtAst_smapAccumL_Expr_Expr
                (lam acc3967.
                   lam a1260.
                     (f2138 acc3967 a1260, a1260))
                acc3966
                p1740
            in
            res673.0
  let vExtAst_sfold_Expr_Type: all acc3968. (acc3968 -> Ast_Type -> acc3968) -> acc3968 -> Ast_Expr -> acc3968 =
    lam f2139.
      lam acc3969.
        lam __sem_target2734.
          match
            __sem_target2734
          with
            p1741
          in
          let res674 =
              vExtAst_smapAccumL_Expr_Type
                (lam acc3970.
                   lam a1261.
                     (f2139 acc3970 a1261, a1261))
                acc3969
                p1741
            in
            res674.0
  let vExtAst_sfold_Kind_Type: all acc3971. (acc3971 -> Ast_Type -> acc3971) -> acc3971 -> Ast_Kind -> acc3971 =
    lam f2140: acc3971 -> Ast_Type -> acc3971.
      lam acc3972: acc3971.
        lam __sem_target2735.
          match
            __sem_target2735
          with
            s330
          in
          match
              vExtAst_smapAccumL_Kind_Type
                (lam a1262.
                   lam x592.
                     (f2140 a1262 x592, x592))
                acc3972
                s330
            with
              (a1263, _)
            in
            a1263
  let vExtAst_sfold_Type_Type: all acc3973. (acc3973 -> Ast_Type -> acc3973) -> acc3973 -> Ast_Type -> acc3973 =
    lam f2141.
      lam acc3974.
        lam __sem_target2736.
          match
            __sem_target2736
          with
            p1742
          in
          let res675 =
              vExtAst_smapAccumL_Type_Type
                (lam acc3975.
                   lam a1264.
                     (f2141 acc3975 a1264, a1264))
                acc3974
                p1742
            in
            res675.0
  let vExtAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f2142.
      lam __sem_target2737.
        match
          __sem_target2737
        with
          expr540
        in
        let expr541 = f2142 expr540 in
          vExtAst_smap_Expr_Expr (vExtAst_mapPre_Expr_Expr f2142) expr541
  let vExtAst_foldPre_Expr_Expr: all acc3976. (acc3976 -> Ast_Expr -> acc3976) -> acc3976 -> Ast_Expr -> acc3976 =
    lam f2143.
      lam acc3977.
        lam __sem_target2738.
          match
            __sem_target2738
          with
            expr542
          in
          let acc3978 = f2143 acc3977 expr542 in
            vExtAst_sfold_Expr_Expr (vExtAst_foldPre_Expr_Expr f2143) acc3978 expr542
  let vExtAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f2144.
      lam __sem_target2739.
        match
          __sem_target2739
        with
          expr543
        in
        f2144
            (vExtAst_smap_Expr_Expr (vExtAst_mapPost_Expr_Expr f2144) expr543)
  let vExtAst_foldPost_Expr_Expr: all acc3979. (acc3979 -> Ast_Expr -> acc3979) -> acc3979 -> Ast_Expr -> acc3979 =
    lam f2145.
      lam acc3980.
        lam __sem_target2740.
          match
            __sem_target2740
          with
            expr544
          in
          f2145
              (vExtAst_sfold_Expr_Expr (vExtAst_foldPost_Expr_Expr f2145) acc3980 expr544)
              expr544
  let vExtAst_smapAccumL_Pat_Pat: all acc3981. (acc3981 -> Ast_Pat -> (acc3981, Ast_Pat)) -> acc3981 -> Ast_Pat -> (acc3981, Ast_Pat) =
    lam f2146.
      lam acc3982.
        lam __sem_target2741.
          match
            __sem_target2741
          with
            p1743
          in
          (acc3982, p1743)
  let vExtAst_smapAccumL_Expr_Pat: all acc3983. (acc3983 -> Ast_Pat -> (acc3983, Ast_Pat)) -> acc3983 -> Ast_Expr -> (acc3983, Ast_Expr) =
    lam f2147.
      lam acc3984.
        lam __sem_target2742.
          match
            __sem_target2742
          with
            p1744
          in
          (acc3984, p1744)
  let vExtAst_smapAccumL_Pat_Expr: all acc3985. (acc3985 -> Ast_Expr -> (acc3985, Ast_Expr)) -> acc3985 -> Ast_Pat -> (acc3985, Ast_Pat) =
    lam f2148.
      lam acc3986.
        lam __sem_target2743.
          match
            __sem_target2743
          with
            p1745
          in
          (acc3986, p1745)
  let vExtAst_smapAccumL_Pat_Type: all acc3987. (acc3987 -> Ast_Type -> (acc3987, Ast_Type)) -> acc3987 -> Ast_Pat -> (acc3987, Ast_Pat) =
    lam f2149.
      lam acc3988.
        lam __sem_target2744.
          match
            __sem_target2744
          with
            p1746
          in
          (acc3988, p1746)
  let vExtAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f2150.
      lam __sem_target2745.
        match
          __sem_target2745
        with
          p1747
        in
        let res676 =
            vExtAst_smapAccumL_Expr_TypeLabel
              (lam #var"756".
                 lam a1265.
                   ({}, f2150 a1265))
              {}
              p1747
          in
          res676.1
  let vExtAst_rappAccumL_Type_Type: all acc3989. (acc3989 -> Ast_Type -> (acc3989, Ast_Type)) -> acc3989 -> Ast_Type -> (acc3989, Ast_Type) =
    lam f2151.
      lam acc3990.
        lam __sem_target2746.
          match
            __sem_target2746
          with
            ty390
          in
          (acc3990, ty390)
  let vExtAst_sfold_Expr_TypeLabel: all acc3991. (acc3991 -> Ast_Type -> acc3991) -> acc3991 -> Ast_Expr -> acc3991 =
    lam f2152.
      lam acc3992.
        lam __sem_target2747.
          match
            __sem_target2747
          with
            p1748
          in
          let res677 =
              vExtAst_smapAccumL_Expr_TypeLabel
                (lam acc3993.
                   lam a1266.
                     (f2152 acc3993 a1266, a1266))
                acc3992
                p1748
            in
            res677.0
  let vExtAst_smapAccumL_Expr_Expr: all acc3994. (acc3994 -> Ast_Expr -> (acc3994, Ast_Expr)) -> acc3994 -> Ast_Expr -> (acc3994, Ast_Expr) =
    lam f2153.
      lam acc3995.
        lam __sem_target2748.
          match
            __sem_target2748
          with
            ExtAst_TmExt t1072
          then
            match
              f2153 acc3995 t1072.inexpr
            with
              (acc3996, inexpr16)
            in
            (acc3996, ExtAst_TmExt
                { t1072 with inexpr = inexpr16 })
          else match
            __sem_target2748
          with
            p1749
          in
          (acc3995, p1749)
  let vExtAst_smapAccumL_Expr_Type: all acc3997. (acc3997 -> Ast_Type -> (acc3997, Ast_Type)) -> acc3997 -> Ast_Expr -> (acc3997, Ast_Expr) =
    lam f2154.
      lam acc3998.
        lam __sem_target2749.
          match
            __sem_target2749
          with
            ExtAst_TmExt t1073
          then
            match
              f2154 acc3998 t1073.tyIdent
            with
              (acc3999, tyIdent10)
            in
            (acc3999, ExtAst_TmExt
                { t1073 with tyIdent = tyIdent10 })
          else match
            __sem_target2749
          with
            p1750
          in
          (acc3998, p1750)
  let vExtAst_smapAccumL_Kind_Type: all acc4000. (acc4000 -> Ast_Type -> (acc4000, Ast_Type)) -> acc4000 -> Ast_Kind -> (acc4000, Ast_Kind) =
    lam f2155.
      lam acc4001.
        lam __sem_target2750.
          match
            __sem_target2750
          with
            s331
          in
          (acc4001, s331)
  let vExtAst_smapAccumL_Type_Type: all acc4002. (acc4002 -> Ast_Type -> (acc4002, Ast_Type)) -> acc4002 -> Ast_Type -> (acc4002, Ast_Type) =
    lam f2156.
      lam acc4003.
        lam __sem_target2751.
          match
            __sem_target2751
          with
            p1751
          in
          (acc4003, p1751)
  let vExtAst_mapAccumLPre_Expr_Expr: all acc4004. (acc4004 -> Ast_Expr -> (acc4004, Ast_Expr)) -> acc4004 -> Ast_Expr -> (acc4004, Ast_Expr) =
    lam f2157.
      lam acc4005.
        lam __sem_target2752.
          match
            __sem_target2752
          with
            expr545
          in
          match
              f2157 acc4005 expr545
            with
              (acc4006, expr546)
            in
            vExtAst_smapAccumL_Expr_Expr (vExtAst_mapAccumLPre_Expr_Expr f2157) acc4006 expr546
  let vExtAst_mapAccumLPost_Expr_Expr: all acc4007. (acc4007 -> Ast_Expr -> (acc4007, Ast_Expr)) -> acc4007 -> Ast_Expr -> (acc4007, Ast_Expr) =
    lam f2158.
      lam acc4008.
        lam __sem_target2753.
          match
            __sem_target2753
          with
            expr547
          in
          match
              vExtAst_smapAccumL_Expr_Expr (vExtAst_mapAccumLPost_Expr_Expr f2158) acc4008 expr547
            with
              (acc4009, expr548)
            in
            f2158 acc4009 expr548
  let vExtAst_smapAccumL_Expr_TypeLabel: all acc4010. (acc4010 -> Ast_Type -> (acc4010, Ast_Type)) -> acc4010 -> Ast_Expr -> (acc4010, Ast_Expr) =
    lam f2159.
      lam acc4011.
        lam __sem_target2754.
          match
            __sem_target2754
          with
            p1752
          in
          match
              f2159 acc4011 (vExtAst_tyTm p1752)
            with
              (acc4012, ty391)
            in
            (acc4012, vExtAst_withType ty391 p1752)
in
con UnsafeCoerceAst_CUnsafeCoerce: () -> ConstAst_Const in
recursive
  let vUnsafeCoerceAst_tyTm: Ast_Expr -> Ast_Type =
    lam __sem_target2667.
      match
        __sem_target2667
      with
        ConstAst_TmConst t1055
      in
      t1055.ty
  let vUnsafeCoerceAst_tyPat: Ast_Pat -> Ast_Type = lam x577.
      never
  let vUnsafeCoerceAst_infoTm: Ast_Expr -> Info =
    lam __sem_target2668.
      match
        __sem_target2668
      with
        ConstAst_TmConst r356
      in
      r356.info
  let vUnsafeCoerceAst_infoTy: Ast_Type -> Info = lam x578.
      never
  let vUnsafeCoerceAst_infoPat: Ast_Pat -> Info = lam x579.
      never
  let vUnsafeCoerceAst_withInfo: Info -> Ast_Expr -> Ast_Expr =
    lam info64.
      lam __sem_target2669.
        match
          __sem_target2669
        with
          ConstAst_TmConst t1056
        in
        ConstAst_TmConst
            { t1056 with info = info64 }
  let vUnsafeCoerceAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr =
    lam ty380: Ast_Type.
      lam __sem_target2670.
        match
          __sem_target2670
        with
          ConstAst_TmConst t1057
        in
        ConstAst_TmConst
            { t1057 with ty = ty380 }
  let vUnsafeCoerceAst_tyWithInfo: Info -> Ast_Type -> Ast_Type = lam x580.
      never
  let vUnsafeCoerceAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target2671.
      match
        __sem_target2671
      with
        ty381
      in
      vUnsafeCoerceAst_rapp_Type_Type vUnsafeCoerceAst_unwrapType ty381
  let vUnsafeCoerceAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target2672.
      match
        __sem_target2672
      with
        ty382
      in
      vUnsafeCoerceAst_rapp_Type_Type vUnsafeCoerceAst_inspectType ty382
  let vUnsafeCoerceAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x581.
      never
  let vUnsafeCoerceAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x582.
      never
  let vUnsafeCoerceAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f2090.
      lam __sem_target2673.
        match
          __sem_target2673
        with
          p1699
        in
        let res656 =
            vUnsafeCoerceAst_smapAccumL_Pat_Pat
              (lam #var"737".
                 lam a1231.
                   ({}, f2090 a1231))
              {}
              p1699
          in
          res656.1
  let vUnsafeCoerceAst_countPatNodes =
    lam count826.
      lam __sem_target2674.
        match
          __sem_target2674
        with
          t1058
        in
        let count827 = addi count826 1 in
          let count828 =
            vUnsafeCoerceAst_sfold_Pat_Pat vUnsafeCoerceAst_countPatNodes count827 t1058
          in
          let count829 =
            vUnsafeCoerceAst_sfold_Pat_Expr vUnsafeCoerceAst_countExprNodes count828 t1058
          in
          let count830 =
            vUnsafeCoerceAst_sfold_Pat_Type vUnsafeCoerceAst_countTypeNodes count829 t1058
          in
          count830
  let vUnsafeCoerceAst_sfold_Pat_Pat: all acc3889. (acc3889 -> Ast_Pat -> acc3889) -> acc3889 -> Ast_Pat -> acc3889 =
    lam f2091.
      lam acc3890.
        lam __sem_target2675.
          match
            __sem_target2675
          with
            p1700
          in
          let res657 =
              vUnsafeCoerceAst_smapAccumL_Pat_Pat
                (lam acc3891.
                   lam a1232.
                     (f2091 acc3891 a1232, a1232))
                acc3890
                p1700
            in
            res657.0
  let vUnsafeCoerceAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f2092.
      lam __sem_target2676.
        match
          __sem_target2676
        with
          p1701
        in
        match
            vUnsafeCoerceAst_smapAccumL_Expr_Pat
              (lam #var"738".
                 lam a1233.
                   ({}, f2092 a1233))
              {}
              p1701
          with
            (_, p1702)
          in
          p1702
  let vUnsafeCoerceAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f2093.
      lam __sem_target2677.
        match
          __sem_target2677
        with
          p1703
        in
        match
            vUnsafeCoerceAst_smapAccumL_Pat_Expr
              (lam #var"739".
                 lam a1234.
                   ({}, f2093 a1234))
              {}
              p1703
          with
            (_, p1704)
          in
          p1704
  let vUnsafeCoerceAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f2094.
      lam __sem_target2678.
        match
          __sem_target2678
        with
          p1705
        in
        match
            vUnsafeCoerceAst_smapAccumL_Pat_Type
              (lam #var"740".
                 lam a1235.
                   ({}, f2094 a1235))
              {}
              p1705
          with
            (_, p1706)
          in
          p1706
  let vUnsafeCoerceAst_countExprNodes =
    lam count831.
      lam __sem_target2679.
        match
          __sem_target2679
        with
          t1059
        in
        let count832 = addi count831 1 in
          let count833 =
            vUnsafeCoerceAst_sfold_Expr_Expr vUnsafeCoerceAst_countExprNodes count832 t1059
          in
          let count834 =
            vUnsafeCoerceAst_sfold_Expr_Type vUnsafeCoerceAst_countTypeNodes count833 t1059
          in
          let count835 =
            vUnsafeCoerceAst_sfold_Expr_TypeLabel vUnsafeCoerceAst_countTypeNodes count834 t1059
          in
          let count836 =
            vUnsafeCoerceAst_sfold_Expr_Pat vUnsafeCoerceAst_countPatNodes count835 t1059
          in
          count836
  let vUnsafeCoerceAst_countTypeNodes =
    lam count837.
      lam __sem_target2680.
        match
          __sem_target2680
        with
          t1060
        in
        let count838 = addi count837 1 in
          let count839 =
            vUnsafeCoerceAst_sfold_Type_Type vUnsafeCoerceAst_countTypeNodes count838 t1060
          in
          count839
  let vUnsafeCoerceAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f2095.
      lam __sem_target2681.
        match
          __sem_target2681
        with
          ty383
        in
        let res658 =
            vUnsafeCoerceAst_rappAccumL_Type_Type
              (lam #var"741".
                 lam t1061.
                   ({}, f2095 t1061))
              {}
              ty383
          in
          res658.1
  let vUnsafeCoerceAst_sfold_Expr_Pat: all acc3892. (acc3892 -> Ast_Pat -> acc3892) -> acc3892 -> Ast_Expr -> acc3892 =
    lam f2096.
      lam acc3893.
        lam __sem_target2682.
          match
            __sem_target2682
          with
            p1707
          in
          match
              vUnsafeCoerceAst_smapAccumL_Expr_Pat
                (lam acc3894.
                   lam a1236.
                     (f2096 acc3894 a1236, a1236))
                acc3893
                p1707
            with
              (acc3895, _)
            in
            acc3895
  let vUnsafeCoerceAst_sfold_Pat_Expr: all acc3896. (acc3896 -> Ast_Expr -> acc3896) -> acc3896 -> Ast_Pat -> acc3896 =
    lam f2097.
      lam acc3897.
        lam __sem_target2683.
          match
            __sem_target2683
          with
            p1708
          in
          match
              vUnsafeCoerceAst_smapAccumL_Pat_Expr
                (lam acc3898.
                   lam a1237.
                     (f2097 acc3898 a1237, a1237))
                acc3897
                p1708
            with
              (acc3899, _)
            in
            acc3899
  let vUnsafeCoerceAst_sfold_Pat_Type: all acc3900. (acc3900 -> Ast_Type -> acc3900) -> acc3900 -> Ast_Pat -> acc3900 =
    lam f2098.
      lam acc3901.
        lam __sem_target2684.
          match
            __sem_target2684
          with
            p1709
          in
          match
              vUnsafeCoerceAst_smapAccumL_Pat_Type
                (lam acc3902.
                   lam a1238.
                     (f2098 acc3902 a1238, a1238))
                acc3901
                p1709
            with
              (acc3903, _)
            in
            acc3903
  let vUnsafeCoerceAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f2099.
      lam __sem_target2685.
        match
          __sem_target2685
        with
          p1710
        in
        let res659 =
            vUnsafeCoerceAst_smapAccumL_Expr_Expr
              (lam #var"742".
                 lam a1239.
                   ({}, f2099 a1239))
              {}
              p1710
          in
          res659.1
  let vUnsafeCoerceAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f2100.
      lam __sem_target2686.
        match
          __sem_target2686
        with
          p1711
        in
        let res660 =
            vUnsafeCoerceAst_smapAccumL_Expr_Type
              (lam #var"743".
                 lam a1240.
                   ({}, f2100 a1240))
              {}
              p1711
          in
          res660.1
  let vUnsafeCoerceAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f2101: Ast_Type -> Ast_Type.
      lam __sem_target2687.
        match
          __sem_target2687
        with
          s324
        in
        match
            vUnsafeCoerceAst_smapAccumL_Kind_Type
              (lam #var"744".
                 lam x583.
                   ({}, f2101 x583))
              {}
              s324
          with
            (_, s325)
          in
          s325
  let vUnsafeCoerceAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f2102.
      lam __sem_target2688.
        match
          __sem_target2688
        with
          p1712
        in
        let res661 =
            vUnsafeCoerceAst_smapAccumL_Type_Type
              (lam #var"745".
                 lam a1241.
                   ({}, f2102 a1241))
              {}
              p1712
          in
          res661.1
  let vUnsafeCoerceAst_sfold_Expr_Expr: all acc3904. (acc3904 -> Ast_Expr -> acc3904) -> acc3904 -> Ast_Expr -> acc3904 =
    lam f2103.
      lam acc3905.
        lam __sem_target2689.
          match
            __sem_target2689
          with
            p1713
          in
          let res662 =
              vUnsafeCoerceAst_smapAccumL_Expr_Expr
                (lam acc3906.
                   lam a1242.
                     (f2103 acc3906 a1242, a1242))
                acc3905
                p1713
            in
            res662.0
  let vUnsafeCoerceAst_sfold_Expr_Type: all acc3907. (acc3907 -> Ast_Type -> acc3907) -> acc3907 -> Ast_Expr -> acc3907 =
    lam f2104.
      lam acc3908.
        lam __sem_target2690.
          match
            __sem_target2690
          with
            p1714
          in
          let res663 =
              vUnsafeCoerceAst_smapAccumL_Expr_Type
                (lam acc3909.
                   lam a1243.
                     (f2104 acc3909 a1243, a1243))
                acc3908
                p1714
            in
            res663.0
  let vUnsafeCoerceAst_sfold_Kind_Type: all acc3910. (acc3910 -> Ast_Type -> acc3910) -> acc3910 -> Ast_Kind -> acc3910 =
    lam f2105: acc3910 -> Ast_Type -> acc3910.
      lam acc3911: acc3910.
        lam __sem_target2691.
          match
            __sem_target2691
          with
            s326
          in
          match
              vUnsafeCoerceAst_smapAccumL_Kind_Type
                (lam a1244.
                   lam x584.
                     (f2105 a1244 x584, x584))
                acc3911
                s326
            with
              (a1245, _)
            in
            a1245
  let vUnsafeCoerceAst_sfold_Type_Type: all acc3912. (acc3912 -> Ast_Type -> acc3912) -> acc3912 -> Ast_Type -> acc3912 =
    lam f2106.
      lam acc3913.
        lam __sem_target2692.
          match
            __sem_target2692
          with
            p1715
          in
          let res664 =
              vUnsafeCoerceAst_smapAccumL_Type_Type
                (lam acc3914.
                   lam a1246.
                     (f2106 acc3914 a1246, a1246))
                acc3913
                p1715
            in
            res664.0
  let vUnsafeCoerceAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f2107.
      lam __sem_target2693.
        match
          __sem_target2693
        with
          expr531
        in
        let expr532 = f2107 expr531 in
          vUnsafeCoerceAst_smap_Expr_Expr (vUnsafeCoerceAst_mapPre_Expr_Expr f2107) expr532
  let vUnsafeCoerceAst_foldPre_Expr_Expr: all acc3915. (acc3915 -> Ast_Expr -> acc3915) -> acc3915 -> Ast_Expr -> acc3915 =
    lam f2108.
      lam acc3916.
        lam __sem_target2694.
          match
            __sem_target2694
          with
            expr533
          in
          let acc3917 = f2108 acc3916 expr533 in
            vUnsafeCoerceAst_sfold_Expr_Expr (vUnsafeCoerceAst_foldPre_Expr_Expr f2108) acc3917 expr533
  let vUnsafeCoerceAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f2109.
      lam __sem_target2695.
        match
          __sem_target2695
        with
          expr534
        in
        f2109
            (vUnsafeCoerceAst_smap_Expr_Expr (vUnsafeCoerceAst_mapPost_Expr_Expr f2109) expr534)
  let vUnsafeCoerceAst_foldPost_Expr_Expr: all acc3918. (acc3918 -> Ast_Expr -> acc3918) -> acc3918 -> Ast_Expr -> acc3918 =
    lam f2110.
      lam acc3919.
        lam __sem_target2696.
          match
            __sem_target2696
          with
            expr535
          in
          f2110
              (vUnsafeCoerceAst_sfold_Expr_Expr (vUnsafeCoerceAst_foldPost_Expr_Expr f2110) acc3919 expr535)
              expr535
  let vUnsafeCoerceAst_smapAccumL_Pat_Pat: all acc3920. (acc3920 -> Ast_Pat -> (acc3920, Ast_Pat)) -> acc3920 -> Ast_Pat -> (acc3920, Ast_Pat) =
    lam f2111.
      lam acc3921.
        lam __sem_target2697.
          match
            __sem_target2697
          with
            p1716
          in
          (acc3921, p1716)
  let vUnsafeCoerceAst_smapAccumL_Expr_Pat: all acc3922. (acc3922 -> Ast_Pat -> (acc3922, Ast_Pat)) -> acc3922 -> Ast_Expr -> (acc3922, Ast_Expr) =
    lam f2112.
      lam acc3923.
        lam __sem_target2698.
          match
            __sem_target2698
          with
            p1717
          in
          (acc3923, p1717)
  let vUnsafeCoerceAst_smapAccumL_Pat_Expr: all acc3924. (acc3924 -> Ast_Expr -> (acc3924, Ast_Expr)) -> acc3924 -> Ast_Pat -> (acc3924, Ast_Pat) =
    lam f2113.
      lam acc3925.
        lam __sem_target2699.
          match
            __sem_target2699
          with
            p1718
          in
          (acc3925, p1718)
  let vUnsafeCoerceAst_smapAccumL_Pat_Type: all acc3926. (acc3926 -> Ast_Type -> (acc3926, Ast_Type)) -> acc3926 -> Ast_Pat -> (acc3926, Ast_Pat) =
    lam f2114.
      lam acc3927.
        lam __sem_target2700.
          match
            __sem_target2700
          with
            p1719
          in
          (acc3927, p1719)
  let vUnsafeCoerceAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f2115.
      lam __sem_target2701.
        match
          __sem_target2701
        with
          p1720
        in
        let res665 =
            vUnsafeCoerceAst_smapAccumL_Expr_TypeLabel
              (lam #var"746".
                 lam a1247.
                   ({}, f2115 a1247))
              {}
              p1720
          in
          res665.1
  let vUnsafeCoerceAst_rappAccumL_Type_Type: all acc3928. (acc3928 -> Ast_Type -> (acc3928, Ast_Type)) -> acc3928 -> Ast_Type -> (acc3928, Ast_Type) =
    lam f2116.
      lam acc3929.
        lam __sem_target2702.
          match
            __sem_target2702
          with
            ty384
          in
          (acc3929, ty384)
  let vUnsafeCoerceAst_sfold_Expr_TypeLabel: all acc3930. (acc3930 -> Ast_Type -> acc3930) -> acc3930 -> Ast_Expr -> acc3930 =
    lam f2117.
      lam acc3931.
        lam __sem_target2703.
          match
            __sem_target2703
          with
            p1721
          in
          let res666 =
              vUnsafeCoerceAst_smapAccumL_Expr_TypeLabel
                (lam acc3932.
                   lam a1248.
                     (f2117 acc3932 a1248, a1248))
                acc3931
                p1721
            in
            res666.0
  let vUnsafeCoerceAst_smapAccumL_Expr_Expr: all acc3933. (acc3933 -> Ast_Expr -> (acc3933, Ast_Expr)) -> acc3933 -> Ast_Expr -> (acc3933, Ast_Expr) =
    lam f2118.
      lam acc3934.
        lam __sem_target2704.
          match
            __sem_target2704
          with
            p1722
          in
          (acc3934, p1722)
  let vUnsafeCoerceAst_smapAccumL_Expr_Type: all acc3935. (acc3935 -> Ast_Type -> (acc3935, Ast_Type)) -> acc3935 -> Ast_Expr -> (acc3935, Ast_Expr) =
    lam f2119.
      lam acc3936.
        lam __sem_target2705.
          match
            __sem_target2705
          with
            p1723
          in
          (acc3936, p1723)
  let vUnsafeCoerceAst_smapAccumL_Kind_Type: all acc3937. (acc3937 -> Ast_Type -> (acc3937, Ast_Type)) -> acc3937 -> Ast_Kind -> (acc3937, Ast_Kind) =
    lam f2120.
      lam acc3938.
        lam __sem_target2706.
          match
            __sem_target2706
          with
            s327
          in
          (acc3938, s327)
  let vUnsafeCoerceAst_smapAccumL_Type_Type: all acc3939. (acc3939 -> Ast_Type -> (acc3939, Ast_Type)) -> acc3939 -> Ast_Type -> (acc3939, Ast_Type) =
    lam f2121.
      lam acc3940.
        lam __sem_target2707.
          match
            __sem_target2707
          with
            p1724
          in
          (acc3940, p1724)
  let vUnsafeCoerceAst_mapAccumLPre_Expr_Expr: all acc3941. (acc3941 -> Ast_Expr -> (acc3941, Ast_Expr)) -> acc3941 -> Ast_Expr -> (acc3941, Ast_Expr) =
    lam f2122.
      lam acc3942.
        lam __sem_target2708.
          match
            __sem_target2708
          with
            expr536
          in
          match
              f2122 acc3942 expr536
            with
              (acc3943, expr537)
            in
            vUnsafeCoerceAst_smapAccumL_Expr_Expr
                (vUnsafeCoerceAst_mapAccumLPre_Expr_Expr f2122)
                acc3943
                expr537
  let vUnsafeCoerceAst_mapAccumLPost_Expr_Expr: all acc3944. (acc3944 -> Ast_Expr -> (acc3944, Ast_Expr)) -> acc3944 -> Ast_Expr -> (acc3944, Ast_Expr) =
    lam f2123.
      lam acc3945.
        lam __sem_target2709.
          match
            __sem_target2709
          with
            expr538
          in
          match
              vUnsafeCoerceAst_smapAccumL_Expr_Expr
                (vUnsafeCoerceAst_mapAccumLPost_Expr_Expr f2123)
                acc3945
                expr538
            with
              (acc3946, expr539)
            in
            f2123 acc3946 expr539
  let vUnsafeCoerceAst_smapAccumL_Expr_TypeLabel: all acc3947. (acc3947 -> Ast_Type -> (acc3947, Ast_Type)) -> acc3947 -> Ast_Expr -> (acc3947, Ast_Expr) =
    lam f2124.
      lam acc3948.
        lam __sem_target2710.
          match
            __sem_target2710
          with
            p1725
          in
          match
              f2124 acc3948 (vUnsafeCoerceAst_tyTm p1725)
            with
              (acc3949, ty385)
            in
            (acc3949, vUnsafeCoerceAst_withType ty385 p1725)
in
con IntAst_CInt: {val: Int} -> ConstAst_Const in
recursive
  let vIntAst_tyTm: Ast_Expr -> Ast_Type =
    lam __sem_target2623.
      match
        __sem_target2623
      with
        ConstAst_TmConst t1048
      in
      t1048.ty
  let vIntAst_tyPat: Ast_Pat -> Ast_Type = lam x569.
      never
  let vIntAst_infoTm: Ast_Expr -> Info =
    lam __sem_target2624.
      match
        __sem_target2624
      with
        ConstAst_TmConst r355
      in
      r355.info
  let vIntAst_infoTy: Ast_Type -> Info = lam x570.
      never
  let vIntAst_infoPat: Ast_Pat -> Info = lam x571.
      never
  let vIntAst_withInfo: Info -> Ast_Expr -> Ast_Expr =
    lam info63.
      lam __sem_target2625.
        match
          __sem_target2625
        with
          ConstAst_TmConst t1049
        in
        ConstAst_TmConst
            { t1049 with info = info63 }
  let vIntAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr =
    lam ty374: Ast_Type.
      lam __sem_target2626.
        match
          __sem_target2626
        with
          ConstAst_TmConst t1050
        in
        ConstAst_TmConst
            { t1050 with ty = ty374 }
  let vIntAst_tyWithInfo: Info -> Ast_Type -> Ast_Type = lam x572.
      never
  let vIntAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target2627.
      match
        __sem_target2627
      with
        ty375
      in
      vIntAst_rapp_Type_Type vIntAst_unwrapType ty375
  let vIntAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target2628.
      match
        __sem_target2628
      with
        ty376
      in
      vIntAst_rapp_Type_Type vIntAst_inspectType ty376
  let vIntAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x573.
      never
  let vIntAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x574.
      never
  let vIntAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f2055.
      lam __sem_target2629.
        match
          __sem_target2629
        with
          p1672
        in
        let res645 =
            vIntAst_smapAccumL_Pat_Pat
              (lam #var"727".
                 lam a1213.
                   ({}, f2055 a1213))
              {}
              p1672
          in
          res645.1
  let vIntAst_countPatNodes =
    lam count812.
      lam __sem_target2630.
        match
          __sem_target2630
        with
          t1051
        in
        let count813 = addi count812 1 in
          let count814 = vIntAst_sfold_Pat_Pat vIntAst_countPatNodes count813 t1051
          in
          let count815 = vIntAst_sfold_Pat_Expr vIntAst_countExprNodes count814 t1051
          in
          let count816 = vIntAst_sfold_Pat_Type vIntAst_countTypeNodes count815 t1051
          in
          count816
  let vIntAst_sfold_Pat_Pat: all acc3828. (acc3828 -> Ast_Pat -> acc3828) -> acc3828 -> Ast_Pat -> acc3828 =
    lam f2056.
      lam acc3829.
        lam __sem_target2631.
          match
            __sem_target2631
          with
            p1673
          in
          let res646 =
              vIntAst_smapAccumL_Pat_Pat
                (lam acc3830.
                   lam a1214.
                     (f2056 acc3830 a1214, a1214))
                acc3829
                p1673
            in
            res646.0
  let vIntAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f2057.
      lam __sem_target2632.
        match
          __sem_target2632
        with
          p1674
        in
        match
            vIntAst_smapAccumL_Expr_Pat
              (lam #var"728".
                 lam a1215.
                   ({}, f2057 a1215))
              {}
              p1674
          with
            (_, p1675)
          in
          p1675
  let vIntAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f2058.
      lam __sem_target2633.
        match
          __sem_target2633
        with
          p1676
        in
        match
            vIntAst_smapAccumL_Pat_Expr
              (lam #var"729".
                 lam a1216.
                   ({}, f2058 a1216))
              {}
              p1676
          with
            (_, p1677)
          in
          p1677
  let vIntAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f2059.
      lam __sem_target2634.
        match
          __sem_target2634
        with
          p1678
        in
        match
            vIntAst_smapAccumL_Pat_Type
              (lam #var"730".
                 lam a1217.
                   ({}, f2059 a1217))
              {}
              p1678
          with
            (_, p1679)
          in
          p1679
  let vIntAst_countExprNodes =
    lam count817.
      lam __sem_target2635.
        match
          __sem_target2635
        with
          t1052
        in
        let count818 = addi count817 1 in
          let count819 =
            vIntAst_sfold_Expr_Expr vIntAst_countExprNodes count818 t1052
          in
          let count820 =
            vIntAst_sfold_Expr_Type vIntAst_countTypeNodes count819 t1052
          in
          let count821 =
            vIntAst_sfold_Expr_TypeLabel vIntAst_countTypeNodes count820 t1052
          in
          let count822 = vIntAst_sfold_Expr_Pat vIntAst_countPatNodes count821 t1052
          in
          count822
  let vIntAst_countTypeNodes =
    lam count823.
      lam __sem_target2636.
        match
          __sem_target2636
        with
          t1053
        in
        let count824 = addi count823 1 in
          let count825 =
            vIntAst_sfold_Type_Type vIntAst_countTypeNodes count824 t1053
          in
          count825
  let vIntAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f2060.
      lam __sem_target2637.
        match
          __sem_target2637
        with
          ty377
        in
        let res647 =
            vIntAst_rappAccumL_Type_Type
              (lam #var"731".
                 lam t1054.
                   ({}, f2060 t1054))
              {}
              ty377
          in
          res647.1
  let vIntAst_sfold_Expr_Pat: all acc3831. (acc3831 -> Ast_Pat -> acc3831) -> acc3831 -> Ast_Expr -> acc3831 =
    lam f2061.
      lam acc3832.
        lam __sem_target2638.
          match
            __sem_target2638
          with
            p1680
          in
          match
              vIntAst_smapAccumL_Expr_Pat
                (lam acc3833.
                   lam a1218.
                     (f2061 acc3833 a1218, a1218))
                acc3832
                p1680
            with
              (acc3834, _)
            in
            acc3834
  let vIntAst_sfold_Pat_Expr: all acc3835. (acc3835 -> Ast_Expr -> acc3835) -> acc3835 -> Ast_Pat -> acc3835 =
    lam f2062.
      lam acc3836.
        lam __sem_target2639.
          match
            __sem_target2639
          with
            p1681
          in
          match
              vIntAst_smapAccumL_Pat_Expr
                (lam acc3837.
                   lam a1219.
                     (f2062 acc3837 a1219, a1219))
                acc3836
                p1681
            with
              (acc3838, _)
            in
            acc3838
  let vIntAst_sfold_Pat_Type: all acc3839. (acc3839 -> Ast_Type -> acc3839) -> acc3839 -> Ast_Pat -> acc3839 =
    lam f2063.
      lam acc3840.
        lam __sem_target2640.
          match
            __sem_target2640
          with
            p1682
          in
          match
              vIntAst_smapAccumL_Pat_Type
                (lam acc3841.
                   lam a1220.
                     (f2063 acc3841 a1220, a1220))
                acc3840
                p1682
            with
              (acc3842, _)
            in
            acc3842
  let vIntAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f2064.
      lam __sem_target2641.
        match
          __sem_target2641
        with
          p1683
        in
        let res648 =
            vIntAst_smapAccumL_Expr_Expr
              (lam #var"732".
                 lam a1221.
                   ({}, f2064 a1221))
              {}
              p1683
          in
          res648.1
  let vIntAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f2065.
      lam __sem_target2642.
        match
          __sem_target2642
        with
          p1684
        in
        let res649 =
            vIntAst_smapAccumL_Expr_Type
              (lam #var"733".
                 lam a1222.
                   ({}, f2065 a1222))
              {}
              p1684
          in
          res649.1
  let vIntAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f2066: Ast_Type -> Ast_Type.
      lam __sem_target2643.
        match
          __sem_target2643
        with
          s320
        in
        match
            vIntAst_smapAccumL_Kind_Type
              (lam #var"734".
                 lam x575.
                   ({}, f2066 x575))
              {}
              s320
          with
            (_, s321)
          in
          s321
  let vIntAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f2067.
      lam __sem_target2644.
        match
          __sem_target2644
        with
          p1685
        in
        let res650 =
            vIntAst_smapAccumL_Type_Type
              (lam #var"735".
                 lam a1223.
                   ({}, f2067 a1223))
              {}
              p1685
          in
          res650.1
  let vIntAst_sfold_Expr_Expr: all acc3843. (acc3843 -> Ast_Expr -> acc3843) -> acc3843 -> Ast_Expr -> acc3843 =
    lam f2068.
      lam acc3844.
        lam __sem_target2645.
          match
            __sem_target2645
          with
            p1686
          in
          let res651 =
              vIntAst_smapAccumL_Expr_Expr
                (lam acc3845.
                   lam a1224.
                     (f2068 acc3845 a1224, a1224))
                acc3844
                p1686
            in
            res651.0
  let vIntAst_sfold_Expr_Type: all acc3846. (acc3846 -> Ast_Type -> acc3846) -> acc3846 -> Ast_Expr -> acc3846 =
    lam f2069.
      lam acc3847.
        lam __sem_target2646.
          match
            __sem_target2646
          with
            p1687
          in
          let res652 =
              vIntAst_smapAccumL_Expr_Type
                (lam acc3848.
                   lam a1225.
                     (f2069 acc3848 a1225, a1225))
                acc3847
                p1687
            in
            res652.0
  let vIntAst_sfold_Kind_Type: all acc3849. (acc3849 -> Ast_Type -> acc3849) -> acc3849 -> Ast_Kind -> acc3849 =
    lam f2070: acc3849 -> Ast_Type -> acc3849.
      lam acc3850: acc3849.
        lam __sem_target2647.
          match
            __sem_target2647
          with
            s322
          in
          match
              vIntAst_smapAccumL_Kind_Type
                (lam a1226.
                   lam x576.
                     (f2070 a1226 x576, x576))
                acc3850
                s322
            with
              (a1227, _)
            in
            a1227
  let vIntAst_sfold_Type_Type: all acc3851. (acc3851 -> Ast_Type -> acc3851) -> acc3851 -> Ast_Type -> acc3851 =
    lam f2071.
      lam acc3852.
        lam __sem_target2648.
          match
            __sem_target2648
          with
            p1688
          in
          let res653 =
              vIntAst_smapAccumL_Type_Type
                (lam acc3853.
                   lam a1228.
                     (f2071 acc3853 a1228, a1228))
                acc3852
                p1688
            in
            res653.0
  let vIntAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f2072.
      lam __sem_target2649.
        match
          __sem_target2649
        with
          expr522
        in
        let expr523 = f2072 expr522 in
          vIntAst_smap_Expr_Expr (vIntAst_mapPre_Expr_Expr f2072) expr523
  let vIntAst_foldPre_Expr_Expr: all acc3854. (acc3854 -> Ast_Expr -> acc3854) -> acc3854 -> Ast_Expr -> acc3854 =
    lam f2073.
      lam acc3855.
        lam __sem_target2650.
          match
            __sem_target2650
          with
            expr524
          in
          let acc3856 = f2073 acc3855 expr524 in
            vIntAst_sfold_Expr_Expr (vIntAst_foldPre_Expr_Expr f2073) acc3856 expr524
  let vIntAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f2074.
      lam __sem_target2651.
        match
          __sem_target2651
        with
          expr525
        in
        f2074
            (vIntAst_smap_Expr_Expr (vIntAst_mapPost_Expr_Expr f2074) expr525)
  let vIntAst_foldPost_Expr_Expr: all acc3857. (acc3857 -> Ast_Expr -> acc3857) -> acc3857 -> Ast_Expr -> acc3857 =
    lam f2075.
      lam acc3858.
        lam __sem_target2652.
          match
            __sem_target2652
          with
            expr526
          in
          f2075
              (vIntAst_sfold_Expr_Expr (vIntAst_foldPost_Expr_Expr f2075) acc3858 expr526)
              expr526
  let vIntAst_smapAccumL_Pat_Pat: all acc3859. (acc3859 -> Ast_Pat -> (acc3859, Ast_Pat)) -> acc3859 -> Ast_Pat -> (acc3859, Ast_Pat) =
    lam f2076.
      lam acc3860.
        lam __sem_target2653.
          match
            __sem_target2653
          with
            p1689
          in
          (acc3860, p1689)
  let vIntAst_smapAccumL_Expr_Pat: all acc3861. (acc3861 -> Ast_Pat -> (acc3861, Ast_Pat)) -> acc3861 -> Ast_Expr -> (acc3861, Ast_Expr) =
    lam f2077.
      lam acc3862.
        lam __sem_target2654.
          match
            __sem_target2654
          with
            p1690
          in
          (acc3862, p1690)
  let vIntAst_smapAccumL_Pat_Expr: all acc3863. (acc3863 -> Ast_Expr -> (acc3863, Ast_Expr)) -> acc3863 -> Ast_Pat -> (acc3863, Ast_Pat) =
    lam f2078.
      lam acc3864.
        lam __sem_target2655.
          match
            __sem_target2655
          with
            p1691
          in
          (acc3864, p1691)
  let vIntAst_smapAccumL_Pat_Type: all acc3865. (acc3865 -> Ast_Type -> (acc3865, Ast_Type)) -> acc3865 -> Ast_Pat -> (acc3865, Ast_Pat) =
    lam f2079.
      lam acc3866.
        lam __sem_target2656.
          match
            __sem_target2656
          with
            p1692
          in
          (acc3866, p1692)
  let vIntAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f2080.
      lam __sem_target2657.
        match
          __sem_target2657
        with
          p1693
        in
        let res654 =
            vIntAst_smapAccumL_Expr_TypeLabel
              (lam #var"736".
                 lam a1229.
                   ({}, f2080 a1229))
              {}
              p1693
          in
          res654.1
  let vIntAst_rappAccumL_Type_Type: all acc3867. (acc3867 -> Ast_Type -> (acc3867, Ast_Type)) -> acc3867 -> Ast_Type -> (acc3867, Ast_Type) =
    lam f2081.
      lam acc3868.
        lam __sem_target2658.
          match
            __sem_target2658
          with
            ty378
          in
          (acc3868, ty378)
  let vIntAst_sfold_Expr_TypeLabel: all acc3869. (acc3869 -> Ast_Type -> acc3869) -> acc3869 -> Ast_Expr -> acc3869 =
    lam f2082.
      lam acc3870.
        lam __sem_target2659.
          match
            __sem_target2659
          with
            p1694
          in
          let res655 =
              vIntAst_smapAccumL_Expr_TypeLabel
                (lam acc3871.
                   lam a1230.
                     (f2082 acc3871 a1230, a1230))
                acc3870
                p1694
            in
            res655.0
  let vIntAst_smapAccumL_Expr_Expr: all acc3872. (acc3872 -> Ast_Expr -> (acc3872, Ast_Expr)) -> acc3872 -> Ast_Expr -> (acc3872, Ast_Expr) =
    lam f2083.
      lam acc3873.
        lam __sem_target2660.
          match
            __sem_target2660
          with
            p1695
          in
          (acc3873, p1695)
  let vIntAst_smapAccumL_Expr_Type: all acc3874. (acc3874 -> Ast_Type -> (acc3874, Ast_Type)) -> acc3874 -> Ast_Expr -> (acc3874, Ast_Expr) =
    lam f2084.
      lam acc3875.
        lam __sem_target2661.
          match
            __sem_target2661
          with
            p1696
          in
          (acc3875, p1696)
  let vIntAst_smapAccumL_Kind_Type: all acc3876. (acc3876 -> Ast_Type -> (acc3876, Ast_Type)) -> acc3876 -> Ast_Kind -> (acc3876, Ast_Kind) =
    lam f2085.
      lam acc3877.
        lam __sem_target2662.
          match
            __sem_target2662
          with
            s323
          in
          (acc3877, s323)
  let vIntAst_smapAccumL_Type_Type: all acc3878. (acc3878 -> Ast_Type -> (acc3878, Ast_Type)) -> acc3878 -> Ast_Type -> (acc3878, Ast_Type) =
    lam f2086.
      lam acc3879.
        lam __sem_target2663.
          match
            __sem_target2663
          with
            p1697
          in
          (acc3879, p1697)
  let vIntAst_mapAccumLPre_Expr_Expr: all acc3880. (acc3880 -> Ast_Expr -> (acc3880, Ast_Expr)) -> acc3880 -> Ast_Expr -> (acc3880, Ast_Expr) =
    lam f2087.
      lam acc3881.
        lam __sem_target2664.
          match
            __sem_target2664
          with
            expr527
          in
          match
              f2087 acc3881 expr527
            with
              (acc3882, expr528)
            in
            vIntAst_smapAccumL_Expr_Expr (vIntAst_mapAccumLPre_Expr_Expr f2087) acc3882 expr528
  let vIntAst_mapAccumLPost_Expr_Expr: all acc3883. (acc3883 -> Ast_Expr -> (acc3883, Ast_Expr)) -> acc3883 -> Ast_Expr -> (acc3883, Ast_Expr) =
    lam f2088.
      lam acc3884.
        lam __sem_target2665.
          match
            __sem_target2665
          with
            expr529
          in
          match
              vIntAst_smapAccumL_Expr_Expr (vIntAst_mapAccumLPost_Expr_Expr f2088) acc3884 expr529
            with
              (acc3885, expr530)
            in
            f2088 acc3885 expr530
  let vIntAst_smapAccumL_Expr_TypeLabel: all acc3886. (acc3886 -> Ast_Type -> (acc3886, Ast_Type)) -> acc3886 -> Ast_Expr -> (acc3886, Ast_Expr) =
    lam f2089.
      lam acc3887.
        lam __sem_target2666.
          match
            __sem_target2666
          with
            p1698
          in
          match
              f2089 acc3887 (vIntAst_tyTm p1698)
            with
              (acc3888, ty379)
            in
            (acc3888, vIntAst_withType ty379 p1698)
in
con ArithIntAst_CSubi: () -> ConstAst_Const in
con ArithIntAst_CNegi: () -> ConstAst_Const in
con ArithIntAst_CMuli: () -> ConstAst_Const in
con ArithIntAst_CModi: () -> ConstAst_Const in
con ArithIntAst_CDivi: () -> ConstAst_Const in
con ArithIntAst_CAddi: () -> ConstAst_Const in
recursive
  let vArithIntAst_tyTm: Ast_Expr -> Ast_Type =
    lam __sem_target2579.
      match
        __sem_target2579
      with
        ConstAst_TmConst t1041
      in
      t1041.ty
  let vArithIntAst_tyPat: Ast_Pat -> Ast_Type = lam x561.
      never
  let vArithIntAst_infoTm: Ast_Expr -> Info =
    lam __sem_target2580.
      match
        __sem_target2580
      with
        ConstAst_TmConst r354
      in
      r354.info
  let vArithIntAst_infoTy: Ast_Type -> Info = lam x562.
      never
  let vArithIntAst_infoPat: Ast_Pat -> Info = lam x563.
      never
  let vArithIntAst_withInfo: Info -> Ast_Expr -> Ast_Expr =
    lam info62.
      lam __sem_target2581.
        match
          __sem_target2581
        with
          ConstAst_TmConst t1042
        in
        ConstAst_TmConst
            { t1042 with info = info62 }
  let vArithIntAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr =
    lam ty368: Ast_Type.
      lam __sem_target2582.
        match
          __sem_target2582
        with
          ConstAst_TmConst t1043
        in
        ConstAst_TmConst
            { t1043 with ty = ty368 }
  let vArithIntAst_tyWithInfo: Info -> Ast_Type -> Ast_Type = lam x564.
      never
  let vArithIntAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target2583.
      match
        __sem_target2583
      with
        ty369
      in
      vArithIntAst_rapp_Type_Type vArithIntAst_unwrapType ty369
  let vArithIntAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target2584.
      match
        __sem_target2584
      with
        ty370
      in
      vArithIntAst_rapp_Type_Type vArithIntAst_inspectType ty370
  let vArithIntAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x565.
      never
  let vArithIntAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x566.
      never
  let vArithIntAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f2020.
      lam __sem_target2585.
        match
          __sem_target2585
        with
          p1645
        in
        let res634 =
            vArithIntAst_smapAccumL_Pat_Pat
              (lam #var"717".
                 lam a1195.
                   ({}, f2020 a1195))
              {}
              p1645
          in
          res634.1
  let vArithIntAst_countPatNodes =
    lam count798.
      lam __sem_target2586.
        match
          __sem_target2586
        with
          t1044
        in
        let count799 = addi count798 1 in
          let count800 =
            vArithIntAst_sfold_Pat_Pat vArithIntAst_countPatNodes count799 t1044
          in
          let count801 =
            vArithIntAst_sfold_Pat_Expr vArithIntAst_countExprNodes count800 t1044
          in
          let count802 =
            vArithIntAst_sfold_Pat_Type vArithIntAst_countTypeNodes count801 t1044
          in
          count802
  let vArithIntAst_sfold_Pat_Pat: all acc3767. (acc3767 -> Ast_Pat -> acc3767) -> acc3767 -> Ast_Pat -> acc3767 =
    lam f2021.
      lam acc3768.
        lam __sem_target2587.
          match
            __sem_target2587
          with
            p1646
          in
          let res635 =
              vArithIntAst_smapAccumL_Pat_Pat
                (lam acc3769.
                   lam a1196.
                     (f2021 acc3769 a1196, a1196))
                acc3768
                p1646
            in
            res635.0
  let vArithIntAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f2022.
      lam __sem_target2588.
        match
          __sem_target2588
        with
          p1647
        in
        match
            vArithIntAst_smapAccumL_Expr_Pat
              (lam #var"718".
                 lam a1197.
                   ({}, f2022 a1197))
              {}
              p1647
          with
            (_, p1648)
          in
          p1648
  let vArithIntAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f2023.
      lam __sem_target2589.
        match
          __sem_target2589
        with
          p1649
        in
        match
            vArithIntAst_smapAccumL_Pat_Expr
              (lam #var"719".
                 lam a1198.
                   ({}, f2023 a1198))
              {}
              p1649
          with
            (_, p1650)
          in
          p1650
  let vArithIntAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f2024.
      lam __sem_target2590.
        match
          __sem_target2590
        with
          p1651
        in
        match
            vArithIntAst_smapAccumL_Pat_Type
              (lam #var"720".
                 lam a1199.
                   ({}, f2024 a1199))
              {}
              p1651
          with
            (_, p1652)
          in
          p1652
  let vArithIntAst_countExprNodes =
    lam count803.
      lam __sem_target2591.
        match
          __sem_target2591
        with
          t1045
        in
        let count804 = addi count803 1 in
          let count805 =
            vArithIntAst_sfold_Expr_Expr vArithIntAst_countExprNodes count804 t1045
          in
          let count806 =
            vArithIntAst_sfold_Expr_Type vArithIntAst_countTypeNodes count805 t1045
          in
          let count807 =
            vArithIntAst_sfold_Expr_TypeLabel vArithIntAst_countTypeNodes count806 t1045
          in
          let count808 =
            vArithIntAst_sfold_Expr_Pat vArithIntAst_countPatNodes count807 t1045
          in
          count808
  let vArithIntAst_countTypeNodes =
    lam count809.
      lam __sem_target2592.
        match
          __sem_target2592
        with
          t1046
        in
        let count810 = addi count809 1 in
          let count811 =
            vArithIntAst_sfold_Type_Type vArithIntAst_countTypeNodes count810 t1046
          in
          count811
  let vArithIntAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f2025.
      lam __sem_target2593.
        match
          __sem_target2593
        with
          ty371
        in
        let res636 =
            vArithIntAst_rappAccumL_Type_Type
              (lam #var"721".
                 lam t1047.
                   ({}, f2025 t1047))
              {}
              ty371
          in
          res636.1
  let vArithIntAst_sfold_Expr_Pat: all acc3770. (acc3770 -> Ast_Pat -> acc3770) -> acc3770 -> Ast_Expr -> acc3770 =
    lam f2026.
      lam acc3771.
        lam __sem_target2594.
          match
            __sem_target2594
          with
            p1653
          in
          match
              vArithIntAst_smapAccumL_Expr_Pat
                (lam acc3772.
                   lam a1200.
                     (f2026 acc3772 a1200, a1200))
                acc3771
                p1653
            with
              (acc3773, _)
            in
            acc3773
  let vArithIntAst_sfold_Pat_Expr: all acc3774. (acc3774 -> Ast_Expr -> acc3774) -> acc3774 -> Ast_Pat -> acc3774 =
    lam f2027.
      lam acc3775.
        lam __sem_target2595.
          match
            __sem_target2595
          with
            p1654
          in
          match
              vArithIntAst_smapAccumL_Pat_Expr
                (lam acc3776.
                   lam a1201.
                     (f2027 acc3776 a1201, a1201))
                acc3775
                p1654
            with
              (acc3777, _)
            in
            acc3777
  let vArithIntAst_sfold_Pat_Type: all acc3778. (acc3778 -> Ast_Type -> acc3778) -> acc3778 -> Ast_Pat -> acc3778 =
    lam f2028.
      lam acc3779.
        lam __sem_target2596.
          match
            __sem_target2596
          with
            p1655
          in
          match
              vArithIntAst_smapAccumL_Pat_Type
                (lam acc3780.
                   lam a1202.
                     (f2028 acc3780 a1202, a1202))
                acc3779
                p1655
            with
              (acc3781, _)
            in
            acc3781
  let vArithIntAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f2029.
      lam __sem_target2597.
        match
          __sem_target2597
        with
          p1656
        in
        let res637 =
            vArithIntAst_smapAccumL_Expr_Expr
              (lam #var"722".
                 lam a1203.
                   ({}, f2029 a1203))
              {}
              p1656
          in
          res637.1
  let vArithIntAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f2030.
      lam __sem_target2598.
        match
          __sem_target2598
        with
          p1657
        in
        let res638 =
            vArithIntAst_smapAccumL_Expr_Type
              (lam #var"723".
                 lam a1204.
                   ({}, f2030 a1204))
              {}
              p1657
          in
          res638.1
  let vArithIntAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f2031: Ast_Type -> Ast_Type.
      lam __sem_target2599.
        match
          __sem_target2599
        with
          s316
        in
        match
            vArithIntAst_smapAccumL_Kind_Type
              (lam #var"724".
                 lam x567.
                   ({}, f2031 x567))
              {}
              s316
          with
            (_, s317)
          in
          s317
  let vArithIntAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f2032.
      lam __sem_target2600.
        match
          __sem_target2600
        with
          p1658
        in
        let res639 =
            vArithIntAst_smapAccumL_Type_Type
              (lam #var"725".
                 lam a1205.
                   ({}, f2032 a1205))
              {}
              p1658
          in
          res639.1
  let vArithIntAst_sfold_Expr_Expr: all acc3782. (acc3782 -> Ast_Expr -> acc3782) -> acc3782 -> Ast_Expr -> acc3782 =
    lam f2033.
      lam acc3783.
        lam __sem_target2601.
          match
            __sem_target2601
          with
            p1659
          in
          let res640 =
              vArithIntAst_smapAccumL_Expr_Expr
                (lam acc3784.
                   lam a1206.
                     (f2033 acc3784 a1206, a1206))
                acc3783
                p1659
            in
            res640.0
  let vArithIntAst_sfold_Expr_Type: all acc3785. (acc3785 -> Ast_Type -> acc3785) -> acc3785 -> Ast_Expr -> acc3785 =
    lam f2034.
      lam acc3786.
        lam __sem_target2602.
          match
            __sem_target2602
          with
            p1660
          in
          let res641 =
              vArithIntAst_smapAccumL_Expr_Type
                (lam acc3787.
                   lam a1207.
                     (f2034 acc3787 a1207, a1207))
                acc3786
                p1660
            in
            res641.0
  let vArithIntAst_sfold_Kind_Type: all acc3788. (acc3788 -> Ast_Type -> acc3788) -> acc3788 -> Ast_Kind -> acc3788 =
    lam f2035: acc3788 -> Ast_Type -> acc3788.
      lam acc3789: acc3788.
        lam __sem_target2603.
          match
            __sem_target2603
          with
            s318
          in
          match
              vArithIntAst_smapAccumL_Kind_Type
                (lam a1208.
                   lam x568.
                     (f2035 a1208 x568, x568))
                acc3789
                s318
            with
              (a1209, _)
            in
            a1209
  let vArithIntAst_sfold_Type_Type: all acc3790. (acc3790 -> Ast_Type -> acc3790) -> acc3790 -> Ast_Type -> acc3790 =
    lam f2036.
      lam acc3791.
        lam __sem_target2604.
          match
            __sem_target2604
          with
            p1661
          in
          let res642 =
              vArithIntAst_smapAccumL_Type_Type
                (lam acc3792.
                   lam a1210.
                     (f2036 acc3792 a1210, a1210))
                acc3791
                p1661
            in
            res642.0
  let vArithIntAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f2037.
      lam __sem_target2605.
        match
          __sem_target2605
        with
          expr513
        in
        let expr514 = f2037 expr513 in
          vArithIntAst_smap_Expr_Expr (vArithIntAst_mapPre_Expr_Expr f2037) expr514
  let vArithIntAst_foldPre_Expr_Expr: all acc3793. (acc3793 -> Ast_Expr -> acc3793) -> acc3793 -> Ast_Expr -> acc3793 =
    lam f2038.
      lam acc3794.
        lam __sem_target2606.
          match
            __sem_target2606
          with
            expr515
          in
          let acc3795 = f2038 acc3794 expr515 in
            vArithIntAst_sfold_Expr_Expr (vArithIntAst_foldPre_Expr_Expr f2038) acc3795 expr515
  let vArithIntAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f2039.
      lam __sem_target2607.
        match
          __sem_target2607
        with
          expr516
        in
        f2039
            (vArithIntAst_smap_Expr_Expr (vArithIntAst_mapPost_Expr_Expr f2039) expr516)
  let vArithIntAst_foldPost_Expr_Expr: all acc3796. (acc3796 -> Ast_Expr -> acc3796) -> acc3796 -> Ast_Expr -> acc3796 =
    lam f2040.
      lam acc3797.
        lam __sem_target2608.
          match
            __sem_target2608
          with
            expr517
          in
          f2040
              (vArithIntAst_sfold_Expr_Expr (vArithIntAst_foldPost_Expr_Expr f2040) acc3797 expr517)
              expr517
  let vArithIntAst_smapAccumL_Pat_Pat: all acc3798. (acc3798 -> Ast_Pat -> (acc3798, Ast_Pat)) -> acc3798 -> Ast_Pat -> (acc3798, Ast_Pat) =
    lam f2041.
      lam acc3799.
        lam __sem_target2609.
          match
            __sem_target2609
          with
            p1662
          in
          (acc3799, p1662)
  let vArithIntAst_smapAccumL_Expr_Pat: all acc3800. (acc3800 -> Ast_Pat -> (acc3800, Ast_Pat)) -> acc3800 -> Ast_Expr -> (acc3800, Ast_Expr) =
    lam f2042.
      lam acc3801.
        lam __sem_target2610.
          match
            __sem_target2610
          with
            p1663
          in
          (acc3801, p1663)
  let vArithIntAst_smapAccumL_Pat_Expr: all acc3802. (acc3802 -> Ast_Expr -> (acc3802, Ast_Expr)) -> acc3802 -> Ast_Pat -> (acc3802, Ast_Pat) =
    lam f2043.
      lam acc3803.
        lam __sem_target2611.
          match
            __sem_target2611
          with
            p1664
          in
          (acc3803, p1664)
  let vArithIntAst_smapAccumL_Pat_Type: all acc3804. (acc3804 -> Ast_Type -> (acc3804, Ast_Type)) -> acc3804 -> Ast_Pat -> (acc3804, Ast_Pat) =
    lam f2044.
      lam acc3805.
        lam __sem_target2612.
          match
            __sem_target2612
          with
            p1665
          in
          (acc3805, p1665)
  let vArithIntAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f2045.
      lam __sem_target2613.
        match
          __sem_target2613
        with
          p1666
        in
        let res643 =
            vArithIntAst_smapAccumL_Expr_TypeLabel
              (lam #var"726".
                 lam a1211.
                   ({}, f2045 a1211))
              {}
              p1666
          in
          res643.1
  let vArithIntAst_rappAccumL_Type_Type: all acc3806. (acc3806 -> Ast_Type -> (acc3806, Ast_Type)) -> acc3806 -> Ast_Type -> (acc3806, Ast_Type) =
    lam f2046.
      lam acc3807.
        lam __sem_target2614.
          match
            __sem_target2614
          with
            ty372
          in
          (acc3807, ty372)
  let vArithIntAst_sfold_Expr_TypeLabel: all acc3808. (acc3808 -> Ast_Type -> acc3808) -> acc3808 -> Ast_Expr -> acc3808 =
    lam f2047.
      lam acc3809.
        lam __sem_target2615.
          match
            __sem_target2615
          with
            p1667
          in
          let res644 =
              vArithIntAst_smapAccumL_Expr_TypeLabel
                (lam acc3810.
                   lam a1212.
                     (f2047 acc3810 a1212, a1212))
                acc3809
                p1667
            in
            res644.0
  let vArithIntAst_smapAccumL_Expr_Expr: all acc3811. (acc3811 -> Ast_Expr -> (acc3811, Ast_Expr)) -> acc3811 -> Ast_Expr -> (acc3811, Ast_Expr) =
    lam f2048.
      lam acc3812.
        lam __sem_target2616.
          match
            __sem_target2616
          with
            p1668
          in
          (acc3812, p1668)
  let vArithIntAst_smapAccumL_Expr_Type: all acc3813. (acc3813 -> Ast_Type -> (acc3813, Ast_Type)) -> acc3813 -> Ast_Expr -> (acc3813, Ast_Expr) =
    lam f2049.
      lam acc3814.
        lam __sem_target2617.
          match
            __sem_target2617
          with
            p1669
          in
          (acc3814, p1669)
  let vArithIntAst_smapAccumL_Kind_Type: all acc3815. (acc3815 -> Ast_Type -> (acc3815, Ast_Type)) -> acc3815 -> Ast_Kind -> (acc3815, Ast_Kind) =
    lam f2050.
      lam acc3816.
        lam __sem_target2618.
          match
            __sem_target2618
          with
            s319
          in
          (acc3816, s319)
  let vArithIntAst_smapAccumL_Type_Type: all acc3817. (acc3817 -> Ast_Type -> (acc3817, Ast_Type)) -> acc3817 -> Ast_Type -> (acc3817, Ast_Type) =
    lam f2051.
      lam acc3818.
        lam __sem_target2619.
          match
            __sem_target2619
          with
            p1670
          in
          (acc3818, p1670)
  let vArithIntAst_mapAccumLPre_Expr_Expr: all acc3819. (acc3819 -> Ast_Expr -> (acc3819, Ast_Expr)) -> acc3819 -> Ast_Expr -> (acc3819, Ast_Expr) =
    lam f2052.
      lam acc3820.
        lam __sem_target2620.
          match
            __sem_target2620
          with
            expr518
          in
          match
              f2052 acc3820 expr518
            with
              (acc3821, expr519)
            in
            vArithIntAst_smapAccumL_Expr_Expr (vArithIntAst_mapAccumLPre_Expr_Expr f2052) acc3821 expr519
  let vArithIntAst_mapAccumLPost_Expr_Expr: all acc3822. (acc3822 -> Ast_Expr -> (acc3822, Ast_Expr)) -> acc3822 -> Ast_Expr -> (acc3822, Ast_Expr) =
    lam f2053.
      lam acc3823.
        lam __sem_target2621.
          match
            __sem_target2621
          with
            expr520
          in
          match
              vArithIntAst_smapAccumL_Expr_Expr
                (vArithIntAst_mapAccumLPost_Expr_Expr f2053) acc3823 expr520
            with
              (acc3824, expr521)
            in
            f2053 acc3824 expr521
  let vArithIntAst_smapAccumL_Expr_TypeLabel: all acc3825. (acc3825 -> Ast_Type -> (acc3825, Ast_Type)) -> acc3825 -> Ast_Expr -> (acc3825, Ast_Expr) =
    lam f2054.
      lam acc3826.
        lam __sem_target2622.
          match
            __sem_target2622
          with
            p1671
          in
          match
              f2054 acc3826 (vArithIntAst_tyTm p1671)
            with
              (acc3827, ty373)
            in
            (acc3827, vArithIntAst_withType ty373 p1671)
in
con ShiftIntAst_CSrli: () -> ConstAst_Const in
con ShiftIntAst_CSrai: () -> ConstAst_Const in
con ShiftIntAst_CSlli: () -> ConstAst_Const in
recursive
  let vShiftIntAst_tyTm: Ast_Expr -> Ast_Type =
    lam __sem_target2535.
      match
        __sem_target2535
      with
        ConstAst_TmConst t1034
      in
      t1034.ty
  let vShiftIntAst_tyPat: Ast_Pat -> Ast_Type = lam x553.
      never
  let vShiftIntAst_infoTm: Ast_Expr -> Info =
    lam __sem_target2536.
      match
        __sem_target2536
      with
        ConstAst_TmConst r353
      in
      r353.info
  let vShiftIntAst_infoTy: Ast_Type -> Info = lam x554.
      never
  let vShiftIntAst_infoPat: Ast_Pat -> Info = lam x555.
      never
  let vShiftIntAst_withInfo: Info -> Ast_Expr -> Ast_Expr =
    lam info61.
      lam __sem_target2537.
        match
          __sem_target2537
        with
          ConstAst_TmConst t1035
        in
        ConstAst_TmConst
            { t1035 with info = info61 }
  let vShiftIntAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr =
    lam ty362: Ast_Type.
      lam __sem_target2538.
        match
          __sem_target2538
        with
          ConstAst_TmConst t1036
        in
        ConstAst_TmConst
            { t1036 with ty = ty362 }
  let vShiftIntAst_tyWithInfo: Info -> Ast_Type -> Ast_Type = lam x556.
      never
  let vShiftIntAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target2539.
      match
        __sem_target2539
      with
        ty363
      in
      vShiftIntAst_rapp_Type_Type vShiftIntAst_unwrapType ty363
  let vShiftIntAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target2540.
      match
        __sem_target2540
      with
        ty364
      in
      vShiftIntAst_rapp_Type_Type vShiftIntAst_inspectType ty364
  let vShiftIntAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x557.
      never
  let vShiftIntAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x558.
      never
  let vShiftIntAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f1985.
      lam __sem_target2541.
        match
          __sem_target2541
        with
          p1618
        in
        let res623 =
            vShiftIntAst_smapAccumL_Pat_Pat
              (lam #var"707".
                 lam a1177.
                   ({}, f1985 a1177))
              {}
              p1618
          in
          res623.1
  let vShiftIntAst_countPatNodes =
    lam count784.
      lam __sem_target2542.
        match
          __sem_target2542
        with
          t1037
        in
        let count785 = addi count784 1 in
          let count786 =
            vShiftIntAst_sfold_Pat_Pat vShiftIntAst_countPatNodes count785 t1037
          in
          let count787 =
            vShiftIntAst_sfold_Pat_Expr vShiftIntAst_countExprNodes count786 t1037
          in
          let count788 =
            vShiftIntAst_sfold_Pat_Type vShiftIntAst_countTypeNodes count787 t1037
          in
          count788
  let vShiftIntAst_sfold_Pat_Pat: all acc3706. (acc3706 -> Ast_Pat -> acc3706) -> acc3706 -> Ast_Pat -> acc3706 =
    lam f1986.
      lam acc3707.
        lam __sem_target2543.
          match
            __sem_target2543
          with
            p1619
          in
          let res624 =
              vShiftIntAst_smapAccumL_Pat_Pat
                (lam acc3708.
                   lam a1178.
                     (f1986 acc3708 a1178, a1178))
                acc3707
                p1619
            in
            res624.0
  let vShiftIntAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f1987.
      lam __sem_target2544.
        match
          __sem_target2544
        with
          p1620
        in
        match
            vShiftIntAst_smapAccumL_Expr_Pat
              (lam #var"708".
                 lam a1179.
                   ({}, f1987 a1179))
              {}
              p1620
          with
            (_, p1621)
          in
          p1621
  let vShiftIntAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f1988.
      lam __sem_target2545.
        match
          __sem_target2545
        with
          p1622
        in
        match
            vShiftIntAst_smapAccumL_Pat_Expr
              (lam #var"709".
                 lam a1180.
                   ({}, f1988 a1180))
              {}
              p1622
          with
            (_, p1623)
          in
          p1623
  let vShiftIntAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f1989.
      lam __sem_target2546.
        match
          __sem_target2546
        with
          p1624
        in
        match
            vShiftIntAst_smapAccumL_Pat_Type
              (lam #var"710".
                 lam a1181.
                   ({}, f1989 a1181))
              {}
              p1624
          with
            (_, p1625)
          in
          p1625
  let vShiftIntAst_countExprNodes =
    lam count789.
      lam __sem_target2547.
        match
          __sem_target2547
        with
          t1038
        in
        let count790 = addi count789 1 in
          let count791 =
            vShiftIntAst_sfold_Expr_Expr vShiftIntAst_countExprNodes count790 t1038
          in
          let count792 =
            vShiftIntAst_sfold_Expr_Type vShiftIntAst_countTypeNodes count791 t1038
          in
          let count793 =
            vShiftIntAst_sfold_Expr_TypeLabel vShiftIntAst_countTypeNodes count792 t1038
          in
          let count794 =
            vShiftIntAst_sfold_Expr_Pat vShiftIntAst_countPatNodes count793 t1038
          in
          count794
  let vShiftIntAst_countTypeNodes =
    lam count795.
      lam __sem_target2548.
        match
          __sem_target2548
        with
          t1039
        in
        let count796 = addi count795 1 in
          let count797 =
            vShiftIntAst_sfold_Type_Type vShiftIntAst_countTypeNodes count796 t1039
          in
          count797
  let vShiftIntAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f1990.
      lam __sem_target2549.
        match
          __sem_target2549
        with
          ty365
        in
        let res625 =
            vShiftIntAst_rappAccumL_Type_Type
              (lam #var"711".
                 lam t1040.
                   ({}, f1990 t1040))
              {}
              ty365
          in
          res625.1
  let vShiftIntAst_sfold_Expr_Pat: all acc3709. (acc3709 -> Ast_Pat -> acc3709) -> acc3709 -> Ast_Expr -> acc3709 =
    lam f1991.
      lam acc3710.
        lam __sem_target2550.
          match
            __sem_target2550
          with
            p1626
          in
          match
              vShiftIntAst_smapAccumL_Expr_Pat
                (lam acc3711.
                   lam a1182.
                     (f1991 acc3711 a1182, a1182))
                acc3710
                p1626
            with
              (acc3712, _)
            in
            acc3712
  let vShiftIntAst_sfold_Pat_Expr: all acc3713. (acc3713 -> Ast_Expr -> acc3713) -> acc3713 -> Ast_Pat -> acc3713 =
    lam f1992.
      lam acc3714.
        lam __sem_target2551.
          match
            __sem_target2551
          with
            p1627
          in
          match
              vShiftIntAst_smapAccumL_Pat_Expr
                (lam acc3715.
                   lam a1183.
                     (f1992 acc3715 a1183, a1183))
                acc3714
                p1627
            with
              (acc3716, _)
            in
            acc3716
  let vShiftIntAst_sfold_Pat_Type: all acc3717. (acc3717 -> Ast_Type -> acc3717) -> acc3717 -> Ast_Pat -> acc3717 =
    lam f1993.
      lam acc3718.
        lam __sem_target2552.
          match
            __sem_target2552
          with
            p1628
          in
          match
              vShiftIntAst_smapAccumL_Pat_Type
                (lam acc3719.
                   lam a1184.
                     (f1993 acc3719 a1184, a1184))
                acc3718
                p1628
            with
              (acc3720, _)
            in
            acc3720
  let vShiftIntAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1994.
      lam __sem_target2553.
        match
          __sem_target2553
        with
          p1629
        in
        let res626 =
            vShiftIntAst_smapAccumL_Expr_Expr
              (lam #var"712".
                 lam a1185.
                   ({}, f1994 a1185))
              {}
              p1629
          in
          res626.1
  let vShiftIntAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f1995.
      lam __sem_target2554.
        match
          __sem_target2554
        with
          p1630
        in
        let res627 =
            vShiftIntAst_smapAccumL_Expr_Type
              (lam #var"713".
                 lam a1186.
                   ({}, f1995 a1186))
              {}
              p1630
          in
          res627.1
  let vShiftIntAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f1996: Ast_Type -> Ast_Type.
      lam __sem_target2555.
        match
          __sem_target2555
        with
          s312
        in
        match
            vShiftIntAst_smapAccumL_Kind_Type
              (lam #var"714".
                 lam x559.
                   ({}, f1996 x559))
              {}
              s312
          with
            (_, s313)
          in
          s313
  let vShiftIntAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f1997.
      lam __sem_target2556.
        match
          __sem_target2556
        with
          p1631
        in
        let res628 =
            vShiftIntAst_smapAccumL_Type_Type
              (lam #var"715".
                 lam a1187.
                   ({}, f1997 a1187))
              {}
              p1631
          in
          res628.1
  let vShiftIntAst_sfold_Expr_Expr: all acc3721. (acc3721 -> Ast_Expr -> acc3721) -> acc3721 -> Ast_Expr -> acc3721 =
    lam f1998.
      lam acc3722.
        lam __sem_target2557.
          match
            __sem_target2557
          with
            p1632
          in
          let res629 =
              vShiftIntAst_smapAccumL_Expr_Expr
                (lam acc3723.
                   lam a1188.
                     (f1998 acc3723 a1188, a1188))
                acc3722
                p1632
            in
            res629.0
  let vShiftIntAst_sfold_Expr_Type: all acc3724. (acc3724 -> Ast_Type -> acc3724) -> acc3724 -> Ast_Expr -> acc3724 =
    lam f1999.
      lam acc3725.
        lam __sem_target2558.
          match
            __sem_target2558
          with
            p1633
          in
          let res630 =
              vShiftIntAst_smapAccumL_Expr_Type
                (lam acc3726.
                   lam a1189.
                     (f1999 acc3726 a1189, a1189))
                acc3725
                p1633
            in
            res630.0
  let vShiftIntAst_sfold_Kind_Type: all acc3727. (acc3727 -> Ast_Type -> acc3727) -> acc3727 -> Ast_Kind -> acc3727 =
    lam f2000: acc3727 -> Ast_Type -> acc3727.
      lam acc3728: acc3727.
        lam __sem_target2559.
          match
            __sem_target2559
          with
            s314
          in
          match
              vShiftIntAst_smapAccumL_Kind_Type
                (lam a1190.
                   lam x560.
                     (f2000 a1190 x560, x560))
                acc3728
                s314
            with
              (a1191, _)
            in
            a1191
  let vShiftIntAst_sfold_Type_Type: all acc3729. (acc3729 -> Ast_Type -> acc3729) -> acc3729 -> Ast_Type -> acc3729 =
    lam f2001.
      lam acc3730.
        lam __sem_target2560.
          match
            __sem_target2560
          with
            p1634
          in
          let res631 =
              vShiftIntAst_smapAccumL_Type_Type
                (lam acc3731.
                   lam a1192.
                     (f2001 acc3731 a1192, a1192))
                acc3730
                p1634
            in
            res631.0
  let vShiftIntAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f2002.
      lam __sem_target2561.
        match
          __sem_target2561
        with
          expr504
        in
        let expr505 = f2002 expr504 in
          vShiftIntAst_smap_Expr_Expr (vShiftIntAst_mapPre_Expr_Expr f2002) expr505
  let vShiftIntAst_foldPre_Expr_Expr: all acc3732. (acc3732 -> Ast_Expr -> acc3732) -> acc3732 -> Ast_Expr -> acc3732 =
    lam f2003.
      lam acc3733.
        lam __sem_target2562.
          match
            __sem_target2562
          with
            expr506
          in
          let acc3734 = f2003 acc3733 expr506 in
            vShiftIntAst_sfold_Expr_Expr (vShiftIntAst_foldPre_Expr_Expr f2003) acc3734 expr506
  let vShiftIntAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f2004.
      lam __sem_target2563.
        match
          __sem_target2563
        with
          expr507
        in
        f2004
            (vShiftIntAst_smap_Expr_Expr (vShiftIntAst_mapPost_Expr_Expr f2004) expr507)
  let vShiftIntAst_foldPost_Expr_Expr: all acc3735. (acc3735 -> Ast_Expr -> acc3735) -> acc3735 -> Ast_Expr -> acc3735 =
    lam f2005.
      lam acc3736.
        lam __sem_target2564.
          match
            __sem_target2564
          with
            expr508
          in
          f2005
              (vShiftIntAst_sfold_Expr_Expr (vShiftIntAst_foldPost_Expr_Expr f2005) acc3736 expr508)
              expr508
  let vShiftIntAst_smapAccumL_Pat_Pat: all acc3737. (acc3737 -> Ast_Pat -> (acc3737, Ast_Pat)) -> acc3737 -> Ast_Pat -> (acc3737, Ast_Pat) =
    lam f2006.
      lam acc3738.
        lam __sem_target2565.
          match
            __sem_target2565
          with
            p1635
          in
          (acc3738, p1635)
  let vShiftIntAst_smapAccumL_Expr_Pat: all acc3739. (acc3739 -> Ast_Pat -> (acc3739, Ast_Pat)) -> acc3739 -> Ast_Expr -> (acc3739, Ast_Expr) =
    lam f2007.
      lam acc3740.
        lam __sem_target2566.
          match
            __sem_target2566
          with
            p1636
          in
          (acc3740, p1636)
  let vShiftIntAst_smapAccumL_Pat_Expr: all acc3741. (acc3741 -> Ast_Expr -> (acc3741, Ast_Expr)) -> acc3741 -> Ast_Pat -> (acc3741, Ast_Pat) =
    lam f2008.
      lam acc3742.
        lam __sem_target2567.
          match
            __sem_target2567
          with
            p1637
          in
          (acc3742, p1637)
  let vShiftIntAst_smapAccumL_Pat_Type: all acc3743. (acc3743 -> Ast_Type -> (acc3743, Ast_Type)) -> acc3743 -> Ast_Pat -> (acc3743, Ast_Pat) =
    lam f2009.
      lam acc3744.
        lam __sem_target2568.
          match
            __sem_target2568
          with
            p1638
          in
          (acc3744, p1638)
  let vShiftIntAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f2010.
      lam __sem_target2569.
        match
          __sem_target2569
        with
          p1639
        in
        let res632 =
            vShiftIntAst_smapAccumL_Expr_TypeLabel
              (lam #var"716".
                 lam a1193.
                   ({}, f2010 a1193))
              {}
              p1639
          in
          res632.1
  let vShiftIntAst_rappAccumL_Type_Type: all acc3745. (acc3745 -> Ast_Type -> (acc3745, Ast_Type)) -> acc3745 -> Ast_Type -> (acc3745, Ast_Type) =
    lam f2011.
      lam acc3746.
        lam __sem_target2570.
          match
            __sem_target2570
          with
            ty366
          in
          (acc3746, ty366)
  let vShiftIntAst_sfold_Expr_TypeLabel: all acc3747. (acc3747 -> Ast_Type -> acc3747) -> acc3747 -> Ast_Expr -> acc3747 =
    lam f2012.
      lam acc3748.
        lam __sem_target2571.
          match
            __sem_target2571
          with
            p1640
          in
          let res633 =
              vShiftIntAst_smapAccumL_Expr_TypeLabel
                (lam acc3749.
                   lam a1194.
                     (f2012 acc3749 a1194, a1194))
                acc3748
                p1640
            in
            res633.0
  let vShiftIntAst_smapAccumL_Expr_Expr: all acc3750. (acc3750 -> Ast_Expr -> (acc3750, Ast_Expr)) -> acc3750 -> Ast_Expr -> (acc3750, Ast_Expr) =
    lam f2013.
      lam acc3751.
        lam __sem_target2572.
          match
            __sem_target2572
          with
            p1641
          in
          (acc3751, p1641)
  let vShiftIntAst_smapAccumL_Expr_Type: all acc3752. (acc3752 -> Ast_Type -> (acc3752, Ast_Type)) -> acc3752 -> Ast_Expr -> (acc3752, Ast_Expr) =
    lam f2014.
      lam acc3753.
        lam __sem_target2573.
          match
            __sem_target2573
          with
            p1642
          in
          (acc3753, p1642)
  let vShiftIntAst_smapAccumL_Kind_Type: all acc3754. (acc3754 -> Ast_Type -> (acc3754, Ast_Type)) -> acc3754 -> Ast_Kind -> (acc3754, Ast_Kind) =
    lam f2015.
      lam acc3755.
        lam __sem_target2574.
          match
            __sem_target2574
          with
            s315
          in
          (acc3755, s315)
  let vShiftIntAst_smapAccumL_Type_Type: all acc3756. (acc3756 -> Ast_Type -> (acc3756, Ast_Type)) -> acc3756 -> Ast_Type -> (acc3756, Ast_Type) =
    lam f2016.
      lam acc3757.
        lam __sem_target2575.
          match
            __sem_target2575
          with
            p1643
          in
          (acc3757, p1643)
  let vShiftIntAst_mapAccumLPre_Expr_Expr: all acc3758. (acc3758 -> Ast_Expr -> (acc3758, Ast_Expr)) -> acc3758 -> Ast_Expr -> (acc3758, Ast_Expr) =
    lam f2017.
      lam acc3759.
        lam __sem_target2576.
          match
            __sem_target2576
          with
            expr509
          in
          match
              f2017 acc3759 expr509
            with
              (acc3760, expr510)
            in
            vShiftIntAst_smapAccumL_Expr_Expr (vShiftIntAst_mapAccumLPre_Expr_Expr f2017) acc3760 expr510
  let vShiftIntAst_mapAccumLPost_Expr_Expr: all acc3761. (acc3761 -> Ast_Expr -> (acc3761, Ast_Expr)) -> acc3761 -> Ast_Expr -> (acc3761, Ast_Expr) =
    lam f2018.
      lam acc3762.
        lam __sem_target2577.
          match
            __sem_target2577
          with
            expr511
          in
          match
              vShiftIntAst_smapAccumL_Expr_Expr
                (vShiftIntAst_mapAccumLPost_Expr_Expr f2018) acc3762 expr511
            with
              (acc3763, expr512)
            in
            f2018 acc3763 expr512
  let vShiftIntAst_smapAccumL_Expr_TypeLabel: all acc3764. (acc3764 -> Ast_Type -> (acc3764, Ast_Type)) -> acc3764 -> Ast_Expr -> (acc3764, Ast_Expr) =
    lam f2019.
      lam acc3765.
        lam __sem_target2578.
          match
            __sem_target2578
          with
            p1644
          in
          match
              f2019 acc3765 (vShiftIntAst_tyTm p1644)
            with
              (acc3766, ty367)
            in
            (acc3766, vShiftIntAst_withType ty367 p1644)
in
con FloatAst_CFloat: {val: Float} -> ConstAst_Const in
recursive
  let vFloatAst_tyTm: Ast_Expr -> Ast_Type =
    lam __sem_target2491.
      match
        __sem_target2491
      with
        ConstAst_TmConst t1027
      in
      t1027.ty
  let vFloatAst_tyPat: Ast_Pat -> Ast_Type = lam x545.
      never
  let vFloatAst_infoTm: Ast_Expr -> Info =
    lam __sem_target2492.
      match
        __sem_target2492
      with
        ConstAst_TmConst r352
      in
      r352.info
  let vFloatAst_infoTy: Ast_Type -> Info = lam x546.
      never
  let vFloatAst_infoPat: Ast_Pat -> Info = lam x547.
      never
  let vFloatAst_withInfo: Info -> Ast_Expr -> Ast_Expr =
    lam info60.
      lam __sem_target2493.
        match
          __sem_target2493
        with
          ConstAst_TmConst t1028
        in
        ConstAst_TmConst
            { t1028 with info = info60 }
  let vFloatAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr =
    lam ty356: Ast_Type.
      lam __sem_target2494.
        match
          __sem_target2494
        with
          ConstAst_TmConst t1029
        in
        ConstAst_TmConst
            { t1029 with ty = ty356 }
  let vFloatAst_tyWithInfo: Info -> Ast_Type -> Ast_Type = lam x548.
      never
  let vFloatAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target2495.
      match
        __sem_target2495
      with
        ty357
      in
      vFloatAst_rapp_Type_Type vFloatAst_unwrapType ty357
  let vFloatAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target2496.
      match
        __sem_target2496
      with
        ty358
      in
      vFloatAst_rapp_Type_Type vFloatAst_inspectType ty358
  let vFloatAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x549.
      never
  let vFloatAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x550.
      never
  let vFloatAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f1950.
      lam __sem_target2497.
        match
          __sem_target2497
        with
          p1591
        in
        let res612 =
            vFloatAst_smapAccumL_Pat_Pat
              (lam #var"697".
                 lam a1159.
                   ({}, f1950 a1159))
              {}
              p1591
          in
          res612.1
  let vFloatAst_countPatNodes =
    lam count770.
      lam __sem_target2498.
        match
          __sem_target2498
        with
          t1030
        in
        let count771 = addi count770 1 in
          let count772 =
            vFloatAst_sfold_Pat_Pat vFloatAst_countPatNodes count771 t1030
          in
          let count773 =
            vFloatAst_sfold_Pat_Expr vFloatAst_countExprNodes count772 t1030
          in
          let count774 =
            vFloatAst_sfold_Pat_Type vFloatAst_countTypeNodes count773 t1030
          in
          count774
  let vFloatAst_sfold_Pat_Pat: all acc3645. (acc3645 -> Ast_Pat -> acc3645) -> acc3645 -> Ast_Pat -> acc3645 =
    lam f1951.
      lam acc3646.
        lam __sem_target2499.
          match
            __sem_target2499
          with
            p1592
          in
          let res613 =
              vFloatAst_smapAccumL_Pat_Pat
                (lam acc3647.
                   lam a1160.
                     (f1951 acc3647 a1160, a1160))
                acc3646
                p1592
            in
            res613.0
  let vFloatAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f1952.
      lam __sem_target2500.
        match
          __sem_target2500
        with
          p1593
        in
        match
            vFloatAst_smapAccumL_Expr_Pat
              (lam #var"698".
                 lam a1161.
                   ({}, f1952 a1161))
              {}
              p1593
          with
            (_, p1594)
          in
          p1594
  let vFloatAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f1953.
      lam __sem_target2501.
        match
          __sem_target2501
        with
          p1595
        in
        match
            vFloatAst_smapAccumL_Pat_Expr
              (lam #var"699".
                 lam a1162.
                   ({}, f1953 a1162))
              {}
              p1595
          with
            (_, p1596)
          in
          p1596
  let vFloatAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f1954.
      lam __sem_target2502.
        match
          __sem_target2502
        with
          p1597
        in
        match
            vFloatAst_smapAccumL_Pat_Type
              (lam #var"700".
                 lam a1163.
                   ({}, f1954 a1163))
              {}
              p1597
          with
            (_, p1598)
          in
          p1598
  let vFloatAst_countExprNodes =
    lam count775.
      lam __sem_target2503.
        match
          __sem_target2503
        with
          t1031
        in
        let count776 = addi count775 1 in
          let count777 =
            vFloatAst_sfold_Expr_Expr vFloatAst_countExprNodes count776 t1031
          in
          let count778 =
            vFloatAst_sfold_Expr_Type vFloatAst_countTypeNodes count777 t1031
          in
          let count779 =
            vFloatAst_sfold_Expr_TypeLabel vFloatAst_countTypeNodes count778 t1031
          in
          let count780 =
            vFloatAst_sfold_Expr_Pat vFloatAst_countPatNodes count779 t1031
          in
          count780
  let vFloatAst_countTypeNodes =
    lam count781.
      lam __sem_target2504.
        match
          __sem_target2504
        with
          t1032
        in
        let count782 = addi count781 1 in
          let count783 =
            vFloatAst_sfold_Type_Type vFloatAst_countTypeNodes count782 t1032
          in
          count783
  let vFloatAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f1955.
      lam __sem_target2505.
        match
          __sem_target2505
        with
          ty359
        in
        let res614 =
            vFloatAst_rappAccumL_Type_Type
              (lam #var"701".
                 lam t1033.
                   ({}, f1955 t1033))
              {}
              ty359
          in
          res614.1
  let vFloatAst_sfold_Expr_Pat: all acc3648. (acc3648 -> Ast_Pat -> acc3648) -> acc3648 -> Ast_Expr -> acc3648 =
    lam f1956.
      lam acc3649.
        lam __sem_target2506.
          match
            __sem_target2506
          with
            p1599
          in
          match
              vFloatAst_smapAccumL_Expr_Pat
                (lam acc3650.
                   lam a1164.
                     (f1956 acc3650 a1164, a1164))
                acc3649
                p1599
            with
              (acc3651, _)
            in
            acc3651
  let vFloatAst_sfold_Pat_Expr: all acc3652. (acc3652 -> Ast_Expr -> acc3652) -> acc3652 -> Ast_Pat -> acc3652 =
    lam f1957.
      lam acc3653.
        lam __sem_target2507.
          match
            __sem_target2507
          with
            p1600
          in
          match
              vFloatAst_smapAccumL_Pat_Expr
                (lam acc3654.
                   lam a1165.
                     (f1957 acc3654 a1165, a1165))
                acc3653
                p1600
            with
              (acc3655, _)
            in
            acc3655
  let vFloatAst_sfold_Pat_Type: all acc3656. (acc3656 -> Ast_Type -> acc3656) -> acc3656 -> Ast_Pat -> acc3656 =
    lam f1958.
      lam acc3657.
        lam __sem_target2508.
          match
            __sem_target2508
          with
            p1601
          in
          match
              vFloatAst_smapAccumL_Pat_Type
                (lam acc3658.
                   lam a1166.
                     (f1958 acc3658 a1166, a1166))
                acc3657
                p1601
            with
              (acc3659, _)
            in
            acc3659
  let vFloatAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1959.
      lam __sem_target2509.
        match
          __sem_target2509
        with
          p1602
        in
        let res615 =
            vFloatAst_smapAccumL_Expr_Expr
              (lam #var"702".
                 lam a1167.
                   ({}, f1959 a1167))
              {}
              p1602
          in
          res615.1
  let vFloatAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f1960.
      lam __sem_target2510.
        match
          __sem_target2510
        with
          p1603
        in
        let res616 =
            vFloatAst_smapAccumL_Expr_Type
              (lam #var"703".
                 lam a1168.
                   ({}, f1960 a1168))
              {}
              p1603
          in
          res616.1
  let vFloatAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f1961: Ast_Type -> Ast_Type.
      lam __sem_target2511.
        match
          __sem_target2511
        with
          s308
        in
        match
            vFloatAst_smapAccumL_Kind_Type
              (lam #var"704".
                 lam x551.
                   ({}, f1961 x551))
              {}
              s308
          with
            (_, s309)
          in
          s309
  let vFloatAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f1962.
      lam __sem_target2512.
        match
          __sem_target2512
        with
          p1604
        in
        let res617 =
            vFloatAst_smapAccumL_Type_Type
              (lam #var"705".
                 lam a1169.
                   ({}, f1962 a1169))
              {}
              p1604
          in
          res617.1
  let vFloatAst_sfold_Expr_Expr: all acc3660. (acc3660 -> Ast_Expr -> acc3660) -> acc3660 -> Ast_Expr -> acc3660 =
    lam f1963.
      lam acc3661.
        lam __sem_target2513.
          match
            __sem_target2513
          with
            p1605
          in
          let res618 =
              vFloatAst_smapAccumL_Expr_Expr
                (lam acc3662.
                   lam a1170.
                     (f1963 acc3662 a1170, a1170))
                acc3661
                p1605
            in
            res618.0
  let vFloatAst_sfold_Expr_Type: all acc3663. (acc3663 -> Ast_Type -> acc3663) -> acc3663 -> Ast_Expr -> acc3663 =
    lam f1964.
      lam acc3664.
        lam __sem_target2514.
          match
            __sem_target2514
          with
            p1606
          in
          let res619 =
              vFloatAst_smapAccumL_Expr_Type
                (lam acc3665.
                   lam a1171.
                     (f1964 acc3665 a1171, a1171))
                acc3664
                p1606
            in
            res619.0
  let vFloatAst_sfold_Kind_Type: all acc3666. (acc3666 -> Ast_Type -> acc3666) -> acc3666 -> Ast_Kind -> acc3666 =
    lam f1965: acc3666 -> Ast_Type -> acc3666.
      lam acc3667: acc3666.
        lam __sem_target2515.
          match
            __sem_target2515
          with
            s310
          in
          match
              vFloatAst_smapAccumL_Kind_Type
                (lam a1172.
                   lam x552.
                     (f1965 a1172 x552, x552))
                acc3667
                s310
            with
              (a1173, _)
            in
            a1173
  let vFloatAst_sfold_Type_Type: all acc3668. (acc3668 -> Ast_Type -> acc3668) -> acc3668 -> Ast_Type -> acc3668 =
    lam f1966.
      lam acc3669.
        lam __sem_target2516.
          match
            __sem_target2516
          with
            p1607
          in
          let res620 =
              vFloatAst_smapAccumL_Type_Type
                (lam acc3670.
                   lam a1174.
                     (f1966 acc3670 a1174, a1174))
                acc3669
                p1607
            in
            res620.0
  let vFloatAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1967.
      lam __sem_target2517.
        match
          __sem_target2517
        with
          expr495
        in
        let expr496 = f1967 expr495 in
          vFloatAst_smap_Expr_Expr (vFloatAst_mapPre_Expr_Expr f1967) expr496
  let vFloatAst_foldPre_Expr_Expr: all acc3671. (acc3671 -> Ast_Expr -> acc3671) -> acc3671 -> Ast_Expr -> acc3671 =
    lam f1968.
      lam acc3672.
        lam __sem_target2518.
          match
            __sem_target2518
          with
            expr497
          in
          let acc3673 = f1968 acc3672 expr497 in
            vFloatAst_sfold_Expr_Expr (vFloatAst_foldPre_Expr_Expr f1968) acc3673 expr497
  let vFloatAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1969.
      lam __sem_target2519.
        match
          __sem_target2519
        with
          expr498
        in
        f1969
            (vFloatAst_smap_Expr_Expr (vFloatAst_mapPost_Expr_Expr f1969) expr498)
  let vFloatAst_foldPost_Expr_Expr: all acc3674. (acc3674 -> Ast_Expr -> acc3674) -> acc3674 -> Ast_Expr -> acc3674 =
    lam f1970.
      lam acc3675.
        lam __sem_target2520.
          match
            __sem_target2520
          with
            expr499
          in
          f1970
              (vFloatAst_sfold_Expr_Expr (vFloatAst_foldPost_Expr_Expr f1970) acc3675 expr499)
              expr499
  let vFloatAst_smapAccumL_Pat_Pat: all acc3676. (acc3676 -> Ast_Pat -> (acc3676, Ast_Pat)) -> acc3676 -> Ast_Pat -> (acc3676, Ast_Pat) =
    lam f1971.
      lam acc3677.
        lam __sem_target2521.
          match
            __sem_target2521
          with
            p1608
          in
          (acc3677, p1608)
  let vFloatAst_smapAccumL_Expr_Pat: all acc3678. (acc3678 -> Ast_Pat -> (acc3678, Ast_Pat)) -> acc3678 -> Ast_Expr -> (acc3678, Ast_Expr) =
    lam f1972.
      lam acc3679.
        lam __sem_target2522.
          match
            __sem_target2522
          with
            p1609
          in
          (acc3679, p1609)
  let vFloatAst_smapAccumL_Pat_Expr: all acc3680. (acc3680 -> Ast_Expr -> (acc3680, Ast_Expr)) -> acc3680 -> Ast_Pat -> (acc3680, Ast_Pat) =
    lam f1973.
      lam acc3681.
        lam __sem_target2523.
          match
            __sem_target2523
          with
            p1610
          in
          (acc3681, p1610)
  let vFloatAst_smapAccumL_Pat_Type: all acc3682. (acc3682 -> Ast_Type -> (acc3682, Ast_Type)) -> acc3682 -> Ast_Pat -> (acc3682, Ast_Pat) =
    lam f1974.
      lam acc3683.
        lam __sem_target2524.
          match
            __sem_target2524
          with
            p1611
          in
          (acc3683, p1611)
  let vFloatAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f1975.
      lam __sem_target2525.
        match
          __sem_target2525
        with
          p1612
        in
        let res621 =
            vFloatAst_smapAccumL_Expr_TypeLabel
              (lam #var"706".
                 lam a1175.
                   ({}, f1975 a1175))
              {}
              p1612
          in
          res621.1
  let vFloatAst_rappAccumL_Type_Type: all acc3684. (acc3684 -> Ast_Type -> (acc3684, Ast_Type)) -> acc3684 -> Ast_Type -> (acc3684, Ast_Type) =
    lam f1976.
      lam acc3685.
        lam __sem_target2526.
          match
            __sem_target2526
          with
            ty360
          in
          (acc3685, ty360)
  let vFloatAst_sfold_Expr_TypeLabel: all acc3686. (acc3686 -> Ast_Type -> acc3686) -> acc3686 -> Ast_Expr -> acc3686 =
    lam f1977.
      lam acc3687.
        lam __sem_target2527.
          match
            __sem_target2527
          with
            p1613
          in
          let res622 =
              vFloatAst_smapAccumL_Expr_TypeLabel
                (lam acc3688.
                   lam a1176.
                     (f1977 acc3688 a1176, a1176))
                acc3687
                p1613
            in
            res622.0
  let vFloatAst_smapAccumL_Expr_Expr: all acc3689. (acc3689 -> Ast_Expr -> (acc3689, Ast_Expr)) -> acc3689 -> Ast_Expr -> (acc3689, Ast_Expr) =
    lam f1978.
      lam acc3690.
        lam __sem_target2528.
          match
            __sem_target2528
          with
            p1614
          in
          (acc3690, p1614)
  let vFloatAst_smapAccumL_Expr_Type: all acc3691. (acc3691 -> Ast_Type -> (acc3691, Ast_Type)) -> acc3691 -> Ast_Expr -> (acc3691, Ast_Expr) =
    lam f1979.
      lam acc3692.
        lam __sem_target2529.
          match
            __sem_target2529
          with
            p1615
          in
          (acc3692, p1615)
  let vFloatAst_smapAccumL_Kind_Type: all acc3693. (acc3693 -> Ast_Type -> (acc3693, Ast_Type)) -> acc3693 -> Ast_Kind -> (acc3693, Ast_Kind) =
    lam f1980.
      lam acc3694.
        lam __sem_target2530.
          match
            __sem_target2530
          with
            s311
          in
          (acc3694, s311)
  let vFloatAst_smapAccumL_Type_Type: all acc3695. (acc3695 -> Ast_Type -> (acc3695, Ast_Type)) -> acc3695 -> Ast_Type -> (acc3695, Ast_Type) =
    lam f1981.
      lam acc3696.
        lam __sem_target2531.
          match
            __sem_target2531
          with
            p1616
          in
          (acc3696, p1616)
  let vFloatAst_mapAccumLPre_Expr_Expr: all acc3697. (acc3697 -> Ast_Expr -> (acc3697, Ast_Expr)) -> acc3697 -> Ast_Expr -> (acc3697, Ast_Expr) =
    lam f1982.
      lam acc3698.
        lam __sem_target2532.
          match
            __sem_target2532
          with
            expr500
          in
          match
              f1982 acc3698 expr500
            with
              (acc3699, expr501)
            in
            vFloatAst_smapAccumL_Expr_Expr (vFloatAst_mapAccumLPre_Expr_Expr f1982) acc3699 expr501
  let vFloatAst_mapAccumLPost_Expr_Expr: all acc3700. (acc3700 -> Ast_Expr -> (acc3700, Ast_Expr)) -> acc3700 -> Ast_Expr -> (acc3700, Ast_Expr) =
    lam f1983.
      lam acc3701.
        lam __sem_target2533.
          match
            __sem_target2533
          with
            expr502
          in
          match
              vFloatAst_smapAccumL_Expr_Expr (vFloatAst_mapAccumLPost_Expr_Expr f1983) acc3701 expr502
            with
              (acc3702, expr503)
            in
            f1983 acc3702 expr503
  let vFloatAst_smapAccumL_Expr_TypeLabel: all acc3703. (acc3703 -> Ast_Type -> (acc3703, Ast_Type)) -> acc3703 -> Ast_Expr -> (acc3703, Ast_Expr) =
    lam f1984.
      lam acc3704.
        lam __sem_target2534.
          match
            __sem_target2534
          with
            p1617
          in
          match
              f1984 acc3704 (vFloatAst_tyTm p1617)
            with
              (acc3705, ty361)
            in
            (acc3705, vFloatAst_withType ty361 p1617)
in
con ArithFloatAst_CSubf: () -> ConstAst_Const in
con ArithFloatAst_CNegf: () -> ConstAst_Const in
con ArithFloatAst_CMulf: () -> ConstAst_Const in
con ArithFloatAst_CDivf: () -> ConstAst_Const in
con ArithFloatAst_CAddf: () -> ConstAst_Const in
recursive
  let vArithFloatAst_tyTm: Ast_Expr -> Ast_Type =
    lam __sem_target2447.
      match
        __sem_target2447
      with
        ConstAst_TmConst t1020
      in
      t1020.ty
  let vArithFloatAst_tyPat: Ast_Pat -> Ast_Type = lam x537.
      never
  let vArithFloatAst_infoTm: Ast_Expr -> Info =
    lam __sem_target2448.
      match
        __sem_target2448
      with
        ConstAst_TmConst r351
      in
      r351.info
  let vArithFloatAst_infoTy: Ast_Type -> Info = lam x538.
      never
  let vArithFloatAst_infoPat: Ast_Pat -> Info = lam x539.
      never
  let vArithFloatAst_withInfo: Info -> Ast_Expr -> Ast_Expr =
    lam info59.
      lam __sem_target2449.
        match
          __sem_target2449
        with
          ConstAst_TmConst t1021
        in
        ConstAst_TmConst
            { t1021 with info = info59 }
  let vArithFloatAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr =
    lam ty350: Ast_Type.
      lam __sem_target2450.
        match
          __sem_target2450
        with
          ConstAst_TmConst t1022
        in
        ConstAst_TmConst
            { t1022 with ty = ty350 }
  let vArithFloatAst_tyWithInfo: Info -> Ast_Type -> Ast_Type = lam x540.
      never
  let vArithFloatAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target2451.
      match
        __sem_target2451
      with
        ty351
      in
      vArithFloatAst_rapp_Type_Type vArithFloatAst_unwrapType ty351
  let vArithFloatAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target2452.
      match
        __sem_target2452
      with
        ty352
      in
      vArithFloatAst_rapp_Type_Type vArithFloatAst_inspectType ty352
  let vArithFloatAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x541.
      never
  let vArithFloatAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x542.
      never
  let vArithFloatAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f1915.
      lam __sem_target2453.
        match
          __sem_target2453
        with
          p1564
        in
        let res601 =
            vArithFloatAst_smapAccumL_Pat_Pat
              (lam #var"687".
                 lam a1141.
                   ({}, f1915 a1141))
              {}
              p1564
          in
          res601.1
  let vArithFloatAst_countPatNodes =
    lam count756.
      lam __sem_target2454.
        match
          __sem_target2454
        with
          t1023
        in
        let count757 = addi count756 1 in
          let count758 =
            vArithFloatAst_sfold_Pat_Pat vArithFloatAst_countPatNodes count757 t1023
          in
          let count759 =
            vArithFloatAst_sfold_Pat_Expr vArithFloatAst_countExprNodes count758 t1023
          in
          let count760 =
            vArithFloatAst_sfold_Pat_Type vArithFloatAst_countTypeNodes count759 t1023
          in
          count760
  let vArithFloatAst_sfold_Pat_Pat: all acc3584. (acc3584 -> Ast_Pat -> acc3584) -> acc3584 -> Ast_Pat -> acc3584 =
    lam f1916.
      lam acc3585.
        lam __sem_target2455.
          match
            __sem_target2455
          with
            p1565
          in
          let res602 =
              vArithFloatAst_smapAccumL_Pat_Pat
                (lam acc3586.
                   lam a1142.
                     (f1916 acc3586 a1142, a1142))
                acc3585
                p1565
            in
            res602.0
  let vArithFloatAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f1917.
      lam __sem_target2456.
        match
          __sem_target2456
        with
          p1566
        in
        match
            vArithFloatAst_smapAccumL_Expr_Pat
              (lam #var"688".
                 lam a1143.
                   ({}, f1917 a1143))
              {}
              p1566
          with
            (_, p1567)
          in
          p1567
  let vArithFloatAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f1918.
      lam __sem_target2457.
        match
          __sem_target2457
        with
          p1568
        in
        match
            vArithFloatAst_smapAccumL_Pat_Expr
              (lam #var"689".
                 lam a1144.
                   ({}, f1918 a1144))
              {}
              p1568
          with
            (_, p1569)
          in
          p1569
  let vArithFloatAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f1919.
      lam __sem_target2458.
        match
          __sem_target2458
        with
          p1570
        in
        match
            vArithFloatAst_smapAccumL_Pat_Type
              (lam #var"690".
                 lam a1145.
                   ({}, f1919 a1145))
              {}
              p1570
          with
            (_, p1571)
          in
          p1571
  let vArithFloatAst_countExprNodes =
    lam count761.
      lam __sem_target2459.
        match
          __sem_target2459
        with
          t1024
        in
        let count762 = addi count761 1 in
          let count763 =
            vArithFloatAst_sfold_Expr_Expr vArithFloatAst_countExprNodes count762 t1024
          in
          let count764 =
            vArithFloatAst_sfold_Expr_Type vArithFloatAst_countTypeNodes count763 t1024
          in
          let count765 =
            vArithFloatAst_sfold_Expr_TypeLabel vArithFloatAst_countTypeNodes count764 t1024
          in
          let count766 =
            vArithFloatAst_sfold_Expr_Pat vArithFloatAst_countPatNodes count765 t1024
          in
          count766
  let vArithFloatAst_countTypeNodes =
    lam count767.
      lam __sem_target2460.
        match
          __sem_target2460
        with
          t1025
        in
        let count768 = addi count767 1 in
          let count769 =
            vArithFloatAst_sfold_Type_Type vArithFloatAst_countTypeNodes count768 t1025
          in
          count769
  let vArithFloatAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f1920.
      lam __sem_target2461.
        match
          __sem_target2461
        with
          ty353
        in
        let res603 =
            vArithFloatAst_rappAccumL_Type_Type
              (lam #var"691".
                 lam t1026.
                   ({}, f1920 t1026))
              {}
              ty353
          in
          res603.1
  let vArithFloatAst_sfold_Expr_Pat: all acc3587. (acc3587 -> Ast_Pat -> acc3587) -> acc3587 -> Ast_Expr -> acc3587 =
    lam f1921.
      lam acc3588.
        lam __sem_target2462.
          match
            __sem_target2462
          with
            p1572
          in
          match
              vArithFloatAst_smapAccumL_Expr_Pat
                (lam acc3589.
                   lam a1146.
                     (f1921 acc3589 a1146, a1146))
                acc3588
                p1572
            with
              (acc3590, _)
            in
            acc3590
  let vArithFloatAst_sfold_Pat_Expr: all acc3591. (acc3591 -> Ast_Expr -> acc3591) -> acc3591 -> Ast_Pat -> acc3591 =
    lam f1922.
      lam acc3592.
        lam __sem_target2463.
          match
            __sem_target2463
          with
            p1573
          in
          match
              vArithFloatAst_smapAccumL_Pat_Expr
                (lam acc3593.
                   lam a1147.
                     (f1922 acc3593 a1147, a1147))
                acc3592
                p1573
            with
              (acc3594, _)
            in
            acc3594
  let vArithFloatAst_sfold_Pat_Type: all acc3595. (acc3595 -> Ast_Type -> acc3595) -> acc3595 -> Ast_Pat -> acc3595 =
    lam f1923.
      lam acc3596.
        lam __sem_target2464.
          match
            __sem_target2464
          with
            p1574
          in
          match
              vArithFloatAst_smapAccumL_Pat_Type
                (lam acc3597.
                   lam a1148.
                     (f1923 acc3597 a1148, a1148))
                acc3596
                p1574
            with
              (acc3598, _)
            in
            acc3598
  let vArithFloatAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1924.
      lam __sem_target2465.
        match
          __sem_target2465
        with
          p1575
        in
        let res604 =
            vArithFloatAst_smapAccumL_Expr_Expr
              (lam #var"692".
                 lam a1149.
                   ({}, f1924 a1149))
              {}
              p1575
          in
          res604.1
  let vArithFloatAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f1925.
      lam __sem_target2466.
        match
          __sem_target2466
        with
          p1576
        in
        let res605 =
            vArithFloatAst_smapAccumL_Expr_Type
              (lam #var"693".
                 lam a1150.
                   ({}, f1925 a1150))
              {}
              p1576
          in
          res605.1
  let vArithFloatAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f1926: Ast_Type -> Ast_Type.
      lam __sem_target2467.
        match
          __sem_target2467
        with
          s304
        in
        match
            vArithFloatAst_smapAccumL_Kind_Type
              (lam #var"694".
                 lam x543.
                   ({}, f1926 x543))
              {}
              s304
          with
            (_, s305)
          in
          s305
  let vArithFloatAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f1927.
      lam __sem_target2468.
        match
          __sem_target2468
        with
          p1577
        in
        let res606 =
            vArithFloatAst_smapAccumL_Type_Type
              (lam #var"695".
                 lam a1151.
                   ({}, f1927 a1151))
              {}
              p1577
          in
          res606.1
  let vArithFloatAst_sfold_Expr_Expr: all acc3599. (acc3599 -> Ast_Expr -> acc3599) -> acc3599 -> Ast_Expr -> acc3599 =
    lam f1928.
      lam acc3600.
        lam __sem_target2469.
          match
            __sem_target2469
          with
            p1578
          in
          let res607 =
              vArithFloatAst_smapAccumL_Expr_Expr
                (lam acc3601.
                   lam a1152.
                     (f1928 acc3601 a1152, a1152))
                acc3600
                p1578
            in
            res607.0
  let vArithFloatAst_sfold_Expr_Type: all acc3602. (acc3602 -> Ast_Type -> acc3602) -> acc3602 -> Ast_Expr -> acc3602 =
    lam f1929.
      lam acc3603.
        lam __sem_target2470.
          match
            __sem_target2470
          with
            p1579
          in
          let res608 =
              vArithFloatAst_smapAccumL_Expr_Type
                (lam acc3604.
                   lam a1153.
                     (f1929 acc3604 a1153, a1153))
                acc3603
                p1579
            in
            res608.0
  let vArithFloatAst_sfold_Kind_Type: all acc3605. (acc3605 -> Ast_Type -> acc3605) -> acc3605 -> Ast_Kind -> acc3605 =
    lam f1930: acc3605 -> Ast_Type -> acc3605.
      lam acc3606: acc3605.
        lam __sem_target2471.
          match
            __sem_target2471
          with
            s306
          in
          match
              vArithFloatAst_smapAccumL_Kind_Type
                (lam a1154.
                   lam x544.
                     (f1930 a1154 x544, x544))
                acc3606
                s306
            with
              (a1155, _)
            in
            a1155
  let vArithFloatAst_sfold_Type_Type: all acc3607. (acc3607 -> Ast_Type -> acc3607) -> acc3607 -> Ast_Type -> acc3607 =
    lam f1931.
      lam acc3608.
        lam __sem_target2472.
          match
            __sem_target2472
          with
            p1580
          in
          let res609 =
              vArithFloatAst_smapAccumL_Type_Type
                (lam acc3609.
                   lam a1156.
                     (f1931 acc3609 a1156, a1156))
                acc3608
                p1580
            in
            res609.0
  let vArithFloatAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1932.
      lam __sem_target2473.
        match
          __sem_target2473
        with
          expr486
        in
        let expr487 = f1932 expr486 in
          vArithFloatAst_smap_Expr_Expr (vArithFloatAst_mapPre_Expr_Expr f1932) expr487
  let vArithFloatAst_foldPre_Expr_Expr: all acc3610. (acc3610 -> Ast_Expr -> acc3610) -> acc3610 -> Ast_Expr -> acc3610 =
    lam f1933.
      lam acc3611.
        lam __sem_target2474.
          match
            __sem_target2474
          with
            expr488
          in
          let acc3612 = f1933 acc3611 expr488 in
            vArithFloatAst_sfold_Expr_Expr (vArithFloatAst_foldPre_Expr_Expr f1933) acc3612 expr488
  let vArithFloatAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1934.
      lam __sem_target2475.
        match
          __sem_target2475
        with
          expr489
        in
        f1934
            (vArithFloatAst_smap_Expr_Expr (vArithFloatAst_mapPost_Expr_Expr f1934) expr489)
  let vArithFloatAst_foldPost_Expr_Expr: all acc3613. (acc3613 -> Ast_Expr -> acc3613) -> acc3613 -> Ast_Expr -> acc3613 =
    lam f1935.
      lam acc3614.
        lam __sem_target2476.
          match
            __sem_target2476
          with
            expr490
          in
          f1935
              (vArithFloatAst_sfold_Expr_Expr (vArithFloatAst_foldPost_Expr_Expr f1935) acc3614 expr490)
              expr490
  let vArithFloatAst_smapAccumL_Pat_Pat: all acc3615. (acc3615 -> Ast_Pat -> (acc3615, Ast_Pat)) -> acc3615 -> Ast_Pat -> (acc3615, Ast_Pat) =
    lam f1936.
      lam acc3616.
        lam __sem_target2477.
          match
            __sem_target2477
          with
            p1581
          in
          (acc3616, p1581)
  let vArithFloatAst_smapAccumL_Expr_Pat: all acc3617. (acc3617 -> Ast_Pat -> (acc3617, Ast_Pat)) -> acc3617 -> Ast_Expr -> (acc3617, Ast_Expr) =
    lam f1937.
      lam acc3618.
        lam __sem_target2478.
          match
            __sem_target2478
          with
            p1582
          in
          (acc3618, p1582)
  let vArithFloatAst_smapAccumL_Pat_Expr: all acc3619. (acc3619 -> Ast_Expr -> (acc3619, Ast_Expr)) -> acc3619 -> Ast_Pat -> (acc3619, Ast_Pat) =
    lam f1938.
      lam acc3620.
        lam __sem_target2479.
          match
            __sem_target2479
          with
            p1583
          in
          (acc3620, p1583)
  let vArithFloatAst_smapAccumL_Pat_Type: all acc3621. (acc3621 -> Ast_Type -> (acc3621, Ast_Type)) -> acc3621 -> Ast_Pat -> (acc3621, Ast_Pat) =
    lam f1939.
      lam acc3622.
        lam __sem_target2480.
          match
            __sem_target2480
          with
            p1584
          in
          (acc3622, p1584)
  let vArithFloatAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f1940.
      lam __sem_target2481.
        match
          __sem_target2481
        with
          p1585
        in
        let res610 =
            vArithFloatAst_smapAccumL_Expr_TypeLabel
              (lam #var"696".
                 lam a1157.
                   ({}, f1940 a1157))
              {}
              p1585
          in
          res610.1
  let vArithFloatAst_rappAccumL_Type_Type: all acc3623. (acc3623 -> Ast_Type -> (acc3623, Ast_Type)) -> acc3623 -> Ast_Type -> (acc3623, Ast_Type) =
    lam f1941.
      lam acc3624.
        lam __sem_target2482.
          match
            __sem_target2482
          with
            ty354
          in
          (acc3624, ty354)
  let vArithFloatAst_sfold_Expr_TypeLabel: all acc3625. (acc3625 -> Ast_Type -> acc3625) -> acc3625 -> Ast_Expr -> acc3625 =
    lam f1942.
      lam acc3626.
        lam __sem_target2483.
          match
            __sem_target2483
          with
            p1586
          in
          let res611 =
              vArithFloatAst_smapAccumL_Expr_TypeLabel
                (lam acc3627.
                   lam a1158.
                     (f1942 acc3627 a1158, a1158))
                acc3626
                p1586
            in
            res611.0
  let vArithFloatAst_smapAccumL_Expr_Expr: all acc3628. (acc3628 -> Ast_Expr -> (acc3628, Ast_Expr)) -> acc3628 -> Ast_Expr -> (acc3628, Ast_Expr) =
    lam f1943.
      lam acc3629.
        lam __sem_target2484.
          match
            __sem_target2484
          with
            p1587
          in
          (acc3629, p1587)
  let vArithFloatAst_smapAccumL_Expr_Type: all acc3630. (acc3630 -> Ast_Type -> (acc3630, Ast_Type)) -> acc3630 -> Ast_Expr -> (acc3630, Ast_Expr) =
    lam f1944.
      lam acc3631.
        lam __sem_target2485.
          match
            __sem_target2485
          with
            p1588
          in
          (acc3631, p1588)
  let vArithFloatAst_smapAccumL_Kind_Type: all acc3632. (acc3632 -> Ast_Type -> (acc3632, Ast_Type)) -> acc3632 -> Ast_Kind -> (acc3632, Ast_Kind) =
    lam f1945.
      lam acc3633.
        lam __sem_target2486.
          match
            __sem_target2486
          with
            s307
          in
          (acc3633, s307)
  let vArithFloatAst_smapAccumL_Type_Type: all acc3634. (acc3634 -> Ast_Type -> (acc3634, Ast_Type)) -> acc3634 -> Ast_Type -> (acc3634, Ast_Type) =
    lam f1946.
      lam acc3635.
        lam __sem_target2487.
          match
            __sem_target2487
          with
            p1589
          in
          (acc3635, p1589)
  let vArithFloatAst_mapAccumLPre_Expr_Expr: all acc3636. (acc3636 -> Ast_Expr -> (acc3636, Ast_Expr)) -> acc3636 -> Ast_Expr -> (acc3636, Ast_Expr) =
    lam f1947.
      lam acc3637.
        lam __sem_target2488.
          match
            __sem_target2488
          with
            expr491
          in
          match
              f1947 acc3637 expr491
            with
              (acc3638, expr492)
            in
            vArithFloatAst_smapAccumL_Expr_Expr
                (vArithFloatAst_mapAccumLPre_Expr_Expr f1947) acc3638 expr492
  let vArithFloatAst_mapAccumLPost_Expr_Expr: all acc3639. (acc3639 -> Ast_Expr -> (acc3639, Ast_Expr)) -> acc3639 -> Ast_Expr -> (acc3639, Ast_Expr) =
    lam f1948.
      lam acc3640.
        lam __sem_target2489.
          match
            __sem_target2489
          with
            expr493
          in
          match
              vArithFloatAst_smapAccumL_Expr_Expr
                (vArithFloatAst_mapAccumLPost_Expr_Expr f1948)
                acc3640
                expr493
            with
              (acc3641, expr494)
            in
            f1948 acc3641 expr494
  let vArithFloatAst_smapAccumL_Expr_TypeLabel: all acc3642. (acc3642 -> Ast_Type -> (acc3642, Ast_Type)) -> acc3642 -> Ast_Expr -> (acc3642, Ast_Expr) =
    lam f1949.
      lam acc3643.
        lam __sem_target2490.
          match
            __sem_target2490
          with
            p1590
          in
          match
              f1949 acc3643 (vArithFloatAst_tyTm p1590)
            with
              (acc3644, ty355)
            in
            (acc3644, vArithFloatAst_withType ty355 p1590)
in
con FloatIntConversionAst_CInt2float: () -> ConstAst_Const in
con FloatIntConversionAst_CRoundfi: () -> ConstAst_Const in
con FloatIntConversionAst_CFloorfi: () -> ConstAst_Const in
con FloatIntConversionAst_CCeilfi: () -> ConstAst_Const in
recursive
  let vFloatIntConversionAst_tyTm: Ast_Expr -> Ast_Type =
    lam __sem_target2403.
      match
        __sem_target2403
      with
        ConstAst_TmConst t1013
      in
      t1013.ty
  let vFloatIntConversionAst_tyPat: Ast_Pat -> Ast_Type = lam x529.
      never
  let vFloatIntConversionAst_infoTm: Ast_Expr -> Info =
    lam __sem_target2404.
      match
        __sem_target2404
      with
        ConstAst_TmConst r350
      in
      r350.info
  let vFloatIntConversionAst_infoTy: Ast_Type -> Info = lam x530.
      never
  let vFloatIntConversionAst_infoPat: Ast_Pat -> Info = lam x531.
      never
  let vFloatIntConversionAst_withInfo: Info -> Ast_Expr -> Ast_Expr =
    lam info58.
      lam __sem_target2405.
        match
          __sem_target2405
        with
          ConstAst_TmConst t1014
        in
        ConstAst_TmConst
            { t1014 with info = info58 }
  let vFloatIntConversionAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr =
    lam ty344: Ast_Type.
      lam __sem_target2406.
        match
          __sem_target2406
        with
          ConstAst_TmConst t1015
        in
        ConstAst_TmConst
            { t1015 with ty = ty344 }
  let vFloatIntConversionAst_tyWithInfo: Info -> Ast_Type -> Ast_Type = lam x532.
      never
  let vFloatIntConversionAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target2407.
      match
        __sem_target2407
      with
        ty345
      in
      vFloatIntConversionAst_rapp_Type_Type vFloatIntConversionAst_unwrapType ty345
  let vFloatIntConversionAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target2408.
      match
        __sem_target2408
      with
        ty346
      in
      vFloatIntConversionAst_rapp_Type_Type vFloatIntConversionAst_inspectType ty346
  let vFloatIntConversionAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x533.
      never
  let vFloatIntConversionAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x534.
      never
  let vFloatIntConversionAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f1880.
      lam __sem_target2409.
        match
          __sem_target2409
        with
          p1537
        in
        let res590 =
            vFloatIntConversionAst_smapAccumL_Pat_Pat
              (lam #var"677".
                 lam a1123.
                   ({}, f1880 a1123))
              {}
              p1537
          in
          res590.1
  let vFloatIntConversionAst_countPatNodes =
    lam count742.
      lam __sem_target2410.
        match
          __sem_target2410
        with
          t1016
        in
        let count743 = addi count742 1 in
          let count744 =
            vFloatIntConversionAst_sfold_Pat_Pat vFloatIntConversionAst_countPatNodes count743 t1016
          in
          let count745 =
            vFloatIntConversionAst_sfold_Pat_Expr vFloatIntConversionAst_countExprNodes count744 t1016
          in
          let count746 =
            vFloatIntConversionAst_sfold_Pat_Type vFloatIntConversionAst_countTypeNodes count745 t1016
          in
          count746
  let vFloatIntConversionAst_sfold_Pat_Pat: all acc3523. (acc3523 -> Ast_Pat -> acc3523) -> acc3523 -> Ast_Pat -> acc3523 =
    lam f1881.
      lam acc3524.
        lam __sem_target2411.
          match
            __sem_target2411
          with
            p1538
          in
          let res591 =
              vFloatIntConversionAst_smapAccumL_Pat_Pat
                (lam acc3525.
                   lam a1124.
                     (f1881 acc3525 a1124, a1124))
                acc3524
                p1538
            in
            res591.0
  let vFloatIntConversionAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f1882.
      lam __sem_target2412.
        match
          __sem_target2412
        with
          p1539
        in
        match
            vFloatIntConversionAst_smapAccumL_Expr_Pat
              (lam #var"678".
                 lam a1125.
                   ({}, f1882 a1125))
              {}
              p1539
          with
            (_, p1540)
          in
          p1540
  let vFloatIntConversionAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f1883.
      lam __sem_target2413.
        match
          __sem_target2413
        with
          p1541
        in
        match
            vFloatIntConversionAst_smapAccumL_Pat_Expr
              (lam #var"679".
                 lam a1126.
                   ({}, f1883 a1126))
              {}
              p1541
          with
            (_, p1542)
          in
          p1542
  let vFloatIntConversionAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f1884.
      lam __sem_target2414.
        match
          __sem_target2414
        with
          p1543
        in
        match
            vFloatIntConversionAst_smapAccumL_Pat_Type
              (lam #var"680".
                 lam a1127.
                   ({}, f1884 a1127))
              {}
              p1543
          with
            (_, p1544)
          in
          p1544
  let vFloatIntConversionAst_countExprNodes =
    lam count747.
      lam __sem_target2415.
        match
          __sem_target2415
        with
          t1017
        in
        let count748 = addi count747 1 in
          let count749 =
            vFloatIntConversionAst_sfold_Expr_Expr vFloatIntConversionAst_countExprNodes count748 t1017
          in
          let count750 =
            vFloatIntConversionAst_sfold_Expr_Type vFloatIntConversionAst_countTypeNodes count749 t1017
          in
          let count751 =
            vFloatIntConversionAst_sfold_Expr_TypeLabel vFloatIntConversionAst_countTypeNodes count750 t1017
          in
          let count752 =
            vFloatIntConversionAst_sfold_Expr_Pat vFloatIntConversionAst_countPatNodes count751 t1017
          in
          count752
  let vFloatIntConversionAst_countTypeNodes =
    lam count753.
      lam __sem_target2416.
        match
          __sem_target2416
        with
          t1018
        in
        let count754 = addi count753 1 in
          let count755 =
            vFloatIntConversionAst_sfold_Type_Type vFloatIntConversionAst_countTypeNodes count754 t1018
          in
          count755
  let vFloatIntConversionAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f1885.
      lam __sem_target2417.
        match
          __sem_target2417
        with
          ty347
        in
        let res592 =
            vFloatIntConversionAst_rappAccumL_Type_Type
              (lam #var"681".
                 lam t1019.
                   ({}, f1885 t1019))
              {}
              ty347
          in
          res592.1
  let vFloatIntConversionAst_sfold_Expr_Pat: all acc3526. (acc3526 -> Ast_Pat -> acc3526) -> acc3526 -> Ast_Expr -> acc3526 =
    lam f1886.
      lam acc3527.
        lam __sem_target2418.
          match
            __sem_target2418
          with
            p1545
          in
          match
              vFloatIntConversionAst_smapAccumL_Expr_Pat
                (lam acc3528.
                   lam a1128.
                     (f1886 acc3528 a1128, a1128))
                acc3527
                p1545
            with
              (acc3529, _)
            in
            acc3529
  let vFloatIntConversionAst_sfold_Pat_Expr: all acc3530. (acc3530 -> Ast_Expr -> acc3530) -> acc3530 -> Ast_Pat -> acc3530 =
    lam f1887.
      lam acc3531.
        lam __sem_target2419.
          match
            __sem_target2419
          with
            p1546
          in
          match
              vFloatIntConversionAst_smapAccumL_Pat_Expr
                (lam acc3532.
                   lam a1129.
                     (f1887 acc3532 a1129, a1129))
                acc3531
                p1546
            with
              (acc3533, _)
            in
            acc3533
  let vFloatIntConversionAst_sfold_Pat_Type: all acc3534. (acc3534 -> Ast_Type -> acc3534) -> acc3534 -> Ast_Pat -> acc3534 =
    lam f1888.
      lam acc3535.
        lam __sem_target2420.
          match
            __sem_target2420
          with
            p1547
          in
          match
              vFloatIntConversionAst_smapAccumL_Pat_Type
                (lam acc3536.
                   lam a1130.
                     (f1888 acc3536 a1130, a1130))
                acc3535
                p1547
            with
              (acc3537, _)
            in
            acc3537
  let vFloatIntConversionAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1889.
      lam __sem_target2421.
        match
          __sem_target2421
        with
          p1548
        in
        let res593 =
            vFloatIntConversionAst_smapAccumL_Expr_Expr
              (lam #var"682".
                 lam a1131.
                   ({}, f1889 a1131))
              {}
              p1548
          in
          res593.1
  let vFloatIntConversionAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f1890.
      lam __sem_target2422.
        match
          __sem_target2422
        with
          p1549
        in
        let res594 =
            vFloatIntConversionAst_smapAccumL_Expr_Type
              (lam #var"683".
                 lam a1132.
                   ({}, f1890 a1132))
              {}
              p1549
          in
          res594.1
  let vFloatIntConversionAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f1891: Ast_Type -> Ast_Type.
      lam __sem_target2423.
        match
          __sem_target2423
        with
          s300
        in
        match
            vFloatIntConversionAst_smapAccumL_Kind_Type
              (lam #var"684".
                 lam x535.
                   ({}, f1891 x535))
              {}
              s300
          with
            (_, s301)
          in
          s301
  let vFloatIntConversionAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f1892.
      lam __sem_target2424.
        match
          __sem_target2424
        with
          p1550
        in
        let res595 =
            vFloatIntConversionAst_smapAccumL_Type_Type
              (lam #var"685".
                 lam a1133.
                   ({}, f1892 a1133))
              {}
              p1550
          in
          res595.1
  let vFloatIntConversionAst_sfold_Expr_Expr: all acc3538. (acc3538 -> Ast_Expr -> acc3538) -> acc3538 -> Ast_Expr -> acc3538 =
    lam f1893.
      lam acc3539.
        lam __sem_target2425.
          match
            __sem_target2425
          with
            p1551
          in
          let res596 =
              vFloatIntConversionAst_smapAccumL_Expr_Expr
                (lam acc3540.
                   lam a1134.
                     (f1893 acc3540 a1134, a1134))
                acc3539
                p1551
            in
            res596.0
  let vFloatIntConversionAst_sfold_Expr_Type: all acc3541. (acc3541 -> Ast_Type -> acc3541) -> acc3541 -> Ast_Expr -> acc3541 =
    lam f1894.
      lam acc3542.
        lam __sem_target2426.
          match
            __sem_target2426
          with
            p1552
          in
          let res597 =
              vFloatIntConversionAst_smapAccumL_Expr_Type
                (lam acc3543.
                   lam a1135.
                     (f1894 acc3543 a1135, a1135))
                acc3542
                p1552
            in
            res597.0
  let vFloatIntConversionAst_sfold_Kind_Type: all acc3544. (acc3544 -> Ast_Type -> acc3544) -> acc3544 -> Ast_Kind -> acc3544 =
    lam f1895: acc3544 -> Ast_Type -> acc3544.
      lam acc3545: acc3544.
        lam __sem_target2427.
          match
            __sem_target2427
          with
            s302
          in
          match
              vFloatIntConversionAst_smapAccumL_Kind_Type
                (lam a1136.
                   lam x536.
                     (f1895 a1136 x536, x536))
                acc3545
                s302
            with
              (a1137, _)
            in
            a1137
  let vFloatIntConversionAst_sfold_Type_Type: all acc3546. (acc3546 -> Ast_Type -> acc3546) -> acc3546 -> Ast_Type -> acc3546 =
    lam f1896.
      lam acc3547.
        lam __sem_target2428.
          match
            __sem_target2428
          with
            p1553
          in
          let res598 =
              vFloatIntConversionAst_smapAccumL_Type_Type
                (lam acc3548.
                   lam a1138.
                     (f1896 acc3548 a1138, a1138))
                acc3547
                p1553
            in
            res598.0
  let vFloatIntConversionAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1897.
      lam __sem_target2429.
        match
          __sem_target2429
        with
          expr477
        in
        let expr478 = f1897 expr477 in
          vFloatIntConversionAst_smap_Expr_Expr (vFloatIntConversionAst_mapPre_Expr_Expr f1897) expr478
  let vFloatIntConversionAst_foldPre_Expr_Expr: all acc3549. (acc3549 -> Ast_Expr -> acc3549) -> acc3549 -> Ast_Expr -> acc3549 =
    lam f1898.
      lam acc3550.
        lam __sem_target2430.
          match
            __sem_target2430
          with
            expr479
          in
          let acc3551 = f1898 acc3550 expr479 in
            vFloatIntConversionAst_sfold_Expr_Expr
              (vFloatIntConversionAst_foldPre_Expr_Expr f1898)
              acc3551
              expr479
  let vFloatIntConversionAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1899.
      lam __sem_target2431.
        match
          __sem_target2431
        with
          expr480
        in
        f1899
            (vFloatIntConversionAst_smap_Expr_Expr (vFloatIntConversionAst_mapPost_Expr_Expr f1899) expr480)
  let vFloatIntConversionAst_foldPost_Expr_Expr: all acc3552. (acc3552 -> Ast_Expr -> acc3552) -> acc3552 -> Ast_Expr -> acc3552 =
    lam f1900.
      lam acc3553.
        lam __sem_target2432.
          match
            __sem_target2432
          with
            expr481
          in
          f1900
              (vFloatIntConversionAst_sfold_Expr_Expr
                 (vFloatIntConversionAst_foldPost_Expr_Expr f1900)
                 acc3553
                 expr481)
              expr481
  let vFloatIntConversionAst_smapAccumL_Pat_Pat: all acc3554. (acc3554 -> Ast_Pat -> (acc3554, Ast_Pat)) -> acc3554 -> Ast_Pat -> (acc3554, Ast_Pat) =
    lam f1901.
      lam acc3555.
        lam __sem_target2433.
          match
            __sem_target2433
          with
            p1554
          in
          (acc3555, p1554)
  let vFloatIntConversionAst_smapAccumL_Expr_Pat: all acc3556. (acc3556 -> Ast_Pat -> (acc3556, Ast_Pat)) -> acc3556 -> Ast_Expr -> (acc3556, Ast_Expr) =
    lam f1902.
      lam acc3557.
        lam __sem_target2434.
          match
            __sem_target2434
          with
            p1555
          in
          (acc3557, p1555)
  let vFloatIntConversionAst_smapAccumL_Pat_Expr: all acc3558. (acc3558 -> Ast_Expr -> (acc3558, Ast_Expr)) -> acc3558 -> Ast_Pat -> (acc3558, Ast_Pat) =
    lam f1903.
      lam acc3559.
        lam __sem_target2435.
          match
            __sem_target2435
          with
            p1556
          in
          (acc3559, p1556)
  let vFloatIntConversionAst_smapAccumL_Pat_Type: all acc3560. (acc3560 -> Ast_Type -> (acc3560, Ast_Type)) -> acc3560 -> Ast_Pat -> (acc3560, Ast_Pat) =
    lam f1904.
      lam acc3561.
        lam __sem_target2436.
          match
            __sem_target2436
          with
            p1557
          in
          (acc3561, p1557)
  let vFloatIntConversionAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f1905.
      lam __sem_target2437.
        match
          __sem_target2437
        with
          p1558
        in
        let res599 =
            vFloatIntConversionAst_smapAccumL_Expr_TypeLabel
              (lam #var"686".
                 lam a1139.
                   ({}, f1905 a1139))
              {}
              p1558
          in
          res599.1
  let vFloatIntConversionAst_rappAccumL_Type_Type: all acc3562. (acc3562 -> Ast_Type -> (acc3562, Ast_Type)) -> acc3562 -> Ast_Type -> (acc3562, Ast_Type) =
    lam f1906.
      lam acc3563.
        lam __sem_target2438.
          match
            __sem_target2438
          with
            ty348
          in
          (acc3563, ty348)
  let vFloatIntConversionAst_sfold_Expr_TypeLabel: all acc3564. (acc3564 -> Ast_Type -> acc3564) -> acc3564 -> Ast_Expr -> acc3564 =
    lam f1907.
      lam acc3565.
        lam __sem_target2439.
          match
            __sem_target2439
          with
            p1559
          in
          let res600 =
              vFloatIntConversionAst_smapAccumL_Expr_TypeLabel
                (lam acc3566.
                   lam a1140.
                     (f1907 acc3566 a1140, a1140))
                acc3565
                p1559
            in
            res600.0
  let vFloatIntConversionAst_smapAccumL_Expr_Expr: all acc3567. (acc3567 -> Ast_Expr -> (acc3567, Ast_Expr)) -> acc3567 -> Ast_Expr -> (acc3567, Ast_Expr) =
    lam f1908.
      lam acc3568.
        lam __sem_target2440.
          match
            __sem_target2440
          with
            p1560
          in
          (acc3568, p1560)
  let vFloatIntConversionAst_smapAccumL_Expr_Type: all acc3569. (acc3569 -> Ast_Type -> (acc3569, Ast_Type)) -> acc3569 -> Ast_Expr -> (acc3569, Ast_Expr) =
    lam f1909.
      lam acc3570.
        lam __sem_target2441.
          match
            __sem_target2441
          with
            p1561
          in
          (acc3570, p1561)
  let vFloatIntConversionAst_smapAccumL_Kind_Type: all acc3571. (acc3571 -> Ast_Type -> (acc3571, Ast_Type)) -> acc3571 -> Ast_Kind -> (acc3571, Ast_Kind) =
    lam f1910.
      lam acc3572.
        lam __sem_target2442.
          match
            __sem_target2442
          with
            s303
          in
          (acc3572, s303)
  let vFloatIntConversionAst_smapAccumL_Type_Type: all acc3573. (acc3573 -> Ast_Type -> (acc3573, Ast_Type)) -> acc3573 -> Ast_Type -> (acc3573, Ast_Type) =
    lam f1911.
      lam acc3574.
        lam __sem_target2443.
          match
            __sem_target2443
          with
            p1562
          in
          (acc3574, p1562)
  let vFloatIntConversionAst_mapAccumLPre_Expr_Expr: all acc3575. (acc3575 -> Ast_Expr -> (acc3575, Ast_Expr)) -> acc3575 -> Ast_Expr -> (acc3575, Ast_Expr) =
    lam f1912.
      lam acc3576.
        lam __sem_target2444.
          match
            __sem_target2444
          with
            expr482
          in
          match
              f1912 acc3576 expr482
            with
              (acc3577, expr483)
            in
            vFloatIntConversionAst_smapAccumL_Expr_Expr
                (vFloatIntConversionAst_mapAccumLPre_Expr_Expr f1912)
                acc3577
                expr483
  let vFloatIntConversionAst_mapAccumLPost_Expr_Expr: all acc3578. (acc3578 -> Ast_Expr -> (acc3578, Ast_Expr)) -> acc3578 -> Ast_Expr -> (acc3578, Ast_Expr) =
    lam f1913.
      lam acc3579.
        lam __sem_target2445.
          match
            __sem_target2445
          with
            expr484
          in
          match
              vFloatIntConversionAst_smapAccumL_Expr_Expr
                (vFloatIntConversionAst_mapAccumLPost_Expr_Expr f1913)
                acc3579
                expr484
            with
              (acc3580, expr485)
            in
            f1913 acc3580 expr485
  let vFloatIntConversionAst_smapAccumL_Expr_TypeLabel: all acc3581. (acc3581 -> Ast_Type -> (acc3581, Ast_Type)) -> acc3581 -> Ast_Expr -> (acc3581, Ast_Expr) =
    lam f1914.
      lam acc3582.
        lam __sem_target2446.
          match
            __sem_target2446
          with
            p1563
          in
          match
              f1914 acc3582 (vFloatIntConversionAst_tyTm p1563)
            with
              (acc3583, ty349)
            in
            (acc3583, vFloatIntConversionAst_withType ty349 p1563)
in
con BoolAst_CBool: {val: Bool} -> ConstAst_Const in
recursive
  let vBoolAst_tyTm: Ast_Expr -> Ast_Type =
    lam __sem_target2359.
      match
        __sem_target2359
      with
        ConstAst_TmConst t1006
      in
      t1006.ty
  let vBoolAst_tyPat: Ast_Pat -> Ast_Type = lam x521.
      never
  let vBoolAst_infoTm: Ast_Expr -> Info =
    lam __sem_target2360.
      match
        __sem_target2360
      with
        ConstAst_TmConst r349
      in
      r349.info
  let vBoolAst_infoTy: Ast_Type -> Info = lam x522.
      never
  let vBoolAst_infoPat: Ast_Pat -> Info = lam x523.
      never
  let vBoolAst_withInfo: Info -> Ast_Expr -> Ast_Expr =
    lam info57.
      lam __sem_target2361.
        match
          __sem_target2361
        with
          ConstAst_TmConst t1007
        in
        ConstAst_TmConst
            { t1007 with info = info57 }
  let vBoolAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr =
    lam ty338: Ast_Type.
      lam __sem_target2362.
        match
          __sem_target2362
        with
          ConstAst_TmConst t1008
        in
        ConstAst_TmConst
            { t1008 with ty = ty338 }
  let vBoolAst_tyWithInfo: Info -> Ast_Type -> Ast_Type = lam x524.
      never
  let vBoolAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target2363.
      match
        __sem_target2363
      with
        ty339
      in
      vBoolAst_rapp_Type_Type vBoolAst_unwrapType ty339
  let vBoolAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target2364.
      match
        __sem_target2364
      with
        ty340
      in
      vBoolAst_rapp_Type_Type vBoolAst_inspectType ty340
  let vBoolAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x525.
      never
  let vBoolAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x526.
      never
  let vBoolAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f1845.
      lam __sem_target2365.
        match
          __sem_target2365
        with
          p1510
        in
        let res579 =
            vBoolAst_smapAccumL_Pat_Pat
              (lam #var"667".
                 lam a1105.
                   ({}, f1845 a1105))
              {}
              p1510
          in
          res579.1
  let vBoolAst_countPatNodes =
    lam count728.
      lam __sem_target2366.
        match
          __sem_target2366
        with
          t1009
        in
        let count729 = addi count728 1 in
          let count730 = vBoolAst_sfold_Pat_Pat vBoolAst_countPatNodes count729 t1009
          in
          let count731 =
            vBoolAst_sfold_Pat_Expr vBoolAst_countExprNodes count730 t1009
          in
          let count732 =
            vBoolAst_sfold_Pat_Type vBoolAst_countTypeNodes count731 t1009
          in
          count732
  let vBoolAst_sfold_Pat_Pat: all acc3462. (acc3462 -> Ast_Pat -> acc3462) -> acc3462 -> Ast_Pat -> acc3462 =
    lam f1846.
      lam acc3463.
        lam __sem_target2367.
          match
            __sem_target2367
          with
            p1511
          in
          let res580 =
              vBoolAst_smapAccumL_Pat_Pat
                (lam acc3464.
                   lam a1106.
                     (f1846 acc3464 a1106, a1106))
                acc3463
                p1511
            in
            res580.0
  let vBoolAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f1847.
      lam __sem_target2368.
        match
          __sem_target2368
        with
          p1512
        in
        match
            vBoolAst_smapAccumL_Expr_Pat
              (lam #var"668".
                 lam a1107.
                   ({}, f1847 a1107))
              {}
              p1512
          with
            (_, p1513)
          in
          p1513
  let vBoolAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f1848.
      lam __sem_target2369.
        match
          __sem_target2369
        with
          p1514
        in
        match
            vBoolAst_smapAccumL_Pat_Expr
              (lam #var"669".
                 lam a1108.
                   ({}, f1848 a1108))
              {}
              p1514
          with
            (_, p1515)
          in
          p1515
  let vBoolAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f1849.
      lam __sem_target2370.
        match
          __sem_target2370
        with
          p1516
        in
        match
            vBoolAst_smapAccumL_Pat_Type
              (lam #var"670".
                 lam a1109.
                   ({}, f1849 a1109))
              {}
              p1516
          with
            (_, p1517)
          in
          p1517
  let vBoolAst_countExprNodes =
    lam count733.
      lam __sem_target2371.
        match
          __sem_target2371
        with
          t1010
        in
        let count734 = addi count733 1 in
          let count735 =
            vBoolAst_sfold_Expr_Expr vBoolAst_countExprNodes count734 t1010
          in
          let count736 =
            vBoolAst_sfold_Expr_Type vBoolAst_countTypeNodes count735 t1010
          in
          let count737 =
            vBoolAst_sfold_Expr_TypeLabel vBoolAst_countTypeNodes count736 t1010
          in
          let count738 =
            vBoolAst_sfold_Expr_Pat vBoolAst_countPatNodes count737 t1010
          in
          count738
  let vBoolAst_countTypeNodes =
    lam count739.
      lam __sem_target2372.
        match
          __sem_target2372
        with
          t1011
        in
        let count740 = addi count739 1 in
          let count741 =
            vBoolAst_sfold_Type_Type vBoolAst_countTypeNodes count740 t1011
          in
          count741
  let vBoolAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f1850.
      lam __sem_target2373.
        match
          __sem_target2373
        with
          ty341
        in
        let res581 =
            vBoolAst_rappAccumL_Type_Type
              (lam #var"671".
                 lam t1012.
                   ({}, f1850 t1012))
              {}
              ty341
          in
          res581.1
  let vBoolAst_sfold_Expr_Pat: all acc3465. (acc3465 -> Ast_Pat -> acc3465) -> acc3465 -> Ast_Expr -> acc3465 =
    lam f1851.
      lam acc3466.
        lam __sem_target2374.
          match
            __sem_target2374
          with
            p1518
          in
          match
              vBoolAst_smapAccumL_Expr_Pat
                (lam acc3467.
                   lam a1110.
                     (f1851 acc3467 a1110, a1110))
                acc3466
                p1518
            with
              (acc3468, _)
            in
            acc3468
  let vBoolAst_sfold_Pat_Expr: all acc3469. (acc3469 -> Ast_Expr -> acc3469) -> acc3469 -> Ast_Pat -> acc3469 =
    lam f1852.
      lam acc3470.
        lam __sem_target2375.
          match
            __sem_target2375
          with
            p1519
          in
          match
              vBoolAst_smapAccumL_Pat_Expr
                (lam acc3471.
                   lam a1111.
                     (f1852 acc3471 a1111, a1111))
                acc3470
                p1519
            with
              (acc3472, _)
            in
            acc3472
  let vBoolAst_sfold_Pat_Type: all acc3473. (acc3473 -> Ast_Type -> acc3473) -> acc3473 -> Ast_Pat -> acc3473 =
    lam f1853.
      lam acc3474.
        lam __sem_target2376.
          match
            __sem_target2376
          with
            p1520
          in
          match
              vBoolAst_smapAccumL_Pat_Type
                (lam acc3475.
                   lam a1112.
                     (f1853 acc3475 a1112, a1112))
                acc3474
                p1520
            with
              (acc3476, _)
            in
            acc3476
  let vBoolAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1854.
      lam __sem_target2377.
        match
          __sem_target2377
        with
          p1521
        in
        let res582 =
            vBoolAst_smapAccumL_Expr_Expr
              (lam #var"672".
                 lam a1113.
                   ({}, f1854 a1113))
              {}
              p1521
          in
          res582.1
  let vBoolAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f1855.
      lam __sem_target2378.
        match
          __sem_target2378
        with
          p1522
        in
        let res583 =
            vBoolAst_smapAccumL_Expr_Type
              (lam #var"673".
                 lam a1114.
                   ({}, f1855 a1114))
              {}
              p1522
          in
          res583.1
  let vBoolAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f1856: Ast_Type -> Ast_Type.
      lam __sem_target2379.
        match
          __sem_target2379
        with
          s296
        in
        match
            vBoolAst_smapAccumL_Kind_Type
              (lam #var"674".
                 lam x527.
                   ({}, f1856 x527))
              {}
              s296
          with
            (_, s297)
          in
          s297
  let vBoolAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f1857.
      lam __sem_target2380.
        match
          __sem_target2380
        with
          p1523
        in
        let res584 =
            vBoolAst_smapAccumL_Type_Type
              (lam #var"675".
                 lam a1115.
                   ({}, f1857 a1115))
              {}
              p1523
          in
          res584.1
  let vBoolAst_sfold_Expr_Expr: all acc3477. (acc3477 -> Ast_Expr -> acc3477) -> acc3477 -> Ast_Expr -> acc3477 =
    lam f1858.
      lam acc3478.
        lam __sem_target2381.
          match
            __sem_target2381
          with
            p1524
          in
          let res585 =
              vBoolAst_smapAccumL_Expr_Expr
                (lam acc3479.
                   lam a1116.
                     (f1858 acc3479 a1116, a1116))
                acc3478
                p1524
            in
            res585.0
  let vBoolAst_sfold_Expr_Type: all acc3480. (acc3480 -> Ast_Type -> acc3480) -> acc3480 -> Ast_Expr -> acc3480 =
    lam f1859.
      lam acc3481.
        lam __sem_target2382.
          match
            __sem_target2382
          with
            p1525
          in
          let res586 =
              vBoolAst_smapAccumL_Expr_Type
                (lam acc3482.
                   lam a1117.
                     (f1859 acc3482 a1117, a1117))
                acc3481
                p1525
            in
            res586.0
  let vBoolAst_sfold_Kind_Type: all acc3483. (acc3483 -> Ast_Type -> acc3483) -> acc3483 -> Ast_Kind -> acc3483 =
    lam f1860: acc3483 -> Ast_Type -> acc3483.
      lam acc3484: acc3483.
        lam __sem_target2383.
          match
            __sem_target2383
          with
            s298
          in
          match
              vBoolAst_smapAccumL_Kind_Type
                (lam a1118.
                   lam x528.
                     (f1860 a1118 x528, x528))
                acc3484
                s298
            with
              (a1119, _)
            in
            a1119
  let vBoolAst_sfold_Type_Type: all acc3485. (acc3485 -> Ast_Type -> acc3485) -> acc3485 -> Ast_Type -> acc3485 =
    lam f1861.
      lam acc3486.
        lam __sem_target2384.
          match
            __sem_target2384
          with
            p1526
          in
          let res587 =
              vBoolAst_smapAccumL_Type_Type
                (lam acc3487.
                   lam a1120.
                     (f1861 acc3487 a1120, a1120))
                acc3486
                p1526
            in
            res587.0
  let vBoolAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1862.
      lam __sem_target2385.
        match
          __sem_target2385
        with
          expr468
        in
        let expr469 = f1862 expr468 in
          vBoolAst_smap_Expr_Expr (vBoolAst_mapPre_Expr_Expr f1862) expr469
  let vBoolAst_foldPre_Expr_Expr: all acc3488. (acc3488 -> Ast_Expr -> acc3488) -> acc3488 -> Ast_Expr -> acc3488 =
    lam f1863.
      lam acc3489.
        lam __sem_target2386.
          match
            __sem_target2386
          with
            expr470
          in
          let acc3490 = f1863 acc3489 expr470 in
            vBoolAst_sfold_Expr_Expr (vBoolAst_foldPre_Expr_Expr f1863) acc3490 expr470
  let vBoolAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1864.
      lam __sem_target2387.
        match
          __sem_target2387
        with
          expr471
        in
        f1864
            (vBoolAst_smap_Expr_Expr (vBoolAst_mapPost_Expr_Expr f1864) expr471)
  let vBoolAst_foldPost_Expr_Expr: all acc3491. (acc3491 -> Ast_Expr -> acc3491) -> acc3491 -> Ast_Expr -> acc3491 =
    lam f1865.
      lam acc3492.
        lam __sem_target2388.
          match
            __sem_target2388
          with
            expr472
          in
          f1865
              (vBoolAst_sfold_Expr_Expr (vBoolAst_foldPost_Expr_Expr f1865) acc3492 expr472)
              expr472
  let vBoolAst_smapAccumL_Pat_Pat: all acc3493. (acc3493 -> Ast_Pat -> (acc3493, Ast_Pat)) -> acc3493 -> Ast_Pat -> (acc3493, Ast_Pat) =
    lam f1866.
      lam acc3494.
        lam __sem_target2389.
          match
            __sem_target2389
          with
            p1527
          in
          (acc3494, p1527)
  let vBoolAst_smapAccumL_Expr_Pat: all acc3495. (acc3495 -> Ast_Pat -> (acc3495, Ast_Pat)) -> acc3495 -> Ast_Expr -> (acc3495, Ast_Expr) =
    lam f1867.
      lam acc3496.
        lam __sem_target2390.
          match
            __sem_target2390
          with
            p1528
          in
          (acc3496, p1528)
  let vBoolAst_smapAccumL_Pat_Expr: all acc3497. (acc3497 -> Ast_Expr -> (acc3497, Ast_Expr)) -> acc3497 -> Ast_Pat -> (acc3497, Ast_Pat) =
    lam f1868.
      lam acc3498.
        lam __sem_target2391.
          match
            __sem_target2391
          with
            p1529
          in
          (acc3498, p1529)
  let vBoolAst_smapAccumL_Pat_Type: all acc3499. (acc3499 -> Ast_Type -> (acc3499, Ast_Type)) -> acc3499 -> Ast_Pat -> (acc3499, Ast_Pat) =
    lam f1869.
      lam acc3500.
        lam __sem_target2392.
          match
            __sem_target2392
          with
            p1530
          in
          (acc3500, p1530)
  let vBoolAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f1870.
      lam __sem_target2393.
        match
          __sem_target2393
        with
          p1531
        in
        let res588 =
            vBoolAst_smapAccumL_Expr_TypeLabel
              (lam #var"676".
                 lam a1121.
                   ({}, f1870 a1121))
              {}
              p1531
          in
          res588.1
  let vBoolAst_rappAccumL_Type_Type: all acc3501. (acc3501 -> Ast_Type -> (acc3501, Ast_Type)) -> acc3501 -> Ast_Type -> (acc3501, Ast_Type) =
    lam f1871.
      lam acc3502.
        lam __sem_target2394.
          match
            __sem_target2394
          with
            ty342
          in
          (acc3502, ty342)
  let vBoolAst_sfold_Expr_TypeLabel: all acc3503. (acc3503 -> Ast_Type -> acc3503) -> acc3503 -> Ast_Expr -> acc3503 =
    lam f1872.
      lam acc3504.
        lam __sem_target2395.
          match
            __sem_target2395
          with
            p1532
          in
          let res589 =
              vBoolAst_smapAccumL_Expr_TypeLabel
                (lam acc3505.
                   lam a1122.
                     (f1872 acc3505 a1122, a1122))
                acc3504
                p1532
            in
            res589.0
  let vBoolAst_smapAccumL_Expr_Expr: all acc3506. (acc3506 -> Ast_Expr -> (acc3506, Ast_Expr)) -> acc3506 -> Ast_Expr -> (acc3506, Ast_Expr) =
    lam f1873.
      lam acc3507.
        lam __sem_target2396.
          match
            __sem_target2396
          with
            p1533
          in
          (acc3507, p1533)
  let vBoolAst_smapAccumL_Expr_Type: all acc3508. (acc3508 -> Ast_Type -> (acc3508, Ast_Type)) -> acc3508 -> Ast_Expr -> (acc3508, Ast_Expr) =
    lam f1874.
      lam acc3509.
        lam __sem_target2397.
          match
            __sem_target2397
          with
            p1534
          in
          (acc3509, p1534)
  let vBoolAst_smapAccumL_Kind_Type: all acc3510. (acc3510 -> Ast_Type -> (acc3510, Ast_Type)) -> acc3510 -> Ast_Kind -> (acc3510, Ast_Kind) =
    lam f1875.
      lam acc3511.
        lam __sem_target2398.
          match
            __sem_target2398
          with
            s299
          in
          (acc3511, s299)
  let vBoolAst_smapAccumL_Type_Type: all acc3512. (acc3512 -> Ast_Type -> (acc3512, Ast_Type)) -> acc3512 -> Ast_Type -> (acc3512, Ast_Type) =
    lam f1876.
      lam acc3513.
        lam __sem_target2399.
          match
            __sem_target2399
          with
            p1535
          in
          (acc3513, p1535)
  let vBoolAst_mapAccumLPre_Expr_Expr: all acc3514. (acc3514 -> Ast_Expr -> (acc3514, Ast_Expr)) -> acc3514 -> Ast_Expr -> (acc3514, Ast_Expr) =
    lam f1877.
      lam acc3515.
        lam __sem_target2400.
          match
            __sem_target2400
          with
            expr473
          in
          match
              f1877 acc3515 expr473
            with
              (acc3516, expr474)
            in
            vBoolAst_smapAccumL_Expr_Expr (vBoolAst_mapAccumLPre_Expr_Expr f1877) acc3516 expr474
  let vBoolAst_mapAccumLPost_Expr_Expr: all acc3517. (acc3517 -> Ast_Expr -> (acc3517, Ast_Expr)) -> acc3517 -> Ast_Expr -> (acc3517, Ast_Expr) =
    lam f1878.
      lam acc3518.
        lam __sem_target2401.
          match
            __sem_target2401
          with
            expr475
          in
          match
              vBoolAst_smapAccumL_Expr_Expr (vBoolAst_mapAccumLPost_Expr_Expr f1878) acc3518 expr475
            with
              (acc3519, expr476)
            in
            f1878 acc3519 expr476
  let vBoolAst_smapAccumL_Expr_TypeLabel: all acc3520. (acc3520 -> Ast_Type -> (acc3520, Ast_Type)) -> acc3520 -> Ast_Expr -> (acc3520, Ast_Expr) =
    lam f1879.
      lam acc3521.
        lam __sem_target2402.
          match
            __sem_target2402
          with
            p1536
          in
          match
              f1879 acc3521 (vBoolAst_tyTm p1536)
            with
              (acc3522, ty343)
            in
            (acc3522, vBoolAst_withType ty343 p1536)
in
con CmpIntAst_CNeqi: () -> ConstAst_Const in
con CmpIntAst_CLeqi: () -> ConstAst_Const in
con CmpIntAst_CGeqi: () -> ConstAst_Const in
con CmpIntAst_CLti: () -> ConstAst_Const in
con CmpIntAst_CGti: () -> ConstAst_Const in
con CmpIntAst_CEqi: () -> ConstAst_Const in
recursive
  let vCmpIntAst_tyTm: Ast_Expr -> Ast_Type =
    lam __sem_target2315.
      match
        __sem_target2315
      with
        ConstAst_TmConst t999
      in
      t999.ty
  let vCmpIntAst_tyPat: Ast_Pat -> Ast_Type = lam x513.
      never
  let vCmpIntAst_infoTm: Ast_Expr -> Info =
    lam __sem_target2316.
      match
        __sem_target2316
      with
        ConstAst_TmConst r348
      in
      r348.info
  let vCmpIntAst_infoTy: Ast_Type -> Info = lam x514.
      never
  let vCmpIntAst_infoPat: Ast_Pat -> Info = lam x515.
      never
  let vCmpIntAst_withInfo: Info -> Ast_Expr -> Ast_Expr =
    lam info56.
      lam __sem_target2317.
        match
          __sem_target2317
        with
          ConstAst_TmConst t1000
        in
        ConstAst_TmConst
            { t1000 with info = info56 }
  let vCmpIntAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr =
    lam ty332: Ast_Type.
      lam __sem_target2318.
        match
          __sem_target2318
        with
          ConstAst_TmConst t1001
        in
        ConstAst_TmConst
            { t1001 with ty = ty332 }
  let vCmpIntAst_tyWithInfo: Info -> Ast_Type -> Ast_Type = lam x516.
      never
  let vCmpIntAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target2319.
      match
        __sem_target2319
      with
        ty333
      in
      vCmpIntAst_rapp_Type_Type vCmpIntAst_unwrapType ty333
  let vCmpIntAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target2320.
      match
        __sem_target2320
      with
        ty334
      in
      vCmpIntAst_rapp_Type_Type vCmpIntAst_inspectType ty334
  let vCmpIntAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x517.
      never
  let vCmpIntAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x518.
      never
  let vCmpIntAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f1810.
      lam __sem_target2321.
        match
          __sem_target2321
        with
          p1483
        in
        let res568 =
            vCmpIntAst_smapAccumL_Pat_Pat
              (lam #var"657".
                 lam a1087.
                   ({}, f1810 a1087))
              {}
              p1483
          in
          res568.1
  let vCmpIntAst_countPatNodes =
    lam count714.
      lam __sem_target2322.
        match
          __sem_target2322
        with
          t1002
        in
        let count715 = addi count714 1 in
          let count716 =
            vCmpIntAst_sfold_Pat_Pat vCmpIntAst_countPatNodes count715 t1002
          in
          let count717 =
            vCmpIntAst_sfold_Pat_Expr vCmpIntAst_countExprNodes count716 t1002
          in
          let count718 =
            vCmpIntAst_sfold_Pat_Type vCmpIntAst_countTypeNodes count717 t1002
          in
          count718
  let vCmpIntAst_sfold_Pat_Pat: all acc3401. (acc3401 -> Ast_Pat -> acc3401) -> acc3401 -> Ast_Pat -> acc3401 =
    lam f1811.
      lam acc3402.
        lam __sem_target2323.
          match
            __sem_target2323
          with
            p1484
          in
          let res569 =
              vCmpIntAst_smapAccumL_Pat_Pat
                (lam acc3403.
                   lam a1088.
                     (f1811 acc3403 a1088, a1088))
                acc3402
                p1484
            in
            res569.0
  let vCmpIntAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f1812.
      lam __sem_target2324.
        match
          __sem_target2324
        with
          p1485
        in
        match
            vCmpIntAst_smapAccumL_Expr_Pat
              (lam #var"658".
                 lam a1089.
                   ({}, f1812 a1089))
              {}
              p1485
          with
            (_, p1486)
          in
          p1486
  let vCmpIntAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f1813.
      lam __sem_target2325.
        match
          __sem_target2325
        with
          p1487
        in
        match
            vCmpIntAst_smapAccumL_Pat_Expr
              (lam #var"659".
                 lam a1090.
                   ({}, f1813 a1090))
              {}
              p1487
          with
            (_, p1488)
          in
          p1488
  let vCmpIntAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f1814.
      lam __sem_target2326.
        match
          __sem_target2326
        with
          p1489
        in
        match
            vCmpIntAst_smapAccumL_Pat_Type
              (lam #var"660".
                 lam a1091.
                   ({}, f1814 a1091))
              {}
              p1489
          with
            (_, p1490)
          in
          p1490
  let vCmpIntAst_countExprNodes =
    lam count719.
      lam __sem_target2327.
        match
          __sem_target2327
        with
          t1003
        in
        let count720 = addi count719 1 in
          let count721 =
            vCmpIntAst_sfold_Expr_Expr vCmpIntAst_countExprNodes count720 t1003
          in
          let count722 =
            vCmpIntAst_sfold_Expr_Type vCmpIntAst_countTypeNodes count721 t1003
          in
          let count723 =
            vCmpIntAst_sfold_Expr_TypeLabel vCmpIntAst_countTypeNodes count722 t1003
          in
          let count724 =
            vCmpIntAst_sfold_Expr_Pat vCmpIntAst_countPatNodes count723 t1003
          in
          count724
  let vCmpIntAst_countTypeNodes =
    lam count725.
      lam __sem_target2328.
        match
          __sem_target2328
        with
          t1004
        in
        let count726 = addi count725 1 in
          let count727 =
            vCmpIntAst_sfold_Type_Type vCmpIntAst_countTypeNodes count726 t1004
          in
          count727
  let vCmpIntAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f1815.
      lam __sem_target2329.
        match
          __sem_target2329
        with
          ty335
        in
        let res570 =
            vCmpIntAst_rappAccumL_Type_Type
              (lam #var"661".
                 lam t1005.
                   ({}, f1815 t1005))
              {}
              ty335
          in
          res570.1
  let vCmpIntAst_sfold_Expr_Pat: all acc3404. (acc3404 -> Ast_Pat -> acc3404) -> acc3404 -> Ast_Expr -> acc3404 =
    lam f1816.
      lam acc3405.
        lam __sem_target2330.
          match
            __sem_target2330
          with
            p1491
          in
          match
              vCmpIntAst_smapAccumL_Expr_Pat
                (lam acc3406.
                   lam a1092.
                     (f1816 acc3406 a1092, a1092))
                acc3405
                p1491
            with
              (acc3407, _)
            in
            acc3407
  let vCmpIntAst_sfold_Pat_Expr: all acc3408. (acc3408 -> Ast_Expr -> acc3408) -> acc3408 -> Ast_Pat -> acc3408 =
    lam f1817.
      lam acc3409.
        lam __sem_target2331.
          match
            __sem_target2331
          with
            p1492
          in
          match
              vCmpIntAst_smapAccumL_Pat_Expr
                (lam acc3410.
                   lam a1093.
                     (f1817 acc3410 a1093, a1093))
                acc3409
                p1492
            with
              (acc3411, _)
            in
            acc3411
  let vCmpIntAst_sfold_Pat_Type: all acc3412. (acc3412 -> Ast_Type -> acc3412) -> acc3412 -> Ast_Pat -> acc3412 =
    lam f1818.
      lam acc3413.
        lam __sem_target2332.
          match
            __sem_target2332
          with
            p1493
          in
          match
              vCmpIntAst_smapAccumL_Pat_Type
                (lam acc3414.
                   lam a1094.
                     (f1818 acc3414 a1094, a1094))
                acc3413
                p1493
            with
              (acc3415, _)
            in
            acc3415
  let vCmpIntAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1819.
      lam __sem_target2333.
        match
          __sem_target2333
        with
          p1494
        in
        let res571 =
            vCmpIntAst_smapAccumL_Expr_Expr
              (lam #var"662".
                 lam a1095.
                   ({}, f1819 a1095))
              {}
              p1494
          in
          res571.1
  let vCmpIntAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f1820.
      lam __sem_target2334.
        match
          __sem_target2334
        with
          p1495
        in
        let res572 =
            vCmpIntAst_smapAccumL_Expr_Type
              (lam #var"663".
                 lam a1096.
                   ({}, f1820 a1096))
              {}
              p1495
          in
          res572.1
  let vCmpIntAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f1821: Ast_Type -> Ast_Type.
      lam __sem_target2335.
        match
          __sem_target2335
        with
          s292
        in
        match
            vCmpIntAst_smapAccumL_Kind_Type
              (lam #var"664".
                 lam x519.
                   ({}, f1821 x519))
              {}
              s292
          with
            (_, s293)
          in
          s293
  let vCmpIntAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f1822.
      lam __sem_target2336.
        match
          __sem_target2336
        with
          p1496
        in
        let res573 =
            vCmpIntAst_smapAccumL_Type_Type
              (lam #var"665".
                 lam a1097.
                   ({}, f1822 a1097))
              {}
              p1496
          in
          res573.1
  let vCmpIntAst_sfold_Expr_Expr: all acc3416. (acc3416 -> Ast_Expr -> acc3416) -> acc3416 -> Ast_Expr -> acc3416 =
    lam f1823.
      lam acc3417.
        lam __sem_target2337.
          match
            __sem_target2337
          with
            p1497
          in
          let res574 =
              vCmpIntAst_smapAccumL_Expr_Expr
                (lam acc3418.
                   lam a1098.
                     (f1823 acc3418 a1098, a1098))
                acc3417
                p1497
            in
            res574.0
  let vCmpIntAst_sfold_Expr_Type: all acc3419. (acc3419 -> Ast_Type -> acc3419) -> acc3419 -> Ast_Expr -> acc3419 =
    lam f1824.
      lam acc3420.
        lam __sem_target2338.
          match
            __sem_target2338
          with
            p1498
          in
          let res575 =
              vCmpIntAst_smapAccumL_Expr_Type
                (lam acc3421.
                   lam a1099.
                     (f1824 acc3421 a1099, a1099))
                acc3420
                p1498
            in
            res575.0
  let vCmpIntAst_sfold_Kind_Type: all acc3422. (acc3422 -> Ast_Type -> acc3422) -> acc3422 -> Ast_Kind -> acc3422 =
    lam f1825: acc3422 -> Ast_Type -> acc3422.
      lam acc3423: acc3422.
        lam __sem_target2339.
          match
            __sem_target2339
          with
            s294
          in
          match
              vCmpIntAst_smapAccumL_Kind_Type
                (lam a1100.
                   lam x520.
                     (f1825 a1100 x520, x520))
                acc3423
                s294
            with
              (a1101, _)
            in
            a1101
  let vCmpIntAst_sfold_Type_Type: all acc3424. (acc3424 -> Ast_Type -> acc3424) -> acc3424 -> Ast_Type -> acc3424 =
    lam f1826.
      lam acc3425.
        lam __sem_target2340.
          match
            __sem_target2340
          with
            p1499
          in
          let res576 =
              vCmpIntAst_smapAccumL_Type_Type
                (lam acc3426.
                   lam a1102.
                     (f1826 acc3426 a1102, a1102))
                acc3425
                p1499
            in
            res576.0
  let vCmpIntAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1827.
      lam __sem_target2341.
        match
          __sem_target2341
        with
          expr459
        in
        let expr460 = f1827 expr459 in
          vCmpIntAst_smap_Expr_Expr (vCmpIntAst_mapPre_Expr_Expr f1827) expr460
  let vCmpIntAst_foldPre_Expr_Expr: all acc3427. (acc3427 -> Ast_Expr -> acc3427) -> acc3427 -> Ast_Expr -> acc3427 =
    lam f1828.
      lam acc3428.
        lam __sem_target2342.
          match
            __sem_target2342
          with
            expr461
          in
          let acc3429 = f1828 acc3428 expr461 in
            vCmpIntAst_sfold_Expr_Expr (vCmpIntAst_foldPre_Expr_Expr f1828) acc3429 expr461
  let vCmpIntAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1829.
      lam __sem_target2343.
        match
          __sem_target2343
        with
          expr462
        in
        f1829
            (vCmpIntAst_smap_Expr_Expr (vCmpIntAst_mapPost_Expr_Expr f1829) expr462)
  let vCmpIntAst_foldPost_Expr_Expr: all acc3430. (acc3430 -> Ast_Expr -> acc3430) -> acc3430 -> Ast_Expr -> acc3430 =
    lam f1830.
      lam acc3431.
        lam __sem_target2344.
          match
            __sem_target2344
          with
            expr463
          in
          f1830
              (vCmpIntAst_sfold_Expr_Expr (vCmpIntAst_foldPost_Expr_Expr f1830) acc3431 expr463)
              expr463
  let vCmpIntAst_smapAccumL_Pat_Pat: all acc3432. (acc3432 -> Ast_Pat -> (acc3432, Ast_Pat)) -> acc3432 -> Ast_Pat -> (acc3432, Ast_Pat) =
    lam f1831.
      lam acc3433.
        lam __sem_target2345.
          match
            __sem_target2345
          with
            p1500
          in
          (acc3433, p1500)
  let vCmpIntAst_smapAccumL_Expr_Pat: all acc3434. (acc3434 -> Ast_Pat -> (acc3434, Ast_Pat)) -> acc3434 -> Ast_Expr -> (acc3434, Ast_Expr) =
    lam f1832.
      lam acc3435.
        lam __sem_target2346.
          match
            __sem_target2346
          with
            p1501
          in
          (acc3435, p1501)
  let vCmpIntAst_smapAccumL_Pat_Expr: all acc3436. (acc3436 -> Ast_Expr -> (acc3436, Ast_Expr)) -> acc3436 -> Ast_Pat -> (acc3436, Ast_Pat) =
    lam f1833.
      lam acc3437.
        lam __sem_target2347.
          match
            __sem_target2347
          with
            p1502
          in
          (acc3437, p1502)
  let vCmpIntAst_smapAccumL_Pat_Type: all acc3438. (acc3438 -> Ast_Type -> (acc3438, Ast_Type)) -> acc3438 -> Ast_Pat -> (acc3438, Ast_Pat) =
    lam f1834.
      lam acc3439.
        lam __sem_target2348.
          match
            __sem_target2348
          with
            p1503
          in
          (acc3439, p1503)
  let vCmpIntAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f1835.
      lam __sem_target2349.
        match
          __sem_target2349
        with
          p1504
        in
        let res577 =
            vCmpIntAst_smapAccumL_Expr_TypeLabel
              (lam #var"666".
                 lam a1103.
                   ({}, f1835 a1103))
              {}
              p1504
          in
          res577.1
  let vCmpIntAst_rappAccumL_Type_Type: all acc3440. (acc3440 -> Ast_Type -> (acc3440, Ast_Type)) -> acc3440 -> Ast_Type -> (acc3440, Ast_Type) =
    lam f1836.
      lam acc3441.
        lam __sem_target2350.
          match
            __sem_target2350
          with
            ty336
          in
          (acc3441, ty336)
  let vCmpIntAst_sfold_Expr_TypeLabel: all acc3442. (acc3442 -> Ast_Type -> acc3442) -> acc3442 -> Ast_Expr -> acc3442 =
    lam f1837.
      lam acc3443.
        lam __sem_target2351.
          match
            __sem_target2351
          with
            p1505
          in
          let res578 =
              vCmpIntAst_smapAccumL_Expr_TypeLabel
                (lam acc3444.
                   lam a1104.
                     (f1837 acc3444 a1104, a1104))
                acc3443
                p1505
            in
            res578.0
  let vCmpIntAst_smapAccumL_Expr_Expr: all acc3445. (acc3445 -> Ast_Expr -> (acc3445, Ast_Expr)) -> acc3445 -> Ast_Expr -> (acc3445, Ast_Expr) =
    lam f1838.
      lam acc3446.
        lam __sem_target2352.
          match
            __sem_target2352
          with
            p1506
          in
          (acc3446, p1506)
  let vCmpIntAst_smapAccumL_Expr_Type: all acc3447. (acc3447 -> Ast_Type -> (acc3447, Ast_Type)) -> acc3447 -> Ast_Expr -> (acc3447, Ast_Expr) =
    lam f1839.
      lam acc3448.
        lam __sem_target2353.
          match
            __sem_target2353
          with
            p1507
          in
          (acc3448, p1507)
  let vCmpIntAst_smapAccumL_Kind_Type: all acc3449. (acc3449 -> Ast_Type -> (acc3449, Ast_Type)) -> acc3449 -> Ast_Kind -> (acc3449, Ast_Kind) =
    lam f1840.
      lam acc3450.
        lam __sem_target2354.
          match
            __sem_target2354
          with
            s295
          in
          (acc3450, s295)
  let vCmpIntAst_smapAccumL_Type_Type: all acc3451. (acc3451 -> Ast_Type -> (acc3451, Ast_Type)) -> acc3451 -> Ast_Type -> (acc3451, Ast_Type) =
    lam f1841.
      lam acc3452.
        lam __sem_target2355.
          match
            __sem_target2355
          with
            p1508
          in
          (acc3452, p1508)
  let vCmpIntAst_mapAccumLPre_Expr_Expr: all acc3453. (acc3453 -> Ast_Expr -> (acc3453, Ast_Expr)) -> acc3453 -> Ast_Expr -> (acc3453, Ast_Expr) =
    lam f1842.
      lam acc3454.
        lam __sem_target2356.
          match
            __sem_target2356
          with
            expr464
          in
          match
              f1842 acc3454 expr464
            with
              (acc3455, expr465)
            in
            vCmpIntAst_smapAccumL_Expr_Expr (vCmpIntAst_mapAccumLPre_Expr_Expr f1842) acc3455 expr465
  let vCmpIntAst_mapAccumLPost_Expr_Expr: all acc3456. (acc3456 -> Ast_Expr -> (acc3456, Ast_Expr)) -> acc3456 -> Ast_Expr -> (acc3456, Ast_Expr) =
    lam f1843.
      lam acc3457.
        lam __sem_target2357.
          match
            __sem_target2357
          with
            expr466
          in
          match
              vCmpIntAst_smapAccumL_Expr_Expr (vCmpIntAst_mapAccumLPost_Expr_Expr f1843) acc3457 expr466
            with
              (acc3458, expr467)
            in
            f1843 acc3458 expr467
  let vCmpIntAst_smapAccumL_Expr_TypeLabel: all acc3459. (acc3459 -> Ast_Type -> (acc3459, Ast_Type)) -> acc3459 -> Ast_Expr -> (acc3459, Ast_Expr) =
    lam f1844.
      lam acc3460.
        lam __sem_target2358.
          match
            __sem_target2358
          with
            p1509
          in
          match
              f1844 acc3460 (vCmpIntAst_tyTm p1509)
            with
              (acc3461, ty337)
            in
            (acc3461, vCmpIntAst_withType ty337 p1509)
in
con CmpFloatAst_CNeqf: () -> ConstAst_Const in
con CmpFloatAst_CLeqf: () -> ConstAst_Const in
con CmpFloatAst_CGeqf: () -> ConstAst_Const in
con CmpFloatAst_CLtf: () -> ConstAst_Const in
con CmpFloatAst_CGtf: () -> ConstAst_Const in
con CmpFloatAst_CEqf: () -> ConstAst_Const in
recursive
  let vCmpFloatAst_tyTm: Ast_Expr -> Ast_Type =
    lam __sem_target2271.
      match
        __sem_target2271
      with
        ConstAst_TmConst t992
      in
      t992.ty
  let vCmpFloatAst_tyPat: Ast_Pat -> Ast_Type = lam x505.
      never
  let vCmpFloatAst_infoTm: Ast_Expr -> Info =
    lam __sem_target2272.
      match
        __sem_target2272
      with
        ConstAst_TmConst r347
      in
      r347.info
  let vCmpFloatAst_infoTy: Ast_Type -> Info = lam x506.
      never
  let vCmpFloatAst_infoPat: Ast_Pat -> Info = lam x507.
      never
  let vCmpFloatAst_withInfo: Info -> Ast_Expr -> Ast_Expr =
    lam info55.
      lam __sem_target2273.
        match
          __sem_target2273
        with
          ConstAst_TmConst t993
        in
        ConstAst_TmConst
            { t993 with info = info55 }
  let vCmpFloatAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr =
    lam ty326: Ast_Type.
      lam __sem_target2274.
        match
          __sem_target2274
        with
          ConstAst_TmConst t994
        in
        ConstAst_TmConst
            { t994 with ty = ty326 }
  let vCmpFloatAst_tyWithInfo: Info -> Ast_Type -> Ast_Type = lam x508.
      never
  let vCmpFloatAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target2275.
      match
        __sem_target2275
      with
        ty327
      in
      vCmpFloatAst_rapp_Type_Type vCmpFloatAst_unwrapType ty327
  let vCmpFloatAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target2276.
      match
        __sem_target2276
      with
        ty328
      in
      vCmpFloatAst_rapp_Type_Type vCmpFloatAst_inspectType ty328
  let vCmpFloatAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x509.
      never
  let vCmpFloatAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x510.
      never
  let vCmpFloatAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f1775.
      lam __sem_target2277.
        match
          __sem_target2277
        with
          p1456
        in
        let res557 =
            vCmpFloatAst_smapAccumL_Pat_Pat
              (lam #var"647".
                 lam a1069.
                   ({}, f1775 a1069))
              {}
              p1456
          in
          res557.1
  let vCmpFloatAst_countPatNodes =
    lam count700.
      lam __sem_target2278.
        match
          __sem_target2278
        with
          t995
        in
        let count701 = addi count700 1 in
          let count702 =
            vCmpFloatAst_sfold_Pat_Pat vCmpFloatAst_countPatNodes count701 t995
          in
          let count703 =
            vCmpFloatAst_sfold_Pat_Expr vCmpFloatAst_countExprNodes count702 t995
          in
          let count704 =
            vCmpFloatAst_sfold_Pat_Type vCmpFloatAst_countTypeNodes count703 t995
          in
          count704
  let vCmpFloatAst_sfold_Pat_Pat: all acc3340. (acc3340 -> Ast_Pat -> acc3340) -> acc3340 -> Ast_Pat -> acc3340 =
    lam f1776.
      lam acc3341.
        lam __sem_target2279.
          match
            __sem_target2279
          with
            p1457
          in
          let res558 =
              vCmpFloatAst_smapAccumL_Pat_Pat
                (lam acc3342.
                   lam a1070.
                     (f1776 acc3342 a1070, a1070))
                acc3341
                p1457
            in
            res558.0
  let vCmpFloatAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f1777.
      lam __sem_target2280.
        match
          __sem_target2280
        with
          p1458
        in
        match
            vCmpFloatAst_smapAccumL_Expr_Pat
              (lam #var"648".
                 lam a1071.
                   ({}, f1777 a1071))
              {}
              p1458
          with
            (_, p1459)
          in
          p1459
  let vCmpFloatAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f1778.
      lam __sem_target2281.
        match
          __sem_target2281
        with
          p1460
        in
        match
            vCmpFloatAst_smapAccumL_Pat_Expr
              (lam #var"649".
                 lam a1072.
                   ({}, f1778 a1072))
              {}
              p1460
          with
            (_, p1461)
          in
          p1461
  let vCmpFloatAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f1779.
      lam __sem_target2282.
        match
          __sem_target2282
        with
          p1462
        in
        match
            vCmpFloatAst_smapAccumL_Pat_Type
              (lam #var"650".
                 lam a1073.
                   ({}, f1779 a1073))
              {}
              p1462
          with
            (_, p1463)
          in
          p1463
  let vCmpFloatAst_countExprNodes =
    lam count705.
      lam __sem_target2283.
        match
          __sem_target2283
        with
          t996
        in
        let count706 = addi count705 1 in
          let count707 =
            vCmpFloatAst_sfold_Expr_Expr vCmpFloatAst_countExprNodes count706 t996
          in
          let count708 =
            vCmpFloatAst_sfold_Expr_Type vCmpFloatAst_countTypeNodes count707 t996
          in
          let count709 =
            vCmpFloatAst_sfold_Expr_TypeLabel vCmpFloatAst_countTypeNodes count708 t996
          in
          let count710 =
            vCmpFloatAst_sfold_Expr_Pat vCmpFloatAst_countPatNodes count709 t996
          in
          count710
  let vCmpFloatAst_countTypeNodes =
    lam count711.
      lam __sem_target2284.
        match
          __sem_target2284
        with
          t997
        in
        let count712 = addi count711 1 in
          let count713 =
            vCmpFloatAst_sfold_Type_Type vCmpFloatAst_countTypeNodes count712 t997
          in
          count713
  let vCmpFloatAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f1780.
      lam __sem_target2285.
        match
          __sem_target2285
        with
          ty329
        in
        let res559 =
            vCmpFloatAst_rappAccumL_Type_Type
              (lam #var"651".
                 lam t998.
                   ({}, f1780 t998))
              {}
              ty329
          in
          res559.1
  let vCmpFloatAst_sfold_Expr_Pat: all acc3343. (acc3343 -> Ast_Pat -> acc3343) -> acc3343 -> Ast_Expr -> acc3343 =
    lam f1781.
      lam acc3344.
        lam __sem_target2286.
          match
            __sem_target2286
          with
            p1464
          in
          match
              vCmpFloatAst_smapAccumL_Expr_Pat
                (lam acc3345.
                   lam a1074.
                     (f1781 acc3345 a1074, a1074))
                acc3344
                p1464
            with
              (acc3346, _)
            in
            acc3346
  let vCmpFloatAst_sfold_Pat_Expr: all acc3347. (acc3347 -> Ast_Expr -> acc3347) -> acc3347 -> Ast_Pat -> acc3347 =
    lam f1782.
      lam acc3348.
        lam __sem_target2287.
          match
            __sem_target2287
          with
            p1465
          in
          match
              vCmpFloatAst_smapAccumL_Pat_Expr
                (lam acc3349.
                   lam a1075.
                     (f1782 acc3349 a1075, a1075))
                acc3348
                p1465
            with
              (acc3350, _)
            in
            acc3350
  let vCmpFloatAst_sfold_Pat_Type: all acc3351. (acc3351 -> Ast_Type -> acc3351) -> acc3351 -> Ast_Pat -> acc3351 =
    lam f1783.
      lam acc3352.
        lam __sem_target2288.
          match
            __sem_target2288
          with
            p1466
          in
          match
              vCmpFloatAst_smapAccumL_Pat_Type
                (lam acc3353.
                   lam a1076.
                     (f1783 acc3353 a1076, a1076))
                acc3352
                p1466
            with
              (acc3354, _)
            in
            acc3354
  let vCmpFloatAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1784.
      lam __sem_target2289.
        match
          __sem_target2289
        with
          p1467
        in
        let res560 =
            vCmpFloatAst_smapAccumL_Expr_Expr
              (lam #var"652".
                 lam a1077.
                   ({}, f1784 a1077))
              {}
              p1467
          in
          res560.1
  let vCmpFloatAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f1785.
      lam __sem_target2290.
        match
          __sem_target2290
        with
          p1468
        in
        let res561 =
            vCmpFloatAst_smapAccumL_Expr_Type
              (lam #var"653".
                 lam a1078.
                   ({}, f1785 a1078))
              {}
              p1468
          in
          res561.1
  let vCmpFloatAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f1786: Ast_Type -> Ast_Type.
      lam __sem_target2291.
        match
          __sem_target2291
        with
          s288
        in
        match
            vCmpFloatAst_smapAccumL_Kind_Type
              (lam #var"654".
                 lam x511.
                   ({}, f1786 x511))
              {}
              s288
          with
            (_, s289)
          in
          s289
  let vCmpFloatAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f1787.
      lam __sem_target2292.
        match
          __sem_target2292
        with
          p1469
        in
        let res562 =
            vCmpFloatAst_smapAccumL_Type_Type
              (lam #var"655".
                 lam a1079.
                   ({}, f1787 a1079))
              {}
              p1469
          in
          res562.1
  let vCmpFloatAst_sfold_Expr_Expr: all acc3355. (acc3355 -> Ast_Expr -> acc3355) -> acc3355 -> Ast_Expr -> acc3355 =
    lam f1788.
      lam acc3356.
        lam __sem_target2293.
          match
            __sem_target2293
          with
            p1470
          in
          let res563 =
              vCmpFloatAst_smapAccumL_Expr_Expr
                (lam acc3357.
                   lam a1080.
                     (f1788 acc3357 a1080, a1080))
                acc3356
                p1470
            in
            res563.0
  let vCmpFloatAst_sfold_Expr_Type: all acc3358. (acc3358 -> Ast_Type -> acc3358) -> acc3358 -> Ast_Expr -> acc3358 =
    lam f1789.
      lam acc3359.
        lam __sem_target2294.
          match
            __sem_target2294
          with
            p1471
          in
          let res564 =
              vCmpFloatAst_smapAccumL_Expr_Type
                (lam acc3360.
                   lam a1081.
                     (f1789 acc3360 a1081, a1081))
                acc3359
                p1471
            in
            res564.0
  let vCmpFloatAst_sfold_Kind_Type: all acc3361. (acc3361 -> Ast_Type -> acc3361) -> acc3361 -> Ast_Kind -> acc3361 =
    lam f1790: acc3361 -> Ast_Type -> acc3361.
      lam acc3362: acc3361.
        lam __sem_target2295.
          match
            __sem_target2295
          with
            s290
          in
          match
              vCmpFloatAst_smapAccumL_Kind_Type
                (lam a1082.
                   lam x512.
                     (f1790 a1082 x512, x512))
                acc3362
                s290
            with
              (a1083, _)
            in
            a1083
  let vCmpFloatAst_sfold_Type_Type: all acc3363. (acc3363 -> Ast_Type -> acc3363) -> acc3363 -> Ast_Type -> acc3363 =
    lam f1791.
      lam acc3364.
        lam __sem_target2296.
          match
            __sem_target2296
          with
            p1472
          in
          let res565 =
              vCmpFloatAst_smapAccumL_Type_Type
                (lam acc3365.
                   lam a1084.
                     (f1791 acc3365 a1084, a1084))
                acc3364
                p1472
            in
            res565.0
  let vCmpFloatAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1792.
      lam __sem_target2297.
        match
          __sem_target2297
        with
          expr450
        in
        let expr451 = f1792 expr450 in
          vCmpFloatAst_smap_Expr_Expr (vCmpFloatAst_mapPre_Expr_Expr f1792) expr451
  let vCmpFloatAst_foldPre_Expr_Expr: all acc3366. (acc3366 -> Ast_Expr -> acc3366) -> acc3366 -> Ast_Expr -> acc3366 =
    lam f1793.
      lam acc3367.
        lam __sem_target2298.
          match
            __sem_target2298
          with
            expr452
          in
          let acc3368 = f1793 acc3367 expr452 in
            vCmpFloatAst_sfold_Expr_Expr (vCmpFloatAst_foldPre_Expr_Expr f1793) acc3368 expr452
  let vCmpFloatAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1794.
      lam __sem_target2299.
        match
          __sem_target2299
        with
          expr453
        in
        f1794
            (vCmpFloatAst_smap_Expr_Expr (vCmpFloatAst_mapPost_Expr_Expr f1794) expr453)
  let vCmpFloatAst_foldPost_Expr_Expr: all acc3369. (acc3369 -> Ast_Expr -> acc3369) -> acc3369 -> Ast_Expr -> acc3369 =
    lam f1795.
      lam acc3370.
        lam __sem_target2300.
          match
            __sem_target2300
          with
            expr454
          in
          f1795
              (vCmpFloatAst_sfold_Expr_Expr (vCmpFloatAst_foldPost_Expr_Expr f1795) acc3370 expr454)
              expr454
  let vCmpFloatAst_smapAccumL_Pat_Pat: all acc3371. (acc3371 -> Ast_Pat -> (acc3371, Ast_Pat)) -> acc3371 -> Ast_Pat -> (acc3371, Ast_Pat) =
    lam f1796.
      lam acc3372.
        lam __sem_target2301.
          match
            __sem_target2301
          with
            p1473
          in
          (acc3372, p1473)
  let vCmpFloatAst_smapAccumL_Expr_Pat: all acc3373. (acc3373 -> Ast_Pat -> (acc3373, Ast_Pat)) -> acc3373 -> Ast_Expr -> (acc3373, Ast_Expr) =
    lam f1797.
      lam acc3374.
        lam __sem_target2302.
          match
            __sem_target2302
          with
            p1474
          in
          (acc3374, p1474)
  let vCmpFloatAst_smapAccumL_Pat_Expr: all acc3375. (acc3375 -> Ast_Expr -> (acc3375, Ast_Expr)) -> acc3375 -> Ast_Pat -> (acc3375, Ast_Pat) =
    lam f1798.
      lam acc3376.
        lam __sem_target2303.
          match
            __sem_target2303
          with
            p1475
          in
          (acc3376, p1475)
  let vCmpFloatAst_smapAccumL_Pat_Type: all acc3377. (acc3377 -> Ast_Type -> (acc3377, Ast_Type)) -> acc3377 -> Ast_Pat -> (acc3377, Ast_Pat) =
    lam f1799.
      lam acc3378.
        lam __sem_target2304.
          match
            __sem_target2304
          with
            p1476
          in
          (acc3378, p1476)
  let vCmpFloatAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f1800.
      lam __sem_target2305.
        match
          __sem_target2305
        with
          p1477
        in
        let res566 =
            vCmpFloatAst_smapAccumL_Expr_TypeLabel
              (lam #var"656".
                 lam a1085.
                   ({}, f1800 a1085))
              {}
              p1477
          in
          res566.1
  let vCmpFloatAst_rappAccumL_Type_Type: all acc3379. (acc3379 -> Ast_Type -> (acc3379, Ast_Type)) -> acc3379 -> Ast_Type -> (acc3379, Ast_Type) =
    lam f1801.
      lam acc3380.
        lam __sem_target2306.
          match
            __sem_target2306
          with
            ty330
          in
          (acc3380, ty330)
  let vCmpFloatAst_sfold_Expr_TypeLabel: all acc3381. (acc3381 -> Ast_Type -> acc3381) -> acc3381 -> Ast_Expr -> acc3381 =
    lam f1802.
      lam acc3382.
        lam __sem_target2307.
          match
            __sem_target2307
          with
            p1478
          in
          let res567 =
              vCmpFloatAst_smapAccumL_Expr_TypeLabel
                (lam acc3383.
                   lam a1086.
                     (f1802 acc3383 a1086, a1086))
                acc3382
                p1478
            in
            res567.0
  let vCmpFloatAst_smapAccumL_Expr_Expr: all acc3384. (acc3384 -> Ast_Expr -> (acc3384, Ast_Expr)) -> acc3384 -> Ast_Expr -> (acc3384, Ast_Expr) =
    lam f1803.
      lam acc3385.
        lam __sem_target2308.
          match
            __sem_target2308
          with
            p1479
          in
          (acc3385, p1479)
  let vCmpFloatAst_smapAccumL_Expr_Type: all acc3386. (acc3386 -> Ast_Type -> (acc3386, Ast_Type)) -> acc3386 -> Ast_Expr -> (acc3386, Ast_Expr) =
    lam f1804.
      lam acc3387.
        lam __sem_target2309.
          match
            __sem_target2309
          with
            p1480
          in
          (acc3387, p1480)
  let vCmpFloatAst_smapAccumL_Kind_Type: all acc3388. (acc3388 -> Ast_Type -> (acc3388, Ast_Type)) -> acc3388 -> Ast_Kind -> (acc3388, Ast_Kind) =
    lam f1805.
      lam acc3389.
        lam __sem_target2310.
          match
            __sem_target2310
          with
            s291
          in
          (acc3389, s291)
  let vCmpFloatAst_smapAccumL_Type_Type: all acc3390. (acc3390 -> Ast_Type -> (acc3390, Ast_Type)) -> acc3390 -> Ast_Type -> (acc3390, Ast_Type) =
    lam f1806.
      lam acc3391.
        lam __sem_target2311.
          match
            __sem_target2311
          with
            p1481
          in
          (acc3391, p1481)
  let vCmpFloatAst_mapAccumLPre_Expr_Expr: all acc3392. (acc3392 -> Ast_Expr -> (acc3392, Ast_Expr)) -> acc3392 -> Ast_Expr -> (acc3392, Ast_Expr) =
    lam f1807.
      lam acc3393.
        lam __sem_target2312.
          match
            __sem_target2312
          with
            expr455
          in
          match
              f1807 acc3393 expr455
            with
              (acc3394, expr456)
            in
            vCmpFloatAst_smapAccumL_Expr_Expr (vCmpFloatAst_mapAccumLPre_Expr_Expr f1807) acc3394 expr456
  let vCmpFloatAst_mapAccumLPost_Expr_Expr: all acc3395. (acc3395 -> Ast_Expr -> (acc3395, Ast_Expr)) -> acc3395 -> Ast_Expr -> (acc3395, Ast_Expr) =
    lam f1808.
      lam acc3396.
        lam __sem_target2313.
          match
            __sem_target2313
          with
            expr457
          in
          match
              vCmpFloatAst_smapAccumL_Expr_Expr
                (vCmpFloatAst_mapAccumLPost_Expr_Expr f1808) acc3396 expr457
            with
              (acc3397, expr458)
            in
            f1808 acc3397 expr458
  let vCmpFloatAst_smapAccumL_Expr_TypeLabel: all acc3398. (acc3398 -> Ast_Type -> (acc3398, Ast_Type)) -> acc3398 -> Ast_Expr -> (acc3398, Ast_Expr) =
    lam f1809.
      lam acc3399.
        lam __sem_target2314.
          match
            __sem_target2314
          with
            p1482
          in
          match
              f1809 acc3399 (vCmpFloatAst_tyTm p1482)
            with
              (acc3400, ty331)
            in
            (acc3400, vCmpFloatAst_withType ty331 p1482)
in
con CharAst_CChar: {val: Char} -> ConstAst_Const in
recursive
  let vCharAst_tyTm: Ast_Expr -> Ast_Type =
    lam __sem_target2227.
      match
        __sem_target2227
      with
        ConstAst_TmConst t985
      in
      t985.ty
  let vCharAst_tyPat: Ast_Pat -> Ast_Type = lam x497.
      never
  let vCharAst_infoTm: Ast_Expr -> Info =
    lam __sem_target2228.
      match
        __sem_target2228
      with
        ConstAst_TmConst r346
      in
      r346.info
  let vCharAst_infoTy: Ast_Type -> Info = lam x498.
      never
  let vCharAst_infoPat: Ast_Pat -> Info = lam x499.
      never
  let vCharAst_withInfo: Info -> Ast_Expr -> Ast_Expr =
    lam info54.
      lam __sem_target2229.
        match
          __sem_target2229
        with
          ConstAst_TmConst t986
        in
        ConstAst_TmConst
            { t986 with info = info54 }
  let vCharAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr =
    lam ty320: Ast_Type.
      lam __sem_target2230.
        match
          __sem_target2230
        with
          ConstAst_TmConst t987
        in
        ConstAst_TmConst
            { t987 with ty = ty320 }
  let vCharAst_tyWithInfo: Info -> Ast_Type -> Ast_Type = lam x500.
      never
  let vCharAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target2231.
      match
        __sem_target2231
      with
        ty321
      in
      vCharAst_rapp_Type_Type vCharAst_unwrapType ty321
  let vCharAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target2232.
      match
        __sem_target2232
      with
        ty322
      in
      vCharAst_rapp_Type_Type vCharAst_inspectType ty322
  let vCharAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x501.
      never
  let vCharAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x502.
      never
  let vCharAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f1740.
      lam __sem_target2233.
        match
          __sem_target2233
        with
          p1429
        in
        let res546 =
            vCharAst_smapAccumL_Pat_Pat
              (lam #var"637".
                 lam a1051.
                   ({}, f1740 a1051))
              {}
              p1429
          in
          res546.1
  let vCharAst_countPatNodes =
    lam count686.
      lam __sem_target2234.
        match
          __sem_target2234
        with
          t988
        in
        let count687 = addi count686 1 in
          let count688 = vCharAst_sfold_Pat_Pat vCharAst_countPatNodes count687 t988
          in
          let count689 =
            vCharAst_sfold_Pat_Expr vCharAst_countExprNodes count688 t988
          in
          let count690 =
            vCharAst_sfold_Pat_Type vCharAst_countTypeNodes count689 t988
          in
          count690
  let vCharAst_sfold_Pat_Pat: all acc3279. (acc3279 -> Ast_Pat -> acc3279) -> acc3279 -> Ast_Pat -> acc3279 =
    lam f1741.
      lam acc3280.
        lam __sem_target2235.
          match
            __sem_target2235
          with
            p1430
          in
          let res547 =
              vCharAst_smapAccumL_Pat_Pat
                (lam acc3281.
                   lam a1052.
                     (f1741 acc3281 a1052, a1052))
                acc3280
                p1430
            in
            res547.0
  let vCharAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f1742.
      lam __sem_target2236.
        match
          __sem_target2236
        with
          p1431
        in
        match
            vCharAst_smapAccumL_Expr_Pat
              (lam #var"638".
                 lam a1053.
                   ({}, f1742 a1053))
              {}
              p1431
          with
            (_, p1432)
          in
          p1432
  let vCharAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f1743.
      lam __sem_target2237.
        match
          __sem_target2237
        with
          p1433
        in
        match
            vCharAst_smapAccumL_Pat_Expr
              (lam #var"639".
                 lam a1054.
                   ({}, f1743 a1054))
              {}
              p1433
          with
            (_, p1434)
          in
          p1434
  let vCharAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f1744.
      lam __sem_target2238.
        match
          __sem_target2238
        with
          p1435
        in
        match
            vCharAst_smapAccumL_Pat_Type
              (lam #var"640".
                 lam a1055.
                   ({}, f1744 a1055))
              {}
              p1435
          with
            (_, p1436)
          in
          p1436
  let vCharAst_countExprNodes =
    lam count691.
      lam __sem_target2239.
        match
          __sem_target2239
        with
          t989
        in
        let count692 = addi count691 1 in
          let count693 =
            vCharAst_sfold_Expr_Expr vCharAst_countExprNodes count692 t989
          in
          let count694 =
            vCharAst_sfold_Expr_Type vCharAst_countTypeNodes count693 t989
          in
          let count695 =
            vCharAst_sfold_Expr_TypeLabel vCharAst_countTypeNodes count694 t989
          in
          let count696 = vCharAst_sfold_Expr_Pat vCharAst_countPatNodes count695 t989
          in
          count696
  let vCharAst_countTypeNodes =
    lam count697.
      lam __sem_target2240.
        match
          __sem_target2240
        with
          t990
        in
        let count698 = addi count697 1 in
          let count699 =
            vCharAst_sfold_Type_Type vCharAst_countTypeNodes count698 t990
          in
          count699
  let vCharAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f1745.
      lam __sem_target2241.
        match
          __sem_target2241
        with
          ty323
        in
        let res548 =
            vCharAst_rappAccumL_Type_Type
              (lam #var"641".
                 lam t991.
                   ({}, f1745 t991))
              {}
              ty323
          in
          res548.1
  let vCharAst_sfold_Expr_Pat: all acc3282. (acc3282 -> Ast_Pat -> acc3282) -> acc3282 -> Ast_Expr -> acc3282 =
    lam f1746.
      lam acc3283.
        lam __sem_target2242.
          match
            __sem_target2242
          with
            p1437
          in
          match
              vCharAst_smapAccumL_Expr_Pat
                (lam acc3284.
                   lam a1056.
                     (f1746 acc3284 a1056, a1056))
                acc3283
                p1437
            with
              (acc3285, _)
            in
            acc3285
  let vCharAst_sfold_Pat_Expr: all acc3286. (acc3286 -> Ast_Expr -> acc3286) -> acc3286 -> Ast_Pat -> acc3286 =
    lam f1747.
      lam acc3287.
        lam __sem_target2243.
          match
            __sem_target2243
          with
            p1438
          in
          match
              vCharAst_smapAccumL_Pat_Expr
                (lam acc3288.
                   lam a1057.
                     (f1747 acc3288 a1057, a1057))
                acc3287
                p1438
            with
              (acc3289, _)
            in
            acc3289
  let vCharAst_sfold_Pat_Type: all acc3290. (acc3290 -> Ast_Type -> acc3290) -> acc3290 -> Ast_Pat -> acc3290 =
    lam f1748.
      lam acc3291.
        lam __sem_target2244.
          match
            __sem_target2244
          with
            p1439
          in
          match
              vCharAst_smapAccumL_Pat_Type
                (lam acc3292.
                   lam a1058.
                     (f1748 acc3292 a1058, a1058))
                acc3291
                p1439
            with
              (acc3293, _)
            in
            acc3293
  let vCharAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1749.
      lam __sem_target2245.
        match
          __sem_target2245
        with
          p1440
        in
        let res549 =
            vCharAst_smapAccumL_Expr_Expr
              (lam #var"642".
                 lam a1059.
                   ({}, f1749 a1059))
              {}
              p1440
          in
          res549.1
  let vCharAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f1750.
      lam __sem_target2246.
        match
          __sem_target2246
        with
          p1441
        in
        let res550 =
            vCharAst_smapAccumL_Expr_Type
              (lam #var"643".
                 lam a1060.
                   ({}, f1750 a1060))
              {}
              p1441
          in
          res550.1
  let vCharAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f1751: Ast_Type -> Ast_Type.
      lam __sem_target2247.
        match
          __sem_target2247
        with
          s284
        in
        match
            vCharAst_smapAccumL_Kind_Type
              (lam #var"644".
                 lam x503.
                   ({}, f1751 x503))
              {}
              s284
          with
            (_, s285)
          in
          s285
  let vCharAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f1752.
      lam __sem_target2248.
        match
          __sem_target2248
        with
          p1442
        in
        let res551 =
            vCharAst_smapAccumL_Type_Type
              (lam #var"645".
                 lam a1061.
                   ({}, f1752 a1061))
              {}
              p1442
          in
          res551.1
  let vCharAst_sfold_Expr_Expr: all acc3294. (acc3294 -> Ast_Expr -> acc3294) -> acc3294 -> Ast_Expr -> acc3294 =
    lam f1753.
      lam acc3295.
        lam __sem_target2249.
          match
            __sem_target2249
          with
            p1443
          in
          let res552 =
              vCharAst_smapAccumL_Expr_Expr
                (lam acc3296.
                   lam a1062.
                     (f1753 acc3296 a1062, a1062))
                acc3295
                p1443
            in
            res552.0
  let vCharAst_sfold_Expr_Type: all acc3297. (acc3297 -> Ast_Type -> acc3297) -> acc3297 -> Ast_Expr -> acc3297 =
    lam f1754.
      lam acc3298.
        lam __sem_target2250.
          match
            __sem_target2250
          with
            p1444
          in
          let res553 =
              vCharAst_smapAccumL_Expr_Type
                (lam acc3299.
                   lam a1063.
                     (f1754 acc3299 a1063, a1063))
                acc3298
                p1444
            in
            res553.0
  let vCharAst_sfold_Kind_Type: all acc3300. (acc3300 -> Ast_Type -> acc3300) -> acc3300 -> Ast_Kind -> acc3300 =
    lam f1755: acc3300 -> Ast_Type -> acc3300.
      lam acc3301: acc3300.
        lam __sem_target2251.
          match
            __sem_target2251
          with
            s286
          in
          match
              vCharAst_smapAccumL_Kind_Type
                (lam a1064.
                   lam x504.
                     (f1755 a1064 x504, x504))
                acc3301
                s286
            with
              (a1065, _)
            in
            a1065
  let vCharAst_sfold_Type_Type: all acc3302. (acc3302 -> Ast_Type -> acc3302) -> acc3302 -> Ast_Type -> acc3302 =
    lam f1756.
      lam acc3303.
        lam __sem_target2252.
          match
            __sem_target2252
          with
            p1445
          in
          let res554 =
              vCharAst_smapAccumL_Type_Type
                (lam acc3304.
                   lam a1066.
                     (f1756 acc3304 a1066, a1066))
                acc3303
                p1445
            in
            res554.0
  let vCharAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1757.
      lam __sem_target2253.
        match
          __sem_target2253
        with
          expr441
        in
        let expr442 = f1757 expr441 in
          vCharAst_smap_Expr_Expr (vCharAst_mapPre_Expr_Expr f1757) expr442
  let vCharAst_foldPre_Expr_Expr: all acc3305. (acc3305 -> Ast_Expr -> acc3305) -> acc3305 -> Ast_Expr -> acc3305 =
    lam f1758.
      lam acc3306.
        lam __sem_target2254.
          match
            __sem_target2254
          with
            expr443
          in
          let acc3307 = f1758 acc3306 expr443 in
            vCharAst_sfold_Expr_Expr (vCharAst_foldPre_Expr_Expr f1758) acc3307 expr443
  let vCharAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1759.
      lam __sem_target2255.
        match
          __sem_target2255
        with
          expr444
        in
        f1759
            (vCharAst_smap_Expr_Expr (vCharAst_mapPost_Expr_Expr f1759) expr444)
  let vCharAst_foldPost_Expr_Expr: all acc3308. (acc3308 -> Ast_Expr -> acc3308) -> acc3308 -> Ast_Expr -> acc3308 =
    lam f1760.
      lam acc3309.
        lam __sem_target2256.
          match
            __sem_target2256
          with
            expr445
          in
          f1760
              (vCharAst_sfold_Expr_Expr (vCharAst_foldPost_Expr_Expr f1760) acc3309 expr445)
              expr445
  let vCharAst_smapAccumL_Pat_Pat: all acc3310. (acc3310 -> Ast_Pat -> (acc3310, Ast_Pat)) -> acc3310 -> Ast_Pat -> (acc3310, Ast_Pat) =
    lam f1761.
      lam acc3311.
        lam __sem_target2257.
          match
            __sem_target2257
          with
            p1446
          in
          (acc3311, p1446)
  let vCharAst_smapAccumL_Expr_Pat: all acc3312. (acc3312 -> Ast_Pat -> (acc3312, Ast_Pat)) -> acc3312 -> Ast_Expr -> (acc3312, Ast_Expr) =
    lam f1762.
      lam acc3313.
        lam __sem_target2258.
          match
            __sem_target2258
          with
            p1447
          in
          (acc3313, p1447)
  let vCharAst_smapAccumL_Pat_Expr: all acc3314. (acc3314 -> Ast_Expr -> (acc3314, Ast_Expr)) -> acc3314 -> Ast_Pat -> (acc3314, Ast_Pat) =
    lam f1763.
      lam acc3315.
        lam __sem_target2259.
          match
            __sem_target2259
          with
            p1448
          in
          (acc3315, p1448)
  let vCharAst_smapAccumL_Pat_Type: all acc3316. (acc3316 -> Ast_Type -> (acc3316, Ast_Type)) -> acc3316 -> Ast_Pat -> (acc3316, Ast_Pat) =
    lam f1764.
      lam acc3317.
        lam __sem_target2260.
          match
            __sem_target2260
          with
            p1449
          in
          (acc3317, p1449)
  let vCharAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f1765.
      lam __sem_target2261.
        match
          __sem_target2261
        with
          p1450
        in
        let res555 =
            vCharAst_smapAccumL_Expr_TypeLabel
              (lam #var"646".
                 lam a1067.
                   ({}, f1765 a1067))
              {}
              p1450
          in
          res555.1
  let vCharAst_rappAccumL_Type_Type: all acc3318. (acc3318 -> Ast_Type -> (acc3318, Ast_Type)) -> acc3318 -> Ast_Type -> (acc3318, Ast_Type) =
    lam f1766.
      lam acc3319.
        lam __sem_target2262.
          match
            __sem_target2262
          with
            ty324
          in
          (acc3319, ty324)
  let vCharAst_sfold_Expr_TypeLabel: all acc3320. (acc3320 -> Ast_Type -> acc3320) -> acc3320 -> Ast_Expr -> acc3320 =
    lam f1767.
      lam acc3321.
        lam __sem_target2263.
          match
            __sem_target2263
          with
            p1451
          in
          let res556 =
              vCharAst_smapAccumL_Expr_TypeLabel
                (lam acc3322.
                   lam a1068.
                     (f1767 acc3322 a1068, a1068))
                acc3321
                p1451
            in
            res556.0
  let vCharAst_smapAccumL_Expr_Expr: all acc3323. (acc3323 -> Ast_Expr -> (acc3323, Ast_Expr)) -> acc3323 -> Ast_Expr -> (acc3323, Ast_Expr) =
    lam f1768.
      lam acc3324.
        lam __sem_target2264.
          match
            __sem_target2264
          with
            p1452
          in
          (acc3324, p1452)
  let vCharAst_smapAccumL_Expr_Type: all acc3325. (acc3325 -> Ast_Type -> (acc3325, Ast_Type)) -> acc3325 -> Ast_Expr -> (acc3325, Ast_Expr) =
    lam f1769.
      lam acc3326.
        lam __sem_target2265.
          match
            __sem_target2265
          with
            p1453
          in
          (acc3326, p1453)
  let vCharAst_smapAccumL_Kind_Type: all acc3327. (acc3327 -> Ast_Type -> (acc3327, Ast_Type)) -> acc3327 -> Ast_Kind -> (acc3327, Ast_Kind) =
    lam f1770.
      lam acc3328.
        lam __sem_target2266.
          match
            __sem_target2266
          with
            s287
          in
          (acc3328, s287)
  let vCharAst_smapAccumL_Type_Type: all acc3329. (acc3329 -> Ast_Type -> (acc3329, Ast_Type)) -> acc3329 -> Ast_Type -> (acc3329, Ast_Type) =
    lam f1771.
      lam acc3330.
        lam __sem_target2267.
          match
            __sem_target2267
          with
            p1454
          in
          (acc3330, p1454)
  let vCharAst_mapAccumLPre_Expr_Expr: all acc3331. (acc3331 -> Ast_Expr -> (acc3331, Ast_Expr)) -> acc3331 -> Ast_Expr -> (acc3331, Ast_Expr) =
    lam f1772.
      lam acc3332.
        lam __sem_target2268.
          match
            __sem_target2268
          with
            expr446
          in
          match
              f1772 acc3332 expr446
            with
              (acc3333, expr447)
            in
            vCharAst_smapAccumL_Expr_Expr (vCharAst_mapAccumLPre_Expr_Expr f1772) acc3333 expr447
  let vCharAst_mapAccumLPost_Expr_Expr: all acc3334. (acc3334 -> Ast_Expr -> (acc3334, Ast_Expr)) -> acc3334 -> Ast_Expr -> (acc3334, Ast_Expr) =
    lam f1773.
      lam acc3335.
        lam __sem_target2269.
          match
            __sem_target2269
          with
            expr448
          in
          match
              vCharAst_smapAccumL_Expr_Expr (vCharAst_mapAccumLPost_Expr_Expr f1773) acc3335 expr448
            with
              (acc3336, expr449)
            in
            f1773 acc3336 expr449
  let vCharAst_smapAccumL_Expr_TypeLabel: all acc3337. (acc3337 -> Ast_Type -> (acc3337, Ast_Type)) -> acc3337 -> Ast_Expr -> (acc3337, Ast_Expr) =
    lam f1774.
      lam acc3338.
        lam __sem_target2270.
          match
            __sem_target2270
          with
            p1455
          in
          match
              f1774 acc3338 (vCharAst_tyTm p1455)
            with
              (acc3339, ty325)
            in
            (acc3339, vCharAst_withType ty325 p1455)
in
con CmpCharAst_CEqc: () -> ConstAst_Const in
recursive
  let vCmpCharAst_tyTm: Ast_Expr -> Ast_Type =
    lam __sem_target2183.
      match
        __sem_target2183
      with
        ConstAst_TmConst t978
      in
      t978.ty
  let vCmpCharAst_tyPat: Ast_Pat -> Ast_Type = lam x489.
      never
  let vCmpCharAst_infoTm: Ast_Expr -> Info =
    lam __sem_target2184.
      match
        __sem_target2184
      with
        ConstAst_TmConst r345
      in
      r345.info
  let vCmpCharAst_infoTy: Ast_Type -> Info = lam x490.
      never
  let vCmpCharAst_infoPat: Ast_Pat -> Info = lam x491.
      never
  let vCmpCharAst_withInfo: Info -> Ast_Expr -> Ast_Expr =
    lam info53.
      lam __sem_target2185.
        match
          __sem_target2185
        with
          ConstAst_TmConst t979
        in
        ConstAst_TmConst
            { t979 with info = info53 }
  let vCmpCharAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr =
    lam ty314: Ast_Type.
      lam __sem_target2186.
        match
          __sem_target2186
        with
          ConstAst_TmConst t980
        in
        ConstAst_TmConst
            { t980 with ty = ty314 }
  let vCmpCharAst_tyWithInfo: Info -> Ast_Type -> Ast_Type = lam x492.
      never
  let vCmpCharAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target2187.
      match
        __sem_target2187
      with
        ty315
      in
      vCmpCharAst_rapp_Type_Type vCmpCharAst_unwrapType ty315
  let vCmpCharAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target2188.
      match
        __sem_target2188
      with
        ty316
      in
      vCmpCharAst_rapp_Type_Type vCmpCharAst_inspectType ty316
  let vCmpCharAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x493.
      never
  let vCmpCharAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x494.
      never
  let vCmpCharAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f1705.
      lam __sem_target2189.
        match
          __sem_target2189
        with
          p1402
        in
        let res535 =
            vCmpCharAst_smapAccumL_Pat_Pat
              (lam #var"627".
                 lam a1033.
                   ({}, f1705 a1033))
              {}
              p1402
          in
          res535.1
  let vCmpCharAst_countPatNodes =
    lam count672.
      lam __sem_target2190.
        match
          __sem_target2190
        with
          t981
        in
        let count673 = addi count672 1 in
          let count674 =
            vCmpCharAst_sfold_Pat_Pat vCmpCharAst_countPatNodes count673 t981
          in
          let count675 =
            vCmpCharAst_sfold_Pat_Expr vCmpCharAst_countExprNodes count674 t981
          in
          let count676 =
            vCmpCharAst_sfold_Pat_Type vCmpCharAst_countTypeNodes count675 t981
          in
          count676
  let vCmpCharAst_sfold_Pat_Pat: all acc3218. (acc3218 -> Ast_Pat -> acc3218) -> acc3218 -> Ast_Pat -> acc3218 =
    lam f1706.
      lam acc3219.
        lam __sem_target2191.
          match
            __sem_target2191
          with
            p1403
          in
          let res536 =
              vCmpCharAst_smapAccumL_Pat_Pat
                (lam acc3220.
                   lam a1034.
                     (f1706 acc3220 a1034, a1034))
                acc3219
                p1403
            in
            res536.0
  let vCmpCharAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f1707.
      lam __sem_target2192.
        match
          __sem_target2192
        with
          p1404
        in
        match
            vCmpCharAst_smapAccumL_Expr_Pat
              (lam #var"628".
                 lam a1035.
                   ({}, f1707 a1035))
              {}
              p1404
          with
            (_, p1405)
          in
          p1405
  let vCmpCharAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f1708.
      lam __sem_target2193.
        match
          __sem_target2193
        with
          p1406
        in
        match
            vCmpCharAst_smapAccumL_Pat_Expr
              (lam #var"629".
                 lam a1036.
                   ({}, f1708 a1036))
              {}
              p1406
          with
            (_, p1407)
          in
          p1407
  let vCmpCharAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f1709.
      lam __sem_target2194.
        match
          __sem_target2194
        with
          p1408
        in
        match
            vCmpCharAst_smapAccumL_Pat_Type
              (lam #var"630".
                 lam a1037.
                   ({}, f1709 a1037))
              {}
              p1408
          with
            (_, p1409)
          in
          p1409
  let vCmpCharAst_countExprNodes =
    lam count677.
      lam __sem_target2195.
        match
          __sem_target2195
        with
          t982
        in
        let count678 = addi count677 1 in
          let count679 =
            vCmpCharAst_sfold_Expr_Expr vCmpCharAst_countExprNodes count678 t982
          in
          let count680 =
            vCmpCharAst_sfold_Expr_Type vCmpCharAst_countTypeNodes count679 t982
          in
          let count681 =
            vCmpCharAst_sfold_Expr_TypeLabel vCmpCharAst_countTypeNodes count680 t982
          in
          let count682 =
            vCmpCharAst_sfold_Expr_Pat vCmpCharAst_countPatNodes count681 t982
          in
          count682
  let vCmpCharAst_countTypeNodes =
    lam count683.
      lam __sem_target2196.
        match
          __sem_target2196
        with
          t983
        in
        let count684 = addi count683 1 in
          let count685 =
            vCmpCharAst_sfold_Type_Type vCmpCharAst_countTypeNodes count684 t983
          in
          count685
  let vCmpCharAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f1710.
      lam __sem_target2197.
        match
          __sem_target2197
        with
          ty317
        in
        let res537 =
            vCmpCharAst_rappAccumL_Type_Type
              (lam #var"631".
                 lam t984.
                   ({}, f1710 t984))
              {}
              ty317
          in
          res537.1
  let vCmpCharAst_sfold_Expr_Pat: all acc3221. (acc3221 -> Ast_Pat -> acc3221) -> acc3221 -> Ast_Expr -> acc3221 =
    lam f1711.
      lam acc3222.
        lam __sem_target2198.
          match
            __sem_target2198
          with
            p1410
          in
          match
              vCmpCharAst_smapAccumL_Expr_Pat
                (lam acc3223.
                   lam a1038.
                     (f1711 acc3223 a1038, a1038))
                acc3222
                p1410
            with
              (acc3224, _)
            in
            acc3224
  let vCmpCharAst_sfold_Pat_Expr: all acc3225. (acc3225 -> Ast_Expr -> acc3225) -> acc3225 -> Ast_Pat -> acc3225 =
    lam f1712.
      lam acc3226.
        lam __sem_target2199.
          match
            __sem_target2199
          with
            p1411
          in
          match
              vCmpCharAst_smapAccumL_Pat_Expr
                (lam acc3227.
                   lam a1039.
                     (f1712 acc3227 a1039, a1039))
                acc3226
                p1411
            with
              (acc3228, _)
            in
            acc3228
  let vCmpCharAst_sfold_Pat_Type: all acc3229. (acc3229 -> Ast_Type -> acc3229) -> acc3229 -> Ast_Pat -> acc3229 =
    lam f1713.
      lam acc3230.
        lam __sem_target2200.
          match
            __sem_target2200
          with
            p1412
          in
          match
              vCmpCharAst_smapAccumL_Pat_Type
                (lam acc3231.
                   lam a1040.
                     (f1713 acc3231 a1040, a1040))
                acc3230
                p1412
            with
              (acc3232, _)
            in
            acc3232
  let vCmpCharAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1714.
      lam __sem_target2201.
        match
          __sem_target2201
        with
          p1413
        in
        let res538 =
            vCmpCharAst_smapAccumL_Expr_Expr
              (lam #var"632".
                 lam a1041.
                   ({}, f1714 a1041))
              {}
              p1413
          in
          res538.1
  let vCmpCharAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f1715.
      lam __sem_target2202.
        match
          __sem_target2202
        with
          p1414
        in
        let res539 =
            vCmpCharAst_smapAccumL_Expr_Type
              (lam #var"633".
                 lam a1042.
                   ({}, f1715 a1042))
              {}
              p1414
          in
          res539.1
  let vCmpCharAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f1716: Ast_Type -> Ast_Type.
      lam __sem_target2203.
        match
          __sem_target2203
        with
          s280
        in
        match
            vCmpCharAst_smapAccumL_Kind_Type
              (lam #var"634".
                 lam x495.
                   ({}, f1716 x495))
              {}
              s280
          with
            (_, s281)
          in
          s281
  let vCmpCharAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f1717.
      lam __sem_target2204.
        match
          __sem_target2204
        with
          p1415
        in
        let res540 =
            vCmpCharAst_smapAccumL_Type_Type
              (lam #var"635".
                 lam a1043.
                   ({}, f1717 a1043))
              {}
              p1415
          in
          res540.1
  let vCmpCharAst_sfold_Expr_Expr: all acc3233. (acc3233 -> Ast_Expr -> acc3233) -> acc3233 -> Ast_Expr -> acc3233 =
    lam f1718.
      lam acc3234.
        lam __sem_target2205.
          match
            __sem_target2205
          with
            p1416
          in
          let res541 =
              vCmpCharAst_smapAccumL_Expr_Expr
                (lam acc3235.
                   lam a1044.
                     (f1718 acc3235 a1044, a1044))
                acc3234
                p1416
            in
            res541.0
  let vCmpCharAst_sfold_Expr_Type: all acc3236. (acc3236 -> Ast_Type -> acc3236) -> acc3236 -> Ast_Expr -> acc3236 =
    lam f1719.
      lam acc3237.
        lam __sem_target2206.
          match
            __sem_target2206
          with
            p1417
          in
          let res542 =
              vCmpCharAst_smapAccumL_Expr_Type
                (lam acc3238.
                   lam a1045.
                     (f1719 acc3238 a1045, a1045))
                acc3237
                p1417
            in
            res542.0
  let vCmpCharAst_sfold_Kind_Type: all acc3239. (acc3239 -> Ast_Type -> acc3239) -> acc3239 -> Ast_Kind -> acc3239 =
    lam f1720: acc3239 -> Ast_Type -> acc3239.
      lam acc3240: acc3239.
        lam __sem_target2207.
          match
            __sem_target2207
          with
            s282
          in
          match
              vCmpCharAst_smapAccumL_Kind_Type
                (lam a1046.
                   lam x496.
                     (f1720 a1046 x496, x496))
                acc3240
                s282
            with
              (a1047, _)
            in
            a1047
  let vCmpCharAst_sfold_Type_Type: all acc3241. (acc3241 -> Ast_Type -> acc3241) -> acc3241 -> Ast_Type -> acc3241 =
    lam f1721.
      lam acc3242.
        lam __sem_target2208.
          match
            __sem_target2208
          with
            p1418
          in
          let res543 =
              vCmpCharAst_smapAccumL_Type_Type
                (lam acc3243.
                   lam a1048.
                     (f1721 acc3243 a1048, a1048))
                acc3242
                p1418
            in
            res543.0
  let vCmpCharAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1722.
      lam __sem_target2209.
        match
          __sem_target2209
        with
          expr432
        in
        let expr433 = f1722 expr432 in
          vCmpCharAst_smap_Expr_Expr (vCmpCharAst_mapPre_Expr_Expr f1722) expr433
  let vCmpCharAst_foldPre_Expr_Expr: all acc3244. (acc3244 -> Ast_Expr -> acc3244) -> acc3244 -> Ast_Expr -> acc3244 =
    lam f1723.
      lam acc3245.
        lam __sem_target2210.
          match
            __sem_target2210
          with
            expr434
          in
          let acc3246 = f1723 acc3245 expr434 in
            vCmpCharAst_sfold_Expr_Expr (vCmpCharAst_foldPre_Expr_Expr f1723) acc3246 expr434
  let vCmpCharAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1724.
      lam __sem_target2211.
        match
          __sem_target2211
        with
          expr435
        in
        f1724
            (vCmpCharAst_smap_Expr_Expr (vCmpCharAst_mapPost_Expr_Expr f1724) expr435)
  let vCmpCharAst_foldPost_Expr_Expr: all acc3247. (acc3247 -> Ast_Expr -> acc3247) -> acc3247 -> Ast_Expr -> acc3247 =
    lam f1725.
      lam acc3248.
        lam __sem_target2212.
          match
            __sem_target2212
          with
            expr436
          in
          f1725
              (vCmpCharAst_sfold_Expr_Expr (vCmpCharAst_foldPost_Expr_Expr f1725) acc3248 expr436)
              expr436
  let vCmpCharAst_smapAccumL_Pat_Pat: all acc3249. (acc3249 -> Ast_Pat -> (acc3249, Ast_Pat)) -> acc3249 -> Ast_Pat -> (acc3249, Ast_Pat) =
    lam f1726.
      lam acc3250.
        lam __sem_target2213.
          match
            __sem_target2213
          with
            p1419
          in
          (acc3250, p1419)
  let vCmpCharAst_smapAccumL_Expr_Pat: all acc3251. (acc3251 -> Ast_Pat -> (acc3251, Ast_Pat)) -> acc3251 -> Ast_Expr -> (acc3251, Ast_Expr) =
    lam f1727.
      lam acc3252.
        lam __sem_target2214.
          match
            __sem_target2214
          with
            p1420
          in
          (acc3252, p1420)
  let vCmpCharAst_smapAccumL_Pat_Expr: all acc3253. (acc3253 -> Ast_Expr -> (acc3253, Ast_Expr)) -> acc3253 -> Ast_Pat -> (acc3253, Ast_Pat) =
    lam f1728.
      lam acc3254.
        lam __sem_target2215.
          match
            __sem_target2215
          with
            p1421
          in
          (acc3254, p1421)
  let vCmpCharAst_smapAccumL_Pat_Type: all acc3255. (acc3255 -> Ast_Type -> (acc3255, Ast_Type)) -> acc3255 -> Ast_Pat -> (acc3255, Ast_Pat) =
    lam f1729.
      lam acc3256.
        lam __sem_target2216.
          match
            __sem_target2216
          with
            p1422
          in
          (acc3256, p1422)
  let vCmpCharAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f1730.
      lam __sem_target2217.
        match
          __sem_target2217
        with
          p1423
        in
        let res544 =
            vCmpCharAst_smapAccumL_Expr_TypeLabel
              (lam #var"636".
                 lam a1049.
                   ({}, f1730 a1049))
              {}
              p1423
          in
          res544.1
  let vCmpCharAst_rappAccumL_Type_Type: all acc3257. (acc3257 -> Ast_Type -> (acc3257, Ast_Type)) -> acc3257 -> Ast_Type -> (acc3257, Ast_Type) =
    lam f1731.
      lam acc3258.
        lam __sem_target2218.
          match
            __sem_target2218
          with
            ty318
          in
          (acc3258, ty318)
  let vCmpCharAst_sfold_Expr_TypeLabel: all acc3259. (acc3259 -> Ast_Type -> acc3259) -> acc3259 -> Ast_Expr -> acc3259 =
    lam f1732.
      lam acc3260.
        lam __sem_target2219.
          match
            __sem_target2219
          with
            p1424
          in
          let res545 =
              vCmpCharAst_smapAccumL_Expr_TypeLabel
                (lam acc3261.
                   lam a1050.
                     (f1732 acc3261 a1050, a1050))
                acc3260
                p1424
            in
            res545.0
  let vCmpCharAst_smapAccumL_Expr_Expr: all acc3262. (acc3262 -> Ast_Expr -> (acc3262, Ast_Expr)) -> acc3262 -> Ast_Expr -> (acc3262, Ast_Expr) =
    lam f1733.
      lam acc3263.
        lam __sem_target2220.
          match
            __sem_target2220
          with
            p1425
          in
          (acc3263, p1425)
  let vCmpCharAst_smapAccumL_Expr_Type: all acc3264. (acc3264 -> Ast_Type -> (acc3264, Ast_Type)) -> acc3264 -> Ast_Expr -> (acc3264, Ast_Expr) =
    lam f1734.
      lam acc3265.
        lam __sem_target2221.
          match
            __sem_target2221
          with
            p1426
          in
          (acc3265, p1426)
  let vCmpCharAst_smapAccumL_Kind_Type: all acc3266. (acc3266 -> Ast_Type -> (acc3266, Ast_Type)) -> acc3266 -> Ast_Kind -> (acc3266, Ast_Kind) =
    lam f1735.
      lam acc3267.
        lam __sem_target2222.
          match
            __sem_target2222
          with
            s283
          in
          (acc3267, s283)
  let vCmpCharAst_smapAccumL_Type_Type: all acc3268. (acc3268 -> Ast_Type -> (acc3268, Ast_Type)) -> acc3268 -> Ast_Type -> (acc3268, Ast_Type) =
    lam f1736.
      lam acc3269.
        lam __sem_target2223.
          match
            __sem_target2223
          with
            p1427
          in
          (acc3269, p1427)
  let vCmpCharAst_mapAccumLPre_Expr_Expr: all acc3270. (acc3270 -> Ast_Expr -> (acc3270, Ast_Expr)) -> acc3270 -> Ast_Expr -> (acc3270, Ast_Expr) =
    lam f1737.
      lam acc3271.
        lam __sem_target2224.
          match
            __sem_target2224
          with
            expr437
          in
          match
              f1737 acc3271 expr437
            with
              (acc3272, expr438)
            in
            vCmpCharAst_smapAccumL_Expr_Expr (vCmpCharAst_mapAccumLPre_Expr_Expr f1737) acc3272 expr438
  let vCmpCharAst_mapAccumLPost_Expr_Expr: all acc3273. (acc3273 -> Ast_Expr -> (acc3273, Ast_Expr)) -> acc3273 -> Ast_Expr -> (acc3273, Ast_Expr) =
    lam f1738.
      lam acc3274.
        lam __sem_target2225.
          match
            __sem_target2225
          with
            expr439
          in
          match
              vCmpCharAst_smapAccumL_Expr_Expr (vCmpCharAst_mapAccumLPost_Expr_Expr f1738) acc3274 expr439
            with
              (acc3275, expr440)
            in
            f1738 acc3275 expr440
  let vCmpCharAst_smapAccumL_Expr_TypeLabel: all acc3276. (acc3276 -> Ast_Type -> (acc3276, Ast_Type)) -> acc3276 -> Ast_Expr -> (acc3276, Ast_Expr) =
    lam f1739.
      lam acc3277.
        lam __sem_target2226.
          match
            __sem_target2226
          with
            p1428
          in
          match
              f1739 acc3277 (vCmpCharAst_tyTm p1428)
            with
              (acc3278, ty319)
            in
            (acc3278, vCmpCharAst_withType ty319 p1428)
in
con IntCharConversionAst_CInt2Char: () -> ConstAst_Const in
con IntCharConversionAst_CChar2Int: () -> ConstAst_Const in
recursive
  let vIntCharConversionAst_tyTm: Ast_Expr -> Ast_Type =
    lam __sem_target2139.
      match
        __sem_target2139
      with
        ConstAst_TmConst t971
      in
      t971.ty
  let vIntCharConversionAst_tyPat: Ast_Pat -> Ast_Type = lam x481.
      never
  let vIntCharConversionAst_infoTm: Ast_Expr -> Info =
    lam __sem_target2140.
      match
        __sem_target2140
      with
        ConstAst_TmConst r344
      in
      r344.info
  let vIntCharConversionAst_infoTy: Ast_Type -> Info = lam x482.
      never
  let vIntCharConversionAst_infoPat: Ast_Pat -> Info = lam x483.
      never
  let vIntCharConversionAst_withInfo: Info -> Ast_Expr -> Ast_Expr =
    lam info52.
      lam __sem_target2141.
        match
          __sem_target2141
        with
          ConstAst_TmConst t972
        in
        ConstAst_TmConst
            { t972 with info = info52 }
  let vIntCharConversionAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr =
    lam ty308: Ast_Type.
      lam __sem_target2142.
        match
          __sem_target2142
        with
          ConstAst_TmConst t973
        in
        ConstAst_TmConst
            { t973 with ty = ty308 }
  let vIntCharConversionAst_tyWithInfo: Info -> Ast_Type -> Ast_Type = lam x484.
      never
  let vIntCharConversionAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target2143.
      match
        __sem_target2143
      with
        ty309
      in
      vIntCharConversionAst_rapp_Type_Type vIntCharConversionAst_unwrapType ty309
  let vIntCharConversionAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target2144.
      match
        __sem_target2144
      with
        ty310
      in
      vIntCharConversionAst_rapp_Type_Type vIntCharConversionAst_inspectType ty310
  let vIntCharConversionAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x485.
      never
  let vIntCharConversionAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x486.
      never
  let vIntCharConversionAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f1670.
      lam __sem_target2145.
        match
          __sem_target2145
        with
          p1375
        in
        let res524 =
            vIntCharConversionAst_smapAccumL_Pat_Pat
              (lam #var"617".
                 lam a1015.
                   ({}, f1670 a1015))
              {}
              p1375
          in
          res524.1
  let vIntCharConversionAst_countPatNodes =
    lam count658.
      lam __sem_target2146.
        match
          __sem_target2146
        with
          t974
        in
        let count659 = addi count658 1 in
          let count660 =
            vIntCharConversionAst_sfold_Pat_Pat vIntCharConversionAst_countPatNodes count659 t974
          in
          let count661 =
            vIntCharConversionAst_sfold_Pat_Expr vIntCharConversionAst_countExprNodes count660 t974
          in
          let count662 =
            vIntCharConversionAst_sfold_Pat_Type vIntCharConversionAst_countTypeNodes count661 t974
          in
          count662
  let vIntCharConversionAst_sfold_Pat_Pat: all acc3157. (acc3157 -> Ast_Pat -> acc3157) -> acc3157 -> Ast_Pat -> acc3157 =
    lam f1671.
      lam acc3158.
        lam __sem_target2147.
          match
            __sem_target2147
          with
            p1376
          in
          let res525 =
              vIntCharConversionAst_smapAccumL_Pat_Pat
                (lam acc3159.
                   lam a1016.
                     (f1671 acc3159 a1016, a1016))
                acc3158
                p1376
            in
            res525.0
  let vIntCharConversionAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f1672.
      lam __sem_target2148.
        match
          __sem_target2148
        with
          p1377
        in
        match
            vIntCharConversionAst_smapAccumL_Expr_Pat
              (lam #var"618".
                 lam a1017.
                   ({}, f1672 a1017))
              {}
              p1377
          with
            (_, p1378)
          in
          p1378
  let vIntCharConversionAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f1673.
      lam __sem_target2149.
        match
          __sem_target2149
        with
          p1379
        in
        match
            vIntCharConversionAst_smapAccumL_Pat_Expr
              (lam #var"619".
                 lam a1018.
                   ({}, f1673 a1018))
              {}
              p1379
          with
            (_, p1380)
          in
          p1380
  let vIntCharConversionAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f1674.
      lam __sem_target2150.
        match
          __sem_target2150
        with
          p1381
        in
        match
            vIntCharConversionAst_smapAccumL_Pat_Type
              (lam #var"620".
                 lam a1019.
                   ({}, f1674 a1019))
              {}
              p1381
          with
            (_, p1382)
          in
          p1382
  let vIntCharConversionAst_countExprNodes =
    lam count663.
      lam __sem_target2151.
        match
          __sem_target2151
        with
          t975
        in
        let count664 = addi count663 1 in
          let count665 =
            vIntCharConversionAst_sfold_Expr_Expr vIntCharConversionAst_countExprNodes count664 t975
          in
          let count666 =
            vIntCharConversionAst_sfold_Expr_Type vIntCharConversionAst_countTypeNodes count665 t975
          in
          let count667 =
            vIntCharConversionAst_sfold_Expr_TypeLabel vIntCharConversionAst_countTypeNodes count666 t975
          in
          let count668 =
            vIntCharConversionAst_sfold_Expr_Pat vIntCharConversionAst_countPatNodes count667 t975
          in
          count668
  let vIntCharConversionAst_countTypeNodes =
    lam count669.
      lam __sem_target2152.
        match
          __sem_target2152
        with
          t976
        in
        let count670 = addi count669 1 in
          let count671 =
            vIntCharConversionAst_sfold_Type_Type vIntCharConversionAst_countTypeNodes count670 t976
          in
          count671
  let vIntCharConversionAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f1675.
      lam __sem_target2153.
        match
          __sem_target2153
        with
          ty311
        in
        let res526 =
            vIntCharConversionAst_rappAccumL_Type_Type
              (lam #var"621".
                 lam t977.
                   ({}, f1675 t977))
              {}
              ty311
          in
          res526.1
  let vIntCharConversionAst_sfold_Expr_Pat: all acc3160. (acc3160 -> Ast_Pat -> acc3160) -> acc3160 -> Ast_Expr -> acc3160 =
    lam f1676.
      lam acc3161.
        lam __sem_target2154.
          match
            __sem_target2154
          with
            p1383
          in
          match
              vIntCharConversionAst_smapAccumL_Expr_Pat
                (lam acc3162.
                   lam a1020.
                     (f1676 acc3162 a1020, a1020))
                acc3161
                p1383
            with
              (acc3163, _)
            in
            acc3163
  let vIntCharConversionAst_sfold_Pat_Expr: all acc3164. (acc3164 -> Ast_Expr -> acc3164) -> acc3164 -> Ast_Pat -> acc3164 =
    lam f1677.
      lam acc3165.
        lam __sem_target2155.
          match
            __sem_target2155
          with
            p1384
          in
          match
              vIntCharConversionAst_smapAccumL_Pat_Expr
                (lam acc3166.
                   lam a1021.
                     (f1677 acc3166 a1021, a1021))
                acc3165
                p1384
            with
              (acc3167, _)
            in
            acc3167
  let vIntCharConversionAst_sfold_Pat_Type: all acc3168. (acc3168 -> Ast_Type -> acc3168) -> acc3168 -> Ast_Pat -> acc3168 =
    lam f1678.
      lam acc3169.
        lam __sem_target2156.
          match
            __sem_target2156
          with
            p1385
          in
          match
              vIntCharConversionAst_smapAccumL_Pat_Type
                (lam acc3170.
                   lam a1022.
                     (f1678 acc3170 a1022, a1022))
                acc3169
                p1385
            with
              (acc3171, _)
            in
            acc3171
  let vIntCharConversionAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1679.
      lam __sem_target2157.
        match
          __sem_target2157
        with
          p1386
        in
        let res527 =
            vIntCharConversionAst_smapAccumL_Expr_Expr
              (lam #var"622".
                 lam a1023.
                   ({}, f1679 a1023))
              {}
              p1386
          in
          res527.1
  let vIntCharConversionAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f1680.
      lam __sem_target2158.
        match
          __sem_target2158
        with
          p1387
        in
        let res528 =
            vIntCharConversionAst_smapAccumL_Expr_Type
              (lam #var"623".
                 lam a1024.
                   ({}, f1680 a1024))
              {}
              p1387
          in
          res528.1
  let vIntCharConversionAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f1681: Ast_Type -> Ast_Type.
      lam __sem_target2159.
        match
          __sem_target2159
        with
          s276
        in
        match
            vIntCharConversionAst_smapAccumL_Kind_Type
              (lam #var"624".
                 lam x487.
                   ({}, f1681 x487))
              {}
              s276
          with
            (_, s277)
          in
          s277
  let vIntCharConversionAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f1682.
      lam __sem_target2160.
        match
          __sem_target2160
        with
          p1388
        in
        let res529 =
            vIntCharConversionAst_smapAccumL_Type_Type
              (lam #var"625".
                 lam a1025.
                   ({}, f1682 a1025))
              {}
              p1388
          in
          res529.1
  let vIntCharConversionAst_sfold_Expr_Expr: all acc3172. (acc3172 -> Ast_Expr -> acc3172) -> acc3172 -> Ast_Expr -> acc3172 =
    lam f1683.
      lam acc3173.
        lam __sem_target2161.
          match
            __sem_target2161
          with
            p1389
          in
          let res530 =
              vIntCharConversionAst_smapAccumL_Expr_Expr
                (lam acc3174.
                   lam a1026.
                     (f1683 acc3174 a1026, a1026))
                acc3173
                p1389
            in
            res530.0
  let vIntCharConversionAst_sfold_Expr_Type: all acc3175. (acc3175 -> Ast_Type -> acc3175) -> acc3175 -> Ast_Expr -> acc3175 =
    lam f1684.
      lam acc3176.
        lam __sem_target2162.
          match
            __sem_target2162
          with
            p1390
          in
          let res531 =
              vIntCharConversionAst_smapAccumL_Expr_Type
                (lam acc3177.
                   lam a1027.
                     (f1684 acc3177 a1027, a1027))
                acc3176
                p1390
            in
            res531.0
  let vIntCharConversionAst_sfold_Kind_Type: all acc3178. (acc3178 -> Ast_Type -> acc3178) -> acc3178 -> Ast_Kind -> acc3178 =
    lam f1685: acc3178 -> Ast_Type -> acc3178.
      lam acc3179: acc3178.
        lam __sem_target2163.
          match
            __sem_target2163
          with
            s278
          in
          match
              vIntCharConversionAst_smapAccumL_Kind_Type
                (lam a1028.
                   lam x488.
                     (f1685 a1028 x488, x488))
                acc3179
                s278
            with
              (a1029, _)
            in
            a1029
  let vIntCharConversionAst_sfold_Type_Type: all acc3180. (acc3180 -> Ast_Type -> acc3180) -> acc3180 -> Ast_Type -> acc3180 =
    lam f1686.
      lam acc3181.
        lam __sem_target2164.
          match
            __sem_target2164
          with
            p1391
          in
          let res532 =
              vIntCharConversionAst_smapAccumL_Type_Type
                (lam acc3182.
                   lam a1030.
                     (f1686 acc3182 a1030, a1030))
                acc3181
                p1391
            in
            res532.0
  let vIntCharConversionAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1687.
      lam __sem_target2165.
        match
          __sem_target2165
        with
          expr423
        in
        let expr424 = f1687 expr423 in
          vIntCharConversionAst_smap_Expr_Expr (vIntCharConversionAst_mapPre_Expr_Expr f1687) expr424
  let vIntCharConversionAst_foldPre_Expr_Expr: all acc3183. (acc3183 -> Ast_Expr -> acc3183) -> acc3183 -> Ast_Expr -> acc3183 =
    lam f1688.
      lam acc3184.
        lam __sem_target2166.
          match
            __sem_target2166
          with
            expr425
          in
          let acc3185 = f1688 acc3184 expr425 in
            vIntCharConversionAst_sfold_Expr_Expr
              (vIntCharConversionAst_foldPre_Expr_Expr f1688)
              acc3185
              expr425
  let vIntCharConversionAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1689.
      lam __sem_target2167.
        match
          __sem_target2167
        with
          expr426
        in
        f1689
            (vIntCharConversionAst_smap_Expr_Expr (vIntCharConversionAst_mapPost_Expr_Expr f1689) expr426)
  let vIntCharConversionAst_foldPost_Expr_Expr: all acc3186. (acc3186 -> Ast_Expr -> acc3186) -> acc3186 -> Ast_Expr -> acc3186 =
    lam f1690.
      lam acc3187.
        lam __sem_target2168.
          match
            __sem_target2168
          with
            expr427
          in
          f1690
              (vIntCharConversionAst_sfold_Expr_Expr
                 (vIntCharConversionAst_foldPost_Expr_Expr f1690)
                 acc3187
                 expr427)
              expr427
  let vIntCharConversionAst_smapAccumL_Pat_Pat: all acc3188. (acc3188 -> Ast_Pat -> (acc3188, Ast_Pat)) -> acc3188 -> Ast_Pat -> (acc3188, Ast_Pat) =
    lam f1691.
      lam acc3189.
        lam __sem_target2169.
          match
            __sem_target2169
          with
            p1392
          in
          (acc3189, p1392)
  let vIntCharConversionAst_smapAccumL_Expr_Pat: all acc3190. (acc3190 -> Ast_Pat -> (acc3190, Ast_Pat)) -> acc3190 -> Ast_Expr -> (acc3190, Ast_Expr) =
    lam f1692.
      lam acc3191.
        lam __sem_target2170.
          match
            __sem_target2170
          with
            p1393
          in
          (acc3191, p1393)
  let vIntCharConversionAst_smapAccumL_Pat_Expr: all acc3192. (acc3192 -> Ast_Expr -> (acc3192, Ast_Expr)) -> acc3192 -> Ast_Pat -> (acc3192, Ast_Pat) =
    lam f1693.
      lam acc3193.
        lam __sem_target2171.
          match
            __sem_target2171
          with
            p1394
          in
          (acc3193, p1394)
  let vIntCharConversionAst_smapAccumL_Pat_Type: all acc3194. (acc3194 -> Ast_Type -> (acc3194, Ast_Type)) -> acc3194 -> Ast_Pat -> (acc3194, Ast_Pat) =
    lam f1694.
      lam acc3195.
        lam __sem_target2172.
          match
            __sem_target2172
          with
            p1395
          in
          (acc3195, p1395)
  let vIntCharConversionAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f1695.
      lam __sem_target2173.
        match
          __sem_target2173
        with
          p1396
        in
        let res533 =
            vIntCharConversionAst_smapAccumL_Expr_TypeLabel
              (lam #var"626".
                 lam a1031.
                   ({}, f1695 a1031))
              {}
              p1396
          in
          res533.1
  let vIntCharConversionAst_rappAccumL_Type_Type: all acc3196. (acc3196 -> Ast_Type -> (acc3196, Ast_Type)) -> acc3196 -> Ast_Type -> (acc3196, Ast_Type) =
    lam f1696.
      lam acc3197.
        lam __sem_target2174.
          match
            __sem_target2174
          with
            ty312
          in
          (acc3197, ty312)
  let vIntCharConversionAst_sfold_Expr_TypeLabel: all acc3198. (acc3198 -> Ast_Type -> acc3198) -> acc3198 -> Ast_Expr -> acc3198 =
    lam f1697.
      lam acc3199.
        lam __sem_target2175.
          match
            __sem_target2175
          with
            p1397
          in
          let res534 =
              vIntCharConversionAst_smapAccumL_Expr_TypeLabel
                (lam acc3200.
                   lam a1032.
                     (f1697 acc3200 a1032, a1032))
                acc3199
                p1397
            in
            res534.0
  let vIntCharConversionAst_smapAccumL_Expr_Expr: all acc3201. (acc3201 -> Ast_Expr -> (acc3201, Ast_Expr)) -> acc3201 -> Ast_Expr -> (acc3201, Ast_Expr) =
    lam f1698.
      lam acc3202.
        lam __sem_target2176.
          match
            __sem_target2176
          with
            p1398
          in
          (acc3202, p1398)
  let vIntCharConversionAst_smapAccumL_Expr_Type: all acc3203. (acc3203 -> Ast_Type -> (acc3203, Ast_Type)) -> acc3203 -> Ast_Expr -> (acc3203, Ast_Expr) =
    lam f1699.
      lam acc3204.
        lam __sem_target2177.
          match
            __sem_target2177
          with
            p1399
          in
          (acc3204, p1399)
  let vIntCharConversionAst_smapAccumL_Kind_Type: all acc3205. (acc3205 -> Ast_Type -> (acc3205, Ast_Type)) -> acc3205 -> Ast_Kind -> (acc3205, Ast_Kind) =
    lam f1700.
      lam acc3206.
        lam __sem_target2178.
          match
            __sem_target2178
          with
            s279
          in
          (acc3206, s279)
  let vIntCharConversionAst_smapAccumL_Type_Type: all acc3207. (acc3207 -> Ast_Type -> (acc3207, Ast_Type)) -> acc3207 -> Ast_Type -> (acc3207, Ast_Type) =
    lam f1701.
      lam acc3208.
        lam __sem_target2179.
          match
            __sem_target2179
          with
            p1400
          in
          (acc3208, p1400)
  let vIntCharConversionAst_mapAccumLPre_Expr_Expr: all acc3209. (acc3209 -> Ast_Expr -> (acc3209, Ast_Expr)) -> acc3209 -> Ast_Expr -> (acc3209, Ast_Expr) =
    lam f1702.
      lam acc3210.
        lam __sem_target2180.
          match
            __sem_target2180
          with
            expr428
          in
          match
              f1702 acc3210 expr428
            with
              (acc3211, expr429)
            in
            vIntCharConversionAst_smapAccumL_Expr_Expr
                (vIntCharConversionAst_mapAccumLPre_Expr_Expr f1702)
                acc3211
                expr429
  let vIntCharConversionAst_mapAccumLPost_Expr_Expr: all acc3212. (acc3212 -> Ast_Expr -> (acc3212, Ast_Expr)) -> acc3212 -> Ast_Expr -> (acc3212, Ast_Expr) =
    lam f1703.
      lam acc3213.
        lam __sem_target2181.
          match
            __sem_target2181
          with
            expr430
          in
          match
              vIntCharConversionAst_smapAccumL_Expr_Expr
                (vIntCharConversionAst_mapAccumLPost_Expr_Expr f1703)
                acc3213
                expr430
            with
              (acc3214, expr431)
            in
            f1703 acc3214 expr431
  let vIntCharConversionAst_smapAccumL_Expr_TypeLabel: all acc3215. (acc3215 -> Ast_Type -> (acc3215, Ast_Type)) -> acc3215 -> Ast_Expr -> (acc3215, Ast_Expr) =
    lam f1704.
      lam acc3216.
        lam __sem_target2182.
          match
            __sem_target2182
          with
            p1401
          in
          match
              f1704 acc3216 (vIntCharConversionAst_tyTm p1401)
            with
              (acc3217, ty313)
            in
            (acc3217, vIntCharConversionAst_withType ty313 p1401)
in
con FloatStringConversionAst_CStringIsFloat: () -> ConstAst_Const in
con FloatStringConversionAst_CString2float: () -> ConstAst_Const in
con FloatStringConversionAst_CFloat2string: () -> ConstAst_Const in
recursive
  let vFloatStringConversionAst_tyTm: Ast_Expr -> Ast_Type =
    lam __sem_target2095.
      match
        __sem_target2095
      with
        ConstAst_TmConst t960
      then
        t960.ty
      else match
        __sem_target2095
      with
        SeqAst_TmSeq t961
      in
      t961.ty
  let vFloatStringConversionAst_tyPat: Ast_Pat -> Ast_Type = lam x473.
      never
  let vFloatStringConversionAst_infoTm: Ast_Expr -> Info =
    lam __sem_target2096.
      match
        __sem_target2096
      with
        ConstAst_TmConst r342
      then
        r342.info
      else match
        __sem_target2096
      with
        SeqAst_TmSeq r343
      in
      r343.info
  let vFloatStringConversionAst_infoTy: Ast_Type -> Info = lam x474.
      never
  let vFloatStringConversionAst_infoPat: Ast_Pat -> Info = lam x475.
      never
  let vFloatStringConversionAst_withInfo: Info -> Ast_Expr -> Ast_Expr =
    lam info51.
      lam __sem_target2097.
        match
          __sem_target2097
        with
          ConstAst_TmConst t962
        then
          ConstAst_TmConst
            { t962 with info = info51 }
        else match
          __sem_target2097
        with
          SeqAst_TmSeq t963
        in
        SeqAst_TmSeq
            { t963 with info = info51 }
  let vFloatStringConversionAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr =
    lam ty302: Ast_Type.
      lam __sem_target2098.
        match
          __sem_target2098
        with
          ConstAst_TmConst t964
        then
          ConstAst_TmConst
            { t964 with ty = ty302 }
        else match
          __sem_target2098
        with
          SeqAst_TmSeq t965
        in
        SeqAst_TmSeq
            { t965 with ty = ty302 }
  let vFloatStringConversionAst_tyWithInfo: Info -> Ast_Type -> Ast_Type = lam x476.
      never
  let vFloatStringConversionAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target2099.
      match
        __sem_target2099
      with
        ty303
      in
      vFloatStringConversionAst_rapp_Type_Type vFloatStringConversionAst_unwrapType ty303
  let vFloatStringConversionAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target2100.
      match
        __sem_target2100
      with
        ty304
      in
      vFloatStringConversionAst_rapp_Type_Type vFloatStringConversionAst_inspectType ty304
  let vFloatStringConversionAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x477.
      never
  let vFloatStringConversionAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x478.
      never
  let vFloatStringConversionAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f1635.
      lam __sem_target2101.
        match
          __sem_target2101
        with
          p1348
        in
        let res513 =
            vFloatStringConversionAst_smapAccumL_Pat_Pat
              (lam #var"607".
                 lam a997.
                   ({}, f1635 a997))
              {}
              p1348
          in
          res513.1
  let vFloatStringConversionAst_countPatNodes =
    lam count644.
      lam __sem_target2102.
        match
          __sem_target2102
        with
          t966
        in
        let count645 = addi count644 1 in
          let count646 =
            vFloatStringConversionAst_sfold_Pat_Pat vFloatStringConversionAst_countPatNodes count645 t966
          in
          let count647 =
            vFloatStringConversionAst_sfold_Pat_Expr vFloatStringConversionAst_countExprNodes count646 t966
          in
          let count648 =
            vFloatStringConversionAst_sfold_Pat_Type vFloatStringConversionAst_countTypeNodes count647 t966
          in
          count648
  let vFloatStringConversionAst_sfold_Pat_Pat: all acc3095. (acc3095 -> Ast_Pat -> acc3095) -> acc3095 -> Ast_Pat -> acc3095 =
    lam f1636.
      lam acc3096.
        lam __sem_target2103.
          match
            __sem_target2103
          with
            p1349
          in
          let res514 =
              vFloatStringConversionAst_smapAccumL_Pat_Pat
                (lam acc3097.
                   lam a998.
                     (f1636 acc3097 a998, a998))
                acc3096
                p1349
            in
            res514.0
  let vFloatStringConversionAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f1637.
      lam __sem_target2104.
        match
          __sem_target2104
        with
          p1350
        in
        match
            vFloatStringConversionAst_smapAccumL_Expr_Pat
              (lam #var"608".
                 lam a999.
                   ({}, f1637 a999))
              {}
              p1350
          with
            (_, p1351)
          in
          p1351
  let vFloatStringConversionAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f1638.
      lam __sem_target2105.
        match
          __sem_target2105
        with
          p1352
        in
        match
            vFloatStringConversionAst_smapAccumL_Pat_Expr
              (lam #var"609".
                 lam a1000.
                   ({}, f1638 a1000))
              {}
              p1352
          with
            (_, p1353)
          in
          p1353
  let vFloatStringConversionAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f1639.
      lam __sem_target2106.
        match
          __sem_target2106
        with
          p1354
        in
        match
            vFloatStringConversionAst_smapAccumL_Pat_Type
              (lam #var"610".
                 lam a1001.
                   ({}, f1639 a1001))
              {}
              p1354
          with
            (_, p1355)
          in
          p1355
  let vFloatStringConversionAst_countExprNodes =
    lam count649.
      lam __sem_target2107.
        match
          __sem_target2107
        with
          t967
        in
        let count650 = addi count649 1 in
          let count651 =
            vFloatStringConversionAst_sfold_Expr_Expr vFloatStringConversionAst_countExprNodes count650 t967
          in
          let count652 =
            vFloatStringConversionAst_sfold_Expr_Type vFloatStringConversionAst_countTypeNodes count651 t967
          in
          let count653 =
            vFloatStringConversionAst_sfold_Expr_TypeLabel vFloatStringConversionAst_countTypeNodes count652 t967
          in
          let count654 =
            vFloatStringConversionAst_sfold_Expr_Pat vFloatStringConversionAst_countPatNodes count653 t967
          in
          count654
  let vFloatStringConversionAst_countTypeNodes =
    lam count655.
      lam __sem_target2108.
        match
          __sem_target2108
        with
          t968
        in
        let count656 = addi count655 1 in
          let count657 =
            vFloatStringConversionAst_sfold_Type_Type vFloatStringConversionAst_countTypeNodes count656 t968
          in
          count657
  let vFloatStringConversionAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f1640.
      lam __sem_target2109.
        match
          __sem_target2109
        with
          ty305
        in
        let res515 =
            vFloatStringConversionAst_rappAccumL_Type_Type
              (lam #var"611".
                 lam t969.
                   ({}, f1640 t969))
              {}
              ty305
          in
          res515.1
  let vFloatStringConversionAst_sfold_Expr_Pat: all acc3098. (acc3098 -> Ast_Pat -> acc3098) -> acc3098 -> Ast_Expr -> acc3098 =
    lam f1641.
      lam acc3099.
        lam __sem_target2110.
          match
            __sem_target2110
          with
            p1356
          in
          match
              vFloatStringConversionAst_smapAccumL_Expr_Pat
                (lam acc3100.
                   lam a1002.
                     (f1641 acc3100 a1002, a1002))
                acc3099
                p1356
            with
              (acc3101, _)
            in
            acc3101
  let vFloatStringConversionAst_sfold_Pat_Expr: all acc3102. (acc3102 -> Ast_Expr -> acc3102) -> acc3102 -> Ast_Pat -> acc3102 =
    lam f1642.
      lam acc3103.
        lam __sem_target2111.
          match
            __sem_target2111
          with
            p1357
          in
          match
              vFloatStringConversionAst_smapAccumL_Pat_Expr
                (lam acc3104.
                   lam a1003.
                     (f1642 acc3104 a1003, a1003))
                acc3103
                p1357
            with
              (acc3105, _)
            in
            acc3105
  let vFloatStringConversionAst_sfold_Pat_Type: all acc3106. (acc3106 -> Ast_Type -> acc3106) -> acc3106 -> Ast_Pat -> acc3106 =
    lam f1643.
      lam acc3107.
        lam __sem_target2112.
          match
            __sem_target2112
          with
            p1358
          in
          match
              vFloatStringConversionAst_smapAccumL_Pat_Type
                (lam acc3108.
                   lam a1004.
                     (f1643 acc3108 a1004, a1004))
                acc3107
                p1358
            with
              (acc3109, _)
            in
            acc3109
  let vFloatStringConversionAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1644.
      lam __sem_target2113.
        match
          __sem_target2113
        with
          p1359
        in
        let res516 =
            vFloatStringConversionAst_smapAccumL_Expr_Expr
              (lam #var"612".
                 lam a1005.
                   ({}, f1644 a1005))
              {}
              p1359
          in
          res516.1
  let vFloatStringConversionAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f1645.
      lam __sem_target2114.
        match
          __sem_target2114
        with
          p1360
        in
        let res517 =
            vFloatStringConversionAst_smapAccumL_Expr_Type
              (lam #var"613".
                 lam a1006.
                   ({}, f1645 a1006))
              {}
              p1360
          in
          res517.1
  let vFloatStringConversionAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f1646: Ast_Type -> Ast_Type.
      lam __sem_target2115.
        match
          __sem_target2115
        with
          s272
        in
        match
            vFloatStringConversionAst_smapAccumL_Kind_Type
              (lam #var"614".
                 lam x479.
                   ({}, f1646 x479))
              {}
              s272
          with
            (_, s273)
          in
          s273
  let vFloatStringConversionAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f1647.
      lam __sem_target2116.
        match
          __sem_target2116
        with
          p1361
        in
        let res518 =
            vFloatStringConversionAst_smapAccumL_Type_Type
              (lam #var"615".
                 lam a1007.
                   ({}, f1647 a1007))
              {}
              p1361
          in
          res518.1
  let vFloatStringConversionAst_sfold_Expr_Expr: all acc3110. (acc3110 -> Ast_Expr -> acc3110) -> acc3110 -> Ast_Expr -> acc3110 =
    lam f1648.
      lam acc3111.
        lam __sem_target2117.
          match
            __sem_target2117
          with
            p1362
          in
          let res519 =
              vFloatStringConversionAst_smapAccumL_Expr_Expr
                (lam acc3112.
                   lam a1008.
                     (f1648 acc3112 a1008, a1008))
                acc3111
                p1362
            in
            res519.0
  let vFloatStringConversionAst_sfold_Expr_Type: all acc3113. (acc3113 -> Ast_Type -> acc3113) -> acc3113 -> Ast_Expr -> acc3113 =
    lam f1649.
      lam acc3114.
        lam __sem_target2118.
          match
            __sem_target2118
          with
            p1363
          in
          let res520 =
              vFloatStringConversionAst_smapAccumL_Expr_Type
                (lam acc3115.
                   lam a1009.
                     (f1649 acc3115 a1009, a1009))
                acc3114
                p1363
            in
            res520.0
  let vFloatStringConversionAst_sfold_Kind_Type: all acc3116. (acc3116 -> Ast_Type -> acc3116) -> acc3116 -> Ast_Kind -> acc3116 =
    lam f1650: acc3116 -> Ast_Type -> acc3116.
      lam acc3117: acc3116.
        lam __sem_target2119.
          match
            __sem_target2119
          with
            s274
          in
          match
              vFloatStringConversionAst_smapAccumL_Kind_Type
                (lam a1010.
                   lam x480.
                     (f1650 a1010 x480, x480))
                acc3117
                s274
            with
              (a1011, _)
            in
            a1011
  let vFloatStringConversionAst_sfold_Type_Type: all acc3118. (acc3118 -> Ast_Type -> acc3118) -> acc3118 -> Ast_Type -> acc3118 =
    lam f1651.
      lam acc3119.
        lam __sem_target2120.
          match
            __sem_target2120
          with
            p1364
          in
          let res521 =
              vFloatStringConversionAst_smapAccumL_Type_Type
                (lam acc3120.
                   lam a1012.
                     (f1651 acc3120 a1012, a1012))
                acc3119
                p1364
            in
            res521.0
  let vFloatStringConversionAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1652.
      lam __sem_target2121.
        match
          __sem_target2121
        with
          expr414
        in
        let expr415 = f1652 expr414 in
          vFloatStringConversionAst_smap_Expr_Expr (vFloatStringConversionAst_mapPre_Expr_Expr f1652) expr415
  let vFloatStringConversionAst_foldPre_Expr_Expr: all acc3121. (acc3121 -> Ast_Expr -> acc3121) -> acc3121 -> Ast_Expr -> acc3121 =
    lam f1653.
      lam acc3122.
        lam __sem_target2122.
          match
            __sem_target2122
          with
            expr416
          in
          let acc3123 = f1653 acc3122 expr416 in
            vFloatStringConversionAst_sfold_Expr_Expr
              (vFloatStringConversionAst_foldPre_Expr_Expr f1653)
              acc3123
              expr416
  let vFloatStringConversionAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1654.
      lam __sem_target2123.
        match
          __sem_target2123
        with
          expr417
        in
        f1654
            (vFloatStringConversionAst_smap_Expr_Expr (vFloatStringConversionAst_mapPost_Expr_Expr f1654) expr417)
  let vFloatStringConversionAst_foldPost_Expr_Expr: all acc3124. (acc3124 -> Ast_Expr -> acc3124) -> acc3124 -> Ast_Expr -> acc3124 =
    lam f1655.
      lam acc3125.
        lam __sem_target2124.
          match
            __sem_target2124
          with
            expr418
          in
          f1655
              (vFloatStringConversionAst_sfold_Expr_Expr
                 (vFloatStringConversionAst_foldPost_Expr_Expr f1655)
                 acc3125
                 expr418)
              expr418
  let vFloatStringConversionAst_smapAccumL_Pat_Pat: all acc3126. (acc3126 -> Ast_Pat -> (acc3126, Ast_Pat)) -> acc3126 -> Ast_Pat -> (acc3126, Ast_Pat) =
    lam f1656.
      lam acc3127.
        lam __sem_target2125.
          match
            __sem_target2125
          with
            p1365
          in
          (acc3127, p1365)
  let vFloatStringConversionAst_smapAccumL_Expr_Pat: all acc3128. (acc3128 -> Ast_Pat -> (acc3128, Ast_Pat)) -> acc3128 -> Ast_Expr -> (acc3128, Ast_Expr) =
    lam f1657.
      lam acc3129.
        lam __sem_target2126.
          match
            __sem_target2126
          with
            p1366
          in
          (acc3129, p1366)
  let vFloatStringConversionAst_smapAccumL_Pat_Expr: all acc3130. (acc3130 -> Ast_Expr -> (acc3130, Ast_Expr)) -> acc3130 -> Ast_Pat -> (acc3130, Ast_Pat) =
    lam f1658.
      lam acc3131.
        lam __sem_target2127.
          match
            __sem_target2127
          with
            p1367
          in
          (acc3131, p1367)
  let vFloatStringConversionAst_smapAccumL_Pat_Type: all acc3132. (acc3132 -> Ast_Type -> (acc3132, Ast_Type)) -> acc3132 -> Ast_Pat -> (acc3132, Ast_Pat) =
    lam f1659.
      lam acc3133.
        lam __sem_target2128.
          match
            __sem_target2128
          with
            p1368
          in
          (acc3133, p1368)
  let vFloatStringConversionAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f1660.
      lam __sem_target2129.
        match
          __sem_target2129
        with
          p1369
        in
        let res522 =
            vFloatStringConversionAst_smapAccumL_Expr_TypeLabel
              (lam #var"616".
                 lam a1013.
                   ({}, f1660 a1013))
              {}
              p1369
          in
          res522.1
  let vFloatStringConversionAst_rappAccumL_Type_Type: all acc3134. (acc3134 -> Ast_Type -> (acc3134, Ast_Type)) -> acc3134 -> Ast_Type -> (acc3134, Ast_Type) =
    lam f1661.
      lam acc3135.
        lam __sem_target2130.
          match
            __sem_target2130
          with
            ty306
          in
          (acc3135, ty306)
  let vFloatStringConversionAst_sfold_Expr_TypeLabel: all acc3136. (acc3136 -> Ast_Type -> acc3136) -> acc3136 -> Ast_Expr -> acc3136 =
    lam f1662.
      lam acc3137.
        lam __sem_target2131.
          match
            __sem_target2131
          with
            p1370
          in
          let res523 =
              vFloatStringConversionAst_smapAccumL_Expr_TypeLabel
                (lam acc3138.
                   lam a1014.
                     (f1662 acc3138 a1014, a1014))
                acc3137
                p1370
            in
            res523.0
  let vFloatStringConversionAst_smapAccumL_Expr_Expr: all acc3139. (acc3139 -> Ast_Expr -> (acc3139, Ast_Expr)) -> acc3139 -> Ast_Expr -> (acc3139, Ast_Expr) =
    lam f1663.
      lam acc3140.
        lam __sem_target2132.
          match
            __sem_target2132
          with
            SeqAst_TmSeq t970
          then
            match
              mapAccumL f1663 acc3140 t970.tms
            with
              (acc3141, tms4)
            in
            (acc3141, SeqAst_TmSeq
                { t970 with tms = tms4 })
          else match
            __sem_target2132
          with
            p1371
          in
          (acc3140, p1371)
  let vFloatStringConversionAst_smapAccumL_Expr_Type: all acc3142. (acc3142 -> Ast_Type -> (acc3142, Ast_Type)) -> acc3142 -> Ast_Expr -> (acc3142, Ast_Expr) =
    lam f1664.
      lam acc3143.
        lam __sem_target2133.
          match
            __sem_target2133
          with
            p1372
          in
          (acc3143, p1372)
  let vFloatStringConversionAst_smapAccumL_Kind_Type: all acc3144. (acc3144 -> Ast_Type -> (acc3144, Ast_Type)) -> acc3144 -> Ast_Kind -> (acc3144, Ast_Kind) =
    lam f1665.
      lam acc3145.
        lam __sem_target2134.
          match
            __sem_target2134
          with
            s275
          in
          (acc3145, s275)
  let vFloatStringConversionAst_smapAccumL_Type_Type: all acc3146. (acc3146 -> Ast_Type -> (acc3146, Ast_Type)) -> acc3146 -> Ast_Type -> (acc3146, Ast_Type) =
    lam f1666.
      lam acc3147.
        lam __sem_target2135.
          match
            __sem_target2135
          with
            p1373
          in
          (acc3147, p1373)
  let vFloatStringConversionAst_mapAccumLPre_Expr_Expr: all acc3148. (acc3148 -> Ast_Expr -> (acc3148, Ast_Expr)) -> acc3148 -> Ast_Expr -> (acc3148, Ast_Expr) =
    lam f1667.
      lam acc3149.
        lam __sem_target2136.
          match
            __sem_target2136
          with
            expr419
          in
          match
              f1667 acc3149 expr419
            with
              (acc3150, expr420)
            in
            vFloatStringConversionAst_smapAccumL_Expr_Expr
                (vFloatStringConversionAst_mapAccumLPre_Expr_Expr f1667)
                acc3150
                expr420
  let vFloatStringConversionAst_mapAccumLPost_Expr_Expr: all acc3151. (acc3151 -> Ast_Expr -> (acc3151, Ast_Expr)) -> acc3151 -> Ast_Expr -> (acc3151, Ast_Expr) =
    lam f1668.
      lam acc3152.
        lam __sem_target2137.
          match
            __sem_target2137
          with
            expr421
          in
          match
              vFloatStringConversionAst_smapAccumL_Expr_Expr
                (vFloatStringConversionAst_mapAccumLPost_Expr_Expr f1668)
                acc3152
                expr421
            with
              (acc3153, expr422)
            in
            f1668 acc3153 expr422
  let vFloatStringConversionAst_smapAccumL_Expr_TypeLabel: all acc3154. (acc3154 -> Ast_Type -> (acc3154, Ast_Type)) -> acc3154 -> Ast_Expr -> (acc3154, Ast_Expr) =
    lam f1669.
      lam acc3155.
        lam __sem_target2138.
          match
            __sem_target2138
          with
            p1374
          in
          match
              f1669 acc3155 (vFloatStringConversionAst_tyTm p1374)
            with
              (acc3156, ty307)
            in
            (acc3156, vFloatStringConversionAst_withType ty307 p1374)
in
con SymbAst_CSym2hash: () -> ConstAst_Const in
con SymbAst_CGensym: () -> ConstAst_Const in
con SymbAst_CSymb: {val: Symbol} -> ConstAst_Const in
recursive
  let vSymbAst_tyTm: Ast_Expr -> Ast_Type =
    lam __sem_target2051.
      match
        __sem_target2051
      with
        ConstAst_TmConst t953
      in
      t953.ty
  let vSymbAst_tyPat: Ast_Pat -> Ast_Type = lam x465.
      never
  let vSymbAst_infoTm: Ast_Expr -> Info =
    lam __sem_target2052.
      match
        __sem_target2052
      with
        ConstAst_TmConst r341
      in
      r341.info
  let vSymbAst_infoTy: Ast_Type -> Info = lam x466.
      never
  let vSymbAst_infoPat: Ast_Pat -> Info = lam x467.
      never
  let vSymbAst_withInfo: Info -> Ast_Expr -> Ast_Expr =
    lam info50.
      lam __sem_target2053.
        match
          __sem_target2053
        with
          ConstAst_TmConst t954
        in
        ConstAst_TmConst
            { t954 with info = info50 }
  let vSymbAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr =
    lam ty296: Ast_Type.
      lam __sem_target2054.
        match
          __sem_target2054
        with
          ConstAst_TmConst t955
        in
        ConstAst_TmConst
            { t955 with ty = ty296 }
  let vSymbAst_tyWithInfo: Info -> Ast_Type -> Ast_Type = lam x468.
      never
  let vSymbAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target2055.
      match
        __sem_target2055
      with
        ty297
      in
      vSymbAst_rapp_Type_Type vSymbAst_unwrapType ty297
  let vSymbAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target2056.
      match
        __sem_target2056
      with
        ty298
      in
      vSymbAst_rapp_Type_Type vSymbAst_inspectType ty298
  let vSymbAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x469.
      never
  let vSymbAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x470.
      never
  let vSymbAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f1600.
      lam __sem_target2057.
        match
          __sem_target2057
        with
          p1321
        in
        let res502 =
            vSymbAst_smapAccumL_Pat_Pat
              (lam #var"597".
                 lam a979.
                   ({}, f1600 a979))
              {}
              p1321
          in
          res502.1
  let vSymbAst_countPatNodes =
    lam count630.
      lam __sem_target2058.
        match
          __sem_target2058
        with
          t956
        in
        let count631 = addi count630 1 in
          let count632 = vSymbAst_sfold_Pat_Pat vSymbAst_countPatNodes count631 t956
          in
          let count633 =
            vSymbAst_sfold_Pat_Expr vSymbAst_countExprNodes count632 t956
          in
          let count634 =
            vSymbAst_sfold_Pat_Type vSymbAst_countTypeNodes count633 t956
          in
          count634
  let vSymbAst_sfold_Pat_Pat: all acc3034. (acc3034 -> Ast_Pat -> acc3034) -> acc3034 -> Ast_Pat -> acc3034 =
    lam f1601.
      lam acc3035.
        lam __sem_target2059.
          match
            __sem_target2059
          with
            p1322
          in
          let res503 =
              vSymbAst_smapAccumL_Pat_Pat
                (lam acc3036.
                   lam a980.
                     (f1601 acc3036 a980, a980))
                acc3035
                p1322
            in
            res503.0
  let vSymbAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f1602.
      lam __sem_target2060.
        match
          __sem_target2060
        with
          p1323
        in
        match
            vSymbAst_smapAccumL_Expr_Pat
              (lam #var"598".
                 lam a981.
                   ({}, f1602 a981))
              {}
              p1323
          with
            (_, p1324)
          in
          p1324
  let vSymbAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f1603.
      lam __sem_target2061.
        match
          __sem_target2061
        with
          p1325
        in
        match
            vSymbAst_smapAccumL_Pat_Expr
              (lam #var"599".
                 lam a982.
                   ({}, f1603 a982))
              {}
              p1325
          with
            (_, p1326)
          in
          p1326
  let vSymbAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f1604.
      lam __sem_target2062.
        match
          __sem_target2062
        with
          p1327
        in
        match
            vSymbAst_smapAccumL_Pat_Type
              (lam #var"600".
                 lam a983.
                   ({}, f1604 a983))
              {}
              p1327
          with
            (_, p1328)
          in
          p1328
  let vSymbAst_countExprNodes =
    lam count635.
      lam __sem_target2063.
        match
          __sem_target2063
        with
          t957
        in
        let count636 = addi count635 1 in
          let count637 =
            vSymbAst_sfold_Expr_Expr vSymbAst_countExprNodes count636 t957
          in
          let count638 =
            vSymbAst_sfold_Expr_Type vSymbAst_countTypeNodes count637 t957
          in
          let count639 =
            vSymbAst_sfold_Expr_TypeLabel vSymbAst_countTypeNodes count638 t957
          in
          let count640 = vSymbAst_sfold_Expr_Pat vSymbAst_countPatNodes count639 t957
          in
          count640
  let vSymbAst_countTypeNodes =
    lam count641.
      lam __sem_target2064.
        match
          __sem_target2064
        with
          t958
        in
        let count642 = addi count641 1 in
          let count643 =
            vSymbAst_sfold_Type_Type vSymbAst_countTypeNodes count642 t958
          in
          count643
  let vSymbAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f1605.
      lam __sem_target2065.
        match
          __sem_target2065
        with
          ty299
        in
        let res504 =
            vSymbAst_rappAccumL_Type_Type
              (lam #var"601".
                 lam t959.
                   ({}, f1605 t959))
              {}
              ty299
          in
          res504.1
  let vSymbAst_sfold_Expr_Pat: all acc3037. (acc3037 -> Ast_Pat -> acc3037) -> acc3037 -> Ast_Expr -> acc3037 =
    lam f1606.
      lam acc3038.
        lam __sem_target2066.
          match
            __sem_target2066
          with
            p1329
          in
          match
              vSymbAst_smapAccumL_Expr_Pat
                (lam acc3039.
                   lam a984.
                     (f1606 acc3039 a984, a984))
                acc3038
                p1329
            with
              (acc3040, _)
            in
            acc3040
  let vSymbAst_sfold_Pat_Expr: all acc3041. (acc3041 -> Ast_Expr -> acc3041) -> acc3041 -> Ast_Pat -> acc3041 =
    lam f1607.
      lam acc3042.
        lam __sem_target2067.
          match
            __sem_target2067
          with
            p1330
          in
          match
              vSymbAst_smapAccumL_Pat_Expr
                (lam acc3043.
                   lam a985.
                     (f1607 acc3043 a985, a985))
                acc3042
                p1330
            with
              (acc3044, _)
            in
            acc3044
  let vSymbAst_sfold_Pat_Type: all acc3045. (acc3045 -> Ast_Type -> acc3045) -> acc3045 -> Ast_Pat -> acc3045 =
    lam f1608.
      lam acc3046.
        lam __sem_target2068.
          match
            __sem_target2068
          with
            p1331
          in
          match
              vSymbAst_smapAccumL_Pat_Type
                (lam acc3047.
                   lam a986.
                     (f1608 acc3047 a986, a986))
                acc3046
                p1331
            with
              (acc3048, _)
            in
            acc3048
  let vSymbAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1609.
      lam __sem_target2069.
        match
          __sem_target2069
        with
          p1332
        in
        let res505 =
            vSymbAst_smapAccumL_Expr_Expr
              (lam #var"602".
                 lam a987.
                   ({}, f1609 a987))
              {}
              p1332
          in
          res505.1
  let vSymbAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f1610.
      lam __sem_target2070.
        match
          __sem_target2070
        with
          p1333
        in
        let res506 =
            vSymbAst_smapAccumL_Expr_Type
              (lam #var"603".
                 lam a988.
                   ({}, f1610 a988))
              {}
              p1333
          in
          res506.1
  let vSymbAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f1611: Ast_Type -> Ast_Type.
      lam __sem_target2071.
        match
          __sem_target2071
        with
          s268
        in
        match
            vSymbAst_smapAccumL_Kind_Type
              (lam #var"604".
                 lam x471.
                   ({}, f1611 x471))
              {}
              s268
          with
            (_, s269)
          in
          s269
  let vSymbAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f1612.
      lam __sem_target2072.
        match
          __sem_target2072
        with
          p1334
        in
        let res507 =
            vSymbAst_smapAccumL_Type_Type
              (lam #var"605".
                 lam a989.
                   ({}, f1612 a989))
              {}
              p1334
          in
          res507.1
  let vSymbAst_sfold_Expr_Expr: all acc3049. (acc3049 -> Ast_Expr -> acc3049) -> acc3049 -> Ast_Expr -> acc3049 =
    lam f1613.
      lam acc3050.
        lam __sem_target2073.
          match
            __sem_target2073
          with
            p1335
          in
          let res508 =
              vSymbAst_smapAccumL_Expr_Expr
                (lam acc3051.
                   lam a990.
                     (f1613 acc3051 a990, a990))
                acc3050
                p1335
            in
            res508.0
  let vSymbAst_sfold_Expr_Type: all acc3052. (acc3052 -> Ast_Type -> acc3052) -> acc3052 -> Ast_Expr -> acc3052 =
    lam f1614.
      lam acc3053.
        lam __sem_target2074.
          match
            __sem_target2074
          with
            p1336
          in
          let res509 =
              vSymbAst_smapAccumL_Expr_Type
                (lam acc3054.
                   lam a991.
                     (f1614 acc3054 a991, a991))
                acc3053
                p1336
            in
            res509.0
  let vSymbAst_sfold_Kind_Type: all acc3055. (acc3055 -> Ast_Type -> acc3055) -> acc3055 -> Ast_Kind -> acc3055 =
    lam f1615: acc3055 -> Ast_Type -> acc3055.
      lam acc3056: acc3055.
        lam __sem_target2075.
          match
            __sem_target2075
          with
            s270
          in
          match
              vSymbAst_smapAccumL_Kind_Type
                (lam a992.
                   lam x472.
                     (f1615 a992 x472, x472))
                acc3056
                s270
            with
              (a993, _)
            in
            a993
  let vSymbAst_sfold_Type_Type: all acc3057. (acc3057 -> Ast_Type -> acc3057) -> acc3057 -> Ast_Type -> acc3057 =
    lam f1616.
      lam acc3058.
        lam __sem_target2076.
          match
            __sem_target2076
          with
            p1337
          in
          let res510 =
              vSymbAst_smapAccumL_Type_Type
                (lam acc3059.
                   lam a994.
                     (f1616 acc3059 a994, a994))
                acc3058
                p1337
            in
            res510.0
  let vSymbAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1617.
      lam __sem_target2077.
        match
          __sem_target2077
        with
          expr405
        in
        let expr406 = f1617 expr405 in
          vSymbAst_smap_Expr_Expr (vSymbAst_mapPre_Expr_Expr f1617) expr406
  let vSymbAst_foldPre_Expr_Expr: all acc3060. (acc3060 -> Ast_Expr -> acc3060) -> acc3060 -> Ast_Expr -> acc3060 =
    lam f1618.
      lam acc3061.
        lam __sem_target2078.
          match
            __sem_target2078
          with
            expr407
          in
          let acc3062 = f1618 acc3061 expr407 in
            vSymbAst_sfold_Expr_Expr (vSymbAst_foldPre_Expr_Expr f1618) acc3062 expr407
  let vSymbAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1619.
      lam __sem_target2079.
        match
          __sem_target2079
        with
          expr408
        in
        f1619
            (vSymbAst_smap_Expr_Expr (vSymbAst_mapPost_Expr_Expr f1619) expr408)
  let vSymbAst_foldPost_Expr_Expr: all acc3063. (acc3063 -> Ast_Expr -> acc3063) -> acc3063 -> Ast_Expr -> acc3063 =
    lam f1620.
      lam acc3064.
        lam __sem_target2080.
          match
            __sem_target2080
          with
            expr409
          in
          f1620
              (vSymbAst_sfold_Expr_Expr (vSymbAst_foldPost_Expr_Expr f1620) acc3064 expr409)
              expr409
  let vSymbAst_smapAccumL_Pat_Pat: all acc3065. (acc3065 -> Ast_Pat -> (acc3065, Ast_Pat)) -> acc3065 -> Ast_Pat -> (acc3065, Ast_Pat) =
    lam f1621.
      lam acc3066.
        lam __sem_target2081.
          match
            __sem_target2081
          with
            p1338
          in
          (acc3066, p1338)
  let vSymbAst_smapAccumL_Expr_Pat: all acc3067. (acc3067 -> Ast_Pat -> (acc3067, Ast_Pat)) -> acc3067 -> Ast_Expr -> (acc3067, Ast_Expr) =
    lam f1622.
      lam acc3068.
        lam __sem_target2082.
          match
            __sem_target2082
          with
            p1339
          in
          (acc3068, p1339)
  let vSymbAst_smapAccumL_Pat_Expr: all acc3069. (acc3069 -> Ast_Expr -> (acc3069, Ast_Expr)) -> acc3069 -> Ast_Pat -> (acc3069, Ast_Pat) =
    lam f1623.
      lam acc3070.
        lam __sem_target2083.
          match
            __sem_target2083
          with
            p1340
          in
          (acc3070, p1340)
  let vSymbAst_smapAccumL_Pat_Type: all acc3071. (acc3071 -> Ast_Type -> (acc3071, Ast_Type)) -> acc3071 -> Ast_Pat -> (acc3071, Ast_Pat) =
    lam f1624.
      lam acc3072.
        lam __sem_target2084.
          match
            __sem_target2084
          with
            p1341
          in
          (acc3072, p1341)
  let vSymbAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f1625.
      lam __sem_target2085.
        match
          __sem_target2085
        with
          p1342
        in
        let res511 =
            vSymbAst_smapAccumL_Expr_TypeLabel
              (lam #var"606".
                 lam a995.
                   ({}, f1625 a995))
              {}
              p1342
          in
          res511.1
  let vSymbAst_rappAccumL_Type_Type: all acc3073. (acc3073 -> Ast_Type -> (acc3073, Ast_Type)) -> acc3073 -> Ast_Type -> (acc3073, Ast_Type) =
    lam f1626.
      lam acc3074.
        lam __sem_target2086.
          match
            __sem_target2086
          with
            ty300
          in
          (acc3074, ty300)
  let vSymbAst_sfold_Expr_TypeLabel: all acc3075. (acc3075 -> Ast_Type -> acc3075) -> acc3075 -> Ast_Expr -> acc3075 =
    lam f1627.
      lam acc3076.
        lam __sem_target2087.
          match
            __sem_target2087
          with
            p1343
          in
          let res512 =
              vSymbAst_smapAccumL_Expr_TypeLabel
                (lam acc3077.
                   lam a996.
                     (f1627 acc3077 a996, a996))
                acc3076
                p1343
            in
            res512.0
  let vSymbAst_smapAccumL_Expr_Expr: all acc3078. (acc3078 -> Ast_Expr -> (acc3078, Ast_Expr)) -> acc3078 -> Ast_Expr -> (acc3078, Ast_Expr) =
    lam f1628.
      lam acc3079.
        lam __sem_target2088.
          match
            __sem_target2088
          with
            p1344
          in
          (acc3079, p1344)
  let vSymbAst_smapAccumL_Expr_Type: all acc3080. (acc3080 -> Ast_Type -> (acc3080, Ast_Type)) -> acc3080 -> Ast_Expr -> (acc3080, Ast_Expr) =
    lam f1629.
      lam acc3081.
        lam __sem_target2089.
          match
            __sem_target2089
          with
            p1345
          in
          (acc3081, p1345)
  let vSymbAst_smapAccumL_Kind_Type: all acc3082. (acc3082 -> Ast_Type -> (acc3082, Ast_Type)) -> acc3082 -> Ast_Kind -> (acc3082, Ast_Kind) =
    lam f1630.
      lam acc3083.
        lam __sem_target2090.
          match
            __sem_target2090
          with
            s271
          in
          (acc3083, s271)
  let vSymbAst_smapAccumL_Type_Type: all acc3084. (acc3084 -> Ast_Type -> (acc3084, Ast_Type)) -> acc3084 -> Ast_Type -> (acc3084, Ast_Type) =
    lam f1631.
      lam acc3085.
        lam __sem_target2091.
          match
            __sem_target2091
          with
            p1346
          in
          (acc3085, p1346)
  let vSymbAst_mapAccumLPre_Expr_Expr: all acc3086. (acc3086 -> Ast_Expr -> (acc3086, Ast_Expr)) -> acc3086 -> Ast_Expr -> (acc3086, Ast_Expr) =
    lam f1632.
      lam acc3087.
        lam __sem_target2092.
          match
            __sem_target2092
          with
            expr410
          in
          match
              f1632 acc3087 expr410
            with
              (acc3088, expr411)
            in
            vSymbAst_smapAccumL_Expr_Expr (vSymbAst_mapAccumLPre_Expr_Expr f1632) acc3088 expr411
  let vSymbAst_mapAccumLPost_Expr_Expr: all acc3089. (acc3089 -> Ast_Expr -> (acc3089, Ast_Expr)) -> acc3089 -> Ast_Expr -> (acc3089, Ast_Expr) =
    lam f1633.
      lam acc3090.
        lam __sem_target2093.
          match
            __sem_target2093
          with
            expr412
          in
          match
              vSymbAst_smapAccumL_Expr_Expr (vSymbAst_mapAccumLPost_Expr_Expr f1633) acc3090 expr412
            with
              (acc3091, expr413)
            in
            f1633 acc3091 expr413
  let vSymbAst_smapAccumL_Expr_TypeLabel: all acc3092. (acc3092 -> Ast_Type -> (acc3092, Ast_Type)) -> acc3092 -> Ast_Expr -> (acc3092, Ast_Expr) =
    lam f1634.
      lam acc3093.
        lam __sem_target2094.
          match
            __sem_target2094
          with
            p1347
          in
          match
              f1634 acc3093 (vSymbAst_tyTm p1347)
            with
              (acc3094, ty301)
            in
            (acc3094, vSymbAst_withType ty301 p1347)
in
con CmpSymbAst_CEqsym: () -> ConstAst_Const in
recursive
  let vCmpSymbAst_tyTm: Ast_Expr -> Ast_Type =
    lam __sem_target2007.
      match
        __sem_target2007
      with
        ConstAst_TmConst t946
      in
      t946.ty
  let vCmpSymbAst_tyPat: Ast_Pat -> Ast_Type = lam x457.
      never
  let vCmpSymbAst_infoTm: Ast_Expr -> Info =
    lam __sem_target2008.
      match
        __sem_target2008
      with
        ConstAst_TmConst r340
      in
      r340.info
  let vCmpSymbAst_infoTy: Ast_Type -> Info = lam x458.
      never
  let vCmpSymbAst_infoPat: Ast_Pat -> Info = lam x459.
      never
  let vCmpSymbAst_withInfo: Info -> Ast_Expr -> Ast_Expr =
    lam info49.
      lam __sem_target2009.
        match
          __sem_target2009
        with
          ConstAst_TmConst t947
        in
        ConstAst_TmConst
            { t947 with info = info49 }
  let vCmpSymbAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr =
    lam ty290: Ast_Type.
      lam __sem_target2010.
        match
          __sem_target2010
        with
          ConstAst_TmConst t948
        in
        ConstAst_TmConst
            { t948 with ty = ty290 }
  let vCmpSymbAst_tyWithInfo: Info -> Ast_Type -> Ast_Type = lam x460.
      never
  let vCmpSymbAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target2011.
      match
        __sem_target2011
      with
        ty291
      in
      vCmpSymbAst_rapp_Type_Type vCmpSymbAst_unwrapType ty291
  let vCmpSymbAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target2012.
      match
        __sem_target2012
      with
        ty292
      in
      vCmpSymbAst_rapp_Type_Type vCmpSymbAst_inspectType ty292
  let vCmpSymbAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x461.
      never
  let vCmpSymbAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x462.
      never
  let vCmpSymbAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f1565.
      lam __sem_target2013.
        match
          __sem_target2013
        with
          p1294
        in
        let res491 =
            vCmpSymbAst_smapAccumL_Pat_Pat
              (lam #var"587".
                 lam a961.
                   ({}, f1565 a961))
              {}
              p1294
          in
          res491.1
  let vCmpSymbAst_countPatNodes =
    lam count616.
      lam __sem_target2014.
        match
          __sem_target2014
        with
          t949
        in
        let count617 = addi count616 1 in
          let count618 =
            vCmpSymbAst_sfold_Pat_Pat vCmpSymbAst_countPatNodes count617 t949
          in
          let count619 =
            vCmpSymbAst_sfold_Pat_Expr vCmpSymbAst_countExprNodes count618 t949
          in
          let count620 =
            vCmpSymbAst_sfold_Pat_Type vCmpSymbAst_countTypeNodes count619 t949
          in
          count620
  let vCmpSymbAst_sfold_Pat_Pat: all acc2973. (acc2973 -> Ast_Pat -> acc2973) -> acc2973 -> Ast_Pat -> acc2973 =
    lam f1566.
      lam acc2974.
        lam __sem_target2015.
          match
            __sem_target2015
          with
            p1295
          in
          let res492 =
              vCmpSymbAst_smapAccumL_Pat_Pat
                (lam acc2975.
                   lam a962.
                     (f1566 acc2975 a962, a962))
                acc2974
                p1295
            in
            res492.0
  let vCmpSymbAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f1567.
      lam __sem_target2016.
        match
          __sem_target2016
        with
          p1296
        in
        match
            vCmpSymbAst_smapAccumL_Expr_Pat
              (lam #var"588".
                 lam a963.
                   ({}, f1567 a963))
              {}
              p1296
          with
            (_, p1297)
          in
          p1297
  let vCmpSymbAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f1568.
      lam __sem_target2017.
        match
          __sem_target2017
        with
          p1298
        in
        match
            vCmpSymbAst_smapAccumL_Pat_Expr
              (lam #var"589".
                 lam a964.
                   ({}, f1568 a964))
              {}
              p1298
          with
            (_, p1299)
          in
          p1299
  let vCmpSymbAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f1569.
      lam __sem_target2018.
        match
          __sem_target2018
        with
          p1300
        in
        match
            vCmpSymbAst_smapAccumL_Pat_Type
              (lam #var"590".
                 lam a965.
                   ({}, f1569 a965))
              {}
              p1300
          with
            (_, p1301)
          in
          p1301
  let vCmpSymbAst_countExprNodes =
    lam count621.
      lam __sem_target2019.
        match
          __sem_target2019
        with
          t950
        in
        let count622 = addi count621 1 in
          let count623 =
            vCmpSymbAst_sfold_Expr_Expr vCmpSymbAst_countExprNodes count622 t950
          in
          let count624 =
            vCmpSymbAst_sfold_Expr_Type vCmpSymbAst_countTypeNodes count623 t950
          in
          let count625 =
            vCmpSymbAst_sfold_Expr_TypeLabel vCmpSymbAst_countTypeNodes count624 t950
          in
          let count626 =
            vCmpSymbAst_sfold_Expr_Pat vCmpSymbAst_countPatNodes count625 t950
          in
          count626
  let vCmpSymbAst_countTypeNodes =
    lam count627.
      lam __sem_target2020.
        match
          __sem_target2020
        with
          t951
        in
        let count628 = addi count627 1 in
          let count629 =
            vCmpSymbAst_sfold_Type_Type vCmpSymbAst_countTypeNodes count628 t951
          in
          count629
  let vCmpSymbAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f1570.
      lam __sem_target2021.
        match
          __sem_target2021
        with
          ty293
        in
        let res493 =
            vCmpSymbAst_rappAccumL_Type_Type
              (lam #var"591".
                 lam t952.
                   ({}, f1570 t952))
              {}
              ty293
          in
          res493.1
  let vCmpSymbAst_sfold_Expr_Pat: all acc2976. (acc2976 -> Ast_Pat -> acc2976) -> acc2976 -> Ast_Expr -> acc2976 =
    lam f1571.
      lam acc2977.
        lam __sem_target2022.
          match
            __sem_target2022
          with
            p1302
          in
          match
              vCmpSymbAst_smapAccumL_Expr_Pat
                (lam acc2978.
                   lam a966.
                     (f1571 acc2978 a966, a966))
                acc2977
                p1302
            with
              (acc2979, _)
            in
            acc2979
  let vCmpSymbAst_sfold_Pat_Expr: all acc2980. (acc2980 -> Ast_Expr -> acc2980) -> acc2980 -> Ast_Pat -> acc2980 =
    lam f1572.
      lam acc2981.
        lam __sem_target2023.
          match
            __sem_target2023
          with
            p1303
          in
          match
              vCmpSymbAst_smapAccumL_Pat_Expr
                (lam acc2982.
                   lam a967.
                     (f1572 acc2982 a967, a967))
                acc2981
                p1303
            with
              (acc2983, _)
            in
            acc2983
  let vCmpSymbAst_sfold_Pat_Type: all acc2984. (acc2984 -> Ast_Type -> acc2984) -> acc2984 -> Ast_Pat -> acc2984 =
    lam f1573.
      lam acc2985.
        lam __sem_target2024.
          match
            __sem_target2024
          with
            p1304
          in
          match
              vCmpSymbAst_smapAccumL_Pat_Type
                (lam acc2986.
                   lam a968.
                     (f1573 acc2986 a968, a968))
                acc2985
                p1304
            with
              (acc2987, _)
            in
            acc2987
  let vCmpSymbAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1574.
      lam __sem_target2025.
        match
          __sem_target2025
        with
          p1305
        in
        let res494 =
            vCmpSymbAst_smapAccumL_Expr_Expr
              (lam #var"592".
                 lam a969.
                   ({}, f1574 a969))
              {}
              p1305
          in
          res494.1
  let vCmpSymbAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f1575.
      lam __sem_target2026.
        match
          __sem_target2026
        with
          p1306
        in
        let res495 =
            vCmpSymbAst_smapAccumL_Expr_Type
              (lam #var"593".
                 lam a970.
                   ({}, f1575 a970))
              {}
              p1306
          in
          res495.1
  let vCmpSymbAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f1576: Ast_Type -> Ast_Type.
      lam __sem_target2027.
        match
          __sem_target2027
        with
          s264
        in
        match
            vCmpSymbAst_smapAccumL_Kind_Type
              (lam #var"594".
                 lam x463.
                   ({}, f1576 x463))
              {}
              s264
          with
            (_, s265)
          in
          s265
  let vCmpSymbAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f1577.
      lam __sem_target2028.
        match
          __sem_target2028
        with
          p1307
        in
        let res496 =
            vCmpSymbAst_smapAccumL_Type_Type
              (lam #var"595".
                 lam a971.
                   ({}, f1577 a971))
              {}
              p1307
          in
          res496.1
  let vCmpSymbAst_sfold_Expr_Expr: all acc2988. (acc2988 -> Ast_Expr -> acc2988) -> acc2988 -> Ast_Expr -> acc2988 =
    lam f1578.
      lam acc2989.
        lam __sem_target2029.
          match
            __sem_target2029
          with
            p1308
          in
          let res497 =
              vCmpSymbAst_smapAccumL_Expr_Expr
                (lam acc2990.
                   lam a972.
                     (f1578 acc2990 a972, a972))
                acc2989
                p1308
            in
            res497.0
  let vCmpSymbAst_sfold_Expr_Type: all acc2991. (acc2991 -> Ast_Type -> acc2991) -> acc2991 -> Ast_Expr -> acc2991 =
    lam f1579.
      lam acc2992.
        lam __sem_target2030.
          match
            __sem_target2030
          with
            p1309
          in
          let res498 =
              vCmpSymbAst_smapAccumL_Expr_Type
                (lam acc2993.
                   lam a973.
                     (f1579 acc2993 a973, a973))
                acc2992
                p1309
            in
            res498.0
  let vCmpSymbAst_sfold_Kind_Type: all acc2994. (acc2994 -> Ast_Type -> acc2994) -> acc2994 -> Ast_Kind -> acc2994 =
    lam f1580: acc2994 -> Ast_Type -> acc2994.
      lam acc2995: acc2994.
        lam __sem_target2031.
          match
            __sem_target2031
          with
            s266
          in
          match
              vCmpSymbAst_smapAccumL_Kind_Type
                (lam a974.
                   lam x464.
                     (f1580 a974 x464, x464))
                acc2995
                s266
            with
              (a975, _)
            in
            a975
  let vCmpSymbAst_sfold_Type_Type: all acc2996. (acc2996 -> Ast_Type -> acc2996) -> acc2996 -> Ast_Type -> acc2996 =
    lam f1581.
      lam acc2997.
        lam __sem_target2032.
          match
            __sem_target2032
          with
            p1310
          in
          let res499 =
              vCmpSymbAst_smapAccumL_Type_Type
                (lam acc2998.
                   lam a976.
                     (f1581 acc2998 a976, a976))
                acc2997
                p1310
            in
            res499.0
  let vCmpSymbAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1582.
      lam __sem_target2033.
        match
          __sem_target2033
        with
          expr396
        in
        let expr397 = f1582 expr396 in
          vCmpSymbAst_smap_Expr_Expr (vCmpSymbAst_mapPre_Expr_Expr f1582) expr397
  let vCmpSymbAst_foldPre_Expr_Expr: all acc2999. (acc2999 -> Ast_Expr -> acc2999) -> acc2999 -> Ast_Expr -> acc2999 =
    lam f1583.
      lam acc3000.
        lam __sem_target2034.
          match
            __sem_target2034
          with
            expr398
          in
          let acc3001 = f1583 acc3000 expr398 in
            vCmpSymbAst_sfold_Expr_Expr (vCmpSymbAst_foldPre_Expr_Expr f1583) acc3001 expr398
  let vCmpSymbAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1584.
      lam __sem_target2035.
        match
          __sem_target2035
        with
          expr399
        in
        f1584
            (vCmpSymbAst_smap_Expr_Expr (vCmpSymbAst_mapPost_Expr_Expr f1584) expr399)
  let vCmpSymbAst_foldPost_Expr_Expr: all acc3002. (acc3002 -> Ast_Expr -> acc3002) -> acc3002 -> Ast_Expr -> acc3002 =
    lam f1585.
      lam acc3003.
        lam __sem_target2036.
          match
            __sem_target2036
          with
            expr400
          in
          f1585
              (vCmpSymbAst_sfold_Expr_Expr (vCmpSymbAst_foldPost_Expr_Expr f1585) acc3003 expr400)
              expr400
  let vCmpSymbAst_smapAccumL_Pat_Pat: all acc3004. (acc3004 -> Ast_Pat -> (acc3004, Ast_Pat)) -> acc3004 -> Ast_Pat -> (acc3004, Ast_Pat) =
    lam f1586.
      lam acc3005.
        lam __sem_target2037.
          match
            __sem_target2037
          with
            p1311
          in
          (acc3005, p1311)
  let vCmpSymbAst_smapAccumL_Expr_Pat: all acc3006. (acc3006 -> Ast_Pat -> (acc3006, Ast_Pat)) -> acc3006 -> Ast_Expr -> (acc3006, Ast_Expr) =
    lam f1587.
      lam acc3007.
        lam __sem_target2038.
          match
            __sem_target2038
          with
            p1312
          in
          (acc3007, p1312)
  let vCmpSymbAst_smapAccumL_Pat_Expr: all acc3008. (acc3008 -> Ast_Expr -> (acc3008, Ast_Expr)) -> acc3008 -> Ast_Pat -> (acc3008, Ast_Pat) =
    lam f1588.
      lam acc3009.
        lam __sem_target2039.
          match
            __sem_target2039
          with
            p1313
          in
          (acc3009, p1313)
  let vCmpSymbAst_smapAccumL_Pat_Type: all acc3010. (acc3010 -> Ast_Type -> (acc3010, Ast_Type)) -> acc3010 -> Ast_Pat -> (acc3010, Ast_Pat) =
    lam f1589.
      lam acc3011.
        lam __sem_target2040.
          match
            __sem_target2040
          with
            p1314
          in
          (acc3011, p1314)
  let vCmpSymbAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f1590.
      lam __sem_target2041.
        match
          __sem_target2041
        with
          p1315
        in
        let res500 =
            vCmpSymbAst_smapAccumL_Expr_TypeLabel
              (lam #var"596".
                 lam a977.
                   ({}, f1590 a977))
              {}
              p1315
          in
          res500.1
  let vCmpSymbAst_rappAccumL_Type_Type: all acc3012. (acc3012 -> Ast_Type -> (acc3012, Ast_Type)) -> acc3012 -> Ast_Type -> (acc3012, Ast_Type) =
    lam f1591.
      lam acc3013.
        lam __sem_target2042.
          match
            __sem_target2042
          with
            ty294
          in
          (acc3013, ty294)
  let vCmpSymbAst_sfold_Expr_TypeLabel: all acc3014. (acc3014 -> Ast_Type -> acc3014) -> acc3014 -> Ast_Expr -> acc3014 =
    lam f1592.
      lam acc3015.
        lam __sem_target2043.
          match
            __sem_target2043
          with
            p1316
          in
          let res501 =
              vCmpSymbAst_smapAccumL_Expr_TypeLabel
                (lam acc3016.
                   lam a978.
                     (f1592 acc3016 a978, a978))
                acc3015
                p1316
            in
            res501.0
  let vCmpSymbAst_smapAccumL_Expr_Expr: all acc3017. (acc3017 -> Ast_Expr -> (acc3017, Ast_Expr)) -> acc3017 -> Ast_Expr -> (acc3017, Ast_Expr) =
    lam f1593.
      lam acc3018.
        lam __sem_target2044.
          match
            __sem_target2044
          with
            p1317
          in
          (acc3018, p1317)
  let vCmpSymbAst_smapAccumL_Expr_Type: all acc3019. (acc3019 -> Ast_Type -> (acc3019, Ast_Type)) -> acc3019 -> Ast_Expr -> (acc3019, Ast_Expr) =
    lam f1594.
      lam acc3020.
        lam __sem_target2045.
          match
            __sem_target2045
          with
            p1318
          in
          (acc3020, p1318)
  let vCmpSymbAst_smapAccumL_Kind_Type: all acc3021. (acc3021 -> Ast_Type -> (acc3021, Ast_Type)) -> acc3021 -> Ast_Kind -> (acc3021, Ast_Kind) =
    lam f1595.
      lam acc3022.
        lam __sem_target2046.
          match
            __sem_target2046
          with
            s267
          in
          (acc3022, s267)
  let vCmpSymbAst_smapAccumL_Type_Type: all acc3023. (acc3023 -> Ast_Type -> (acc3023, Ast_Type)) -> acc3023 -> Ast_Type -> (acc3023, Ast_Type) =
    lam f1596.
      lam acc3024.
        lam __sem_target2047.
          match
            __sem_target2047
          with
            p1319
          in
          (acc3024, p1319)
  let vCmpSymbAst_mapAccumLPre_Expr_Expr: all acc3025. (acc3025 -> Ast_Expr -> (acc3025, Ast_Expr)) -> acc3025 -> Ast_Expr -> (acc3025, Ast_Expr) =
    lam f1597.
      lam acc3026.
        lam __sem_target2048.
          match
            __sem_target2048
          with
            expr401
          in
          match
              f1597 acc3026 expr401
            with
              (acc3027, expr402)
            in
            vCmpSymbAst_smapAccumL_Expr_Expr (vCmpSymbAst_mapAccumLPre_Expr_Expr f1597) acc3027 expr402
  let vCmpSymbAst_mapAccumLPost_Expr_Expr: all acc3028. (acc3028 -> Ast_Expr -> (acc3028, Ast_Expr)) -> acc3028 -> Ast_Expr -> (acc3028, Ast_Expr) =
    lam f1598.
      lam acc3029.
        lam __sem_target2049.
          match
            __sem_target2049
          with
            expr403
          in
          match
              vCmpSymbAst_smapAccumL_Expr_Expr (vCmpSymbAst_mapAccumLPost_Expr_Expr f1598) acc3029 expr403
            with
              (acc3030, expr404)
            in
            f1598 acc3030 expr404
  let vCmpSymbAst_smapAccumL_Expr_TypeLabel: all acc3031. (acc3031 -> Ast_Type -> (acc3031, Ast_Type)) -> acc3031 -> Ast_Expr -> (acc3031, Ast_Expr) =
    lam f1599.
      lam acc3032.
        lam __sem_target2050.
          match
            __sem_target2050
          with
            p1320
          in
          match
              f1599 acc3032 (vCmpSymbAst_tyTm p1320)
            with
              (acc3033, ty295)
            in
            (acc3033, vCmpSymbAst_withType ty295 p1320)
in
con SeqOpAst_CSubsequence: () -> ConstAst_Const in
con SeqOpAst_CCreateRope: () -> ConstAst_Const in
con SeqOpAst_CCreateList: () -> ConstAst_Const in
con SeqOpAst_CSplitAt: () -> ConstAst_Const in
con SeqOpAst_CReverse: () -> ConstAst_Const in
con SeqOpAst_CLength: () -> ConstAst_Const in
con SeqOpAst_CIsRope: () -> ConstAst_Const in
con SeqOpAst_CIsList: () -> ConstAst_Const in
con SeqOpAst_CCreate: () -> ConstAst_Const in
con SeqOpAst_CConcat: () -> ConstAst_Const in
con SeqOpAst_CIteri: () -> ConstAst_Const in
con SeqOpAst_CFoldr: () -> ConstAst_Const in
con SeqOpAst_CFoldl: () -> ConstAst_Const in
con SeqOpAst_CTail: () -> ConstAst_Const in
con SeqOpAst_CSnoc: () -> ConstAst_Const in
con SeqOpAst_CNull: () -> ConstAst_Const in
con SeqOpAst_CMapi: () -> ConstAst_Const in
con SeqOpAst_CIter: () -> ConstAst_Const in
con SeqOpAst_CHead: () -> ConstAst_Const in
con SeqOpAst_CCons: () -> ConstAst_Const in
con SeqOpAst_CSet: () -> ConstAst_Const in
con SeqOpAst_CMap: () -> ConstAst_Const in
con SeqOpAst_CGet: () -> ConstAst_Const in
recursive
  let vSeqOpAst_tyTm: Ast_Expr -> Ast_Type =
    lam __sem_target1963.
      match
        __sem_target1963
      with
        ConstAst_TmConst t935
      then
        t935.ty
      else match
        __sem_target1963
      with
        SeqAst_TmSeq t936
      in
      t936.ty
  let vSeqOpAst_tyPat: Ast_Pat -> Ast_Type = lam x449.
      never
  let vSeqOpAst_infoTm: Ast_Expr -> Info =
    lam __sem_target1964.
      match
        __sem_target1964
      with
        ConstAst_TmConst r338
      then
        r338.info
      else match
        __sem_target1964
      with
        SeqAst_TmSeq r339
      in
      r339.info
  let vSeqOpAst_infoTy: Ast_Type -> Info = lam x450.
      never
  let vSeqOpAst_infoPat: Ast_Pat -> Info = lam x451.
      never
  let vSeqOpAst_withInfo: Info -> Ast_Expr -> Ast_Expr =
    lam info48.
      lam __sem_target1965.
        match
          __sem_target1965
        with
          ConstAst_TmConst t937
        then
          ConstAst_TmConst
            { t937 with info = info48 }
        else match
          __sem_target1965
        with
          SeqAst_TmSeq t938
        in
        SeqAst_TmSeq
            { t938 with info = info48 }
  let vSeqOpAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr =
    lam ty284: Ast_Type.
      lam __sem_target1966.
        match
          __sem_target1966
        with
          ConstAst_TmConst t939
        then
          ConstAst_TmConst
            { t939 with ty = ty284 }
        else match
          __sem_target1966
        with
          SeqAst_TmSeq t940
        in
        SeqAst_TmSeq
            { t940 with ty = ty284 }
  let vSeqOpAst_tyWithInfo: Info -> Ast_Type -> Ast_Type = lam x452.
      never
  let vSeqOpAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target1967.
      match
        __sem_target1967
      with
        ty285
      in
      vSeqOpAst_rapp_Type_Type vSeqOpAst_unwrapType ty285
  let vSeqOpAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target1968.
      match
        __sem_target1968
      with
        ty286
      in
      vSeqOpAst_rapp_Type_Type vSeqOpAst_inspectType ty286
  let vSeqOpAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x453.
      never
  let vSeqOpAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x454.
      never
  let vSeqOpAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f1530.
      lam __sem_target1969.
        match
          __sem_target1969
        with
          p1267
        in
        let res480 =
            vSeqOpAst_smapAccumL_Pat_Pat
              (lam #var"577".
                 lam a943.
                   ({}, f1530 a943))
              {}
              p1267
          in
          res480.1
  let vSeqOpAst_countPatNodes =
    lam count602.
      lam __sem_target1970.
        match
          __sem_target1970
        with
          t941
        in
        let count603 = addi count602 1 in
          let count604 =
            vSeqOpAst_sfold_Pat_Pat vSeqOpAst_countPatNodes count603 t941
          in
          let count605 =
            vSeqOpAst_sfold_Pat_Expr vSeqOpAst_countExprNodes count604 t941
          in
          let count606 =
            vSeqOpAst_sfold_Pat_Type vSeqOpAst_countTypeNodes count605 t941
          in
          count606
  let vSeqOpAst_sfold_Pat_Pat: all acc2911. (acc2911 -> Ast_Pat -> acc2911) -> acc2911 -> Ast_Pat -> acc2911 =
    lam f1531.
      lam acc2912.
        lam __sem_target1971.
          match
            __sem_target1971
          with
            p1268
          in
          let res481 =
              vSeqOpAst_smapAccumL_Pat_Pat
                (lam acc2913.
                   lam a944.
                     (f1531 acc2913 a944, a944))
                acc2912
                p1268
            in
            res481.0
  let vSeqOpAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f1532.
      lam __sem_target1972.
        match
          __sem_target1972
        with
          p1269
        in
        match
            vSeqOpAst_smapAccumL_Expr_Pat
              (lam #var"578".
                 lam a945.
                   ({}, f1532 a945))
              {}
              p1269
          with
            (_, p1270)
          in
          p1270
  let vSeqOpAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f1533.
      lam __sem_target1973.
        match
          __sem_target1973
        with
          p1271
        in
        match
            vSeqOpAst_smapAccumL_Pat_Expr
              (lam #var"579".
                 lam a946.
                   ({}, f1533 a946))
              {}
              p1271
          with
            (_, p1272)
          in
          p1272
  let vSeqOpAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f1534.
      lam __sem_target1974.
        match
          __sem_target1974
        with
          p1273
        in
        match
            vSeqOpAst_smapAccumL_Pat_Type
              (lam #var"580".
                 lam a947.
                   ({}, f1534 a947))
              {}
              p1273
          with
            (_, p1274)
          in
          p1274
  let vSeqOpAst_countExprNodes =
    lam count607.
      lam __sem_target1975.
        match
          __sem_target1975
        with
          t942
        in
        let count608 = addi count607 1 in
          let count609 =
            vSeqOpAst_sfold_Expr_Expr vSeqOpAst_countExprNodes count608 t942
          in
          let count610 =
            vSeqOpAst_sfold_Expr_Type vSeqOpAst_countTypeNodes count609 t942
          in
          let count611 =
            vSeqOpAst_sfold_Expr_TypeLabel vSeqOpAst_countTypeNodes count610 t942
          in
          let count612 =
            vSeqOpAst_sfold_Expr_Pat vSeqOpAst_countPatNodes count611 t942
          in
          count612
  let vSeqOpAst_countTypeNodes =
    lam count613.
      lam __sem_target1976.
        match
          __sem_target1976
        with
          t943
        in
        let count614 = addi count613 1 in
          let count615 =
            vSeqOpAst_sfold_Type_Type vSeqOpAst_countTypeNodes count614 t943
          in
          count615
  let vSeqOpAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f1535.
      lam __sem_target1977.
        match
          __sem_target1977
        with
          ty287
        in
        let res482 =
            vSeqOpAst_rappAccumL_Type_Type
              (lam #var"581".
                 lam t944.
                   ({}, f1535 t944))
              {}
              ty287
          in
          res482.1
  let vSeqOpAst_sfold_Expr_Pat: all acc2914. (acc2914 -> Ast_Pat -> acc2914) -> acc2914 -> Ast_Expr -> acc2914 =
    lam f1536.
      lam acc2915.
        lam __sem_target1978.
          match
            __sem_target1978
          with
            p1275
          in
          match
              vSeqOpAst_smapAccumL_Expr_Pat
                (lam acc2916.
                   lam a948.
                     (f1536 acc2916 a948, a948))
                acc2915
                p1275
            with
              (acc2917, _)
            in
            acc2917
  let vSeqOpAst_sfold_Pat_Expr: all acc2918. (acc2918 -> Ast_Expr -> acc2918) -> acc2918 -> Ast_Pat -> acc2918 =
    lam f1537.
      lam acc2919.
        lam __sem_target1979.
          match
            __sem_target1979
          with
            p1276
          in
          match
              vSeqOpAst_smapAccumL_Pat_Expr
                (lam acc2920.
                   lam a949.
                     (f1537 acc2920 a949, a949))
                acc2919
                p1276
            with
              (acc2921, _)
            in
            acc2921
  let vSeqOpAst_sfold_Pat_Type: all acc2922. (acc2922 -> Ast_Type -> acc2922) -> acc2922 -> Ast_Pat -> acc2922 =
    lam f1538.
      lam acc2923.
        lam __sem_target1980.
          match
            __sem_target1980
          with
            p1277
          in
          match
              vSeqOpAst_smapAccumL_Pat_Type
                (lam acc2924.
                   lam a950.
                     (f1538 acc2924 a950, a950))
                acc2923
                p1277
            with
              (acc2925, _)
            in
            acc2925
  let vSeqOpAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1539.
      lam __sem_target1981.
        match
          __sem_target1981
        with
          p1278
        in
        let res483 =
            vSeqOpAst_smapAccumL_Expr_Expr
              (lam #var"582".
                 lam a951.
                   ({}, f1539 a951))
              {}
              p1278
          in
          res483.1
  let vSeqOpAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f1540.
      lam __sem_target1982.
        match
          __sem_target1982
        with
          p1279
        in
        let res484 =
            vSeqOpAst_smapAccumL_Expr_Type
              (lam #var"583".
                 lam a952.
                   ({}, f1540 a952))
              {}
              p1279
          in
          res484.1
  let vSeqOpAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f1541: Ast_Type -> Ast_Type.
      lam __sem_target1983.
        match
          __sem_target1983
        with
          s260
        in
        match
            vSeqOpAst_smapAccumL_Kind_Type
              (lam #var"584".
                 lam x455.
                   ({}, f1541 x455))
              {}
              s260
          with
            (_, s261)
          in
          s261
  let vSeqOpAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f1542.
      lam __sem_target1984.
        match
          __sem_target1984
        with
          p1280
        in
        let res485 =
            vSeqOpAst_smapAccumL_Type_Type
              (lam #var"585".
                 lam a953.
                   ({}, f1542 a953))
              {}
              p1280
          in
          res485.1
  let vSeqOpAst_sfold_Expr_Expr: all acc2926. (acc2926 -> Ast_Expr -> acc2926) -> acc2926 -> Ast_Expr -> acc2926 =
    lam f1543.
      lam acc2927.
        lam __sem_target1985.
          match
            __sem_target1985
          with
            p1281
          in
          let res486 =
              vSeqOpAst_smapAccumL_Expr_Expr
                (lam acc2928.
                   lam a954.
                     (f1543 acc2928 a954, a954))
                acc2927
                p1281
            in
            res486.0
  let vSeqOpAst_sfold_Expr_Type: all acc2929. (acc2929 -> Ast_Type -> acc2929) -> acc2929 -> Ast_Expr -> acc2929 =
    lam f1544.
      lam acc2930.
        lam __sem_target1986.
          match
            __sem_target1986
          with
            p1282
          in
          let res487 =
              vSeqOpAst_smapAccumL_Expr_Type
                (lam acc2931.
                   lam a955.
                     (f1544 acc2931 a955, a955))
                acc2930
                p1282
            in
            res487.0
  let vSeqOpAst_sfold_Kind_Type: all acc2932. (acc2932 -> Ast_Type -> acc2932) -> acc2932 -> Ast_Kind -> acc2932 =
    lam f1545: acc2932 -> Ast_Type -> acc2932.
      lam acc2933: acc2932.
        lam __sem_target1987.
          match
            __sem_target1987
          with
            s262
          in
          match
              vSeqOpAst_smapAccumL_Kind_Type
                (lam a956.
                   lam x456.
                     (f1545 a956 x456, x456))
                acc2933
                s262
            with
              (a957, _)
            in
            a957
  let vSeqOpAst_sfold_Type_Type: all acc2934. (acc2934 -> Ast_Type -> acc2934) -> acc2934 -> Ast_Type -> acc2934 =
    lam f1546.
      lam acc2935.
        lam __sem_target1988.
          match
            __sem_target1988
          with
            p1283
          in
          let res488 =
              vSeqOpAst_smapAccumL_Type_Type
                (lam acc2936.
                   lam a958.
                     (f1546 acc2936 a958, a958))
                acc2935
                p1283
            in
            res488.0
  let vSeqOpAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1547.
      lam __sem_target1989.
        match
          __sem_target1989
        with
          expr387
        in
        let expr388 = f1547 expr387 in
          vSeqOpAst_smap_Expr_Expr (vSeqOpAst_mapPre_Expr_Expr f1547) expr388
  let vSeqOpAst_foldPre_Expr_Expr: all acc2937. (acc2937 -> Ast_Expr -> acc2937) -> acc2937 -> Ast_Expr -> acc2937 =
    lam f1548.
      lam acc2938.
        lam __sem_target1990.
          match
            __sem_target1990
          with
            expr389
          in
          let acc2939 = f1548 acc2938 expr389 in
            vSeqOpAst_sfold_Expr_Expr (vSeqOpAst_foldPre_Expr_Expr f1548) acc2939 expr389
  let vSeqOpAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1549.
      lam __sem_target1991.
        match
          __sem_target1991
        with
          expr390
        in
        f1549
            (vSeqOpAst_smap_Expr_Expr (vSeqOpAst_mapPost_Expr_Expr f1549) expr390)
  let vSeqOpAst_foldPost_Expr_Expr: all acc2940. (acc2940 -> Ast_Expr -> acc2940) -> acc2940 -> Ast_Expr -> acc2940 =
    lam f1550.
      lam acc2941.
        lam __sem_target1992.
          match
            __sem_target1992
          with
            expr391
          in
          f1550
              (vSeqOpAst_sfold_Expr_Expr (vSeqOpAst_foldPost_Expr_Expr f1550) acc2941 expr391)
              expr391
  let vSeqOpAst_smapAccumL_Pat_Pat: all acc2942. (acc2942 -> Ast_Pat -> (acc2942, Ast_Pat)) -> acc2942 -> Ast_Pat -> (acc2942, Ast_Pat) =
    lam f1551.
      lam acc2943.
        lam __sem_target1993.
          match
            __sem_target1993
          with
            p1284
          in
          (acc2943, p1284)
  let vSeqOpAst_smapAccumL_Expr_Pat: all acc2944. (acc2944 -> Ast_Pat -> (acc2944, Ast_Pat)) -> acc2944 -> Ast_Expr -> (acc2944, Ast_Expr) =
    lam f1552.
      lam acc2945.
        lam __sem_target1994.
          match
            __sem_target1994
          with
            p1285
          in
          (acc2945, p1285)
  let vSeqOpAst_smapAccumL_Pat_Expr: all acc2946. (acc2946 -> Ast_Expr -> (acc2946, Ast_Expr)) -> acc2946 -> Ast_Pat -> (acc2946, Ast_Pat) =
    lam f1553.
      lam acc2947.
        lam __sem_target1995.
          match
            __sem_target1995
          with
            p1286
          in
          (acc2947, p1286)
  let vSeqOpAst_smapAccumL_Pat_Type: all acc2948. (acc2948 -> Ast_Type -> (acc2948, Ast_Type)) -> acc2948 -> Ast_Pat -> (acc2948, Ast_Pat) =
    lam f1554.
      lam acc2949.
        lam __sem_target1996.
          match
            __sem_target1996
          with
            p1287
          in
          (acc2949, p1287)
  let vSeqOpAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f1555.
      lam __sem_target1997.
        match
          __sem_target1997
        with
          p1288
        in
        let res489 =
            vSeqOpAst_smapAccumL_Expr_TypeLabel
              (lam #var"586".
                 lam a959.
                   ({}, f1555 a959))
              {}
              p1288
          in
          res489.1
  let vSeqOpAst_rappAccumL_Type_Type: all acc2950. (acc2950 -> Ast_Type -> (acc2950, Ast_Type)) -> acc2950 -> Ast_Type -> (acc2950, Ast_Type) =
    lam f1556.
      lam acc2951.
        lam __sem_target1998.
          match
            __sem_target1998
          with
            ty288
          in
          (acc2951, ty288)
  let vSeqOpAst_sfold_Expr_TypeLabel: all acc2952. (acc2952 -> Ast_Type -> acc2952) -> acc2952 -> Ast_Expr -> acc2952 =
    lam f1557.
      lam acc2953.
        lam __sem_target1999.
          match
            __sem_target1999
          with
            p1289
          in
          let res490 =
              vSeqOpAst_smapAccumL_Expr_TypeLabel
                (lam acc2954.
                   lam a960.
                     (f1557 acc2954 a960, a960))
                acc2953
                p1289
            in
            res490.0
  let vSeqOpAst_smapAccumL_Expr_Expr: all acc2955. (acc2955 -> Ast_Expr -> (acc2955, Ast_Expr)) -> acc2955 -> Ast_Expr -> (acc2955, Ast_Expr) =
    lam f1558.
      lam acc2956.
        lam __sem_target2000.
          match
            __sem_target2000
          with
            SeqAst_TmSeq t945
          then
            match
              mapAccumL f1558 acc2956 t945.tms
            with
              (acc2957, tms3)
            in
            (acc2957, SeqAst_TmSeq
                { t945 with tms = tms3 })
          else match
            __sem_target2000
          with
            p1290
          in
          (acc2956, p1290)
  let vSeqOpAst_smapAccumL_Expr_Type: all acc2958. (acc2958 -> Ast_Type -> (acc2958, Ast_Type)) -> acc2958 -> Ast_Expr -> (acc2958, Ast_Expr) =
    lam f1559.
      lam acc2959.
        lam __sem_target2001.
          match
            __sem_target2001
          with
            p1291
          in
          (acc2959, p1291)
  let vSeqOpAst_smapAccumL_Kind_Type: all acc2960. (acc2960 -> Ast_Type -> (acc2960, Ast_Type)) -> acc2960 -> Ast_Kind -> (acc2960, Ast_Kind) =
    lam f1560.
      lam acc2961.
        lam __sem_target2002.
          match
            __sem_target2002
          with
            s263
          in
          (acc2961, s263)
  let vSeqOpAst_smapAccumL_Type_Type: all acc2962. (acc2962 -> Ast_Type -> (acc2962, Ast_Type)) -> acc2962 -> Ast_Type -> (acc2962, Ast_Type) =
    lam f1561.
      lam acc2963.
        lam __sem_target2003.
          match
            __sem_target2003
          with
            p1292
          in
          (acc2963, p1292)
  let vSeqOpAst_mapAccumLPre_Expr_Expr: all acc2964. (acc2964 -> Ast_Expr -> (acc2964, Ast_Expr)) -> acc2964 -> Ast_Expr -> (acc2964, Ast_Expr) =
    lam f1562.
      lam acc2965.
        lam __sem_target2004.
          match
            __sem_target2004
          with
            expr392
          in
          match
              f1562 acc2965 expr392
            with
              (acc2966, expr393)
            in
            vSeqOpAst_smapAccumL_Expr_Expr (vSeqOpAst_mapAccumLPre_Expr_Expr f1562) acc2966 expr393
  let vSeqOpAst_mapAccumLPost_Expr_Expr: all acc2967. (acc2967 -> Ast_Expr -> (acc2967, Ast_Expr)) -> acc2967 -> Ast_Expr -> (acc2967, Ast_Expr) =
    lam f1563.
      lam acc2968.
        lam __sem_target2005.
          match
            __sem_target2005
          with
            expr394
          in
          match
              vSeqOpAst_smapAccumL_Expr_Expr (vSeqOpAst_mapAccumLPost_Expr_Expr f1563) acc2968 expr394
            with
              (acc2969, expr395)
            in
            f1563 acc2969 expr395
  let vSeqOpAst_smapAccumL_Expr_TypeLabel: all acc2970. (acc2970 -> Ast_Type -> (acc2970, Ast_Type)) -> acc2970 -> Ast_Expr -> (acc2970, Ast_Expr) =
    lam f1564.
      lam acc2971.
        lam __sem_target2006.
          match
            __sem_target2006
          with
            p1293
          in
          match
              f1564 acc2971 (vSeqOpAst_tyTm p1293)
            with
              (acc2972, ty289)
            in
            (acc2972, vSeqOpAst_withType ty289 p1293)
in
con FileOpAst_CFileExists: () -> ConstAst_Const in
con FileOpAst_CFileDelete: () -> ConstAst_Const in
con FileOpAst_CFileWrite: () -> ConstAst_Const in
con FileOpAst_CFileRead: () -> ConstAst_Const in
recursive
  let vFileOpAst_tyTm: Ast_Expr -> Ast_Type =
    lam __sem_target1919.
      match
        __sem_target1919
      with
        ConstAst_TmConst t928
      in
      t928.ty
  let vFileOpAst_tyPat: Ast_Pat -> Ast_Type = lam x441.
      never
  let vFileOpAst_infoTm: Ast_Expr -> Info =
    lam __sem_target1920.
      match
        __sem_target1920
      with
        ConstAst_TmConst r337
      in
      r337.info
  let vFileOpAst_infoTy: Ast_Type -> Info = lam x442.
      never
  let vFileOpAst_infoPat: Ast_Pat -> Info = lam x443.
      never
  let vFileOpAst_withInfo: Info -> Ast_Expr -> Ast_Expr =
    lam info47.
      lam __sem_target1921.
        match
          __sem_target1921
        with
          ConstAst_TmConst t929
        in
        ConstAst_TmConst
            { t929 with info = info47 }
  let vFileOpAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr =
    lam ty278: Ast_Type.
      lam __sem_target1922.
        match
          __sem_target1922
        with
          ConstAst_TmConst t930
        in
        ConstAst_TmConst
            { t930 with ty = ty278 }
  let vFileOpAst_tyWithInfo: Info -> Ast_Type -> Ast_Type = lam x444.
      never
  let vFileOpAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target1923.
      match
        __sem_target1923
      with
        ty279
      in
      vFileOpAst_rapp_Type_Type vFileOpAst_unwrapType ty279
  let vFileOpAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target1924.
      match
        __sem_target1924
      with
        ty280
      in
      vFileOpAst_rapp_Type_Type vFileOpAst_inspectType ty280
  let vFileOpAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x445.
      never
  let vFileOpAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x446.
      never
  let vFileOpAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f1495.
      lam __sem_target1925.
        match
          __sem_target1925
        with
          p1240
        in
        let res469 =
            vFileOpAst_smapAccumL_Pat_Pat
              (lam #var"567".
                 lam a925.
                   ({}, f1495 a925))
              {}
              p1240
          in
          res469.1
  let vFileOpAst_countPatNodes =
    lam count588.
      lam __sem_target1926.
        match
          __sem_target1926
        with
          t931
        in
        let count589 = addi count588 1 in
          let count590 =
            vFileOpAst_sfold_Pat_Pat vFileOpAst_countPatNodes count589 t931
          in
          let count591 =
            vFileOpAst_sfold_Pat_Expr vFileOpAst_countExprNodes count590 t931
          in
          let count592 =
            vFileOpAst_sfold_Pat_Type vFileOpAst_countTypeNodes count591 t931
          in
          count592
  let vFileOpAst_sfold_Pat_Pat: all acc2850. (acc2850 -> Ast_Pat -> acc2850) -> acc2850 -> Ast_Pat -> acc2850 =
    lam f1496.
      lam acc2851.
        lam __sem_target1927.
          match
            __sem_target1927
          with
            p1241
          in
          let res470 =
              vFileOpAst_smapAccumL_Pat_Pat
                (lam acc2852.
                   lam a926.
                     (f1496 acc2852 a926, a926))
                acc2851
                p1241
            in
            res470.0
  let vFileOpAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f1497.
      lam __sem_target1928.
        match
          __sem_target1928
        with
          p1242
        in
        match
            vFileOpAst_smapAccumL_Expr_Pat
              (lam #var"568".
                 lam a927.
                   ({}, f1497 a927))
              {}
              p1242
          with
            (_, p1243)
          in
          p1243
  let vFileOpAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f1498.
      lam __sem_target1929.
        match
          __sem_target1929
        with
          p1244
        in
        match
            vFileOpAst_smapAccumL_Pat_Expr
              (lam #var"569".
                 lam a928.
                   ({}, f1498 a928))
              {}
              p1244
          with
            (_, p1245)
          in
          p1245
  let vFileOpAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f1499.
      lam __sem_target1930.
        match
          __sem_target1930
        with
          p1246
        in
        match
            vFileOpAst_smapAccumL_Pat_Type
              (lam #var"570".
                 lam a929.
                   ({}, f1499 a929))
              {}
              p1246
          with
            (_, p1247)
          in
          p1247
  let vFileOpAst_countExprNodes =
    lam count593.
      lam __sem_target1931.
        match
          __sem_target1931
        with
          t932
        in
        let count594 = addi count593 1 in
          let count595 =
            vFileOpAst_sfold_Expr_Expr vFileOpAst_countExprNodes count594 t932
          in
          let count596 =
            vFileOpAst_sfold_Expr_Type vFileOpAst_countTypeNodes count595 t932
          in
          let count597 =
            vFileOpAst_sfold_Expr_TypeLabel vFileOpAst_countTypeNodes count596 t932
          in
          let count598 =
            vFileOpAst_sfold_Expr_Pat vFileOpAst_countPatNodes count597 t932
          in
          count598
  let vFileOpAst_countTypeNodes =
    lam count599.
      lam __sem_target1932.
        match
          __sem_target1932
        with
          t933
        in
        let count600 = addi count599 1 in
          let count601 =
            vFileOpAst_sfold_Type_Type vFileOpAst_countTypeNodes count600 t933
          in
          count601
  let vFileOpAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f1500.
      lam __sem_target1933.
        match
          __sem_target1933
        with
          ty281
        in
        let res471 =
            vFileOpAst_rappAccumL_Type_Type
              (lam #var"571".
                 lam t934.
                   ({}, f1500 t934))
              {}
              ty281
          in
          res471.1
  let vFileOpAst_sfold_Expr_Pat: all acc2853. (acc2853 -> Ast_Pat -> acc2853) -> acc2853 -> Ast_Expr -> acc2853 =
    lam f1501.
      lam acc2854.
        lam __sem_target1934.
          match
            __sem_target1934
          with
            p1248
          in
          match
              vFileOpAst_smapAccumL_Expr_Pat
                (lam acc2855.
                   lam a930.
                     (f1501 acc2855 a930, a930))
                acc2854
                p1248
            with
              (acc2856, _)
            in
            acc2856
  let vFileOpAst_sfold_Pat_Expr: all acc2857. (acc2857 -> Ast_Expr -> acc2857) -> acc2857 -> Ast_Pat -> acc2857 =
    lam f1502.
      lam acc2858.
        lam __sem_target1935.
          match
            __sem_target1935
          with
            p1249
          in
          match
              vFileOpAst_smapAccumL_Pat_Expr
                (lam acc2859.
                   lam a931.
                     (f1502 acc2859 a931, a931))
                acc2858
                p1249
            with
              (acc2860, _)
            in
            acc2860
  let vFileOpAst_sfold_Pat_Type: all acc2861. (acc2861 -> Ast_Type -> acc2861) -> acc2861 -> Ast_Pat -> acc2861 =
    lam f1503.
      lam acc2862.
        lam __sem_target1936.
          match
            __sem_target1936
          with
            p1250
          in
          match
              vFileOpAst_smapAccumL_Pat_Type
                (lam acc2863.
                   lam a932.
                     (f1503 acc2863 a932, a932))
                acc2862
                p1250
            with
              (acc2864, _)
            in
            acc2864
  let vFileOpAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1504.
      lam __sem_target1937.
        match
          __sem_target1937
        with
          p1251
        in
        let res472 =
            vFileOpAst_smapAccumL_Expr_Expr
              (lam #var"572".
                 lam a933.
                   ({}, f1504 a933))
              {}
              p1251
          in
          res472.1
  let vFileOpAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f1505.
      lam __sem_target1938.
        match
          __sem_target1938
        with
          p1252
        in
        let res473 =
            vFileOpAst_smapAccumL_Expr_Type
              (lam #var"573".
                 lam a934.
                   ({}, f1505 a934))
              {}
              p1252
          in
          res473.1
  let vFileOpAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f1506: Ast_Type -> Ast_Type.
      lam __sem_target1939.
        match
          __sem_target1939
        with
          s256
        in
        match
            vFileOpAst_smapAccumL_Kind_Type
              (lam #var"574".
                 lam x447.
                   ({}, f1506 x447))
              {}
              s256
          with
            (_, s257)
          in
          s257
  let vFileOpAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f1507.
      lam __sem_target1940.
        match
          __sem_target1940
        with
          p1253
        in
        let res474 =
            vFileOpAst_smapAccumL_Type_Type
              (lam #var"575".
                 lam a935.
                   ({}, f1507 a935))
              {}
              p1253
          in
          res474.1
  let vFileOpAst_sfold_Expr_Expr: all acc2865. (acc2865 -> Ast_Expr -> acc2865) -> acc2865 -> Ast_Expr -> acc2865 =
    lam f1508.
      lam acc2866.
        lam __sem_target1941.
          match
            __sem_target1941
          with
            p1254
          in
          let res475 =
              vFileOpAst_smapAccumL_Expr_Expr
                (lam acc2867.
                   lam a936.
                     (f1508 acc2867 a936, a936))
                acc2866
                p1254
            in
            res475.0
  let vFileOpAst_sfold_Expr_Type: all acc2868. (acc2868 -> Ast_Type -> acc2868) -> acc2868 -> Ast_Expr -> acc2868 =
    lam f1509.
      lam acc2869.
        lam __sem_target1942.
          match
            __sem_target1942
          with
            p1255
          in
          let res476 =
              vFileOpAst_smapAccumL_Expr_Type
                (lam acc2870.
                   lam a937.
                     (f1509 acc2870 a937, a937))
                acc2869
                p1255
            in
            res476.0
  let vFileOpAst_sfold_Kind_Type: all acc2871. (acc2871 -> Ast_Type -> acc2871) -> acc2871 -> Ast_Kind -> acc2871 =
    lam f1510: acc2871 -> Ast_Type -> acc2871.
      lam acc2872: acc2871.
        lam __sem_target1943.
          match
            __sem_target1943
          with
            s258
          in
          match
              vFileOpAst_smapAccumL_Kind_Type
                (lam a938.
                   lam x448.
                     (f1510 a938 x448, x448))
                acc2872
                s258
            with
              (a939, _)
            in
            a939
  let vFileOpAst_sfold_Type_Type: all acc2873. (acc2873 -> Ast_Type -> acc2873) -> acc2873 -> Ast_Type -> acc2873 =
    lam f1511.
      lam acc2874.
        lam __sem_target1944.
          match
            __sem_target1944
          with
            p1256
          in
          let res477 =
              vFileOpAst_smapAccumL_Type_Type
                (lam acc2875.
                   lam a940.
                     (f1511 acc2875 a940, a940))
                acc2874
                p1256
            in
            res477.0
  let vFileOpAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1512.
      lam __sem_target1945.
        match
          __sem_target1945
        with
          expr378
        in
        let expr379 = f1512 expr378 in
          vFileOpAst_smap_Expr_Expr (vFileOpAst_mapPre_Expr_Expr f1512) expr379
  let vFileOpAst_foldPre_Expr_Expr: all acc2876. (acc2876 -> Ast_Expr -> acc2876) -> acc2876 -> Ast_Expr -> acc2876 =
    lam f1513.
      lam acc2877.
        lam __sem_target1946.
          match
            __sem_target1946
          with
            expr380
          in
          let acc2878 = f1513 acc2877 expr380 in
            vFileOpAst_sfold_Expr_Expr (vFileOpAst_foldPre_Expr_Expr f1513) acc2878 expr380
  let vFileOpAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1514.
      lam __sem_target1947.
        match
          __sem_target1947
        with
          expr381
        in
        f1514
            (vFileOpAst_smap_Expr_Expr (vFileOpAst_mapPost_Expr_Expr f1514) expr381)
  let vFileOpAst_foldPost_Expr_Expr: all acc2879. (acc2879 -> Ast_Expr -> acc2879) -> acc2879 -> Ast_Expr -> acc2879 =
    lam f1515.
      lam acc2880.
        lam __sem_target1948.
          match
            __sem_target1948
          with
            expr382
          in
          f1515
              (vFileOpAst_sfold_Expr_Expr (vFileOpAst_foldPost_Expr_Expr f1515) acc2880 expr382)
              expr382
  let vFileOpAst_smapAccumL_Pat_Pat: all acc2881. (acc2881 -> Ast_Pat -> (acc2881, Ast_Pat)) -> acc2881 -> Ast_Pat -> (acc2881, Ast_Pat) =
    lam f1516.
      lam acc2882.
        lam __sem_target1949.
          match
            __sem_target1949
          with
            p1257
          in
          (acc2882, p1257)
  let vFileOpAst_smapAccumL_Expr_Pat: all acc2883. (acc2883 -> Ast_Pat -> (acc2883, Ast_Pat)) -> acc2883 -> Ast_Expr -> (acc2883, Ast_Expr) =
    lam f1517.
      lam acc2884.
        lam __sem_target1950.
          match
            __sem_target1950
          with
            p1258
          in
          (acc2884, p1258)
  let vFileOpAst_smapAccumL_Pat_Expr: all acc2885. (acc2885 -> Ast_Expr -> (acc2885, Ast_Expr)) -> acc2885 -> Ast_Pat -> (acc2885, Ast_Pat) =
    lam f1518.
      lam acc2886.
        lam __sem_target1951.
          match
            __sem_target1951
          with
            p1259
          in
          (acc2886, p1259)
  let vFileOpAst_smapAccumL_Pat_Type: all acc2887. (acc2887 -> Ast_Type -> (acc2887, Ast_Type)) -> acc2887 -> Ast_Pat -> (acc2887, Ast_Pat) =
    lam f1519.
      lam acc2888.
        lam __sem_target1952.
          match
            __sem_target1952
          with
            p1260
          in
          (acc2888, p1260)
  let vFileOpAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f1520.
      lam __sem_target1953.
        match
          __sem_target1953
        with
          p1261
        in
        let res478 =
            vFileOpAst_smapAccumL_Expr_TypeLabel
              (lam #var"576".
                 lam a941.
                   ({}, f1520 a941))
              {}
              p1261
          in
          res478.1
  let vFileOpAst_rappAccumL_Type_Type: all acc2889. (acc2889 -> Ast_Type -> (acc2889, Ast_Type)) -> acc2889 -> Ast_Type -> (acc2889, Ast_Type) =
    lam f1521.
      lam acc2890.
        lam __sem_target1954.
          match
            __sem_target1954
          with
            ty282
          in
          (acc2890, ty282)
  let vFileOpAst_sfold_Expr_TypeLabel: all acc2891. (acc2891 -> Ast_Type -> acc2891) -> acc2891 -> Ast_Expr -> acc2891 =
    lam f1522.
      lam acc2892.
        lam __sem_target1955.
          match
            __sem_target1955
          with
            p1262
          in
          let res479 =
              vFileOpAst_smapAccumL_Expr_TypeLabel
                (lam acc2893.
                   lam a942.
                     (f1522 acc2893 a942, a942))
                acc2892
                p1262
            in
            res479.0
  let vFileOpAst_smapAccumL_Expr_Expr: all acc2894. (acc2894 -> Ast_Expr -> (acc2894, Ast_Expr)) -> acc2894 -> Ast_Expr -> (acc2894, Ast_Expr) =
    lam f1523.
      lam acc2895.
        lam __sem_target1956.
          match
            __sem_target1956
          with
            p1263
          in
          (acc2895, p1263)
  let vFileOpAst_smapAccumL_Expr_Type: all acc2896. (acc2896 -> Ast_Type -> (acc2896, Ast_Type)) -> acc2896 -> Ast_Expr -> (acc2896, Ast_Expr) =
    lam f1524.
      lam acc2897.
        lam __sem_target1957.
          match
            __sem_target1957
          with
            p1264
          in
          (acc2897, p1264)
  let vFileOpAst_smapAccumL_Kind_Type: all acc2898. (acc2898 -> Ast_Type -> (acc2898, Ast_Type)) -> acc2898 -> Ast_Kind -> (acc2898, Ast_Kind) =
    lam f1525.
      lam acc2899.
        lam __sem_target1958.
          match
            __sem_target1958
          with
            s259
          in
          (acc2899, s259)
  let vFileOpAst_smapAccumL_Type_Type: all acc2900. (acc2900 -> Ast_Type -> (acc2900, Ast_Type)) -> acc2900 -> Ast_Type -> (acc2900, Ast_Type) =
    lam f1526.
      lam acc2901.
        lam __sem_target1959.
          match
            __sem_target1959
          with
            p1265
          in
          (acc2901, p1265)
  let vFileOpAst_mapAccumLPre_Expr_Expr: all acc2902. (acc2902 -> Ast_Expr -> (acc2902, Ast_Expr)) -> acc2902 -> Ast_Expr -> (acc2902, Ast_Expr) =
    lam f1527.
      lam acc2903.
        lam __sem_target1960.
          match
            __sem_target1960
          with
            expr383
          in
          match
              f1527 acc2903 expr383
            with
              (acc2904, expr384)
            in
            vFileOpAst_smapAccumL_Expr_Expr (vFileOpAst_mapAccumLPre_Expr_Expr f1527) acc2904 expr384
  let vFileOpAst_mapAccumLPost_Expr_Expr: all acc2905. (acc2905 -> Ast_Expr -> (acc2905, Ast_Expr)) -> acc2905 -> Ast_Expr -> (acc2905, Ast_Expr) =
    lam f1528.
      lam acc2906.
        lam __sem_target1961.
          match
            __sem_target1961
          with
            expr385
          in
          match
              vFileOpAst_smapAccumL_Expr_Expr (vFileOpAst_mapAccumLPost_Expr_Expr f1528) acc2906 expr385
            with
              (acc2907, expr386)
            in
            f1528 acc2907 expr386
  let vFileOpAst_smapAccumL_Expr_TypeLabel: all acc2908. (acc2908 -> Ast_Type -> (acc2908, Ast_Type)) -> acc2908 -> Ast_Expr -> (acc2908, Ast_Expr) =
    lam f1529.
      lam acc2909.
        lam __sem_target1962.
          match
            __sem_target1962
          with
            p1266
          in
          match
              f1529 acc2909 (vFileOpAst_tyTm p1266)
            with
              (acc2910, ty283)
            in
            (acc2910, vFileOpAst_withType ty283 p1266)
in
con IOAst_CReadBytesAsString: () -> ConstAst_Const in
con IOAst_CFlushStdout: () -> ConstAst_Const in
con IOAst_CFlushStderr: () -> ConstAst_Const in
con IOAst_CPrintError: () -> ConstAst_Const in
con IOAst_CReadLine: () -> ConstAst_Const in
con IOAst_CDPrint: () -> ConstAst_Const in
con IOAst_CPrint: () -> ConstAst_Const in
recursive
  let vIOAst_tyTm: Ast_Expr -> Ast_Type =
    lam __sem_target1875.
      match
        __sem_target1875
      with
        ConstAst_TmConst t921
      in
      t921.ty
  let vIOAst_tyPat: Ast_Pat -> Ast_Type = lam x433.
      never
  let vIOAst_infoTm: Ast_Expr -> Info =
    lam __sem_target1876.
      match
        __sem_target1876
      with
        ConstAst_TmConst r336
      in
      r336.info
  let vIOAst_infoTy: Ast_Type -> Info = lam x434.
      never
  let vIOAst_infoPat: Ast_Pat -> Info = lam x435.
      never
  let vIOAst_withInfo: Info -> Ast_Expr -> Ast_Expr =
    lam info46.
      lam __sem_target1877.
        match
          __sem_target1877
        with
          ConstAst_TmConst t922
        in
        ConstAst_TmConst
            { t922 with info = info46 }
  let vIOAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr =
    lam ty272: Ast_Type.
      lam __sem_target1878.
        match
          __sem_target1878
        with
          ConstAst_TmConst t923
        in
        ConstAst_TmConst
            { t923 with ty = ty272 }
  let vIOAst_tyWithInfo: Info -> Ast_Type -> Ast_Type = lam x436.
      never
  let vIOAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target1879.
      match
        __sem_target1879
      with
        ty273
      in
      vIOAst_rapp_Type_Type vIOAst_unwrapType ty273
  let vIOAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target1880.
      match
        __sem_target1880
      with
        ty274
      in
      vIOAst_rapp_Type_Type vIOAst_inspectType ty274
  let vIOAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x437.
      never
  let vIOAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x438.
      never
  let vIOAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f1460.
      lam __sem_target1881.
        match
          __sem_target1881
        with
          p1213
        in
        let res458 =
            vIOAst_smapAccumL_Pat_Pat
              (lam #var"557".
                 lam a907.
                   ({}, f1460 a907))
              {}
              p1213
          in
          res458.1
  let vIOAst_countPatNodes =
    lam count574.
      lam __sem_target1882.
        match
          __sem_target1882
        with
          t924
        in
        let count575 = addi count574 1 in
          let count576 = vIOAst_sfold_Pat_Pat vIOAst_countPatNodes count575 t924
          in
          let count577 = vIOAst_sfold_Pat_Expr vIOAst_countExprNodes count576 t924
          in
          let count578 = vIOAst_sfold_Pat_Type vIOAst_countTypeNodes count577 t924
          in
          count578
  let vIOAst_sfold_Pat_Pat: all acc2789. (acc2789 -> Ast_Pat -> acc2789) -> acc2789 -> Ast_Pat -> acc2789 =
    lam f1461.
      lam acc2790.
        lam __sem_target1883.
          match
            __sem_target1883
          with
            p1214
          in
          let res459 =
              vIOAst_smapAccumL_Pat_Pat
                (lam acc2791.
                   lam a908.
                     (f1461 acc2791 a908, a908))
                acc2790
                p1214
            in
            res459.0
  let vIOAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f1462.
      lam __sem_target1884.
        match
          __sem_target1884
        with
          p1215
        in
        match
            vIOAst_smapAccumL_Expr_Pat
              (lam #var"558".
                 lam a909.
                   ({}, f1462 a909))
              {}
              p1215
          with
            (_, p1216)
          in
          p1216
  let vIOAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f1463.
      lam __sem_target1885.
        match
          __sem_target1885
        with
          p1217
        in
        match
            vIOAst_smapAccumL_Pat_Expr
              (lam #var"559".
                 lam a910.
                   ({}, f1463 a910))
              {}
              p1217
          with
            (_, p1218)
          in
          p1218
  let vIOAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f1464.
      lam __sem_target1886.
        match
          __sem_target1886
        with
          p1219
        in
        match
            vIOAst_smapAccumL_Pat_Type
              (lam #var"560".
                 lam a911.
                   ({}, f1464 a911))
              {}
              p1219
          with
            (_, p1220)
          in
          p1220
  let vIOAst_countExprNodes =
    lam count579.
      lam __sem_target1887.
        match
          __sem_target1887
        with
          t925
        in
        let count580 = addi count579 1 in
          let count581 = vIOAst_sfold_Expr_Expr vIOAst_countExprNodes count580 t925
          in
          let count582 = vIOAst_sfold_Expr_Type vIOAst_countTypeNodes count581 t925
          in
          let count583 =
            vIOAst_sfold_Expr_TypeLabel vIOAst_countTypeNodes count582 t925
          in
          let count584 = vIOAst_sfold_Expr_Pat vIOAst_countPatNodes count583 t925
          in
          count584
  let vIOAst_countTypeNodes =
    lam count585.
      lam __sem_target1888.
        match
          __sem_target1888
        with
          t926
        in
        let count586 = addi count585 1 in
          let count587 = vIOAst_sfold_Type_Type vIOAst_countTypeNodes count586 t926
          in
          count587
  let vIOAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f1465.
      lam __sem_target1889.
        match
          __sem_target1889
        with
          ty275
        in
        let res460 =
            vIOAst_rappAccumL_Type_Type
              (lam #var"561".
                 lam t927.
                   ({}, f1465 t927))
              {}
              ty275
          in
          res460.1
  let vIOAst_sfold_Expr_Pat: all acc2792. (acc2792 -> Ast_Pat -> acc2792) -> acc2792 -> Ast_Expr -> acc2792 =
    lam f1466.
      lam acc2793.
        lam __sem_target1890.
          match
            __sem_target1890
          with
            p1221
          in
          match
              vIOAst_smapAccumL_Expr_Pat
                (lam acc2794.
                   lam a912.
                     (f1466 acc2794 a912, a912))
                acc2793
                p1221
            with
              (acc2795, _)
            in
            acc2795
  let vIOAst_sfold_Pat_Expr: all acc2796. (acc2796 -> Ast_Expr -> acc2796) -> acc2796 -> Ast_Pat -> acc2796 =
    lam f1467.
      lam acc2797.
        lam __sem_target1891.
          match
            __sem_target1891
          with
            p1222
          in
          match
              vIOAst_smapAccumL_Pat_Expr
                (lam acc2798.
                   lam a913.
                     (f1467 acc2798 a913, a913))
                acc2797
                p1222
            with
              (acc2799, _)
            in
            acc2799
  let vIOAst_sfold_Pat_Type: all acc2800. (acc2800 -> Ast_Type -> acc2800) -> acc2800 -> Ast_Pat -> acc2800 =
    lam f1468.
      lam acc2801.
        lam __sem_target1892.
          match
            __sem_target1892
          with
            p1223
          in
          match
              vIOAst_smapAccumL_Pat_Type
                (lam acc2802.
                   lam a914.
                     (f1468 acc2802 a914, a914))
                acc2801
                p1223
            with
              (acc2803, _)
            in
            acc2803
  let vIOAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1469.
      lam __sem_target1893.
        match
          __sem_target1893
        with
          p1224
        in
        let res461 =
            vIOAst_smapAccumL_Expr_Expr
              (lam #var"562".
                 lam a915.
                   ({}, f1469 a915))
              {}
              p1224
          in
          res461.1
  let vIOAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f1470.
      lam __sem_target1894.
        match
          __sem_target1894
        with
          p1225
        in
        let res462 =
            vIOAst_smapAccumL_Expr_Type
              (lam #var"563".
                 lam a916.
                   ({}, f1470 a916))
              {}
              p1225
          in
          res462.1
  let vIOAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f1471: Ast_Type -> Ast_Type.
      lam __sem_target1895.
        match
          __sem_target1895
        with
          s252
        in
        match
            vIOAst_smapAccumL_Kind_Type
              (lam #var"564".
                 lam x439.
                   ({}, f1471 x439))
              {}
              s252
          with
            (_, s253)
          in
          s253
  let vIOAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f1472.
      lam __sem_target1896.
        match
          __sem_target1896
        with
          p1226
        in
        let res463 =
            vIOAst_smapAccumL_Type_Type
              (lam #var"565".
                 lam a917.
                   ({}, f1472 a917))
              {}
              p1226
          in
          res463.1
  let vIOAst_sfold_Expr_Expr: all acc2804. (acc2804 -> Ast_Expr -> acc2804) -> acc2804 -> Ast_Expr -> acc2804 =
    lam f1473.
      lam acc2805.
        lam __sem_target1897.
          match
            __sem_target1897
          with
            p1227
          in
          let res464 =
              vIOAst_smapAccumL_Expr_Expr
                (lam acc2806.
                   lam a918.
                     (f1473 acc2806 a918, a918))
                acc2805
                p1227
            in
            res464.0
  let vIOAst_sfold_Expr_Type: all acc2807. (acc2807 -> Ast_Type -> acc2807) -> acc2807 -> Ast_Expr -> acc2807 =
    lam f1474.
      lam acc2808.
        lam __sem_target1898.
          match
            __sem_target1898
          with
            p1228
          in
          let res465 =
              vIOAst_smapAccumL_Expr_Type
                (lam acc2809.
                   lam a919.
                     (f1474 acc2809 a919, a919))
                acc2808
                p1228
            in
            res465.0
  let vIOAst_sfold_Kind_Type: all acc2810. (acc2810 -> Ast_Type -> acc2810) -> acc2810 -> Ast_Kind -> acc2810 =
    lam f1475: acc2810 -> Ast_Type -> acc2810.
      lam acc2811: acc2810.
        lam __sem_target1899.
          match
            __sem_target1899
          with
            s254
          in
          match
              vIOAst_smapAccumL_Kind_Type
                (lam a920.
                   lam x440.
                     (f1475 a920 x440, x440))
                acc2811
                s254
            with
              (a921, _)
            in
            a921
  let vIOAst_sfold_Type_Type: all acc2812. (acc2812 -> Ast_Type -> acc2812) -> acc2812 -> Ast_Type -> acc2812 =
    lam f1476.
      lam acc2813.
        lam __sem_target1900.
          match
            __sem_target1900
          with
            p1229
          in
          let res466 =
              vIOAst_smapAccumL_Type_Type
                (lam acc2814.
                   lam a922.
                     (f1476 acc2814 a922, a922))
                acc2813
                p1229
            in
            res466.0
  let vIOAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1477.
      lam __sem_target1901.
        match
          __sem_target1901
        with
          expr369
        in
        let expr370 = f1477 expr369 in
          vIOAst_smap_Expr_Expr (vIOAst_mapPre_Expr_Expr f1477) expr370
  let vIOAst_foldPre_Expr_Expr: all acc2815. (acc2815 -> Ast_Expr -> acc2815) -> acc2815 -> Ast_Expr -> acc2815 =
    lam f1478.
      lam acc2816.
        lam __sem_target1902.
          match
            __sem_target1902
          with
            expr371
          in
          let acc2817 = f1478 acc2816 expr371 in
            vIOAst_sfold_Expr_Expr (vIOAst_foldPre_Expr_Expr f1478) acc2817 expr371
  let vIOAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1479.
      lam __sem_target1903.
        match
          __sem_target1903
        with
          expr372
        in
        f1479
            (vIOAst_smap_Expr_Expr (vIOAst_mapPost_Expr_Expr f1479) expr372)
  let vIOAst_foldPost_Expr_Expr: all acc2818. (acc2818 -> Ast_Expr -> acc2818) -> acc2818 -> Ast_Expr -> acc2818 =
    lam f1480.
      lam acc2819.
        lam __sem_target1904.
          match
            __sem_target1904
          with
            expr373
          in
          f1480
              (vIOAst_sfold_Expr_Expr (vIOAst_foldPost_Expr_Expr f1480) acc2819 expr373)
              expr373
  let vIOAst_smapAccumL_Pat_Pat: all acc2820. (acc2820 -> Ast_Pat -> (acc2820, Ast_Pat)) -> acc2820 -> Ast_Pat -> (acc2820, Ast_Pat) =
    lam f1481.
      lam acc2821.
        lam __sem_target1905.
          match
            __sem_target1905
          with
            p1230
          in
          (acc2821, p1230)
  let vIOAst_smapAccumL_Expr_Pat: all acc2822. (acc2822 -> Ast_Pat -> (acc2822, Ast_Pat)) -> acc2822 -> Ast_Expr -> (acc2822, Ast_Expr) =
    lam f1482.
      lam acc2823.
        lam __sem_target1906.
          match
            __sem_target1906
          with
            p1231
          in
          (acc2823, p1231)
  let vIOAst_smapAccumL_Pat_Expr: all acc2824. (acc2824 -> Ast_Expr -> (acc2824, Ast_Expr)) -> acc2824 -> Ast_Pat -> (acc2824, Ast_Pat) =
    lam f1483.
      lam acc2825.
        lam __sem_target1907.
          match
            __sem_target1907
          with
            p1232
          in
          (acc2825, p1232)
  let vIOAst_smapAccumL_Pat_Type: all acc2826. (acc2826 -> Ast_Type -> (acc2826, Ast_Type)) -> acc2826 -> Ast_Pat -> (acc2826, Ast_Pat) =
    lam f1484.
      lam acc2827.
        lam __sem_target1908.
          match
            __sem_target1908
          with
            p1233
          in
          (acc2827, p1233)
  let vIOAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f1485.
      lam __sem_target1909.
        match
          __sem_target1909
        with
          p1234
        in
        let res467 =
            vIOAst_smapAccumL_Expr_TypeLabel
              (lam #var"566".
                 lam a923.
                   ({}, f1485 a923))
              {}
              p1234
          in
          res467.1
  let vIOAst_rappAccumL_Type_Type: all acc2828. (acc2828 -> Ast_Type -> (acc2828, Ast_Type)) -> acc2828 -> Ast_Type -> (acc2828, Ast_Type) =
    lam f1486.
      lam acc2829.
        lam __sem_target1910.
          match
            __sem_target1910
          with
            ty276
          in
          (acc2829, ty276)
  let vIOAst_sfold_Expr_TypeLabel: all acc2830. (acc2830 -> Ast_Type -> acc2830) -> acc2830 -> Ast_Expr -> acc2830 =
    lam f1487.
      lam acc2831.
        lam __sem_target1911.
          match
            __sem_target1911
          with
            p1235
          in
          let res468 =
              vIOAst_smapAccumL_Expr_TypeLabel
                (lam acc2832.
                   lam a924.
                     (f1487 acc2832 a924, a924))
                acc2831
                p1235
            in
            res468.0
  let vIOAst_smapAccumL_Expr_Expr: all acc2833. (acc2833 -> Ast_Expr -> (acc2833, Ast_Expr)) -> acc2833 -> Ast_Expr -> (acc2833, Ast_Expr) =
    lam f1488.
      lam acc2834.
        lam __sem_target1912.
          match
            __sem_target1912
          with
            p1236
          in
          (acc2834, p1236)
  let vIOAst_smapAccumL_Expr_Type: all acc2835. (acc2835 -> Ast_Type -> (acc2835, Ast_Type)) -> acc2835 -> Ast_Expr -> (acc2835, Ast_Expr) =
    lam f1489.
      lam acc2836.
        lam __sem_target1913.
          match
            __sem_target1913
          with
            p1237
          in
          (acc2836, p1237)
  let vIOAst_smapAccumL_Kind_Type: all acc2837. (acc2837 -> Ast_Type -> (acc2837, Ast_Type)) -> acc2837 -> Ast_Kind -> (acc2837, Ast_Kind) =
    lam f1490.
      lam acc2838.
        lam __sem_target1914.
          match
            __sem_target1914
          with
            s255
          in
          (acc2838, s255)
  let vIOAst_smapAccumL_Type_Type: all acc2839. (acc2839 -> Ast_Type -> (acc2839, Ast_Type)) -> acc2839 -> Ast_Type -> (acc2839, Ast_Type) =
    lam f1491.
      lam acc2840.
        lam __sem_target1915.
          match
            __sem_target1915
          with
            p1238
          in
          (acc2840, p1238)
  let vIOAst_mapAccumLPre_Expr_Expr: all acc2841. (acc2841 -> Ast_Expr -> (acc2841, Ast_Expr)) -> acc2841 -> Ast_Expr -> (acc2841, Ast_Expr) =
    lam f1492.
      lam acc2842.
        lam __sem_target1916.
          match
            __sem_target1916
          with
            expr374
          in
          match
              f1492 acc2842 expr374
            with
              (acc2843, expr375)
            in
            vIOAst_smapAccumL_Expr_Expr (vIOAst_mapAccumLPre_Expr_Expr f1492) acc2843 expr375
  let vIOAst_mapAccumLPost_Expr_Expr: all acc2844. (acc2844 -> Ast_Expr -> (acc2844, Ast_Expr)) -> acc2844 -> Ast_Expr -> (acc2844, Ast_Expr) =
    lam f1493.
      lam acc2845.
        lam __sem_target1917.
          match
            __sem_target1917
          with
            expr376
          in
          match
              vIOAst_smapAccumL_Expr_Expr (vIOAst_mapAccumLPost_Expr_Expr f1493) acc2845 expr376
            with
              (acc2846, expr377)
            in
            f1493 acc2846 expr377
  let vIOAst_smapAccumL_Expr_TypeLabel: all acc2847. (acc2847 -> Ast_Type -> (acc2847, Ast_Type)) -> acc2847 -> Ast_Expr -> (acc2847, Ast_Expr) =
    lam f1494.
      lam acc2848.
        lam __sem_target1918.
          match
            __sem_target1918
          with
            p1239
          in
          match
              f1494 acc2848 (vIOAst_tyTm p1239)
            with
              (acc2849, ty277)
            in
            (acc2849, vIOAst_withType ty277 p1239)
in
con RandomNumberGeneratorAst_CRandSetSeed: () -> ConstAst_Const in
con RandomNumberGeneratorAst_CRandIntU: () -> ConstAst_Const in
recursive
  let vRandomNumberGeneratorAst_tyTm: Ast_Expr -> Ast_Type =
    lam __sem_target1831.
      match
        __sem_target1831
      with
        ConstAst_TmConst t914
      in
      t914.ty
  let vRandomNumberGeneratorAst_tyPat: Ast_Pat -> Ast_Type = lam x425.
      never
  let vRandomNumberGeneratorAst_infoTm: Ast_Expr -> Info =
    lam __sem_target1832.
      match
        __sem_target1832
      with
        ConstAst_TmConst r335
      in
      r335.info
  let vRandomNumberGeneratorAst_infoTy: Ast_Type -> Info = lam x426.
      never
  let vRandomNumberGeneratorAst_infoPat: Ast_Pat -> Info = lam x427.
      never
  let vRandomNumberGeneratorAst_withInfo: Info -> Ast_Expr -> Ast_Expr =
    lam info45.
      lam __sem_target1833.
        match
          __sem_target1833
        with
          ConstAst_TmConst t915
        in
        ConstAst_TmConst
            { t915 with info = info45 }
  let vRandomNumberGeneratorAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr =
    lam ty266: Ast_Type.
      lam __sem_target1834.
        match
          __sem_target1834
        with
          ConstAst_TmConst t916
        in
        ConstAst_TmConst
            { t916 with ty = ty266 }
  let vRandomNumberGeneratorAst_tyWithInfo: Info -> Ast_Type -> Ast_Type = lam x428.
      never
  let vRandomNumberGeneratorAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target1835.
      match
        __sem_target1835
      with
        ty267
      in
      vRandomNumberGeneratorAst_rapp_Type_Type vRandomNumberGeneratorAst_unwrapType ty267
  let vRandomNumberGeneratorAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target1836.
      match
        __sem_target1836
      with
        ty268
      in
      vRandomNumberGeneratorAst_rapp_Type_Type vRandomNumberGeneratorAst_inspectType ty268
  let vRandomNumberGeneratorAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x429.
      never
  let vRandomNumberGeneratorAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x430.
      never
  let vRandomNumberGeneratorAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f1425.
      lam __sem_target1837.
        match
          __sem_target1837
        with
          p1186
        in
        let res447 =
            vRandomNumberGeneratorAst_smapAccumL_Pat_Pat
              (lam #var"547".
                 lam a889.
                   ({}, f1425 a889))
              {}
              p1186
          in
          res447.1
  let vRandomNumberGeneratorAst_countPatNodes =
    lam count560.
      lam __sem_target1838.
        match
          __sem_target1838
        with
          t917
        in
        let count561 = addi count560 1 in
          let count562 =
            vRandomNumberGeneratorAst_sfold_Pat_Pat vRandomNumberGeneratorAst_countPatNodes count561 t917
          in
          let count563 =
            vRandomNumberGeneratorAst_sfold_Pat_Expr vRandomNumberGeneratorAst_countExprNodes count562 t917
          in
          let count564 =
            vRandomNumberGeneratorAst_sfold_Pat_Type vRandomNumberGeneratorAst_countTypeNodes count563 t917
          in
          count564
  let vRandomNumberGeneratorAst_sfold_Pat_Pat: all acc2728. (acc2728 -> Ast_Pat -> acc2728) -> acc2728 -> Ast_Pat -> acc2728 =
    lam f1426.
      lam acc2729.
        lam __sem_target1839.
          match
            __sem_target1839
          with
            p1187
          in
          let res448 =
              vRandomNumberGeneratorAst_smapAccumL_Pat_Pat
                (lam acc2730.
                   lam a890.
                     (f1426 acc2730 a890, a890))
                acc2729
                p1187
            in
            res448.0
  let vRandomNumberGeneratorAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f1427.
      lam __sem_target1840.
        match
          __sem_target1840
        with
          p1188
        in
        match
            vRandomNumberGeneratorAst_smapAccumL_Expr_Pat
              (lam #var"548".
                 lam a891.
                   ({}, f1427 a891))
              {}
              p1188
          with
            (_, p1189)
          in
          p1189
  let vRandomNumberGeneratorAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f1428.
      lam __sem_target1841.
        match
          __sem_target1841
        with
          p1190
        in
        match
            vRandomNumberGeneratorAst_smapAccumL_Pat_Expr
              (lam #var"549".
                 lam a892.
                   ({}, f1428 a892))
              {}
              p1190
          with
            (_, p1191)
          in
          p1191
  let vRandomNumberGeneratorAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f1429.
      lam __sem_target1842.
        match
          __sem_target1842
        with
          p1192
        in
        match
            vRandomNumberGeneratorAst_smapAccumL_Pat_Type
              (lam #var"550".
                 lam a893.
                   ({}, f1429 a893))
              {}
              p1192
          with
            (_, p1193)
          in
          p1193
  let vRandomNumberGeneratorAst_countExprNodes =
    lam count565.
      lam __sem_target1843.
        match
          __sem_target1843
        with
          t918
        in
        let count566 = addi count565 1 in
          let count567 =
            vRandomNumberGeneratorAst_sfold_Expr_Expr vRandomNumberGeneratorAst_countExprNodes count566 t918
          in
          let count568 =
            vRandomNumberGeneratorAst_sfold_Expr_Type vRandomNumberGeneratorAst_countTypeNodes count567 t918
          in
          let count569 =
            vRandomNumberGeneratorAst_sfold_Expr_TypeLabel vRandomNumberGeneratorAst_countTypeNodes count568 t918
          in
          let count570 =
            vRandomNumberGeneratorAst_sfold_Expr_Pat vRandomNumberGeneratorAst_countPatNodes count569 t918
          in
          count570
  let vRandomNumberGeneratorAst_countTypeNodes =
    lam count571.
      lam __sem_target1844.
        match
          __sem_target1844
        with
          t919
        in
        let count572 = addi count571 1 in
          let count573 =
            vRandomNumberGeneratorAst_sfold_Type_Type vRandomNumberGeneratorAst_countTypeNodes count572 t919
          in
          count573
  let vRandomNumberGeneratorAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f1430.
      lam __sem_target1845.
        match
          __sem_target1845
        with
          ty269
        in
        let res449 =
            vRandomNumberGeneratorAst_rappAccumL_Type_Type
              (lam #var"551".
                 lam t920.
                   ({}, f1430 t920))
              {}
              ty269
          in
          res449.1
  let vRandomNumberGeneratorAst_sfold_Expr_Pat: all acc2731. (acc2731 -> Ast_Pat -> acc2731) -> acc2731 -> Ast_Expr -> acc2731 =
    lam f1431.
      lam acc2732.
        lam __sem_target1846.
          match
            __sem_target1846
          with
            p1194
          in
          match
              vRandomNumberGeneratorAst_smapAccumL_Expr_Pat
                (lam acc2733.
                   lam a894.
                     (f1431 acc2733 a894, a894))
                acc2732
                p1194
            with
              (acc2734, _)
            in
            acc2734
  let vRandomNumberGeneratorAst_sfold_Pat_Expr: all acc2735. (acc2735 -> Ast_Expr -> acc2735) -> acc2735 -> Ast_Pat -> acc2735 =
    lam f1432.
      lam acc2736.
        lam __sem_target1847.
          match
            __sem_target1847
          with
            p1195
          in
          match
              vRandomNumberGeneratorAst_smapAccumL_Pat_Expr
                (lam acc2737.
                   lam a895.
                     (f1432 acc2737 a895, a895))
                acc2736
                p1195
            with
              (acc2738, _)
            in
            acc2738
  let vRandomNumberGeneratorAst_sfold_Pat_Type: all acc2739. (acc2739 -> Ast_Type -> acc2739) -> acc2739 -> Ast_Pat -> acc2739 =
    lam f1433.
      lam acc2740.
        lam __sem_target1848.
          match
            __sem_target1848
          with
            p1196
          in
          match
              vRandomNumberGeneratorAst_smapAccumL_Pat_Type
                (lam acc2741.
                   lam a896.
                     (f1433 acc2741 a896, a896))
                acc2740
                p1196
            with
              (acc2742, _)
            in
            acc2742
  let vRandomNumberGeneratorAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1434.
      lam __sem_target1849.
        match
          __sem_target1849
        with
          p1197
        in
        let res450 =
            vRandomNumberGeneratorAst_smapAccumL_Expr_Expr
              (lam #var"552".
                 lam a897.
                   ({}, f1434 a897))
              {}
              p1197
          in
          res450.1
  let vRandomNumberGeneratorAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f1435.
      lam __sem_target1850.
        match
          __sem_target1850
        with
          p1198
        in
        let res451 =
            vRandomNumberGeneratorAst_smapAccumL_Expr_Type
              (lam #var"553".
                 lam a898.
                   ({}, f1435 a898))
              {}
              p1198
          in
          res451.1
  let vRandomNumberGeneratorAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f1436: Ast_Type -> Ast_Type.
      lam __sem_target1851.
        match
          __sem_target1851
        with
          s248
        in
        match
            vRandomNumberGeneratorAst_smapAccumL_Kind_Type
              (lam #var"554".
                 lam x431.
                   ({}, f1436 x431))
              {}
              s248
          with
            (_, s249)
          in
          s249
  let vRandomNumberGeneratorAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f1437.
      lam __sem_target1852.
        match
          __sem_target1852
        with
          p1199
        in
        let res452 =
            vRandomNumberGeneratorAst_smapAccumL_Type_Type
              (lam #var"555".
                 lam a899.
                   ({}, f1437 a899))
              {}
              p1199
          in
          res452.1
  let vRandomNumberGeneratorAst_sfold_Expr_Expr: all acc2743. (acc2743 -> Ast_Expr -> acc2743) -> acc2743 -> Ast_Expr -> acc2743 =
    lam f1438.
      lam acc2744.
        lam __sem_target1853.
          match
            __sem_target1853
          with
            p1200
          in
          let res453 =
              vRandomNumberGeneratorAst_smapAccumL_Expr_Expr
                (lam acc2745.
                   lam a900.
                     (f1438 acc2745 a900, a900))
                acc2744
                p1200
            in
            res453.0
  let vRandomNumberGeneratorAst_sfold_Expr_Type: all acc2746. (acc2746 -> Ast_Type -> acc2746) -> acc2746 -> Ast_Expr -> acc2746 =
    lam f1439.
      lam acc2747.
        lam __sem_target1854.
          match
            __sem_target1854
          with
            p1201
          in
          let res454 =
              vRandomNumberGeneratorAst_smapAccumL_Expr_Type
                (lam acc2748.
                   lam a901.
                     (f1439 acc2748 a901, a901))
                acc2747
                p1201
            in
            res454.0
  let vRandomNumberGeneratorAst_sfold_Kind_Type: all acc2749. (acc2749 -> Ast_Type -> acc2749) -> acc2749 -> Ast_Kind -> acc2749 =
    lam f1440: acc2749 -> Ast_Type -> acc2749.
      lam acc2750: acc2749.
        lam __sem_target1855.
          match
            __sem_target1855
          with
            s250
          in
          match
              vRandomNumberGeneratorAst_smapAccumL_Kind_Type
                (lam a902.
                   lam x432.
                     (f1440 a902 x432, x432))
                acc2750
                s250
            with
              (a903, _)
            in
            a903
  let vRandomNumberGeneratorAst_sfold_Type_Type: all acc2751. (acc2751 -> Ast_Type -> acc2751) -> acc2751 -> Ast_Type -> acc2751 =
    lam f1441.
      lam acc2752.
        lam __sem_target1856.
          match
            __sem_target1856
          with
            p1202
          in
          let res455 =
              vRandomNumberGeneratorAst_smapAccumL_Type_Type
                (lam acc2753.
                   lam a904.
                     (f1441 acc2753 a904, a904))
                acc2752
                p1202
            in
            res455.0
  let vRandomNumberGeneratorAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1442.
      lam __sem_target1857.
        match
          __sem_target1857
        with
          expr360
        in
        let expr361 = f1442 expr360 in
          vRandomNumberGeneratorAst_smap_Expr_Expr (vRandomNumberGeneratorAst_mapPre_Expr_Expr f1442) expr361
  let vRandomNumberGeneratorAst_foldPre_Expr_Expr: all acc2754. (acc2754 -> Ast_Expr -> acc2754) -> acc2754 -> Ast_Expr -> acc2754 =
    lam f1443.
      lam acc2755.
        lam __sem_target1858.
          match
            __sem_target1858
          with
            expr362
          in
          let acc2756 = f1443 acc2755 expr362 in
            vRandomNumberGeneratorAst_sfold_Expr_Expr
              (vRandomNumberGeneratorAst_foldPre_Expr_Expr f1443)
              acc2756
              expr362
  let vRandomNumberGeneratorAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1444.
      lam __sem_target1859.
        match
          __sem_target1859
        with
          expr363
        in
        f1444
            (vRandomNumberGeneratorAst_smap_Expr_Expr (vRandomNumberGeneratorAst_mapPost_Expr_Expr f1444) expr363)
  let vRandomNumberGeneratorAst_foldPost_Expr_Expr: all acc2757. (acc2757 -> Ast_Expr -> acc2757) -> acc2757 -> Ast_Expr -> acc2757 =
    lam f1445.
      lam acc2758.
        lam __sem_target1860.
          match
            __sem_target1860
          with
            expr364
          in
          f1445
              (vRandomNumberGeneratorAst_sfold_Expr_Expr
                 (vRandomNumberGeneratorAst_foldPost_Expr_Expr f1445)
                 acc2758
                 expr364)
              expr364
  let vRandomNumberGeneratorAst_smapAccumL_Pat_Pat: all acc2759. (acc2759 -> Ast_Pat -> (acc2759, Ast_Pat)) -> acc2759 -> Ast_Pat -> (acc2759, Ast_Pat) =
    lam f1446.
      lam acc2760.
        lam __sem_target1861.
          match
            __sem_target1861
          with
            p1203
          in
          (acc2760, p1203)
  let vRandomNumberGeneratorAst_smapAccumL_Expr_Pat: all acc2761. (acc2761 -> Ast_Pat -> (acc2761, Ast_Pat)) -> acc2761 -> Ast_Expr -> (acc2761, Ast_Expr) =
    lam f1447.
      lam acc2762.
        lam __sem_target1862.
          match
            __sem_target1862
          with
            p1204
          in
          (acc2762, p1204)
  let vRandomNumberGeneratorAst_smapAccumL_Pat_Expr: all acc2763. (acc2763 -> Ast_Expr -> (acc2763, Ast_Expr)) -> acc2763 -> Ast_Pat -> (acc2763, Ast_Pat) =
    lam f1448.
      lam acc2764.
        lam __sem_target1863.
          match
            __sem_target1863
          with
            p1205
          in
          (acc2764, p1205)
  let vRandomNumberGeneratorAst_smapAccumL_Pat_Type: all acc2765. (acc2765 -> Ast_Type -> (acc2765, Ast_Type)) -> acc2765 -> Ast_Pat -> (acc2765, Ast_Pat) =
    lam f1449.
      lam acc2766.
        lam __sem_target1864.
          match
            __sem_target1864
          with
            p1206
          in
          (acc2766, p1206)
  let vRandomNumberGeneratorAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f1450.
      lam __sem_target1865.
        match
          __sem_target1865
        with
          p1207
        in
        let res456 =
            vRandomNumberGeneratorAst_smapAccumL_Expr_TypeLabel
              (lam #var"556".
                 lam a905.
                   ({}, f1450 a905))
              {}
              p1207
          in
          res456.1
  let vRandomNumberGeneratorAst_rappAccumL_Type_Type: all acc2767. (acc2767 -> Ast_Type -> (acc2767, Ast_Type)) -> acc2767 -> Ast_Type -> (acc2767, Ast_Type) =
    lam f1451.
      lam acc2768.
        lam __sem_target1866.
          match
            __sem_target1866
          with
            ty270
          in
          (acc2768, ty270)
  let vRandomNumberGeneratorAst_sfold_Expr_TypeLabel: all acc2769. (acc2769 -> Ast_Type -> acc2769) -> acc2769 -> Ast_Expr -> acc2769 =
    lam f1452.
      lam acc2770.
        lam __sem_target1867.
          match
            __sem_target1867
          with
            p1208
          in
          let res457 =
              vRandomNumberGeneratorAst_smapAccumL_Expr_TypeLabel
                (lam acc2771.
                   lam a906.
                     (f1452 acc2771 a906, a906))
                acc2770
                p1208
            in
            res457.0
  let vRandomNumberGeneratorAst_smapAccumL_Expr_Expr: all acc2772. (acc2772 -> Ast_Expr -> (acc2772, Ast_Expr)) -> acc2772 -> Ast_Expr -> (acc2772, Ast_Expr) =
    lam f1453.
      lam acc2773.
        lam __sem_target1868.
          match
            __sem_target1868
          with
            p1209
          in
          (acc2773, p1209)
  let vRandomNumberGeneratorAst_smapAccumL_Expr_Type: all acc2774. (acc2774 -> Ast_Type -> (acc2774, Ast_Type)) -> acc2774 -> Ast_Expr -> (acc2774, Ast_Expr) =
    lam f1454.
      lam acc2775.
        lam __sem_target1869.
          match
            __sem_target1869
          with
            p1210
          in
          (acc2775, p1210)
  let vRandomNumberGeneratorAst_smapAccumL_Kind_Type: all acc2776. (acc2776 -> Ast_Type -> (acc2776, Ast_Type)) -> acc2776 -> Ast_Kind -> (acc2776, Ast_Kind) =
    lam f1455.
      lam acc2777.
        lam __sem_target1870.
          match
            __sem_target1870
          with
            s251
          in
          (acc2777, s251)
  let vRandomNumberGeneratorAst_smapAccumL_Type_Type: all acc2778. (acc2778 -> Ast_Type -> (acc2778, Ast_Type)) -> acc2778 -> Ast_Type -> (acc2778, Ast_Type) =
    lam f1456.
      lam acc2779.
        lam __sem_target1871.
          match
            __sem_target1871
          with
            p1211
          in
          (acc2779, p1211)
  let vRandomNumberGeneratorAst_mapAccumLPre_Expr_Expr: all acc2780. (acc2780 -> Ast_Expr -> (acc2780, Ast_Expr)) -> acc2780 -> Ast_Expr -> (acc2780, Ast_Expr) =
    lam f1457.
      lam acc2781.
        lam __sem_target1872.
          match
            __sem_target1872
          with
            expr365
          in
          match
              f1457 acc2781 expr365
            with
              (acc2782, expr366)
            in
            vRandomNumberGeneratorAst_smapAccumL_Expr_Expr
                (vRandomNumberGeneratorAst_mapAccumLPre_Expr_Expr f1457)
                acc2782
                expr366
  let vRandomNumberGeneratorAst_mapAccumLPost_Expr_Expr: all acc2783. (acc2783 -> Ast_Expr -> (acc2783, Ast_Expr)) -> acc2783 -> Ast_Expr -> (acc2783, Ast_Expr) =
    lam f1458.
      lam acc2784.
        lam __sem_target1873.
          match
            __sem_target1873
          with
            expr367
          in
          match
              vRandomNumberGeneratorAst_smapAccumL_Expr_Expr
                (vRandomNumberGeneratorAst_mapAccumLPost_Expr_Expr f1458)
                acc2784
                expr367
            with
              (acc2785, expr368)
            in
            f1458 acc2785 expr368
  let vRandomNumberGeneratorAst_smapAccumL_Expr_TypeLabel: all acc2786. (acc2786 -> Ast_Type -> (acc2786, Ast_Type)) -> acc2786 -> Ast_Expr -> (acc2786, Ast_Expr) =
    lam f1459.
      lam acc2787.
        lam __sem_target1874.
          match
            __sem_target1874
          with
            p1212
          in
          match
              f1459 acc2787 (vRandomNumberGeneratorAst_tyTm p1212)
            with
              (acc2788, ty271)
            in
            (acc2788, vRandomNumberGeneratorAst_withType ty271 p1212)
in
con SysAst_CCommand: () -> ConstAst_Const in
con SysAst_CError: () -> ConstAst_Const in
con SysAst_CExit: () -> ConstAst_Const in
con SysAst_CArgv: () -> ConstAst_Const in
recursive
  let vSysAst_tyTm: Ast_Expr -> Ast_Type =
    lam __sem_target1787.
      match
        __sem_target1787
      with
        ConstAst_TmConst t907
      in
      t907.ty
  let vSysAst_tyPat: Ast_Pat -> Ast_Type = lam x417.
      never
  let vSysAst_infoTm: Ast_Expr -> Info =
    lam __sem_target1788.
      match
        __sem_target1788
      with
        ConstAst_TmConst r334
      in
      r334.info
  let vSysAst_infoTy: Ast_Type -> Info = lam x418.
      never
  let vSysAst_infoPat: Ast_Pat -> Info = lam x419.
      never
  let vSysAst_withInfo: Info -> Ast_Expr -> Ast_Expr =
    lam info44.
      lam __sem_target1789.
        match
          __sem_target1789
        with
          ConstAst_TmConst t908
        in
        ConstAst_TmConst
            { t908 with info = info44 }
  let vSysAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr =
    lam ty260: Ast_Type.
      lam __sem_target1790.
        match
          __sem_target1790
        with
          ConstAst_TmConst t909
        in
        ConstAst_TmConst
            { t909 with ty = ty260 }
  let vSysAst_tyWithInfo: Info -> Ast_Type -> Ast_Type = lam x420.
      never
  let vSysAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target1791.
      match
        __sem_target1791
      with
        ty261
      in
      vSysAst_rapp_Type_Type vSysAst_unwrapType ty261
  let vSysAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target1792.
      match
        __sem_target1792
      with
        ty262
      in
      vSysAst_rapp_Type_Type vSysAst_inspectType ty262
  let vSysAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x421.
      never
  let vSysAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x422.
      never
  let vSysAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f1390.
      lam __sem_target1793.
        match
          __sem_target1793
        with
          p1159
        in
        let res436 =
            vSysAst_smapAccumL_Pat_Pat
              (lam #var"537".
                 lam a871.
                   ({}, f1390 a871))
              {}
              p1159
          in
          res436.1
  let vSysAst_countPatNodes =
    lam count546.
      lam __sem_target1794.
        match
          __sem_target1794
        with
          t910
        in
        let count547 = addi count546 1 in
          let count548 = vSysAst_sfold_Pat_Pat vSysAst_countPatNodes count547 t910
          in
          let count549 = vSysAst_sfold_Pat_Expr vSysAst_countExprNodes count548 t910
          in
          let count550 = vSysAst_sfold_Pat_Type vSysAst_countTypeNodes count549 t910
          in
          count550
  let vSysAst_sfold_Pat_Pat: all acc2667. (acc2667 -> Ast_Pat -> acc2667) -> acc2667 -> Ast_Pat -> acc2667 =
    lam f1391.
      lam acc2668.
        lam __sem_target1795.
          match
            __sem_target1795
          with
            p1160
          in
          let res437 =
              vSysAst_smapAccumL_Pat_Pat
                (lam acc2669.
                   lam a872.
                     (f1391 acc2669 a872, a872))
                acc2668
                p1160
            in
            res437.0
  let vSysAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f1392.
      lam __sem_target1796.
        match
          __sem_target1796
        with
          p1161
        in
        match
            vSysAst_smapAccumL_Expr_Pat
              (lam #var"538".
                 lam a873.
                   ({}, f1392 a873))
              {}
              p1161
          with
            (_, p1162)
          in
          p1162
  let vSysAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f1393.
      lam __sem_target1797.
        match
          __sem_target1797
        with
          p1163
        in
        match
            vSysAst_smapAccumL_Pat_Expr
              (lam #var"539".
                 lam a874.
                   ({}, f1393 a874))
              {}
              p1163
          with
            (_, p1164)
          in
          p1164
  let vSysAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f1394.
      lam __sem_target1798.
        match
          __sem_target1798
        with
          p1165
        in
        match
            vSysAst_smapAccumL_Pat_Type
              (lam #var"540".
                 lam a875.
                   ({}, f1394 a875))
              {}
              p1165
          with
            (_, p1166)
          in
          p1166
  let vSysAst_countExprNodes =
    lam count551.
      lam __sem_target1799.
        match
          __sem_target1799
        with
          t911
        in
        let count552 = addi count551 1 in
          let count553 = vSysAst_sfold_Expr_Expr vSysAst_countExprNodes count552 t911
          in
          let count554 = vSysAst_sfold_Expr_Type vSysAst_countTypeNodes count553 t911
          in
          let count555 =
            vSysAst_sfold_Expr_TypeLabel vSysAst_countTypeNodes count554 t911
          in
          let count556 = vSysAst_sfold_Expr_Pat vSysAst_countPatNodes count555 t911
          in
          count556
  let vSysAst_countTypeNodes =
    lam count557.
      lam __sem_target1800.
        match
          __sem_target1800
        with
          t912
        in
        let count558 = addi count557 1 in
          let count559 = vSysAst_sfold_Type_Type vSysAst_countTypeNodes count558 t912
          in
          count559
  let vSysAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f1395.
      lam __sem_target1801.
        match
          __sem_target1801
        with
          ty263
        in
        let res438 =
            vSysAst_rappAccumL_Type_Type
              (lam #var"541".
                 lam t913.
                   ({}, f1395 t913))
              {}
              ty263
          in
          res438.1
  let vSysAst_sfold_Expr_Pat: all acc2670. (acc2670 -> Ast_Pat -> acc2670) -> acc2670 -> Ast_Expr -> acc2670 =
    lam f1396.
      lam acc2671.
        lam __sem_target1802.
          match
            __sem_target1802
          with
            p1167
          in
          match
              vSysAst_smapAccumL_Expr_Pat
                (lam acc2672.
                   lam a876.
                     (f1396 acc2672 a876, a876))
                acc2671
                p1167
            with
              (acc2673, _)
            in
            acc2673
  let vSysAst_sfold_Pat_Expr: all acc2674. (acc2674 -> Ast_Expr -> acc2674) -> acc2674 -> Ast_Pat -> acc2674 =
    lam f1397.
      lam acc2675.
        lam __sem_target1803.
          match
            __sem_target1803
          with
            p1168
          in
          match
              vSysAst_smapAccumL_Pat_Expr
                (lam acc2676.
                   lam a877.
                     (f1397 acc2676 a877, a877))
                acc2675
                p1168
            with
              (acc2677, _)
            in
            acc2677
  let vSysAst_sfold_Pat_Type: all acc2678. (acc2678 -> Ast_Type -> acc2678) -> acc2678 -> Ast_Pat -> acc2678 =
    lam f1398.
      lam acc2679.
        lam __sem_target1804.
          match
            __sem_target1804
          with
            p1169
          in
          match
              vSysAst_smapAccumL_Pat_Type
                (lam acc2680.
                   lam a878.
                     (f1398 acc2680 a878, a878))
                acc2679
                p1169
            with
              (acc2681, _)
            in
            acc2681
  let vSysAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1399.
      lam __sem_target1805.
        match
          __sem_target1805
        with
          p1170
        in
        let res439 =
            vSysAst_smapAccumL_Expr_Expr
              (lam #var"542".
                 lam a879.
                   ({}, f1399 a879))
              {}
              p1170
          in
          res439.1
  let vSysAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f1400.
      lam __sem_target1806.
        match
          __sem_target1806
        with
          p1171
        in
        let res440 =
            vSysAst_smapAccumL_Expr_Type
              (lam #var"543".
                 lam a880.
                   ({}, f1400 a880))
              {}
              p1171
          in
          res440.1
  let vSysAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f1401: Ast_Type -> Ast_Type.
      lam __sem_target1807.
        match
          __sem_target1807
        with
          s244
        in
        match
            vSysAst_smapAccumL_Kind_Type
              (lam #var"544".
                 lam x423.
                   ({}, f1401 x423))
              {}
              s244
          with
            (_, s245)
          in
          s245
  let vSysAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f1402.
      lam __sem_target1808.
        match
          __sem_target1808
        with
          p1172
        in
        let res441 =
            vSysAst_smapAccumL_Type_Type
              (lam #var"545".
                 lam a881.
                   ({}, f1402 a881))
              {}
              p1172
          in
          res441.1
  let vSysAst_sfold_Expr_Expr: all acc2682. (acc2682 -> Ast_Expr -> acc2682) -> acc2682 -> Ast_Expr -> acc2682 =
    lam f1403.
      lam acc2683.
        lam __sem_target1809.
          match
            __sem_target1809
          with
            p1173
          in
          let res442 =
              vSysAst_smapAccumL_Expr_Expr
                (lam acc2684.
                   lam a882.
                     (f1403 acc2684 a882, a882))
                acc2683
                p1173
            in
            res442.0
  let vSysAst_sfold_Expr_Type: all acc2685. (acc2685 -> Ast_Type -> acc2685) -> acc2685 -> Ast_Expr -> acc2685 =
    lam f1404.
      lam acc2686.
        lam __sem_target1810.
          match
            __sem_target1810
          with
            p1174
          in
          let res443 =
              vSysAst_smapAccumL_Expr_Type
                (lam acc2687.
                   lam a883.
                     (f1404 acc2687 a883, a883))
                acc2686
                p1174
            in
            res443.0
  let vSysAst_sfold_Kind_Type: all acc2688. (acc2688 -> Ast_Type -> acc2688) -> acc2688 -> Ast_Kind -> acc2688 =
    lam f1405: acc2688 -> Ast_Type -> acc2688.
      lam acc2689: acc2688.
        lam __sem_target1811.
          match
            __sem_target1811
          with
            s246
          in
          match
              vSysAst_smapAccumL_Kind_Type
                (lam a884.
                   lam x424.
                     (f1405 a884 x424, x424))
                acc2689
                s246
            with
              (a885, _)
            in
            a885
  let vSysAst_sfold_Type_Type: all acc2690. (acc2690 -> Ast_Type -> acc2690) -> acc2690 -> Ast_Type -> acc2690 =
    lam f1406.
      lam acc2691.
        lam __sem_target1812.
          match
            __sem_target1812
          with
            p1175
          in
          let res444 =
              vSysAst_smapAccumL_Type_Type
                (lam acc2692.
                   lam a886.
                     (f1406 acc2692 a886, a886))
                acc2691
                p1175
            in
            res444.0
  let vSysAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1407.
      lam __sem_target1813.
        match
          __sem_target1813
        with
          expr351
        in
        let expr352 = f1407 expr351 in
          vSysAst_smap_Expr_Expr (vSysAst_mapPre_Expr_Expr f1407) expr352
  let vSysAst_foldPre_Expr_Expr: all acc2693. (acc2693 -> Ast_Expr -> acc2693) -> acc2693 -> Ast_Expr -> acc2693 =
    lam f1408.
      lam acc2694.
        lam __sem_target1814.
          match
            __sem_target1814
          with
            expr353
          in
          let acc2695 = f1408 acc2694 expr353 in
            vSysAst_sfold_Expr_Expr (vSysAst_foldPre_Expr_Expr f1408) acc2695 expr353
  let vSysAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1409.
      lam __sem_target1815.
        match
          __sem_target1815
        with
          expr354
        in
        f1409
            (vSysAst_smap_Expr_Expr (vSysAst_mapPost_Expr_Expr f1409) expr354)
  let vSysAst_foldPost_Expr_Expr: all acc2696. (acc2696 -> Ast_Expr -> acc2696) -> acc2696 -> Ast_Expr -> acc2696 =
    lam f1410.
      lam acc2697.
        lam __sem_target1816.
          match
            __sem_target1816
          with
            expr355
          in
          f1410
              (vSysAst_sfold_Expr_Expr (vSysAst_foldPost_Expr_Expr f1410) acc2697 expr355)
              expr355
  let vSysAst_smapAccumL_Pat_Pat: all acc2698. (acc2698 -> Ast_Pat -> (acc2698, Ast_Pat)) -> acc2698 -> Ast_Pat -> (acc2698, Ast_Pat) =
    lam f1411.
      lam acc2699.
        lam __sem_target1817.
          match
            __sem_target1817
          with
            p1176
          in
          (acc2699, p1176)
  let vSysAst_smapAccumL_Expr_Pat: all acc2700. (acc2700 -> Ast_Pat -> (acc2700, Ast_Pat)) -> acc2700 -> Ast_Expr -> (acc2700, Ast_Expr) =
    lam f1412.
      lam acc2701.
        lam __sem_target1818.
          match
            __sem_target1818
          with
            p1177
          in
          (acc2701, p1177)
  let vSysAst_smapAccumL_Pat_Expr: all acc2702. (acc2702 -> Ast_Expr -> (acc2702, Ast_Expr)) -> acc2702 -> Ast_Pat -> (acc2702, Ast_Pat) =
    lam f1413.
      lam acc2703.
        lam __sem_target1819.
          match
            __sem_target1819
          with
            p1178
          in
          (acc2703, p1178)
  let vSysAst_smapAccumL_Pat_Type: all acc2704. (acc2704 -> Ast_Type -> (acc2704, Ast_Type)) -> acc2704 -> Ast_Pat -> (acc2704, Ast_Pat) =
    lam f1414.
      lam acc2705.
        lam __sem_target1820.
          match
            __sem_target1820
          with
            p1179
          in
          (acc2705, p1179)
  let vSysAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f1415.
      lam __sem_target1821.
        match
          __sem_target1821
        with
          p1180
        in
        let res445 =
            vSysAst_smapAccumL_Expr_TypeLabel
              (lam #var"546".
                 lam a887.
                   ({}, f1415 a887))
              {}
              p1180
          in
          res445.1
  let vSysAst_rappAccumL_Type_Type: all acc2706. (acc2706 -> Ast_Type -> (acc2706, Ast_Type)) -> acc2706 -> Ast_Type -> (acc2706, Ast_Type) =
    lam f1416.
      lam acc2707.
        lam __sem_target1822.
          match
            __sem_target1822
          with
            ty264
          in
          (acc2707, ty264)
  let vSysAst_sfold_Expr_TypeLabel: all acc2708. (acc2708 -> Ast_Type -> acc2708) -> acc2708 -> Ast_Expr -> acc2708 =
    lam f1417.
      lam acc2709.
        lam __sem_target1823.
          match
            __sem_target1823
          with
            p1181
          in
          let res446 =
              vSysAst_smapAccumL_Expr_TypeLabel
                (lam acc2710.
                   lam a888.
                     (f1417 acc2710 a888, a888))
                acc2709
                p1181
            in
            res446.0
  let vSysAst_smapAccumL_Expr_Expr: all acc2711. (acc2711 -> Ast_Expr -> (acc2711, Ast_Expr)) -> acc2711 -> Ast_Expr -> (acc2711, Ast_Expr) =
    lam f1418.
      lam acc2712.
        lam __sem_target1824.
          match
            __sem_target1824
          with
            p1182
          in
          (acc2712, p1182)
  let vSysAst_smapAccumL_Expr_Type: all acc2713. (acc2713 -> Ast_Type -> (acc2713, Ast_Type)) -> acc2713 -> Ast_Expr -> (acc2713, Ast_Expr) =
    lam f1419.
      lam acc2714.
        lam __sem_target1825.
          match
            __sem_target1825
          with
            p1183
          in
          (acc2714, p1183)
  let vSysAst_smapAccumL_Kind_Type: all acc2715. (acc2715 -> Ast_Type -> (acc2715, Ast_Type)) -> acc2715 -> Ast_Kind -> (acc2715, Ast_Kind) =
    lam f1420.
      lam acc2716.
        lam __sem_target1826.
          match
            __sem_target1826
          with
            s247
          in
          (acc2716, s247)
  let vSysAst_smapAccumL_Type_Type: all acc2717. (acc2717 -> Ast_Type -> (acc2717, Ast_Type)) -> acc2717 -> Ast_Type -> (acc2717, Ast_Type) =
    lam f1421.
      lam acc2718.
        lam __sem_target1827.
          match
            __sem_target1827
          with
            p1184
          in
          (acc2718, p1184)
  let vSysAst_mapAccumLPre_Expr_Expr: all acc2719. (acc2719 -> Ast_Expr -> (acc2719, Ast_Expr)) -> acc2719 -> Ast_Expr -> (acc2719, Ast_Expr) =
    lam f1422.
      lam acc2720.
        lam __sem_target1828.
          match
            __sem_target1828
          with
            expr356
          in
          match
              f1422 acc2720 expr356
            with
              (acc2721, expr357)
            in
            vSysAst_smapAccumL_Expr_Expr (vSysAst_mapAccumLPre_Expr_Expr f1422) acc2721 expr357
  let vSysAst_mapAccumLPost_Expr_Expr: all acc2722. (acc2722 -> Ast_Expr -> (acc2722, Ast_Expr)) -> acc2722 -> Ast_Expr -> (acc2722, Ast_Expr) =
    lam f1423.
      lam acc2723.
        lam __sem_target1829.
          match
            __sem_target1829
          with
            expr358
          in
          match
              vSysAst_smapAccumL_Expr_Expr (vSysAst_mapAccumLPost_Expr_Expr f1423) acc2723 expr358
            with
              (acc2724, expr359)
            in
            f1423 acc2724 expr359
  let vSysAst_smapAccumL_Expr_TypeLabel: all acc2725. (acc2725 -> Ast_Type -> (acc2725, Ast_Type)) -> acc2725 -> Ast_Expr -> (acc2725, Ast_Expr) =
    lam f1424.
      lam acc2726.
        lam __sem_target1830.
          match
            __sem_target1830
          with
            p1185
          in
          match
              f1424 acc2726 (vSysAst_tyTm p1185)
            with
              (acc2727, ty265)
            in
            (acc2727, vSysAst_withType ty265 p1185)
in
con TimeAst_CWallTimeMs: () -> ConstAst_Const in
con TimeAst_CSleepMs: () -> ConstAst_Const in
recursive
  let vTimeAst_tyTm: Ast_Expr -> Ast_Type =
    lam __sem_target1743.
      match
        __sem_target1743
      with
        ConstAst_TmConst t900
      in
      t900.ty
  let vTimeAst_tyPat: Ast_Pat -> Ast_Type = lam x409.
      never
  let vTimeAst_infoTm: Ast_Expr -> Info =
    lam __sem_target1744.
      match
        __sem_target1744
      with
        ConstAst_TmConst r333
      in
      r333.info
  let vTimeAst_infoTy: Ast_Type -> Info = lam x410.
      never
  let vTimeAst_infoPat: Ast_Pat -> Info = lam x411.
      never
  let vTimeAst_withInfo: Info -> Ast_Expr -> Ast_Expr =
    lam info43.
      lam __sem_target1745.
        match
          __sem_target1745
        with
          ConstAst_TmConst t901
        in
        ConstAst_TmConst
            { t901 with info = info43 }
  let vTimeAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr =
    lam ty254: Ast_Type.
      lam __sem_target1746.
        match
          __sem_target1746
        with
          ConstAst_TmConst t902
        in
        ConstAst_TmConst
            { t902 with ty = ty254 }
  let vTimeAst_tyWithInfo: Info -> Ast_Type -> Ast_Type = lam x412.
      never
  let vTimeAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target1747.
      match
        __sem_target1747
      with
        ty255
      in
      vTimeAst_rapp_Type_Type vTimeAst_unwrapType ty255
  let vTimeAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target1748.
      match
        __sem_target1748
      with
        ty256
      in
      vTimeAst_rapp_Type_Type vTimeAst_inspectType ty256
  let vTimeAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x413.
      never
  let vTimeAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x414.
      never
  let vTimeAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f1355.
      lam __sem_target1749.
        match
          __sem_target1749
        with
          p1132
        in
        let res425 =
            vTimeAst_smapAccumL_Pat_Pat
              (lam #var"527".
                 lam a853.
                   ({}, f1355 a853))
              {}
              p1132
          in
          res425.1
  let vTimeAst_countPatNodes =
    lam count532.
      lam __sem_target1750.
        match
          __sem_target1750
        with
          t903
        in
        let count533 = addi count532 1 in
          let count534 = vTimeAst_sfold_Pat_Pat vTimeAst_countPatNodes count533 t903
          in
          let count535 =
            vTimeAst_sfold_Pat_Expr vTimeAst_countExprNodes count534 t903
          in
          let count536 =
            vTimeAst_sfold_Pat_Type vTimeAst_countTypeNodes count535 t903
          in
          count536
  let vTimeAst_sfold_Pat_Pat: all acc2606. (acc2606 -> Ast_Pat -> acc2606) -> acc2606 -> Ast_Pat -> acc2606 =
    lam f1356.
      lam acc2607.
        lam __sem_target1751.
          match
            __sem_target1751
          with
            p1133
          in
          let res426 =
              vTimeAst_smapAccumL_Pat_Pat
                (lam acc2608.
                   lam a854.
                     (f1356 acc2608 a854, a854))
                acc2607
                p1133
            in
            res426.0
  let vTimeAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f1357.
      lam __sem_target1752.
        match
          __sem_target1752
        with
          p1134
        in
        match
            vTimeAst_smapAccumL_Expr_Pat
              (lam #var"528".
                 lam a855.
                   ({}, f1357 a855))
              {}
              p1134
          with
            (_, p1135)
          in
          p1135
  let vTimeAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f1358.
      lam __sem_target1753.
        match
          __sem_target1753
        with
          p1136
        in
        match
            vTimeAst_smapAccumL_Pat_Expr
              (lam #var"529".
                 lam a856.
                   ({}, f1358 a856))
              {}
              p1136
          with
            (_, p1137)
          in
          p1137
  let vTimeAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f1359.
      lam __sem_target1754.
        match
          __sem_target1754
        with
          p1138
        in
        match
            vTimeAst_smapAccumL_Pat_Type
              (lam #var"530".
                 lam a857.
                   ({}, f1359 a857))
              {}
              p1138
          with
            (_, p1139)
          in
          p1139
  let vTimeAst_countExprNodes =
    lam count537.
      lam __sem_target1755.
        match
          __sem_target1755
        with
          t904
        in
        let count538 = addi count537 1 in
          let count539 =
            vTimeAst_sfold_Expr_Expr vTimeAst_countExprNodes count538 t904
          in
          let count540 =
            vTimeAst_sfold_Expr_Type vTimeAst_countTypeNodes count539 t904
          in
          let count541 =
            vTimeAst_sfold_Expr_TypeLabel vTimeAst_countTypeNodes count540 t904
          in
          let count542 = vTimeAst_sfold_Expr_Pat vTimeAst_countPatNodes count541 t904
          in
          count542
  let vTimeAst_countTypeNodes =
    lam count543.
      lam __sem_target1756.
        match
          __sem_target1756
        with
          t905
        in
        let count544 = addi count543 1 in
          let count545 =
            vTimeAst_sfold_Type_Type vTimeAst_countTypeNodes count544 t905
          in
          count545
  let vTimeAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f1360.
      lam __sem_target1757.
        match
          __sem_target1757
        with
          ty257
        in
        let res427 =
            vTimeAst_rappAccumL_Type_Type
              (lam #var"531".
                 lam t906.
                   ({}, f1360 t906))
              {}
              ty257
          in
          res427.1
  let vTimeAst_sfold_Expr_Pat: all acc2609. (acc2609 -> Ast_Pat -> acc2609) -> acc2609 -> Ast_Expr -> acc2609 =
    lam f1361.
      lam acc2610.
        lam __sem_target1758.
          match
            __sem_target1758
          with
            p1140
          in
          match
              vTimeAst_smapAccumL_Expr_Pat
                (lam acc2611.
                   lam a858.
                     (f1361 acc2611 a858, a858))
                acc2610
                p1140
            with
              (acc2612, _)
            in
            acc2612
  let vTimeAst_sfold_Pat_Expr: all acc2613. (acc2613 -> Ast_Expr -> acc2613) -> acc2613 -> Ast_Pat -> acc2613 =
    lam f1362.
      lam acc2614.
        lam __sem_target1759.
          match
            __sem_target1759
          with
            p1141
          in
          match
              vTimeAst_smapAccumL_Pat_Expr
                (lam acc2615.
                   lam a859.
                     (f1362 acc2615 a859, a859))
                acc2614
                p1141
            with
              (acc2616, _)
            in
            acc2616
  let vTimeAst_sfold_Pat_Type: all acc2617. (acc2617 -> Ast_Type -> acc2617) -> acc2617 -> Ast_Pat -> acc2617 =
    lam f1363.
      lam acc2618.
        lam __sem_target1760.
          match
            __sem_target1760
          with
            p1142
          in
          match
              vTimeAst_smapAccumL_Pat_Type
                (lam acc2619.
                   lam a860.
                     (f1363 acc2619 a860, a860))
                acc2618
                p1142
            with
              (acc2620, _)
            in
            acc2620
  let vTimeAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1364.
      lam __sem_target1761.
        match
          __sem_target1761
        with
          p1143
        in
        let res428 =
            vTimeAst_smapAccumL_Expr_Expr
              (lam #var"532".
                 lam a861.
                   ({}, f1364 a861))
              {}
              p1143
          in
          res428.1
  let vTimeAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f1365.
      lam __sem_target1762.
        match
          __sem_target1762
        with
          p1144
        in
        let res429 =
            vTimeAst_smapAccumL_Expr_Type
              (lam #var"533".
                 lam a862.
                   ({}, f1365 a862))
              {}
              p1144
          in
          res429.1
  let vTimeAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f1366: Ast_Type -> Ast_Type.
      lam __sem_target1763.
        match
          __sem_target1763
        with
          s240
        in
        match
            vTimeAst_smapAccumL_Kind_Type
              (lam #var"534".
                 lam x415.
                   ({}, f1366 x415))
              {}
              s240
          with
            (_, s241)
          in
          s241
  let vTimeAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f1367.
      lam __sem_target1764.
        match
          __sem_target1764
        with
          p1145
        in
        let res430 =
            vTimeAst_smapAccumL_Type_Type
              (lam #var"535".
                 lam a863.
                   ({}, f1367 a863))
              {}
              p1145
          in
          res430.1
  let vTimeAst_sfold_Expr_Expr: all acc2621. (acc2621 -> Ast_Expr -> acc2621) -> acc2621 -> Ast_Expr -> acc2621 =
    lam f1368.
      lam acc2622.
        lam __sem_target1765.
          match
            __sem_target1765
          with
            p1146
          in
          let res431 =
              vTimeAst_smapAccumL_Expr_Expr
                (lam acc2623.
                   lam a864.
                     (f1368 acc2623 a864, a864))
                acc2622
                p1146
            in
            res431.0
  let vTimeAst_sfold_Expr_Type: all acc2624. (acc2624 -> Ast_Type -> acc2624) -> acc2624 -> Ast_Expr -> acc2624 =
    lam f1369.
      lam acc2625.
        lam __sem_target1766.
          match
            __sem_target1766
          with
            p1147
          in
          let res432 =
              vTimeAst_smapAccumL_Expr_Type
                (lam acc2626.
                   lam a865.
                     (f1369 acc2626 a865, a865))
                acc2625
                p1147
            in
            res432.0
  let vTimeAst_sfold_Kind_Type: all acc2627. (acc2627 -> Ast_Type -> acc2627) -> acc2627 -> Ast_Kind -> acc2627 =
    lam f1370: acc2627 -> Ast_Type -> acc2627.
      lam acc2628: acc2627.
        lam __sem_target1767.
          match
            __sem_target1767
          with
            s242
          in
          match
              vTimeAst_smapAccumL_Kind_Type
                (lam a866.
                   lam x416.
                     (f1370 a866 x416, x416))
                acc2628
                s242
            with
              (a867, _)
            in
            a867
  let vTimeAst_sfold_Type_Type: all acc2629. (acc2629 -> Ast_Type -> acc2629) -> acc2629 -> Ast_Type -> acc2629 =
    lam f1371.
      lam acc2630.
        lam __sem_target1768.
          match
            __sem_target1768
          with
            p1148
          in
          let res433 =
              vTimeAst_smapAccumL_Type_Type
                (lam acc2631.
                   lam a868.
                     (f1371 acc2631 a868, a868))
                acc2630
                p1148
            in
            res433.0
  let vTimeAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1372.
      lam __sem_target1769.
        match
          __sem_target1769
        with
          expr342
        in
        let expr343 = f1372 expr342 in
          vTimeAst_smap_Expr_Expr (vTimeAst_mapPre_Expr_Expr f1372) expr343
  let vTimeAst_foldPre_Expr_Expr: all acc2632. (acc2632 -> Ast_Expr -> acc2632) -> acc2632 -> Ast_Expr -> acc2632 =
    lam f1373.
      lam acc2633.
        lam __sem_target1770.
          match
            __sem_target1770
          with
            expr344
          in
          let acc2634 = f1373 acc2633 expr344 in
            vTimeAst_sfold_Expr_Expr (vTimeAst_foldPre_Expr_Expr f1373) acc2634 expr344
  let vTimeAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1374.
      lam __sem_target1771.
        match
          __sem_target1771
        with
          expr345
        in
        f1374
            (vTimeAst_smap_Expr_Expr (vTimeAst_mapPost_Expr_Expr f1374) expr345)
  let vTimeAst_foldPost_Expr_Expr: all acc2635. (acc2635 -> Ast_Expr -> acc2635) -> acc2635 -> Ast_Expr -> acc2635 =
    lam f1375.
      lam acc2636.
        lam __sem_target1772.
          match
            __sem_target1772
          with
            expr346
          in
          f1375
              (vTimeAst_sfold_Expr_Expr (vTimeAst_foldPost_Expr_Expr f1375) acc2636 expr346)
              expr346
  let vTimeAst_smapAccumL_Pat_Pat: all acc2637. (acc2637 -> Ast_Pat -> (acc2637, Ast_Pat)) -> acc2637 -> Ast_Pat -> (acc2637, Ast_Pat) =
    lam f1376.
      lam acc2638.
        lam __sem_target1773.
          match
            __sem_target1773
          with
            p1149
          in
          (acc2638, p1149)
  let vTimeAst_smapAccumL_Expr_Pat: all acc2639. (acc2639 -> Ast_Pat -> (acc2639, Ast_Pat)) -> acc2639 -> Ast_Expr -> (acc2639, Ast_Expr) =
    lam f1377.
      lam acc2640.
        lam __sem_target1774.
          match
            __sem_target1774
          with
            p1150
          in
          (acc2640, p1150)
  let vTimeAst_smapAccumL_Pat_Expr: all acc2641. (acc2641 -> Ast_Expr -> (acc2641, Ast_Expr)) -> acc2641 -> Ast_Pat -> (acc2641, Ast_Pat) =
    lam f1378.
      lam acc2642.
        lam __sem_target1775.
          match
            __sem_target1775
          with
            p1151
          in
          (acc2642, p1151)
  let vTimeAst_smapAccumL_Pat_Type: all acc2643. (acc2643 -> Ast_Type -> (acc2643, Ast_Type)) -> acc2643 -> Ast_Pat -> (acc2643, Ast_Pat) =
    lam f1379.
      lam acc2644.
        lam __sem_target1776.
          match
            __sem_target1776
          with
            p1152
          in
          (acc2644, p1152)
  let vTimeAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f1380.
      lam __sem_target1777.
        match
          __sem_target1777
        with
          p1153
        in
        let res434 =
            vTimeAst_smapAccumL_Expr_TypeLabel
              (lam #var"536".
                 lam a869.
                   ({}, f1380 a869))
              {}
              p1153
          in
          res434.1
  let vTimeAst_rappAccumL_Type_Type: all acc2645. (acc2645 -> Ast_Type -> (acc2645, Ast_Type)) -> acc2645 -> Ast_Type -> (acc2645, Ast_Type) =
    lam f1381.
      lam acc2646.
        lam __sem_target1778.
          match
            __sem_target1778
          with
            ty258
          in
          (acc2646, ty258)
  let vTimeAst_sfold_Expr_TypeLabel: all acc2647. (acc2647 -> Ast_Type -> acc2647) -> acc2647 -> Ast_Expr -> acc2647 =
    lam f1382.
      lam acc2648.
        lam __sem_target1779.
          match
            __sem_target1779
          with
            p1154
          in
          let res435 =
              vTimeAst_smapAccumL_Expr_TypeLabel
                (lam acc2649.
                   lam a870.
                     (f1382 acc2649 a870, a870))
                acc2648
                p1154
            in
            res435.0
  let vTimeAst_smapAccumL_Expr_Expr: all acc2650. (acc2650 -> Ast_Expr -> (acc2650, Ast_Expr)) -> acc2650 -> Ast_Expr -> (acc2650, Ast_Expr) =
    lam f1383.
      lam acc2651.
        lam __sem_target1780.
          match
            __sem_target1780
          with
            p1155
          in
          (acc2651, p1155)
  let vTimeAst_smapAccumL_Expr_Type: all acc2652. (acc2652 -> Ast_Type -> (acc2652, Ast_Type)) -> acc2652 -> Ast_Expr -> (acc2652, Ast_Expr) =
    lam f1384.
      lam acc2653.
        lam __sem_target1781.
          match
            __sem_target1781
          with
            p1156
          in
          (acc2653, p1156)
  let vTimeAst_smapAccumL_Kind_Type: all acc2654. (acc2654 -> Ast_Type -> (acc2654, Ast_Type)) -> acc2654 -> Ast_Kind -> (acc2654, Ast_Kind) =
    lam f1385.
      lam acc2655.
        lam __sem_target1782.
          match
            __sem_target1782
          with
            s243
          in
          (acc2655, s243)
  let vTimeAst_smapAccumL_Type_Type: all acc2656. (acc2656 -> Ast_Type -> (acc2656, Ast_Type)) -> acc2656 -> Ast_Type -> (acc2656, Ast_Type) =
    lam f1386.
      lam acc2657.
        lam __sem_target1783.
          match
            __sem_target1783
          with
            p1157
          in
          (acc2657, p1157)
  let vTimeAst_mapAccumLPre_Expr_Expr: all acc2658. (acc2658 -> Ast_Expr -> (acc2658, Ast_Expr)) -> acc2658 -> Ast_Expr -> (acc2658, Ast_Expr) =
    lam f1387.
      lam acc2659.
        lam __sem_target1784.
          match
            __sem_target1784
          with
            expr347
          in
          match
              f1387 acc2659 expr347
            with
              (acc2660, expr348)
            in
            vTimeAst_smapAccumL_Expr_Expr (vTimeAst_mapAccumLPre_Expr_Expr f1387) acc2660 expr348
  let vTimeAst_mapAccumLPost_Expr_Expr: all acc2661. (acc2661 -> Ast_Expr -> (acc2661, Ast_Expr)) -> acc2661 -> Ast_Expr -> (acc2661, Ast_Expr) =
    lam f1388.
      lam acc2662.
        lam __sem_target1785.
          match
            __sem_target1785
          with
            expr349
          in
          match
              vTimeAst_smapAccumL_Expr_Expr (vTimeAst_mapAccumLPost_Expr_Expr f1388) acc2662 expr349
            with
              (acc2663, expr350)
            in
            f1388 acc2663 expr350
  let vTimeAst_smapAccumL_Expr_TypeLabel: all acc2664. (acc2664 -> Ast_Type -> (acc2664, Ast_Type)) -> acc2664 -> Ast_Expr -> (acc2664, Ast_Expr) =
    lam f1389.
      lam acc2665.
        lam __sem_target1786.
          match
            __sem_target1786
          with
            p1158
          in
          match
              f1389 acc2665 (vTimeAst_tyTm p1158)
            with
              (acc2666, ty259)
            in
            (acc2666, vTimeAst_withType ty259 p1158)
in
con ConTagAst_CConstructorTag: () -> ConstAst_Const in
recursive
  let vConTagAst_tyTm: Ast_Expr -> Ast_Type =
    lam __sem_target1699.
      match
        __sem_target1699
      with
        ConstAst_TmConst t893
      in
      t893.ty
  let vConTagAst_tyPat: Ast_Pat -> Ast_Type = lam x401.
      never
  let vConTagAst_infoTm: Ast_Expr -> Info =
    lam __sem_target1700.
      match
        __sem_target1700
      with
        ConstAst_TmConst r332
      in
      r332.info
  let vConTagAst_infoTy: Ast_Type -> Info = lam x402.
      never
  let vConTagAst_infoPat: Ast_Pat -> Info = lam x403.
      never
  let vConTagAst_withInfo: Info -> Ast_Expr -> Ast_Expr =
    lam info42.
      lam __sem_target1701.
        match
          __sem_target1701
        with
          ConstAst_TmConst t894
        in
        ConstAst_TmConst
            { t894 with info = info42 }
  let vConTagAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr =
    lam ty248: Ast_Type.
      lam __sem_target1702.
        match
          __sem_target1702
        with
          ConstAst_TmConst t895
        in
        ConstAst_TmConst
            { t895 with ty = ty248 }
  let vConTagAst_tyWithInfo: Info -> Ast_Type -> Ast_Type = lam x404.
      never
  let vConTagAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target1703.
      match
        __sem_target1703
      with
        ty249
      in
      vConTagAst_rapp_Type_Type vConTagAst_unwrapType ty249
  let vConTagAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target1704.
      match
        __sem_target1704
      with
        ty250
      in
      vConTagAst_rapp_Type_Type vConTagAst_inspectType ty250
  let vConTagAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x405.
      never
  let vConTagAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x406.
      never
  let vConTagAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f1320.
      lam __sem_target1705.
        match
          __sem_target1705
        with
          p1105
        in
        let res414 =
            vConTagAst_smapAccumL_Pat_Pat
              (lam #var"517".
                 lam a835.
                   ({}, f1320 a835))
              {}
              p1105
          in
          res414.1
  let vConTagAst_countPatNodes =
    lam count518.
      lam __sem_target1706.
        match
          __sem_target1706
        with
          t896
        in
        let count519 = addi count518 1 in
          let count520 =
            vConTagAst_sfold_Pat_Pat vConTagAst_countPatNodes count519 t896
          in
          let count521 =
            vConTagAst_sfold_Pat_Expr vConTagAst_countExprNodes count520 t896
          in
          let count522 =
            vConTagAst_sfold_Pat_Type vConTagAst_countTypeNodes count521 t896
          in
          count522
  let vConTagAst_sfold_Pat_Pat: all acc2545. (acc2545 -> Ast_Pat -> acc2545) -> acc2545 -> Ast_Pat -> acc2545 =
    lam f1321.
      lam acc2546.
        lam __sem_target1707.
          match
            __sem_target1707
          with
            p1106
          in
          let res415 =
              vConTagAst_smapAccumL_Pat_Pat
                (lam acc2547.
                   lam a836.
                     (f1321 acc2547 a836, a836))
                acc2546
                p1106
            in
            res415.0
  let vConTagAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f1322.
      lam __sem_target1708.
        match
          __sem_target1708
        with
          p1107
        in
        match
            vConTagAst_smapAccumL_Expr_Pat
              (lam #var"518".
                 lam a837.
                   ({}, f1322 a837))
              {}
              p1107
          with
            (_, p1108)
          in
          p1108
  let vConTagAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f1323.
      lam __sem_target1709.
        match
          __sem_target1709
        with
          p1109
        in
        match
            vConTagAst_smapAccumL_Pat_Expr
              (lam #var"519".
                 lam a838.
                   ({}, f1323 a838))
              {}
              p1109
          with
            (_, p1110)
          in
          p1110
  let vConTagAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f1324.
      lam __sem_target1710.
        match
          __sem_target1710
        with
          p1111
        in
        match
            vConTagAst_smapAccumL_Pat_Type
              (lam #var"520".
                 lam a839.
                   ({}, f1324 a839))
              {}
              p1111
          with
            (_, p1112)
          in
          p1112
  let vConTagAst_countExprNodes =
    lam count523.
      lam __sem_target1711.
        match
          __sem_target1711
        with
          t897
        in
        let count524 = addi count523 1 in
          let count525 =
            vConTagAst_sfold_Expr_Expr vConTagAst_countExprNodes count524 t897
          in
          let count526 =
            vConTagAst_sfold_Expr_Type vConTagAst_countTypeNodes count525 t897
          in
          let count527 =
            vConTagAst_sfold_Expr_TypeLabel vConTagAst_countTypeNodes count526 t897
          in
          let count528 =
            vConTagAst_sfold_Expr_Pat vConTagAst_countPatNodes count527 t897
          in
          count528
  let vConTagAst_countTypeNodes =
    lam count529.
      lam __sem_target1712.
        match
          __sem_target1712
        with
          t898
        in
        let count530 = addi count529 1 in
          let count531 =
            vConTagAst_sfold_Type_Type vConTagAst_countTypeNodes count530 t898
          in
          count531
  let vConTagAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f1325.
      lam __sem_target1713.
        match
          __sem_target1713
        with
          ty251
        in
        let res416 =
            vConTagAst_rappAccumL_Type_Type
              (lam #var"521".
                 lam t899.
                   ({}, f1325 t899))
              {}
              ty251
          in
          res416.1
  let vConTagAst_sfold_Expr_Pat: all acc2548. (acc2548 -> Ast_Pat -> acc2548) -> acc2548 -> Ast_Expr -> acc2548 =
    lam f1326.
      lam acc2549.
        lam __sem_target1714.
          match
            __sem_target1714
          with
            p1113
          in
          match
              vConTagAst_smapAccumL_Expr_Pat
                (lam acc2550.
                   lam a840.
                     (f1326 acc2550 a840, a840))
                acc2549
                p1113
            with
              (acc2551, _)
            in
            acc2551
  let vConTagAst_sfold_Pat_Expr: all acc2552. (acc2552 -> Ast_Expr -> acc2552) -> acc2552 -> Ast_Pat -> acc2552 =
    lam f1327.
      lam acc2553.
        lam __sem_target1715.
          match
            __sem_target1715
          with
            p1114
          in
          match
              vConTagAst_smapAccumL_Pat_Expr
                (lam acc2554.
                   lam a841.
                     (f1327 acc2554 a841, a841))
                acc2553
                p1114
            with
              (acc2555, _)
            in
            acc2555
  let vConTagAst_sfold_Pat_Type: all acc2556. (acc2556 -> Ast_Type -> acc2556) -> acc2556 -> Ast_Pat -> acc2556 =
    lam f1328.
      lam acc2557.
        lam __sem_target1716.
          match
            __sem_target1716
          with
            p1115
          in
          match
              vConTagAst_smapAccumL_Pat_Type
                (lam acc2558.
                   lam a842.
                     (f1328 acc2558 a842, a842))
                acc2557
                p1115
            with
              (acc2559, _)
            in
            acc2559
  let vConTagAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1329.
      lam __sem_target1717.
        match
          __sem_target1717
        with
          p1116
        in
        let res417 =
            vConTagAst_smapAccumL_Expr_Expr
              (lam #var"522".
                 lam a843.
                   ({}, f1329 a843))
              {}
              p1116
          in
          res417.1
  let vConTagAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f1330.
      lam __sem_target1718.
        match
          __sem_target1718
        with
          p1117
        in
        let res418 =
            vConTagAst_smapAccumL_Expr_Type
              (lam #var"523".
                 lam a844.
                   ({}, f1330 a844))
              {}
              p1117
          in
          res418.1
  let vConTagAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f1331: Ast_Type -> Ast_Type.
      lam __sem_target1719.
        match
          __sem_target1719
        with
          s236
        in
        match
            vConTagAst_smapAccumL_Kind_Type
              (lam #var"524".
                 lam x407.
                   ({}, f1331 x407))
              {}
              s236
          with
            (_, s237)
          in
          s237
  let vConTagAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f1332.
      lam __sem_target1720.
        match
          __sem_target1720
        with
          p1118
        in
        let res419 =
            vConTagAst_smapAccumL_Type_Type
              (lam #var"525".
                 lam a845.
                   ({}, f1332 a845))
              {}
              p1118
          in
          res419.1
  let vConTagAst_sfold_Expr_Expr: all acc2560. (acc2560 -> Ast_Expr -> acc2560) -> acc2560 -> Ast_Expr -> acc2560 =
    lam f1333.
      lam acc2561.
        lam __sem_target1721.
          match
            __sem_target1721
          with
            p1119
          in
          let res420 =
              vConTagAst_smapAccumL_Expr_Expr
                (lam acc2562.
                   lam a846.
                     (f1333 acc2562 a846, a846))
                acc2561
                p1119
            in
            res420.0
  let vConTagAst_sfold_Expr_Type: all acc2563. (acc2563 -> Ast_Type -> acc2563) -> acc2563 -> Ast_Expr -> acc2563 =
    lam f1334.
      lam acc2564.
        lam __sem_target1722.
          match
            __sem_target1722
          with
            p1120
          in
          let res421 =
              vConTagAst_smapAccumL_Expr_Type
                (lam acc2565.
                   lam a847.
                     (f1334 acc2565 a847, a847))
                acc2564
                p1120
            in
            res421.0
  let vConTagAst_sfold_Kind_Type: all acc2566. (acc2566 -> Ast_Type -> acc2566) -> acc2566 -> Ast_Kind -> acc2566 =
    lam f1335: acc2566 -> Ast_Type -> acc2566.
      lam acc2567: acc2566.
        lam __sem_target1723.
          match
            __sem_target1723
          with
            s238
          in
          match
              vConTagAst_smapAccumL_Kind_Type
                (lam a848.
                   lam x408.
                     (f1335 a848 x408, x408))
                acc2567
                s238
            with
              (a849, _)
            in
            a849
  let vConTagAst_sfold_Type_Type: all acc2568. (acc2568 -> Ast_Type -> acc2568) -> acc2568 -> Ast_Type -> acc2568 =
    lam f1336.
      lam acc2569.
        lam __sem_target1724.
          match
            __sem_target1724
          with
            p1121
          in
          let res422 =
              vConTagAst_smapAccumL_Type_Type
                (lam acc2570.
                   lam a850.
                     (f1336 acc2570 a850, a850))
                acc2569
                p1121
            in
            res422.0
  let vConTagAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1337.
      lam __sem_target1725.
        match
          __sem_target1725
        with
          expr333
        in
        let expr334 = f1337 expr333 in
          vConTagAst_smap_Expr_Expr (vConTagAst_mapPre_Expr_Expr f1337) expr334
  let vConTagAst_foldPre_Expr_Expr: all acc2571. (acc2571 -> Ast_Expr -> acc2571) -> acc2571 -> Ast_Expr -> acc2571 =
    lam f1338.
      lam acc2572.
        lam __sem_target1726.
          match
            __sem_target1726
          with
            expr335
          in
          let acc2573 = f1338 acc2572 expr335 in
            vConTagAst_sfold_Expr_Expr (vConTagAst_foldPre_Expr_Expr f1338) acc2573 expr335
  let vConTagAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1339.
      lam __sem_target1727.
        match
          __sem_target1727
        with
          expr336
        in
        f1339
            (vConTagAst_smap_Expr_Expr (vConTagAst_mapPost_Expr_Expr f1339) expr336)
  let vConTagAst_foldPost_Expr_Expr: all acc2574. (acc2574 -> Ast_Expr -> acc2574) -> acc2574 -> Ast_Expr -> acc2574 =
    lam f1340.
      lam acc2575.
        lam __sem_target1728.
          match
            __sem_target1728
          with
            expr337
          in
          f1340
              (vConTagAst_sfold_Expr_Expr (vConTagAst_foldPost_Expr_Expr f1340) acc2575 expr337)
              expr337
  let vConTagAst_smapAccumL_Pat_Pat: all acc2576. (acc2576 -> Ast_Pat -> (acc2576, Ast_Pat)) -> acc2576 -> Ast_Pat -> (acc2576, Ast_Pat) =
    lam f1341.
      lam acc2577.
        lam __sem_target1729.
          match
            __sem_target1729
          with
            p1122
          in
          (acc2577, p1122)
  let vConTagAst_smapAccumL_Expr_Pat: all acc2578. (acc2578 -> Ast_Pat -> (acc2578, Ast_Pat)) -> acc2578 -> Ast_Expr -> (acc2578, Ast_Expr) =
    lam f1342.
      lam acc2579.
        lam __sem_target1730.
          match
            __sem_target1730
          with
            p1123
          in
          (acc2579, p1123)
  let vConTagAst_smapAccumL_Pat_Expr: all acc2580. (acc2580 -> Ast_Expr -> (acc2580, Ast_Expr)) -> acc2580 -> Ast_Pat -> (acc2580, Ast_Pat) =
    lam f1343.
      lam acc2581.
        lam __sem_target1731.
          match
            __sem_target1731
          with
            p1124
          in
          (acc2581, p1124)
  let vConTagAst_smapAccumL_Pat_Type: all acc2582. (acc2582 -> Ast_Type -> (acc2582, Ast_Type)) -> acc2582 -> Ast_Pat -> (acc2582, Ast_Pat) =
    lam f1344.
      lam acc2583.
        lam __sem_target1732.
          match
            __sem_target1732
          with
            p1125
          in
          (acc2583, p1125)
  let vConTagAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f1345.
      lam __sem_target1733.
        match
          __sem_target1733
        with
          p1126
        in
        let res423 =
            vConTagAst_smapAccumL_Expr_TypeLabel
              (lam #var"526".
                 lam a851.
                   ({}, f1345 a851))
              {}
              p1126
          in
          res423.1
  let vConTagAst_rappAccumL_Type_Type: all acc2584. (acc2584 -> Ast_Type -> (acc2584, Ast_Type)) -> acc2584 -> Ast_Type -> (acc2584, Ast_Type) =
    lam f1346.
      lam acc2585.
        lam __sem_target1734.
          match
            __sem_target1734
          with
            ty252
          in
          (acc2585, ty252)
  let vConTagAst_sfold_Expr_TypeLabel: all acc2586. (acc2586 -> Ast_Type -> acc2586) -> acc2586 -> Ast_Expr -> acc2586 =
    lam f1347.
      lam acc2587.
        lam __sem_target1735.
          match
            __sem_target1735
          with
            p1127
          in
          let res424 =
              vConTagAst_smapAccumL_Expr_TypeLabel
                (lam acc2588.
                   lam a852.
                     (f1347 acc2588 a852, a852))
                acc2587
                p1127
            in
            res424.0
  let vConTagAst_smapAccumL_Expr_Expr: all acc2589. (acc2589 -> Ast_Expr -> (acc2589, Ast_Expr)) -> acc2589 -> Ast_Expr -> (acc2589, Ast_Expr) =
    lam f1348.
      lam acc2590.
        lam __sem_target1736.
          match
            __sem_target1736
          with
            p1128
          in
          (acc2590, p1128)
  let vConTagAst_smapAccumL_Expr_Type: all acc2591. (acc2591 -> Ast_Type -> (acc2591, Ast_Type)) -> acc2591 -> Ast_Expr -> (acc2591, Ast_Expr) =
    lam f1349.
      lam acc2592.
        lam __sem_target1737.
          match
            __sem_target1737
          with
            p1129
          in
          (acc2592, p1129)
  let vConTagAst_smapAccumL_Kind_Type: all acc2593. (acc2593 -> Ast_Type -> (acc2593, Ast_Type)) -> acc2593 -> Ast_Kind -> (acc2593, Ast_Kind) =
    lam f1350.
      lam acc2594.
        lam __sem_target1738.
          match
            __sem_target1738
          with
            s239
          in
          (acc2594, s239)
  let vConTagAst_smapAccumL_Type_Type: all acc2595. (acc2595 -> Ast_Type -> (acc2595, Ast_Type)) -> acc2595 -> Ast_Type -> (acc2595, Ast_Type) =
    lam f1351.
      lam acc2596.
        lam __sem_target1739.
          match
            __sem_target1739
          with
            p1130
          in
          (acc2596, p1130)
  let vConTagAst_mapAccumLPre_Expr_Expr: all acc2597. (acc2597 -> Ast_Expr -> (acc2597, Ast_Expr)) -> acc2597 -> Ast_Expr -> (acc2597, Ast_Expr) =
    lam f1352.
      lam acc2598.
        lam __sem_target1740.
          match
            __sem_target1740
          with
            expr338
          in
          match
              f1352 acc2598 expr338
            with
              (acc2599, expr339)
            in
            vConTagAst_smapAccumL_Expr_Expr (vConTagAst_mapAccumLPre_Expr_Expr f1352) acc2599 expr339
  let vConTagAst_mapAccumLPost_Expr_Expr: all acc2600. (acc2600 -> Ast_Expr -> (acc2600, Ast_Expr)) -> acc2600 -> Ast_Expr -> (acc2600, Ast_Expr) =
    lam f1353.
      lam acc2601.
        lam __sem_target1741.
          match
            __sem_target1741
          with
            expr340
          in
          match
              vConTagAst_smapAccumL_Expr_Expr (vConTagAst_mapAccumLPost_Expr_Expr f1353) acc2601 expr340
            with
              (acc2602, expr341)
            in
            f1353 acc2602 expr341
  let vConTagAst_smapAccumL_Expr_TypeLabel: all acc2603. (acc2603 -> Ast_Type -> (acc2603, Ast_Type)) -> acc2603 -> Ast_Expr -> (acc2603, Ast_Expr) =
    lam f1354.
      lam acc2604.
        lam __sem_target1742.
          match
            __sem_target1742
          with
            p1131
          in
          match
              f1354 acc2604 (vConTagAst_tyTm p1131)
            with
              (acc2605, ty253)
            in
            (acc2605, vConTagAst_withType ty253 p1131)
in
con RefOpAst_CModRef: () -> ConstAst_Const in
con RefOpAst_CDeRef: () -> ConstAst_Const in
con RefOpAst_CRef: () -> ConstAst_Const in
recursive
  let vRefOpAst_tyTm: Ast_Expr -> Ast_Type =
    lam __sem_target1655.
      match
        __sem_target1655
      with
        ConstAst_TmConst t886
      in
      t886.ty
  let vRefOpAst_tyPat: Ast_Pat -> Ast_Type = lam x393.
      never
  let vRefOpAst_infoTm: Ast_Expr -> Info =
    lam __sem_target1656.
      match
        __sem_target1656
      with
        ConstAst_TmConst r331
      in
      r331.info
  let vRefOpAst_infoTy: Ast_Type -> Info = lam x394.
      never
  let vRefOpAst_infoPat: Ast_Pat -> Info = lam x395.
      never
  let vRefOpAst_withInfo: Info -> Ast_Expr -> Ast_Expr =
    lam info41.
      lam __sem_target1657.
        match
          __sem_target1657
        with
          ConstAst_TmConst t887
        in
        ConstAst_TmConst
            { t887 with info = info41 }
  let vRefOpAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr =
    lam ty242: Ast_Type.
      lam __sem_target1658.
        match
          __sem_target1658
        with
          ConstAst_TmConst t888
        in
        ConstAst_TmConst
            { t888 with ty = ty242 }
  let vRefOpAst_tyWithInfo: Info -> Ast_Type -> Ast_Type = lam x396.
      never
  let vRefOpAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target1659.
      match
        __sem_target1659
      with
        ty243
      in
      vRefOpAst_rapp_Type_Type vRefOpAst_unwrapType ty243
  let vRefOpAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target1660.
      match
        __sem_target1660
      with
        ty244
      in
      vRefOpAst_rapp_Type_Type vRefOpAst_inspectType ty244
  let vRefOpAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x397.
      never
  let vRefOpAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x398.
      never
  let vRefOpAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f1285.
      lam __sem_target1661.
        match
          __sem_target1661
        with
          p1078
        in
        let res403 =
            vRefOpAst_smapAccumL_Pat_Pat
              (lam #var"507".
                 lam a817.
                   ({}, f1285 a817))
              {}
              p1078
          in
          res403.1
  let vRefOpAst_countPatNodes =
    lam count504.
      lam __sem_target1662.
        match
          __sem_target1662
        with
          t889
        in
        let count505 = addi count504 1 in
          let count506 =
            vRefOpAst_sfold_Pat_Pat vRefOpAst_countPatNodes count505 t889
          in
          let count507 =
            vRefOpAst_sfold_Pat_Expr vRefOpAst_countExprNodes count506 t889
          in
          let count508 =
            vRefOpAst_sfold_Pat_Type vRefOpAst_countTypeNodes count507 t889
          in
          count508
  let vRefOpAst_sfold_Pat_Pat: all acc2484. (acc2484 -> Ast_Pat -> acc2484) -> acc2484 -> Ast_Pat -> acc2484 =
    lam f1286.
      lam acc2485.
        lam __sem_target1663.
          match
            __sem_target1663
          with
            p1079
          in
          let res404 =
              vRefOpAst_smapAccumL_Pat_Pat
                (lam acc2486.
                   lam a818.
                     (f1286 acc2486 a818, a818))
                acc2485
                p1079
            in
            res404.0
  let vRefOpAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f1287.
      lam __sem_target1664.
        match
          __sem_target1664
        with
          p1080
        in
        match
            vRefOpAst_smapAccumL_Expr_Pat
              (lam #var"508".
                 lam a819.
                   ({}, f1287 a819))
              {}
              p1080
          with
            (_, p1081)
          in
          p1081
  let vRefOpAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f1288.
      lam __sem_target1665.
        match
          __sem_target1665
        with
          p1082
        in
        match
            vRefOpAst_smapAccumL_Pat_Expr
              (lam #var"509".
                 lam a820.
                   ({}, f1288 a820))
              {}
              p1082
          with
            (_, p1083)
          in
          p1083
  let vRefOpAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f1289.
      lam __sem_target1666.
        match
          __sem_target1666
        with
          p1084
        in
        match
            vRefOpAst_smapAccumL_Pat_Type
              (lam #var"510".
                 lam a821.
                   ({}, f1289 a821))
              {}
              p1084
          with
            (_, p1085)
          in
          p1085
  let vRefOpAst_countExprNodes =
    lam count509.
      lam __sem_target1667.
        match
          __sem_target1667
        with
          t890
        in
        let count510 = addi count509 1 in
          let count511 =
            vRefOpAst_sfold_Expr_Expr vRefOpAst_countExprNodes count510 t890
          in
          let count512 =
            vRefOpAst_sfold_Expr_Type vRefOpAst_countTypeNodes count511 t890
          in
          let count513 =
            vRefOpAst_sfold_Expr_TypeLabel vRefOpAst_countTypeNodes count512 t890
          in
          let count514 =
            vRefOpAst_sfold_Expr_Pat vRefOpAst_countPatNodes count513 t890
          in
          count514
  let vRefOpAst_countTypeNodes =
    lam count515.
      lam __sem_target1668.
        match
          __sem_target1668
        with
          t891
        in
        let count516 = addi count515 1 in
          let count517 =
            vRefOpAst_sfold_Type_Type vRefOpAst_countTypeNodes count516 t891
          in
          count517
  let vRefOpAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f1290.
      lam __sem_target1669.
        match
          __sem_target1669
        with
          ty245
        in
        let res405 =
            vRefOpAst_rappAccumL_Type_Type
              (lam #var"511".
                 lam t892.
                   ({}, f1290 t892))
              {}
              ty245
          in
          res405.1
  let vRefOpAst_sfold_Expr_Pat: all acc2487. (acc2487 -> Ast_Pat -> acc2487) -> acc2487 -> Ast_Expr -> acc2487 =
    lam f1291.
      lam acc2488.
        lam __sem_target1670.
          match
            __sem_target1670
          with
            p1086
          in
          match
              vRefOpAst_smapAccumL_Expr_Pat
                (lam acc2489.
                   lam a822.
                     (f1291 acc2489 a822, a822))
                acc2488
                p1086
            with
              (acc2490, _)
            in
            acc2490
  let vRefOpAst_sfold_Pat_Expr: all acc2491. (acc2491 -> Ast_Expr -> acc2491) -> acc2491 -> Ast_Pat -> acc2491 =
    lam f1292.
      lam acc2492.
        lam __sem_target1671.
          match
            __sem_target1671
          with
            p1087
          in
          match
              vRefOpAst_smapAccumL_Pat_Expr
                (lam acc2493.
                   lam a823.
                     (f1292 acc2493 a823, a823))
                acc2492
                p1087
            with
              (acc2494, _)
            in
            acc2494
  let vRefOpAst_sfold_Pat_Type: all acc2495. (acc2495 -> Ast_Type -> acc2495) -> acc2495 -> Ast_Pat -> acc2495 =
    lam f1293.
      lam acc2496.
        lam __sem_target1672.
          match
            __sem_target1672
          with
            p1088
          in
          match
              vRefOpAst_smapAccumL_Pat_Type
                (lam acc2497.
                   lam a824.
                     (f1293 acc2497 a824, a824))
                acc2496
                p1088
            with
              (acc2498, _)
            in
            acc2498
  let vRefOpAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1294.
      lam __sem_target1673.
        match
          __sem_target1673
        with
          p1089
        in
        let res406 =
            vRefOpAst_smapAccumL_Expr_Expr
              (lam #var"512".
                 lam a825.
                   ({}, f1294 a825))
              {}
              p1089
          in
          res406.1
  let vRefOpAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f1295.
      lam __sem_target1674.
        match
          __sem_target1674
        with
          p1090
        in
        let res407 =
            vRefOpAst_smapAccumL_Expr_Type
              (lam #var"513".
                 lam a826.
                   ({}, f1295 a826))
              {}
              p1090
          in
          res407.1
  let vRefOpAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f1296: Ast_Type -> Ast_Type.
      lam __sem_target1675.
        match
          __sem_target1675
        with
          s232
        in
        match
            vRefOpAst_smapAccumL_Kind_Type
              (lam #var"514".
                 lam x399.
                   ({}, f1296 x399))
              {}
              s232
          with
            (_, s233)
          in
          s233
  let vRefOpAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f1297.
      lam __sem_target1676.
        match
          __sem_target1676
        with
          p1091
        in
        let res408 =
            vRefOpAst_smapAccumL_Type_Type
              (lam #var"515".
                 lam a827.
                   ({}, f1297 a827))
              {}
              p1091
          in
          res408.1
  let vRefOpAst_sfold_Expr_Expr: all acc2499. (acc2499 -> Ast_Expr -> acc2499) -> acc2499 -> Ast_Expr -> acc2499 =
    lam f1298.
      lam acc2500.
        lam __sem_target1677.
          match
            __sem_target1677
          with
            p1092
          in
          let res409 =
              vRefOpAst_smapAccumL_Expr_Expr
                (lam acc2501.
                   lam a828.
                     (f1298 acc2501 a828, a828))
                acc2500
                p1092
            in
            res409.0
  let vRefOpAst_sfold_Expr_Type: all acc2502. (acc2502 -> Ast_Type -> acc2502) -> acc2502 -> Ast_Expr -> acc2502 =
    lam f1299.
      lam acc2503.
        lam __sem_target1678.
          match
            __sem_target1678
          with
            p1093
          in
          let res410 =
              vRefOpAst_smapAccumL_Expr_Type
                (lam acc2504.
                   lam a829.
                     (f1299 acc2504 a829, a829))
                acc2503
                p1093
            in
            res410.0
  let vRefOpAst_sfold_Kind_Type: all acc2505. (acc2505 -> Ast_Type -> acc2505) -> acc2505 -> Ast_Kind -> acc2505 =
    lam f1300: acc2505 -> Ast_Type -> acc2505.
      lam acc2506: acc2505.
        lam __sem_target1679.
          match
            __sem_target1679
          with
            s234
          in
          match
              vRefOpAst_smapAccumL_Kind_Type
                (lam a830.
                   lam x400.
                     (f1300 a830 x400, x400))
                acc2506
                s234
            with
              (a831, _)
            in
            a831
  let vRefOpAst_sfold_Type_Type: all acc2507. (acc2507 -> Ast_Type -> acc2507) -> acc2507 -> Ast_Type -> acc2507 =
    lam f1301.
      lam acc2508.
        lam __sem_target1680.
          match
            __sem_target1680
          with
            p1094
          in
          let res411 =
              vRefOpAst_smapAccumL_Type_Type
                (lam acc2509.
                   lam a832.
                     (f1301 acc2509 a832, a832))
                acc2508
                p1094
            in
            res411.0
  let vRefOpAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1302.
      lam __sem_target1681.
        match
          __sem_target1681
        with
          expr324
        in
        let expr325 = f1302 expr324 in
          vRefOpAst_smap_Expr_Expr (vRefOpAst_mapPre_Expr_Expr f1302) expr325
  let vRefOpAst_foldPre_Expr_Expr: all acc2510. (acc2510 -> Ast_Expr -> acc2510) -> acc2510 -> Ast_Expr -> acc2510 =
    lam f1303.
      lam acc2511.
        lam __sem_target1682.
          match
            __sem_target1682
          with
            expr326
          in
          let acc2512 = f1303 acc2511 expr326 in
            vRefOpAst_sfold_Expr_Expr (vRefOpAst_foldPre_Expr_Expr f1303) acc2512 expr326
  let vRefOpAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1304.
      lam __sem_target1683.
        match
          __sem_target1683
        with
          expr327
        in
        f1304
            (vRefOpAst_smap_Expr_Expr (vRefOpAst_mapPost_Expr_Expr f1304) expr327)
  let vRefOpAst_foldPost_Expr_Expr: all acc2513. (acc2513 -> Ast_Expr -> acc2513) -> acc2513 -> Ast_Expr -> acc2513 =
    lam f1305.
      lam acc2514.
        lam __sem_target1684.
          match
            __sem_target1684
          with
            expr328
          in
          f1305
              (vRefOpAst_sfold_Expr_Expr (vRefOpAst_foldPost_Expr_Expr f1305) acc2514 expr328)
              expr328
  let vRefOpAst_smapAccumL_Pat_Pat: all acc2515. (acc2515 -> Ast_Pat -> (acc2515, Ast_Pat)) -> acc2515 -> Ast_Pat -> (acc2515, Ast_Pat) =
    lam f1306.
      lam acc2516.
        lam __sem_target1685.
          match
            __sem_target1685
          with
            p1095
          in
          (acc2516, p1095)
  let vRefOpAst_smapAccumL_Expr_Pat: all acc2517. (acc2517 -> Ast_Pat -> (acc2517, Ast_Pat)) -> acc2517 -> Ast_Expr -> (acc2517, Ast_Expr) =
    lam f1307.
      lam acc2518.
        lam __sem_target1686.
          match
            __sem_target1686
          with
            p1096
          in
          (acc2518, p1096)
  let vRefOpAst_smapAccumL_Pat_Expr: all acc2519. (acc2519 -> Ast_Expr -> (acc2519, Ast_Expr)) -> acc2519 -> Ast_Pat -> (acc2519, Ast_Pat) =
    lam f1308.
      lam acc2520.
        lam __sem_target1687.
          match
            __sem_target1687
          with
            p1097
          in
          (acc2520, p1097)
  let vRefOpAst_smapAccumL_Pat_Type: all acc2521. (acc2521 -> Ast_Type -> (acc2521, Ast_Type)) -> acc2521 -> Ast_Pat -> (acc2521, Ast_Pat) =
    lam f1309.
      lam acc2522.
        lam __sem_target1688.
          match
            __sem_target1688
          with
            p1098
          in
          (acc2522, p1098)
  let vRefOpAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f1310.
      lam __sem_target1689.
        match
          __sem_target1689
        with
          p1099
        in
        let res412 =
            vRefOpAst_smapAccumL_Expr_TypeLabel
              (lam #var"516".
                 lam a833.
                   ({}, f1310 a833))
              {}
              p1099
          in
          res412.1
  let vRefOpAst_rappAccumL_Type_Type: all acc2523. (acc2523 -> Ast_Type -> (acc2523, Ast_Type)) -> acc2523 -> Ast_Type -> (acc2523, Ast_Type) =
    lam f1311.
      lam acc2524.
        lam __sem_target1690.
          match
            __sem_target1690
          with
            ty246
          in
          (acc2524, ty246)
  let vRefOpAst_sfold_Expr_TypeLabel: all acc2525. (acc2525 -> Ast_Type -> acc2525) -> acc2525 -> Ast_Expr -> acc2525 =
    lam f1312.
      lam acc2526.
        lam __sem_target1691.
          match
            __sem_target1691
          with
            p1100
          in
          let res413 =
              vRefOpAst_smapAccumL_Expr_TypeLabel
                (lam acc2527.
                   lam a834.
                     (f1312 acc2527 a834, a834))
                acc2526
                p1100
            in
            res413.0
  let vRefOpAst_smapAccumL_Expr_Expr: all acc2528. (acc2528 -> Ast_Expr -> (acc2528, Ast_Expr)) -> acc2528 -> Ast_Expr -> (acc2528, Ast_Expr) =
    lam f1313.
      lam acc2529.
        lam __sem_target1692.
          match
            __sem_target1692
          with
            p1101
          in
          (acc2529, p1101)
  let vRefOpAst_smapAccumL_Expr_Type: all acc2530. (acc2530 -> Ast_Type -> (acc2530, Ast_Type)) -> acc2530 -> Ast_Expr -> (acc2530, Ast_Expr) =
    lam f1314.
      lam acc2531.
        lam __sem_target1693.
          match
            __sem_target1693
          with
            p1102
          in
          (acc2531, p1102)
  let vRefOpAst_smapAccumL_Kind_Type: all acc2532. (acc2532 -> Ast_Type -> (acc2532, Ast_Type)) -> acc2532 -> Ast_Kind -> (acc2532, Ast_Kind) =
    lam f1315.
      lam acc2533.
        lam __sem_target1694.
          match
            __sem_target1694
          with
            s235
          in
          (acc2533, s235)
  let vRefOpAst_smapAccumL_Type_Type: all acc2534. (acc2534 -> Ast_Type -> (acc2534, Ast_Type)) -> acc2534 -> Ast_Type -> (acc2534, Ast_Type) =
    lam f1316.
      lam acc2535.
        lam __sem_target1695.
          match
            __sem_target1695
          with
            p1103
          in
          (acc2535, p1103)
  let vRefOpAst_mapAccumLPre_Expr_Expr: all acc2536. (acc2536 -> Ast_Expr -> (acc2536, Ast_Expr)) -> acc2536 -> Ast_Expr -> (acc2536, Ast_Expr) =
    lam f1317.
      lam acc2537.
        lam __sem_target1696.
          match
            __sem_target1696
          with
            expr329
          in
          match
              f1317 acc2537 expr329
            with
              (acc2538, expr330)
            in
            vRefOpAst_smapAccumL_Expr_Expr (vRefOpAst_mapAccumLPre_Expr_Expr f1317) acc2538 expr330
  let vRefOpAst_mapAccumLPost_Expr_Expr: all acc2539. (acc2539 -> Ast_Expr -> (acc2539, Ast_Expr)) -> acc2539 -> Ast_Expr -> (acc2539, Ast_Expr) =
    lam f1318.
      lam acc2540.
        lam __sem_target1697.
          match
            __sem_target1697
          with
            expr331
          in
          match
              vRefOpAst_smapAccumL_Expr_Expr (vRefOpAst_mapAccumLPost_Expr_Expr f1318) acc2540 expr331
            with
              (acc2541, expr332)
            in
            f1318 acc2541 expr332
  let vRefOpAst_smapAccumL_Expr_TypeLabel: all acc2542. (acc2542 -> Ast_Type -> (acc2542, Ast_Type)) -> acc2542 -> Ast_Expr -> (acc2542, Ast_Expr) =
    lam f1319.
      lam acc2543.
        lam __sem_target1698.
          match
            __sem_target1698
          with
            p1104
          in
          match
              f1319 acc2543 (vRefOpAst_tyTm p1104)
            with
              (acc2544, ty247)
            in
            (acc2544, vRefOpAst_withType ty247 p1104)
in
con TensorOpAst_CTensorCreateUninitFloat: () -> ConstAst_Const in
con TensorOpAst_CTensorCreateUninitInt: () -> ConstAst_Const in
con TensorOpAst_CTensorTransposeExn: () -> ConstAst_Const in
con TensorOpAst_CTensorLinearSetExn: () -> ConstAst_Const in
con TensorOpAst_CTensorLinearGetExn: () -> ConstAst_Const in
con TensorOpAst_CTensorCreateFloat: () -> ConstAst_Const in
con TensorOpAst_CTensorReshapeExn: () -> ConstAst_Const in
con TensorOpAst_CTensorIterSlice: () -> ConstAst_Const in
con TensorOpAst_CTensorCreateInt: () -> ConstAst_Const in
con TensorOpAst_CTensorToString: () -> ConstAst_Const in
con TensorOpAst_CTensorSliceExn: () -> ConstAst_Const in
con TensorOpAst_CTensorSubExn: () -> ConstAst_Const in
con TensorOpAst_CTensorSetExn: () -> ConstAst_Const in
con TensorOpAst_CTensorGetExn: () -> ConstAst_Const in
con TensorOpAst_CTensorCreate: () -> ConstAst_Const in
con TensorOpAst_CTensorShape: () -> ConstAst_Const in
con TensorOpAst_CTensorRank: () -> ConstAst_Const in
con TensorOpAst_CTensorCopy: () -> ConstAst_Const in
con TensorOpAst_CTensorEq: () -> ConstAst_Const in
recursive
  let vTensorOpAst_tyTm: Ast_Expr -> Ast_Type =
    lam __sem_target1611.
      match
        __sem_target1611
      with
        ConstAst_TmConst t879
      in
      t879.ty
  let vTensorOpAst_tyPat: Ast_Pat -> Ast_Type = lam x385.
      never
  let vTensorOpAst_infoTm: Ast_Expr -> Info =
    lam __sem_target1612.
      match
        __sem_target1612
      with
        ConstAst_TmConst r330
      in
      r330.info
  let vTensorOpAst_infoTy: Ast_Type -> Info = lam x386.
      never
  let vTensorOpAst_infoPat: Ast_Pat -> Info = lam x387.
      never
  let vTensorOpAst_withInfo: Info -> Ast_Expr -> Ast_Expr =
    lam info40.
      lam __sem_target1613.
        match
          __sem_target1613
        with
          ConstAst_TmConst t880
        in
        ConstAst_TmConst
            { t880 with info = info40 }
  let vTensorOpAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr =
    lam ty236: Ast_Type.
      lam __sem_target1614.
        match
          __sem_target1614
        with
          ConstAst_TmConst t881
        in
        ConstAst_TmConst
            { t881 with ty = ty236 }
  let vTensorOpAst_tyWithInfo: Info -> Ast_Type -> Ast_Type = lam x388.
      never
  let vTensorOpAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target1615.
      match
        __sem_target1615
      with
        ty237
      in
      vTensorOpAst_rapp_Type_Type vTensorOpAst_unwrapType ty237
  let vTensorOpAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target1616.
      match
        __sem_target1616
      with
        ty238
      in
      vTensorOpAst_rapp_Type_Type vTensorOpAst_inspectType ty238
  let vTensorOpAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x389.
      never
  let vTensorOpAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x390.
      never
  let vTensorOpAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f1250.
      lam __sem_target1617.
        match
          __sem_target1617
        with
          p1051
        in
        let res392 =
            vTensorOpAst_smapAccumL_Pat_Pat
              (lam #var"497".
                 lam a799.
                   ({}, f1250 a799))
              {}
              p1051
          in
          res392.1
  let vTensorOpAst_countPatNodes =
    lam count490.
      lam __sem_target1618.
        match
          __sem_target1618
        with
          t882
        in
        let count491 = addi count490 1 in
          let count492 =
            vTensorOpAst_sfold_Pat_Pat vTensorOpAst_countPatNodes count491 t882
          in
          let count493 =
            vTensorOpAst_sfold_Pat_Expr vTensorOpAst_countExprNodes count492 t882
          in
          let count494 =
            vTensorOpAst_sfold_Pat_Type vTensorOpAst_countTypeNodes count493 t882
          in
          count494
  let vTensorOpAst_sfold_Pat_Pat: all acc2423. (acc2423 -> Ast_Pat -> acc2423) -> acc2423 -> Ast_Pat -> acc2423 =
    lam f1251.
      lam acc2424.
        lam __sem_target1619.
          match
            __sem_target1619
          with
            p1052
          in
          let res393 =
              vTensorOpAst_smapAccumL_Pat_Pat
                (lam acc2425.
                   lam a800.
                     (f1251 acc2425 a800, a800))
                acc2424
                p1052
            in
            res393.0
  let vTensorOpAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f1252.
      lam __sem_target1620.
        match
          __sem_target1620
        with
          p1053
        in
        match
            vTensorOpAst_smapAccumL_Expr_Pat
              (lam #var"498".
                 lam a801.
                   ({}, f1252 a801))
              {}
              p1053
          with
            (_, p1054)
          in
          p1054
  let vTensorOpAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f1253.
      lam __sem_target1621.
        match
          __sem_target1621
        with
          p1055
        in
        match
            vTensorOpAst_smapAccumL_Pat_Expr
              (lam #var"499".
                 lam a802.
                   ({}, f1253 a802))
              {}
              p1055
          with
            (_, p1056)
          in
          p1056
  let vTensorOpAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f1254.
      lam __sem_target1622.
        match
          __sem_target1622
        with
          p1057
        in
        match
            vTensorOpAst_smapAccumL_Pat_Type
              (lam #var"500".
                 lam a803.
                   ({}, f1254 a803))
              {}
              p1057
          with
            (_, p1058)
          in
          p1058
  let vTensorOpAst_countExprNodes =
    lam count495.
      lam __sem_target1623.
        match
          __sem_target1623
        with
          t883
        in
        let count496 = addi count495 1 in
          let count497 =
            vTensorOpAst_sfold_Expr_Expr vTensorOpAst_countExprNodes count496 t883
          in
          let count498 =
            vTensorOpAst_sfold_Expr_Type vTensorOpAst_countTypeNodes count497 t883
          in
          let count499 =
            vTensorOpAst_sfold_Expr_TypeLabel vTensorOpAst_countTypeNodes count498 t883
          in
          let count500 =
            vTensorOpAst_sfold_Expr_Pat vTensorOpAst_countPatNodes count499 t883
          in
          count500
  let vTensorOpAst_countTypeNodes =
    lam count501.
      lam __sem_target1624.
        match
          __sem_target1624
        with
          t884
        in
        let count502 = addi count501 1 in
          let count503 =
            vTensorOpAst_sfold_Type_Type vTensorOpAst_countTypeNodes count502 t884
          in
          count503
  let vTensorOpAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f1255.
      lam __sem_target1625.
        match
          __sem_target1625
        with
          ty239
        in
        let res394 =
            vTensorOpAst_rappAccumL_Type_Type
              (lam #var"501".
                 lam t885.
                   ({}, f1255 t885))
              {}
              ty239
          in
          res394.1
  let vTensorOpAst_sfold_Expr_Pat: all acc2426. (acc2426 -> Ast_Pat -> acc2426) -> acc2426 -> Ast_Expr -> acc2426 =
    lam f1256.
      lam acc2427.
        lam __sem_target1626.
          match
            __sem_target1626
          with
            p1059
          in
          match
              vTensorOpAst_smapAccumL_Expr_Pat
                (lam acc2428.
                   lam a804.
                     (f1256 acc2428 a804, a804))
                acc2427
                p1059
            with
              (acc2429, _)
            in
            acc2429
  let vTensorOpAst_sfold_Pat_Expr: all acc2430. (acc2430 -> Ast_Expr -> acc2430) -> acc2430 -> Ast_Pat -> acc2430 =
    lam f1257.
      lam acc2431.
        lam __sem_target1627.
          match
            __sem_target1627
          with
            p1060
          in
          match
              vTensorOpAst_smapAccumL_Pat_Expr
                (lam acc2432.
                   lam a805.
                     (f1257 acc2432 a805, a805))
                acc2431
                p1060
            with
              (acc2433, _)
            in
            acc2433
  let vTensorOpAst_sfold_Pat_Type: all acc2434. (acc2434 -> Ast_Type -> acc2434) -> acc2434 -> Ast_Pat -> acc2434 =
    lam f1258.
      lam acc2435.
        lam __sem_target1628.
          match
            __sem_target1628
          with
            p1061
          in
          match
              vTensorOpAst_smapAccumL_Pat_Type
                (lam acc2436.
                   lam a806.
                     (f1258 acc2436 a806, a806))
                acc2435
                p1061
            with
              (acc2437, _)
            in
            acc2437
  let vTensorOpAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1259.
      lam __sem_target1629.
        match
          __sem_target1629
        with
          p1062
        in
        let res395 =
            vTensorOpAst_smapAccumL_Expr_Expr
              (lam #var"502".
                 lam a807.
                   ({}, f1259 a807))
              {}
              p1062
          in
          res395.1
  let vTensorOpAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f1260.
      lam __sem_target1630.
        match
          __sem_target1630
        with
          p1063
        in
        let res396 =
            vTensorOpAst_smapAccumL_Expr_Type
              (lam #var"503".
                 lam a808.
                   ({}, f1260 a808))
              {}
              p1063
          in
          res396.1
  let vTensorOpAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f1261: Ast_Type -> Ast_Type.
      lam __sem_target1631.
        match
          __sem_target1631
        with
          s228
        in
        match
            vTensorOpAst_smapAccumL_Kind_Type
              (lam #var"504".
                 lam x391.
                   ({}, f1261 x391))
              {}
              s228
          with
            (_, s229)
          in
          s229
  let vTensorOpAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f1262.
      lam __sem_target1632.
        match
          __sem_target1632
        with
          p1064
        in
        let res397 =
            vTensorOpAst_smapAccumL_Type_Type
              (lam #var"505".
                 lam a809.
                   ({}, f1262 a809))
              {}
              p1064
          in
          res397.1
  let vTensorOpAst_sfold_Expr_Expr: all acc2438. (acc2438 -> Ast_Expr -> acc2438) -> acc2438 -> Ast_Expr -> acc2438 =
    lam f1263.
      lam acc2439.
        lam __sem_target1633.
          match
            __sem_target1633
          with
            p1065
          in
          let res398 =
              vTensorOpAst_smapAccumL_Expr_Expr
                (lam acc2440.
                   lam a810.
                     (f1263 acc2440 a810, a810))
                acc2439
                p1065
            in
            res398.0
  let vTensorOpAst_sfold_Expr_Type: all acc2441. (acc2441 -> Ast_Type -> acc2441) -> acc2441 -> Ast_Expr -> acc2441 =
    lam f1264.
      lam acc2442.
        lam __sem_target1634.
          match
            __sem_target1634
          with
            p1066
          in
          let res399 =
              vTensorOpAst_smapAccumL_Expr_Type
                (lam acc2443.
                   lam a811.
                     (f1264 acc2443 a811, a811))
                acc2442
                p1066
            in
            res399.0
  let vTensorOpAst_sfold_Kind_Type: all acc2444. (acc2444 -> Ast_Type -> acc2444) -> acc2444 -> Ast_Kind -> acc2444 =
    lam f1265: acc2444 -> Ast_Type -> acc2444.
      lam acc2445: acc2444.
        lam __sem_target1635.
          match
            __sem_target1635
          with
            s230
          in
          match
              vTensorOpAst_smapAccumL_Kind_Type
                (lam a812.
                   lam x392.
                     (f1265 a812 x392, x392))
                acc2445
                s230
            with
              (a813, _)
            in
            a813
  let vTensorOpAst_sfold_Type_Type: all acc2446. (acc2446 -> Ast_Type -> acc2446) -> acc2446 -> Ast_Type -> acc2446 =
    lam f1266.
      lam acc2447.
        lam __sem_target1636.
          match
            __sem_target1636
          with
            p1067
          in
          let res400 =
              vTensorOpAst_smapAccumL_Type_Type
                (lam acc2448.
                   lam a814.
                     (f1266 acc2448 a814, a814))
                acc2447
                p1067
            in
            res400.0
  let vTensorOpAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1267.
      lam __sem_target1637.
        match
          __sem_target1637
        with
          expr315
        in
        let expr316 = f1267 expr315 in
          vTensorOpAst_smap_Expr_Expr (vTensorOpAst_mapPre_Expr_Expr f1267) expr316
  let vTensorOpAst_foldPre_Expr_Expr: all acc2449. (acc2449 -> Ast_Expr -> acc2449) -> acc2449 -> Ast_Expr -> acc2449 =
    lam f1268.
      lam acc2450.
        lam __sem_target1638.
          match
            __sem_target1638
          with
            expr317
          in
          let acc2451 = f1268 acc2450 expr317 in
            vTensorOpAst_sfold_Expr_Expr (vTensorOpAst_foldPre_Expr_Expr f1268) acc2451 expr317
  let vTensorOpAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1269.
      lam __sem_target1639.
        match
          __sem_target1639
        with
          expr318
        in
        f1269
            (vTensorOpAst_smap_Expr_Expr (vTensorOpAst_mapPost_Expr_Expr f1269) expr318)
  let vTensorOpAst_foldPost_Expr_Expr: all acc2452. (acc2452 -> Ast_Expr -> acc2452) -> acc2452 -> Ast_Expr -> acc2452 =
    lam f1270.
      lam acc2453.
        lam __sem_target1640.
          match
            __sem_target1640
          with
            expr319
          in
          f1270
              (vTensorOpAst_sfold_Expr_Expr (vTensorOpAst_foldPost_Expr_Expr f1270) acc2453 expr319)
              expr319
  let vTensorOpAst_smapAccumL_Pat_Pat: all acc2454. (acc2454 -> Ast_Pat -> (acc2454, Ast_Pat)) -> acc2454 -> Ast_Pat -> (acc2454, Ast_Pat) =
    lam f1271.
      lam acc2455.
        lam __sem_target1641.
          match
            __sem_target1641
          with
            p1068
          in
          (acc2455, p1068)
  let vTensorOpAst_smapAccumL_Expr_Pat: all acc2456. (acc2456 -> Ast_Pat -> (acc2456, Ast_Pat)) -> acc2456 -> Ast_Expr -> (acc2456, Ast_Expr) =
    lam f1272.
      lam acc2457.
        lam __sem_target1642.
          match
            __sem_target1642
          with
            p1069
          in
          (acc2457, p1069)
  let vTensorOpAst_smapAccumL_Pat_Expr: all acc2458. (acc2458 -> Ast_Expr -> (acc2458, Ast_Expr)) -> acc2458 -> Ast_Pat -> (acc2458, Ast_Pat) =
    lam f1273.
      lam acc2459.
        lam __sem_target1643.
          match
            __sem_target1643
          with
            p1070
          in
          (acc2459, p1070)
  let vTensorOpAst_smapAccumL_Pat_Type: all acc2460. (acc2460 -> Ast_Type -> (acc2460, Ast_Type)) -> acc2460 -> Ast_Pat -> (acc2460, Ast_Pat) =
    lam f1274.
      lam acc2461.
        lam __sem_target1644.
          match
            __sem_target1644
          with
            p1071
          in
          (acc2461, p1071)
  let vTensorOpAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f1275.
      lam __sem_target1645.
        match
          __sem_target1645
        with
          p1072
        in
        let res401 =
            vTensorOpAst_smapAccumL_Expr_TypeLabel
              (lam #var"506".
                 lam a815.
                   ({}, f1275 a815))
              {}
              p1072
          in
          res401.1
  let vTensorOpAst_rappAccumL_Type_Type: all acc2462. (acc2462 -> Ast_Type -> (acc2462, Ast_Type)) -> acc2462 -> Ast_Type -> (acc2462, Ast_Type) =
    lam f1276.
      lam acc2463.
        lam __sem_target1646.
          match
            __sem_target1646
          with
            ty240
          in
          (acc2463, ty240)
  let vTensorOpAst_sfold_Expr_TypeLabel: all acc2464. (acc2464 -> Ast_Type -> acc2464) -> acc2464 -> Ast_Expr -> acc2464 =
    lam f1277.
      lam acc2465.
        lam __sem_target1647.
          match
            __sem_target1647
          with
            p1073
          in
          let res402 =
              vTensorOpAst_smapAccumL_Expr_TypeLabel
                (lam acc2466.
                   lam a816.
                     (f1277 acc2466 a816, a816))
                acc2465
                p1073
            in
            res402.0
  let vTensorOpAst_smapAccumL_Expr_Expr: all acc2467. (acc2467 -> Ast_Expr -> (acc2467, Ast_Expr)) -> acc2467 -> Ast_Expr -> (acc2467, Ast_Expr) =
    lam f1278.
      lam acc2468.
        lam __sem_target1648.
          match
            __sem_target1648
          with
            p1074
          in
          (acc2468, p1074)
  let vTensorOpAst_smapAccumL_Expr_Type: all acc2469. (acc2469 -> Ast_Type -> (acc2469, Ast_Type)) -> acc2469 -> Ast_Expr -> (acc2469, Ast_Expr) =
    lam f1279.
      lam acc2470.
        lam __sem_target1649.
          match
            __sem_target1649
          with
            p1075
          in
          (acc2470, p1075)
  let vTensorOpAst_smapAccumL_Kind_Type: all acc2471. (acc2471 -> Ast_Type -> (acc2471, Ast_Type)) -> acc2471 -> Ast_Kind -> (acc2471, Ast_Kind) =
    lam f1280.
      lam acc2472.
        lam __sem_target1650.
          match
            __sem_target1650
          with
            s231
          in
          (acc2472, s231)
  let vTensorOpAst_smapAccumL_Type_Type: all acc2473. (acc2473 -> Ast_Type -> (acc2473, Ast_Type)) -> acc2473 -> Ast_Type -> (acc2473, Ast_Type) =
    lam f1281.
      lam acc2474.
        lam __sem_target1651.
          match
            __sem_target1651
          with
            p1076
          in
          (acc2474, p1076)
  let vTensorOpAst_mapAccumLPre_Expr_Expr: all acc2475. (acc2475 -> Ast_Expr -> (acc2475, Ast_Expr)) -> acc2475 -> Ast_Expr -> (acc2475, Ast_Expr) =
    lam f1282.
      lam acc2476.
        lam __sem_target1652.
          match
            __sem_target1652
          with
            expr320
          in
          match
              f1282 acc2476 expr320
            with
              (acc2477, expr321)
            in
            vTensorOpAst_smapAccumL_Expr_Expr (vTensorOpAst_mapAccumLPre_Expr_Expr f1282) acc2477 expr321
  let vTensorOpAst_mapAccumLPost_Expr_Expr: all acc2478. (acc2478 -> Ast_Expr -> (acc2478, Ast_Expr)) -> acc2478 -> Ast_Expr -> (acc2478, Ast_Expr) =
    lam f1283.
      lam acc2479.
        lam __sem_target1653.
          match
            __sem_target1653
          with
            expr322
          in
          match
              vTensorOpAst_smapAccumL_Expr_Expr
                (vTensorOpAst_mapAccumLPost_Expr_Expr f1283) acc2479 expr322
            with
              (acc2480, expr323)
            in
            f1283 acc2480 expr323
  let vTensorOpAst_smapAccumL_Expr_TypeLabel: all acc2481. (acc2481 -> Ast_Type -> (acc2481, Ast_Type)) -> acc2481 -> Ast_Expr -> (acc2481, Ast_Expr) =
    lam f1284.
      lam acc2482.
        lam __sem_target1654.
          match
            __sem_target1654
          with
            p1077
          in
          match
              f1284 acc2482 (vTensorOpAst_tyTm p1077)
            with
              (acc2483, ty241)
            in
            (acc2483, vTensorOpAst_withType ty241 p1077)
in
con BootParserAst_CBootParserParseMLangString: () -> ConstAst_Const in
con BootParserAst_CBootParserParseMExprString: () -> ConstAst_Const in
con BootParserAst_CBootParserParseMLangFile: () -> ConstAst_Const in
con BootParserAst_CBootParserParseMCoreFile: () -> ConstAst_Const in
con BootParserAst_CBootParserGetListLength: () -> ConstAst_Const in
con BootParserAst_CBootParserGetString: () -> ConstAst_Const in
con BootParserAst_CBootParserGetFloat: () -> ConstAst_Const in
con BootParserAst_CBootParserGetConst: () -> ConstAst_Const in
con BootParserAst_CBootParserGetType: () -> ConstAst_Const in
con BootParserAst_CBootParserGetTerm: () -> ConstAst_Const in
con BootParserAst_CBootParserGetInfo: () -> ConstAst_Const in
con BootParserAst_CBootParserGetDecl: () -> ConstAst_Const in
con BootParserAst_CBootParserGetTop: () -> ConstAst_Const in
con BootParserAst_CBootParserGetPat: () -> ConstAst_Const in
con BootParserAst_CBootParserGetInt: () -> ConstAst_Const in
con BootParserAst_CBootParserGetId: () -> ConstAst_Const in
recursive
  let vBootParserAst_tyTm: Ast_Expr -> Ast_Type =
    lam __sem_target1567.
      match
        __sem_target1567
      with
        ConstAst_TmConst t872
      in
      t872.ty
  let vBootParserAst_tyPat: Ast_Pat -> Ast_Type = lam x377.
      never
  let vBootParserAst_infoTm: Ast_Expr -> Info =
    lam __sem_target1568.
      match
        __sem_target1568
      with
        ConstAst_TmConst r329
      in
      r329.info
  let vBootParserAst_infoTy: Ast_Type -> Info = lam x378.
      never
  let vBootParserAst_infoPat: Ast_Pat -> Info = lam x379.
      never
  let vBootParserAst_withInfo: Info -> Ast_Expr -> Ast_Expr =
    lam info39.
      lam __sem_target1569.
        match
          __sem_target1569
        with
          ConstAst_TmConst t873
        in
        ConstAst_TmConst
            { t873 with info = info39 }
  let vBootParserAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr =
    lam ty230: Ast_Type.
      lam __sem_target1570.
        match
          __sem_target1570
        with
          ConstAst_TmConst t874
        in
        ConstAst_TmConst
            { t874 with ty = ty230 }
  let vBootParserAst_tyWithInfo: Info -> Ast_Type -> Ast_Type = lam x380.
      never
  let vBootParserAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target1571.
      match
        __sem_target1571
      with
        ty231
      in
      vBootParserAst_rapp_Type_Type vBootParserAst_unwrapType ty231
  let vBootParserAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target1572.
      match
        __sem_target1572
      with
        ty232
      in
      vBootParserAst_rapp_Type_Type vBootParserAst_inspectType ty232
  let vBootParserAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x381.
      never
  let vBootParserAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x382.
      never
  let vBootParserAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f1215.
      lam __sem_target1573.
        match
          __sem_target1573
        with
          p1024
        in
        let res381 =
            vBootParserAst_smapAccumL_Pat_Pat
              (lam #var"487".
                 lam a781.
                   ({}, f1215 a781))
              {}
              p1024
          in
          res381.1
  let vBootParserAst_countPatNodes =
    lam count476.
      lam __sem_target1574.
        match
          __sem_target1574
        with
          t875
        in
        let count477 = addi count476 1 in
          let count478 =
            vBootParserAst_sfold_Pat_Pat vBootParserAst_countPatNodes count477 t875
          in
          let count479 =
            vBootParserAst_sfold_Pat_Expr vBootParserAst_countExprNodes count478 t875
          in
          let count480 =
            vBootParserAst_sfold_Pat_Type vBootParserAst_countTypeNodes count479 t875
          in
          count480
  let vBootParserAst_sfold_Pat_Pat: all acc2362. (acc2362 -> Ast_Pat -> acc2362) -> acc2362 -> Ast_Pat -> acc2362 =
    lam f1216.
      lam acc2363.
        lam __sem_target1575.
          match
            __sem_target1575
          with
            p1025
          in
          let res382 =
              vBootParserAst_smapAccumL_Pat_Pat
                (lam acc2364.
                   lam a782.
                     (f1216 acc2364 a782, a782))
                acc2363
                p1025
            in
            res382.0
  let vBootParserAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f1217.
      lam __sem_target1576.
        match
          __sem_target1576
        with
          p1026
        in
        match
            vBootParserAst_smapAccumL_Expr_Pat
              (lam #var"488".
                 lam a783.
                   ({}, f1217 a783))
              {}
              p1026
          with
            (_, p1027)
          in
          p1027
  let vBootParserAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f1218.
      lam __sem_target1577.
        match
          __sem_target1577
        with
          p1028
        in
        match
            vBootParserAst_smapAccumL_Pat_Expr
              (lam #var"489".
                 lam a784.
                   ({}, f1218 a784))
              {}
              p1028
          with
            (_, p1029)
          in
          p1029
  let vBootParserAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f1219.
      lam __sem_target1578.
        match
          __sem_target1578
        with
          p1030
        in
        match
            vBootParserAst_smapAccumL_Pat_Type
              (lam #var"490".
                 lam a785.
                   ({}, f1219 a785))
              {}
              p1030
          with
            (_, p1031)
          in
          p1031
  let vBootParserAst_countExprNodes =
    lam count481.
      lam __sem_target1579.
        match
          __sem_target1579
        with
          t876
        in
        let count482 = addi count481 1 in
          let count483 =
            vBootParserAst_sfold_Expr_Expr vBootParserAst_countExprNodes count482 t876
          in
          let count484 =
            vBootParserAst_sfold_Expr_Type vBootParserAst_countTypeNodes count483 t876
          in
          let count485 =
            vBootParserAst_sfold_Expr_TypeLabel vBootParserAst_countTypeNodes count484 t876
          in
          let count486 =
            vBootParserAst_sfold_Expr_Pat vBootParserAst_countPatNodes count485 t876
          in
          count486
  let vBootParserAst_countTypeNodes =
    lam count487.
      lam __sem_target1580.
        match
          __sem_target1580
        with
          t877
        in
        let count488 = addi count487 1 in
          let count489 =
            vBootParserAst_sfold_Type_Type vBootParserAst_countTypeNodes count488 t877
          in
          count489
  let vBootParserAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f1220.
      lam __sem_target1581.
        match
          __sem_target1581
        with
          ty233
        in
        let res383 =
            vBootParserAst_rappAccumL_Type_Type
              (lam #var"491".
                 lam t878.
                   ({}, f1220 t878))
              {}
              ty233
          in
          res383.1
  let vBootParserAst_sfold_Expr_Pat: all acc2365. (acc2365 -> Ast_Pat -> acc2365) -> acc2365 -> Ast_Expr -> acc2365 =
    lam f1221.
      lam acc2366.
        lam __sem_target1582.
          match
            __sem_target1582
          with
            p1032
          in
          match
              vBootParserAst_smapAccumL_Expr_Pat
                (lam acc2367.
                   lam a786.
                     (f1221 acc2367 a786, a786))
                acc2366
                p1032
            with
              (acc2368, _)
            in
            acc2368
  let vBootParserAst_sfold_Pat_Expr: all acc2369. (acc2369 -> Ast_Expr -> acc2369) -> acc2369 -> Ast_Pat -> acc2369 =
    lam f1222.
      lam acc2370.
        lam __sem_target1583.
          match
            __sem_target1583
          with
            p1033
          in
          match
              vBootParserAst_smapAccumL_Pat_Expr
                (lam acc2371.
                   lam a787.
                     (f1222 acc2371 a787, a787))
                acc2370
                p1033
            with
              (acc2372, _)
            in
            acc2372
  let vBootParserAst_sfold_Pat_Type: all acc2373. (acc2373 -> Ast_Type -> acc2373) -> acc2373 -> Ast_Pat -> acc2373 =
    lam f1223.
      lam acc2374.
        lam __sem_target1584.
          match
            __sem_target1584
          with
            p1034
          in
          match
              vBootParserAst_smapAccumL_Pat_Type
                (lam acc2375.
                   lam a788.
                     (f1223 acc2375 a788, a788))
                acc2374
                p1034
            with
              (acc2376, _)
            in
            acc2376
  let vBootParserAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1224.
      lam __sem_target1585.
        match
          __sem_target1585
        with
          p1035
        in
        let res384 =
            vBootParserAst_smapAccumL_Expr_Expr
              (lam #var"492".
                 lam a789.
                   ({}, f1224 a789))
              {}
              p1035
          in
          res384.1
  let vBootParserAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f1225.
      lam __sem_target1586.
        match
          __sem_target1586
        with
          p1036
        in
        let res385 =
            vBootParserAst_smapAccumL_Expr_Type
              (lam #var"493".
                 lam a790.
                   ({}, f1225 a790))
              {}
              p1036
          in
          res385.1
  let vBootParserAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f1226: Ast_Type -> Ast_Type.
      lam __sem_target1587.
        match
          __sem_target1587
        with
          s224
        in
        match
            vBootParserAst_smapAccumL_Kind_Type
              (lam #var"494".
                 lam x383.
                   ({}, f1226 x383))
              {}
              s224
          with
            (_, s225)
          in
          s225
  let vBootParserAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f1227.
      lam __sem_target1588.
        match
          __sem_target1588
        with
          p1037
        in
        let res386 =
            vBootParserAst_smapAccumL_Type_Type
              (lam #var"495".
                 lam a791.
                   ({}, f1227 a791))
              {}
              p1037
          in
          res386.1
  let vBootParserAst_sfold_Expr_Expr: all acc2377. (acc2377 -> Ast_Expr -> acc2377) -> acc2377 -> Ast_Expr -> acc2377 =
    lam f1228.
      lam acc2378.
        lam __sem_target1589.
          match
            __sem_target1589
          with
            p1038
          in
          let res387 =
              vBootParserAst_smapAccumL_Expr_Expr
                (lam acc2379.
                   lam a792.
                     (f1228 acc2379 a792, a792))
                acc2378
                p1038
            in
            res387.0
  let vBootParserAst_sfold_Expr_Type: all acc2380. (acc2380 -> Ast_Type -> acc2380) -> acc2380 -> Ast_Expr -> acc2380 =
    lam f1229.
      lam acc2381.
        lam __sem_target1590.
          match
            __sem_target1590
          with
            p1039
          in
          let res388 =
              vBootParserAst_smapAccumL_Expr_Type
                (lam acc2382.
                   lam a793.
                     (f1229 acc2382 a793, a793))
                acc2381
                p1039
            in
            res388.0
  let vBootParserAst_sfold_Kind_Type: all acc2383. (acc2383 -> Ast_Type -> acc2383) -> acc2383 -> Ast_Kind -> acc2383 =
    lam f1230: acc2383 -> Ast_Type -> acc2383.
      lam acc2384: acc2383.
        lam __sem_target1591.
          match
            __sem_target1591
          with
            s226
          in
          match
              vBootParserAst_smapAccumL_Kind_Type
                (lam a794.
                   lam x384.
                     (f1230 a794 x384, x384))
                acc2384
                s226
            with
              (a795, _)
            in
            a795
  let vBootParserAst_sfold_Type_Type: all acc2385. (acc2385 -> Ast_Type -> acc2385) -> acc2385 -> Ast_Type -> acc2385 =
    lam f1231.
      lam acc2386.
        lam __sem_target1592.
          match
            __sem_target1592
          with
            p1040
          in
          let res389 =
              vBootParserAst_smapAccumL_Type_Type
                (lam acc2387.
                   lam a796.
                     (f1231 acc2387 a796, a796))
                acc2386
                p1040
            in
            res389.0
  let vBootParserAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1232.
      lam __sem_target1593.
        match
          __sem_target1593
        with
          expr306
        in
        let expr307 = f1232 expr306 in
          vBootParserAst_smap_Expr_Expr (vBootParserAst_mapPre_Expr_Expr f1232) expr307
  let vBootParserAst_foldPre_Expr_Expr: all acc2388. (acc2388 -> Ast_Expr -> acc2388) -> acc2388 -> Ast_Expr -> acc2388 =
    lam f1233.
      lam acc2389.
        lam __sem_target1594.
          match
            __sem_target1594
          with
            expr308
          in
          let acc2390 = f1233 acc2389 expr308 in
            vBootParserAst_sfold_Expr_Expr (vBootParserAst_foldPre_Expr_Expr f1233) acc2390 expr308
  let vBootParserAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1234.
      lam __sem_target1595.
        match
          __sem_target1595
        with
          expr309
        in
        f1234
            (vBootParserAst_smap_Expr_Expr (vBootParserAst_mapPost_Expr_Expr f1234) expr309)
  let vBootParserAst_foldPost_Expr_Expr: all acc2391. (acc2391 -> Ast_Expr -> acc2391) -> acc2391 -> Ast_Expr -> acc2391 =
    lam f1235.
      lam acc2392.
        lam __sem_target1596.
          match
            __sem_target1596
          with
            expr310
          in
          f1235
              (vBootParserAst_sfold_Expr_Expr (vBootParserAst_foldPost_Expr_Expr f1235) acc2392 expr310)
              expr310
  let vBootParserAst_smapAccumL_Pat_Pat: all acc2393. (acc2393 -> Ast_Pat -> (acc2393, Ast_Pat)) -> acc2393 -> Ast_Pat -> (acc2393, Ast_Pat) =
    lam f1236.
      lam acc2394.
        lam __sem_target1597.
          match
            __sem_target1597
          with
            p1041
          in
          (acc2394, p1041)
  let vBootParserAst_smapAccumL_Expr_Pat: all acc2395. (acc2395 -> Ast_Pat -> (acc2395, Ast_Pat)) -> acc2395 -> Ast_Expr -> (acc2395, Ast_Expr) =
    lam f1237.
      lam acc2396.
        lam __sem_target1598.
          match
            __sem_target1598
          with
            p1042
          in
          (acc2396, p1042)
  let vBootParserAst_smapAccumL_Pat_Expr: all acc2397. (acc2397 -> Ast_Expr -> (acc2397, Ast_Expr)) -> acc2397 -> Ast_Pat -> (acc2397, Ast_Pat) =
    lam f1238.
      lam acc2398.
        lam __sem_target1599.
          match
            __sem_target1599
          with
            p1043
          in
          (acc2398, p1043)
  let vBootParserAst_smapAccumL_Pat_Type: all acc2399. (acc2399 -> Ast_Type -> (acc2399, Ast_Type)) -> acc2399 -> Ast_Pat -> (acc2399, Ast_Pat) =
    lam f1239.
      lam acc2400.
        lam __sem_target1600.
          match
            __sem_target1600
          with
            p1044
          in
          (acc2400, p1044)
  let vBootParserAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f1240.
      lam __sem_target1601.
        match
          __sem_target1601
        with
          p1045
        in
        let res390 =
            vBootParserAst_smapAccumL_Expr_TypeLabel
              (lam #var"496".
                 lam a797.
                   ({}, f1240 a797))
              {}
              p1045
          in
          res390.1
  let vBootParserAst_rappAccumL_Type_Type: all acc2401. (acc2401 -> Ast_Type -> (acc2401, Ast_Type)) -> acc2401 -> Ast_Type -> (acc2401, Ast_Type) =
    lam f1241.
      lam acc2402.
        lam __sem_target1602.
          match
            __sem_target1602
          with
            ty234
          in
          (acc2402, ty234)
  let vBootParserAst_sfold_Expr_TypeLabel: all acc2403. (acc2403 -> Ast_Type -> acc2403) -> acc2403 -> Ast_Expr -> acc2403 =
    lam f1242.
      lam acc2404.
        lam __sem_target1603.
          match
            __sem_target1603
          with
            p1046
          in
          let res391 =
              vBootParserAst_smapAccumL_Expr_TypeLabel
                (lam acc2405.
                   lam a798.
                     (f1242 acc2405 a798, a798))
                acc2404
                p1046
            in
            res391.0
  let vBootParserAst_smapAccumL_Expr_Expr: all acc2406. (acc2406 -> Ast_Expr -> (acc2406, Ast_Expr)) -> acc2406 -> Ast_Expr -> (acc2406, Ast_Expr) =
    lam f1243.
      lam acc2407.
        lam __sem_target1604.
          match
            __sem_target1604
          with
            p1047
          in
          (acc2407, p1047)
  let vBootParserAst_smapAccumL_Expr_Type: all acc2408. (acc2408 -> Ast_Type -> (acc2408, Ast_Type)) -> acc2408 -> Ast_Expr -> (acc2408, Ast_Expr) =
    lam f1244.
      lam acc2409.
        lam __sem_target1605.
          match
            __sem_target1605
          with
            p1048
          in
          (acc2409, p1048)
  let vBootParserAst_smapAccumL_Kind_Type: all acc2410. (acc2410 -> Ast_Type -> (acc2410, Ast_Type)) -> acc2410 -> Ast_Kind -> (acc2410, Ast_Kind) =
    lam f1245.
      lam acc2411.
        lam __sem_target1606.
          match
            __sem_target1606
          with
            s227
          in
          (acc2411, s227)
  let vBootParserAst_smapAccumL_Type_Type: all acc2412. (acc2412 -> Ast_Type -> (acc2412, Ast_Type)) -> acc2412 -> Ast_Type -> (acc2412, Ast_Type) =
    lam f1246.
      lam acc2413.
        lam __sem_target1607.
          match
            __sem_target1607
          with
            p1049
          in
          (acc2413, p1049)
  let vBootParserAst_mapAccumLPre_Expr_Expr: all acc2414. (acc2414 -> Ast_Expr -> (acc2414, Ast_Expr)) -> acc2414 -> Ast_Expr -> (acc2414, Ast_Expr) =
    lam f1247.
      lam acc2415.
        lam __sem_target1608.
          match
            __sem_target1608
          with
            expr311
          in
          match
              f1247 acc2415 expr311
            with
              (acc2416, expr312)
            in
            vBootParserAst_smapAccumL_Expr_Expr
                (vBootParserAst_mapAccumLPre_Expr_Expr f1247) acc2416 expr312
  let vBootParserAst_mapAccumLPost_Expr_Expr: all acc2417. (acc2417 -> Ast_Expr -> (acc2417, Ast_Expr)) -> acc2417 -> Ast_Expr -> (acc2417, Ast_Expr) =
    lam f1248.
      lam acc2418.
        lam __sem_target1609.
          match
            __sem_target1609
          with
            expr313
          in
          match
              vBootParserAst_smapAccumL_Expr_Expr
                (vBootParserAst_mapAccumLPost_Expr_Expr f1248)
                acc2418
                expr313
            with
              (acc2419, expr314)
            in
            f1248 acc2419 expr314
  let vBootParserAst_smapAccumL_Expr_TypeLabel: all acc2420. (acc2420 -> Ast_Type -> (acc2420, Ast_Type)) -> acc2420 -> Ast_Expr -> (acc2420, Ast_Expr) =
    lam f1249.
      lam acc2421.
        lam __sem_target1610.
          match
            __sem_target1610
          with
            p1050
          in
          match
              f1249 acc2421 (vBootParserAst_tyTm p1050)
            with
              (acc2422, ty235)
            in
            (acc2422, vBootParserAst_withType ty235 p1050)
in
type PatName
in
con PName: Name -> PatName in
con PWildcard: () -> PatName in
con NamedPat_PatNamed: {ty: Ast_Type, info: Info, ident: PatName} -> Ast_Pat in
recursive
  let vNamedPat_tyTm: Ast_Expr -> Ast_Type = lam x369.
      never
  let vNamedPat_tyPat: Ast_Pat -> Ast_Type =
    lam __sem_target1523.
      match
        __sem_target1523
      with
        NamedPat_PatNamed r325
      in
      r325.ty
  let vNamedPat_infoTm: Ast_Expr -> Info = lam x370.
      never
  let vNamedPat_infoTy: Ast_Type -> Info = lam x371.
      never
  let vNamedPat_infoPat: Ast_Pat -> Info =
    lam __sem_target1524.
      match
        __sem_target1524
      with
        NamedPat_PatNamed r326
      in
      r326.info
  let vNamedPat_withInfo: Info -> Ast_Expr -> Ast_Expr = lam x372.
      never
  let vNamedPat_withType: Ast_Type -> Ast_Expr -> Ast_Expr = lam x373.
      never
  let vNamedPat_tyWithInfo: Info -> Ast_Type -> Ast_Type = lam x374.
      never
  let vNamedPat_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target1525.
      match
        __sem_target1525
      with
        ty224
      in
      vNamedPat_rapp_Type_Type vNamedPat_unwrapType ty224
  let vNamedPat_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target1526.
      match
        __sem_target1526
      with
        ty225
      in
      vNamedPat_rapp_Type_Type vNamedPat_inspectType ty225
  let vNamedPat_withInfoPat: Info -> Ast_Pat -> Ast_Pat =
    lam info38.
      lam __sem_target1527.
        match
          __sem_target1527
        with
          NamedPat_PatNamed r327
        in
        NamedPat_PatNamed
            { r327 with info = info38 }
  let vNamedPat_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat =
    lam ty226: Ast_Type.
      lam __sem_target1528.
        match
          __sem_target1528
        with
          NamedPat_PatNamed r328
        in
        NamedPat_PatNamed
            { r328 with ty = ty226 }
  let vNamedPat_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f1180.
      lam __sem_target1529.
        match
          __sem_target1529
        with
          p997
        in
        let res370 =
            vNamedPat_smapAccumL_Pat_Pat
              (lam #var"477".
                 lam a763.
                   ({}, f1180 a763))
              {}
              p997
          in
          res370.1
  let vNamedPat_countPatNodes =
    lam count462.
      lam __sem_target1530.
        match
          __sem_target1530
        with
          t868
        in
        let count463 = addi count462 1 in
          let count464 =
            vNamedPat_sfold_Pat_Pat vNamedPat_countPatNodes count463 t868
          in
          let count465 =
            vNamedPat_sfold_Pat_Expr vNamedPat_countExprNodes count464 t868
          in
          let count466 =
            vNamedPat_sfold_Pat_Type vNamedPat_countTypeNodes count465 t868
          in
          count466
  let vNamedPat_sfold_Pat_Pat: all acc2301. (acc2301 -> Ast_Pat -> acc2301) -> acc2301 -> Ast_Pat -> acc2301 =
    lam f1181.
      lam acc2302.
        lam __sem_target1531.
          match
            __sem_target1531
          with
            p998
          in
          let res371 =
              vNamedPat_smapAccumL_Pat_Pat
                (lam acc2303.
                   lam a764.
                     (f1181 acc2303 a764, a764))
                acc2302
                p998
            in
            res371.0
  let vNamedPat_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f1182.
      lam __sem_target1532.
        match
          __sem_target1532
        with
          p999
        in
        match
            vNamedPat_smapAccumL_Expr_Pat
              (lam #var"478".
                 lam a765.
                   ({}, f1182 a765))
              {}
              p999
          with
            (_, p1000)
          in
          p1000
  let vNamedPat_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f1183.
      lam __sem_target1533.
        match
          __sem_target1533
        with
          p1001
        in
        match
            vNamedPat_smapAccumL_Pat_Expr
              (lam #var"479".
                 lam a766.
                   ({}, f1183 a766))
              {}
              p1001
          with
            (_, p1002)
          in
          p1002
  let vNamedPat_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f1184.
      lam __sem_target1534.
        match
          __sem_target1534
        with
          p1003
        in
        match
            vNamedPat_smapAccumL_Pat_Type
              (lam #var"480".
                 lam a767.
                   ({}, f1184 a767))
              {}
              p1003
          with
            (_, p1004)
          in
          p1004
  let vNamedPat_countExprNodes =
    lam count467.
      lam __sem_target1535.
        match
          __sem_target1535
        with
          t869
        in
        let count468 = addi count467 1 in
          let count469 =
            vNamedPat_sfold_Expr_Expr vNamedPat_countExprNodes count468 t869
          in
          let count470 =
            vNamedPat_sfold_Expr_Type vNamedPat_countTypeNodes count469 t869
          in
          let count471 =
            vNamedPat_sfold_Expr_TypeLabel vNamedPat_countTypeNodes count470 t869
          in
          let count472 =
            vNamedPat_sfold_Expr_Pat vNamedPat_countPatNodes count471 t869
          in
          count472
  let vNamedPat_countTypeNodes =
    lam count473.
      lam __sem_target1536.
        match
          __sem_target1536
        with
          t870
        in
        let count474 = addi count473 1 in
          let count475 =
            vNamedPat_sfold_Type_Type vNamedPat_countTypeNodes count474 t870
          in
          count475
  let vNamedPat_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f1185.
      lam __sem_target1537.
        match
          __sem_target1537
        with
          ty227
        in
        let res372 =
            vNamedPat_rappAccumL_Type_Type
              (lam #var"481".
                 lam t871.
                   ({}, f1185 t871))
              {}
              ty227
          in
          res372.1
  let vNamedPat_sfold_Expr_Pat: all acc2304. (acc2304 -> Ast_Pat -> acc2304) -> acc2304 -> Ast_Expr -> acc2304 =
    lam f1186.
      lam acc2305.
        lam __sem_target1538.
          match
            __sem_target1538
          with
            p1005
          in
          match
              vNamedPat_smapAccumL_Expr_Pat
                (lam acc2306.
                   lam a768.
                     (f1186 acc2306 a768, a768))
                acc2305
                p1005
            with
              (acc2307, _)
            in
            acc2307
  let vNamedPat_sfold_Pat_Expr: all acc2308. (acc2308 -> Ast_Expr -> acc2308) -> acc2308 -> Ast_Pat -> acc2308 =
    lam f1187.
      lam acc2309.
        lam __sem_target1539.
          match
            __sem_target1539
          with
            p1006
          in
          match
              vNamedPat_smapAccumL_Pat_Expr
                (lam acc2310.
                   lam a769.
                     (f1187 acc2310 a769, a769))
                acc2309
                p1006
            with
              (acc2311, _)
            in
            acc2311
  let vNamedPat_sfold_Pat_Type: all acc2312. (acc2312 -> Ast_Type -> acc2312) -> acc2312 -> Ast_Pat -> acc2312 =
    lam f1188.
      lam acc2313.
        lam __sem_target1540.
          match
            __sem_target1540
          with
            p1007
          in
          match
              vNamedPat_smapAccumL_Pat_Type
                (lam acc2314.
                   lam a770.
                     (f1188 acc2314 a770, a770))
                acc2313
                p1007
            with
              (acc2315, _)
            in
            acc2315
  let vNamedPat_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1189.
      lam __sem_target1541.
        match
          __sem_target1541
        with
          p1008
        in
        let res373 =
            vNamedPat_smapAccumL_Expr_Expr
              (lam #var"482".
                 lam a771.
                   ({}, f1189 a771))
              {}
              p1008
          in
          res373.1
  let vNamedPat_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f1190.
      lam __sem_target1542.
        match
          __sem_target1542
        with
          p1009
        in
        let res374 =
            vNamedPat_smapAccumL_Expr_Type
              (lam #var"483".
                 lam a772.
                   ({}, f1190 a772))
              {}
              p1009
          in
          res374.1
  let vNamedPat_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f1191: Ast_Type -> Ast_Type.
      lam __sem_target1543.
        match
          __sem_target1543
        with
          s220
        in
        match
            vNamedPat_smapAccumL_Kind_Type
              (lam #var"484".
                 lam x375.
                   ({}, f1191 x375))
              {}
              s220
          with
            (_, s221)
          in
          s221
  let vNamedPat_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f1192.
      lam __sem_target1544.
        match
          __sem_target1544
        with
          p1010
        in
        let res375 =
            vNamedPat_smapAccumL_Type_Type
              (lam #var"485".
                 lam a773.
                   ({}, f1192 a773))
              {}
              p1010
          in
          res375.1
  let vNamedPat_sfold_Expr_Expr: all acc2316. (acc2316 -> Ast_Expr -> acc2316) -> acc2316 -> Ast_Expr -> acc2316 =
    lam f1193.
      lam acc2317.
        lam __sem_target1545.
          match
            __sem_target1545
          with
            p1011
          in
          let res376 =
              vNamedPat_smapAccumL_Expr_Expr
                (lam acc2318.
                   lam a774.
                     (f1193 acc2318 a774, a774))
                acc2317
                p1011
            in
            res376.0
  let vNamedPat_sfold_Expr_Type: all acc2319. (acc2319 -> Ast_Type -> acc2319) -> acc2319 -> Ast_Expr -> acc2319 =
    lam f1194.
      lam acc2320.
        lam __sem_target1546.
          match
            __sem_target1546
          with
            p1012
          in
          let res377 =
              vNamedPat_smapAccumL_Expr_Type
                (lam acc2321.
                   lam a775.
                     (f1194 acc2321 a775, a775))
                acc2320
                p1012
            in
            res377.0
  let vNamedPat_sfold_Kind_Type: all acc2322. (acc2322 -> Ast_Type -> acc2322) -> acc2322 -> Ast_Kind -> acc2322 =
    lam f1195: acc2322 -> Ast_Type -> acc2322.
      lam acc2323: acc2322.
        lam __sem_target1547.
          match
            __sem_target1547
          with
            s222
          in
          match
              vNamedPat_smapAccumL_Kind_Type
                (lam a776.
                   lam x376.
                     (f1195 a776 x376, x376))
                acc2323
                s222
            with
              (a777, _)
            in
            a777
  let vNamedPat_sfold_Type_Type: all acc2324. (acc2324 -> Ast_Type -> acc2324) -> acc2324 -> Ast_Type -> acc2324 =
    lam f1196.
      lam acc2325.
        lam __sem_target1548.
          match
            __sem_target1548
          with
            p1013
          in
          let res378 =
              vNamedPat_smapAccumL_Type_Type
                (lam acc2326.
                   lam a778.
                     (f1196 acc2326 a778, a778))
                acc2325
                p1013
            in
            res378.0
  let vNamedPat_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1197.
      lam __sem_target1549.
        match
          __sem_target1549
        with
          expr297
        in
        let expr298 = f1197 expr297 in
          vNamedPat_smap_Expr_Expr (vNamedPat_mapPre_Expr_Expr f1197) expr298
  let vNamedPat_foldPre_Expr_Expr: all acc2327. (acc2327 -> Ast_Expr -> acc2327) -> acc2327 -> Ast_Expr -> acc2327 =
    lam f1198.
      lam acc2328.
        lam __sem_target1550.
          match
            __sem_target1550
          with
            expr299
          in
          let acc2329 = f1198 acc2328 expr299 in
            vNamedPat_sfold_Expr_Expr (vNamedPat_foldPre_Expr_Expr f1198) acc2329 expr299
  let vNamedPat_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1199.
      lam __sem_target1551.
        match
          __sem_target1551
        with
          expr300
        in
        f1199
            (vNamedPat_smap_Expr_Expr (vNamedPat_mapPost_Expr_Expr f1199) expr300)
  let vNamedPat_foldPost_Expr_Expr: all acc2330. (acc2330 -> Ast_Expr -> acc2330) -> acc2330 -> Ast_Expr -> acc2330 =
    lam f1200.
      lam acc2331.
        lam __sem_target1552.
          match
            __sem_target1552
          with
            expr301
          in
          f1200
              (vNamedPat_sfold_Expr_Expr (vNamedPat_foldPost_Expr_Expr f1200) acc2331 expr301)
              expr301
  let vNamedPat_smapAccumL_Pat_Pat: all acc2332. (acc2332 -> Ast_Pat -> (acc2332, Ast_Pat)) -> acc2332 -> Ast_Pat -> (acc2332, Ast_Pat) =
    lam f1201.
      lam acc2333.
        lam __sem_target1553.
          match
            __sem_target1553
          with
            p1014
          in
          (acc2333, p1014)
  let vNamedPat_smapAccumL_Expr_Pat: all acc2334. (acc2334 -> Ast_Pat -> (acc2334, Ast_Pat)) -> acc2334 -> Ast_Expr -> (acc2334, Ast_Expr) =
    lam f1202.
      lam acc2335.
        lam __sem_target1554.
          match
            __sem_target1554
          with
            p1015
          in
          (acc2335, p1015)
  let vNamedPat_smapAccumL_Pat_Expr: all acc2336. (acc2336 -> Ast_Expr -> (acc2336, Ast_Expr)) -> acc2336 -> Ast_Pat -> (acc2336, Ast_Pat) =
    lam f1203.
      lam acc2337.
        lam __sem_target1555.
          match
            __sem_target1555
          with
            p1016
          in
          (acc2337, p1016)
  let vNamedPat_smapAccumL_Pat_Type: all acc2338. (acc2338 -> Ast_Type -> (acc2338, Ast_Type)) -> acc2338 -> Ast_Pat -> (acc2338, Ast_Pat) =
    lam f1204.
      lam acc2339.
        lam __sem_target1556.
          match
            __sem_target1556
          with
            p1017
          in
          (acc2339, p1017)
  let vNamedPat_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f1205.
      lam __sem_target1557.
        match
          __sem_target1557
        with
          p1018
        in
        let res379 =
            vNamedPat_smapAccumL_Expr_TypeLabel
              (lam #var"486".
                 lam a779.
                   ({}, f1205 a779))
              {}
              p1018
          in
          res379.1
  let vNamedPat_rappAccumL_Type_Type: all acc2340. (acc2340 -> Ast_Type -> (acc2340, Ast_Type)) -> acc2340 -> Ast_Type -> (acc2340, Ast_Type) =
    lam f1206.
      lam acc2341.
        lam __sem_target1558.
          match
            __sem_target1558
          with
            ty228
          in
          (acc2341, ty228)
  let vNamedPat_sfold_Expr_TypeLabel: all acc2342. (acc2342 -> Ast_Type -> acc2342) -> acc2342 -> Ast_Expr -> acc2342 =
    lam f1207.
      lam acc2343.
        lam __sem_target1559.
          match
            __sem_target1559
          with
            p1019
          in
          let res380 =
              vNamedPat_smapAccumL_Expr_TypeLabel
                (lam acc2344.
                   lam a780.
                     (f1207 acc2344 a780, a780))
                acc2343
                p1019
            in
            res380.0
  let vNamedPat_smapAccumL_Expr_Expr: all acc2345. (acc2345 -> Ast_Expr -> (acc2345, Ast_Expr)) -> acc2345 -> Ast_Expr -> (acc2345, Ast_Expr) =
    lam f1208.
      lam acc2346.
        lam __sem_target1560.
          match
            __sem_target1560
          with
            p1020
          in
          (acc2346, p1020)
  let vNamedPat_smapAccumL_Expr_Type: all acc2347. (acc2347 -> Ast_Type -> (acc2347, Ast_Type)) -> acc2347 -> Ast_Expr -> (acc2347, Ast_Expr) =
    lam f1209.
      lam acc2348.
        lam __sem_target1561.
          match
            __sem_target1561
          with
            p1021
          in
          (acc2348, p1021)
  let vNamedPat_smapAccumL_Kind_Type: all acc2349. (acc2349 -> Ast_Type -> (acc2349, Ast_Type)) -> acc2349 -> Ast_Kind -> (acc2349, Ast_Kind) =
    lam f1210.
      lam acc2350.
        lam __sem_target1562.
          match
            __sem_target1562
          with
            s223
          in
          (acc2350, s223)
  let vNamedPat_smapAccumL_Type_Type: all acc2351. (acc2351 -> Ast_Type -> (acc2351, Ast_Type)) -> acc2351 -> Ast_Type -> (acc2351, Ast_Type) =
    lam f1211.
      lam acc2352.
        lam __sem_target1563.
          match
            __sem_target1563
          with
            p1022
          in
          (acc2352, p1022)
  let vNamedPat_mapAccumLPre_Expr_Expr: all acc2353. (acc2353 -> Ast_Expr -> (acc2353, Ast_Expr)) -> acc2353 -> Ast_Expr -> (acc2353, Ast_Expr) =
    lam f1212.
      lam acc2354.
        lam __sem_target1564.
          match
            __sem_target1564
          with
            expr302
          in
          match
              f1212 acc2354 expr302
            with
              (acc2355, expr303)
            in
            vNamedPat_smapAccumL_Expr_Expr (vNamedPat_mapAccumLPre_Expr_Expr f1212) acc2355 expr303
  let vNamedPat_mapAccumLPost_Expr_Expr: all acc2356. (acc2356 -> Ast_Expr -> (acc2356, Ast_Expr)) -> acc2356 -> Ast_Expr -> (acc2356, Ast_Expr) =
    lam f1213.
      lam acc2357.
        lam __sem_target1565.
          match
            __sem_target1565
          with
            expr304
          in
          match
              vNamedPat_smapAccumL_Expr_Expr (vNamedPat_mapAccumLPost_Expr_Expr f1213) acc2357 expr304
            with
              (acc2358, expr305)
            in
            f1213 acc2358 expr305
  let vNamedPat_smapAccumL_Expr_TypeLabel: all acc2359. (acc2359 -> Ast_Type -> (acc2359, Ast_Type)) -> acc2359 -> Ast_Expr -> (acc2359, Ast_Expr) =
    lam f1214.
      lam acc2360.
        lam __sem_target1566.
          match
            __sem_target1566
          with
            p1023
          in
          match
              f1214 acc2360 (vNamedPat_tyTm p1023)
            with
              (acc2361, ty229)
            in
            (acc2361, vNamedPat_withType ty229 p1023)
in
con SeqTotPat_PatSeqTot: {ty: Ast_Type, info: Info, pats: [Ast_Pat]} -> Ast_Pat in
recursive
  let vSeqTotPat_tyTm: Ast_Expr -> Ast_Type = lam x361.
      never
  let vSeqTotPat_tyPat: Ast_Pat -> Ast_Type =
    lam __sem_target1479.
      match
        __sem_target1479
      with
        SeqTotPat_PatSeqTot r320
      in
      r320.ty
  let vSeqTotPat_infoTm: Ast_Expr -> Info = lam x362.
      never
  let vSeqTotPat_infoTy: Ast_Type -> Info = lam x363.
      never
  let vSeqTotPat_infoPat: Ast_Pat -> Info =
    lam __sem_target1480.
      match
        __sem_target1480
      with
        SeqTotPat_PatSeqTot r321
      in
      r321.info
  let vSeqTotPat_withInfo: Info -> Ast_Expr -> Ast_Expr = lam x364.
      never
  let vSeqTotPat_withType: Ast_Type -> Ast_Expr -> Ast_Expr = lam x365.
      never
  let vSeqTotPat_tyWithInfo: Info -> Ast_Type -> Ast_Type = lam x366.
      never
  let vSeqTotPat_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target1481.
      match
        __sem_target1481
      with
        ty218
      in
      vSeqTotPat_rapp_Type_Type vSeqTotPat_unwrapType ty218
  let vSeqTotPat_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target1482.
      match
        __sem_target1482
      with
        ty219
      in
      vSeqTotPat_rapp_Type_Type vSeqTotPat_inspectType ty219
  let vSeqTotPat_withInfoPat: Info -> Ast_Pat -> Ast_Pat =
    lam info37.
      lam __sem_target1483.
        match
          __sem_target1483
        with
          SeqTotPat_PatSeqTot r322
        in
        SeqTotPat_PatSeqTot
            { r322 with info = info37 }
  let vSeqTotPat_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat =
    lam ty220: Ast_Type.
      lam __sem_target1484.
        match
          __sem_target1484
        with
          SeqTotPat_PatSeqTot r323
        in
        SeqTotPat_PatSeqTot
            { r323 with ty = ty220 }
  let vSeqTotPat_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f1145.
      lam __sem_target1485.
        match
          __sem_target1485
        with
          p970
        in
        let res359 =
            vSeqTotPat_smapAccumL_Pat_Pat
              (lam #var"467".
                 lam a745.
                   ({}, f1145 a745))
              {}
              p970
          in
          res359.1
  let vSeqTotPat_countPatNodes =
    lam count448.
      lam __sem_target1486.
        match
          __sem_target1486
        with
          t864
        in
        let count449 = addi count448 1 in
          let count450 =
            vSeqTotPat_sfold_Pat_Pat vSeqTotPat_countPatNodes count449 t864
          in
          let count451 =
            vSeqTotPat_sfold_Pat_Expr vSeqTotPat_countExprNodes count450 t864
          in
          let count452 =
            vSeqTotPat_sfold_Pat_Type vSeqTotPat_countTypeNodes count451 t864
          in
          count452
  let vSeqTotPat_sfold_Pat_Pat: all acc2239. (acc2239 -> Ast_Pat -> acc2239) -> acc2239 -> Ast_Pat -> acc2239 =
    lam f1146.
      lam acc2240.
        lam __sem_target1487.
          match
            __sem_target1487
          with
            p971
          in
          let res360 =
              vSeqTotPat_smapAccumL_Pat_Pat
                (lam acc2241.
                   lam a746.
                     (f1146 acc2241 a746, a746))
                acc2240
                p971
            in
            res360.0
  let vSeqTotPat_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f1147.
      lam __sem_target1488.
        match
          __sem_target1488
        with
          p972
        in
        match
            vSeqTotPat_smapAccumL_Expr_Pat
              (lam #var"468".
                 lam a747.
                   ({}, f1147 a747))
              {}
              p972
          with
            (_, p973)
          in
          p973
  let vSeqTotPat_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f1148.
      lam __sem_target1489.
        match
          __sem_target1489
        with
          p974
        in
        match
            vSeqTotPat_smapAccumL_Pat_Expr
              (lam #var"469".
                 lam a748.
                   ({}, f1148 a748))
              {}
              p974
          with
            (_, p975)
          in
          p975
  let vSeqTotPat_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f1149.
      lam __sem_target1490.
        match
          __sem_target1490
        with
          p976
        in
        match
            vSeqTotPat_smapAccumL_Pat_Type
              (lam #var"470".
                 lam a749.
                   ({}, f1149 a749))
              {}
              p976
          with
            (_, p977)
          in
          p977
  let vSeqTotPat_countExprNodes =
    lam count453.
      lam __sem_target1491.
        match
          __sem_target1491
        with
          t865
        in
        let count454 = addi count453 1 in
          let count455 =
            vSeqTotPat_sfold_Expr_Expr vSeqTotPat_countExprNodes count454 t865
          in
          let count456 =
            vSeqTotPat_sfold_Expr_Type vSeqTotPat_countTypeNodes count455 t865
          in
          let count457 =
            vSeqTotPat_sfold_Expr_TypeLabel vSeqTotPat_countTypeNodes count456 t865
          in
          let count458 =
            vSeqTotPat_sfold_Expr_Pat vSeqTotPat_countPatNodes count457 t865
          in
          count458
  let vSeqTotPat_countTypeNodes =
    lam count459.
      lam __sem_target1492.
        match
          __sem_target1492
        with
          t866
        in
        let count460 = addi count459 1 in
          let count461 =
            vSeqTotPat_sfold_Type_Type vSeqTotPat_countTypeNodes count460 t866
          in
          count461
  let vSeqTotPat_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f1150.
      lam __sem_target1493.
        match
          __sem_target1493
        with
          ty221
        in
        let res361 =
            vSeqTotPat_rappAccumL_Type_Type
              (lam #var"471".
                 lam t867.
                   ({}, f1150 t867))
              {}
              ty221
          in
          res361.1
  let vSeqTotPat_sfold_Expr_Pat: all acc2242. (acc2242 -> Ast_Pat -> acc2242) -> acc2242 -> Ast_Expr -> acc2242 =
    lam f1151.
      lam acc2243.
        lam __sem_target1494.
          match
            __sem_target1494
          with
            p978
          in
          match
              vSeqTotPat_smapAccumL_Expr_Pat
                (lam acc2244.
                   lam a750.
                     (f1151 acc2244 a750, a750))
                acc2243
                p978
            with
              (acc2245, _)
            in
            acc2245
  let vSeqTotPat_sfold_Pat_Expr: all acc2246. (acc2246 -> Ast_Expr -> acc2246) -> acc2246 -> Ast_Pat -> acc2246 =
    lam f1152.
      lam acc2247.
        lam __sem_target1495.
          match
            __sem_target1495
          with
            p979
          in
          match
              vSeqTotPat_smapAccumL_Pat_Expr
                (lam acc2248.
                   lam a751.
                     (f1152 acc2248 a751, a751))
                acc2247
                p979
            with
              (acc2249, _)
            in
            acc2249
  let vSeqTotPat_sfold_Pat_Type: all acc2250. (acc2250 -> Ast_Type -> acc2250) -> acc2250 -> Ast_Pat -> acc2250 =
    lam f1153.
      lam acc2251.
        lam __sem_target1496.
          match
            __sem_target1496
          with
            p980
          in
          match
              vSeqTotPat_smapAccumL_Pat_Type
                (lam acc2252.
                   lam a752.
                     (f1153 acc2252 a752, a752))
                acc2251
                p980
            with
              (acc2253, _)
            in
            acc2253
  let vSeqTotPat_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1154.
      lam __sem_target1497.
        match
          __sem_target1497
        with
          p981
        in
        let res362 =
            vSeqTotPat_smapAccumL_Expr_Expr
              (lam #var"472".
                 lam a753.
                   ({}, f1154 a753))
              {}
              p981
          in
          res362.1
  let vSeqTotPat_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f1155.
      lam __sem_target1498.
        match
          __sem_target1498
        with
          p982
        in
        let res363 =
            vSeqTotPat_smapAccumL_Expr_Type
              (lam #var"473".
                 lam a754.
                   ({}, f1155 a754))
              {}
              p982
          in
          res363.1
  let vSeqTotPat_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f1156: Ast_Type -> Ast_Type.
      lam __sem_target1499.
        match
          __sem_target1499
        with
          s208
        in
        match
            vSeqTotPat_smapAccumL_Kind_Type
              (lam #var"474".
                 lam x367.
                   ({}, f1156 x367))
              {}
              s208
          with
            (_, s209)
          in
          s209
  let vSeqTotPat_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f1157.
      lam __sem_target1500.
        match
          __sem_target1500
        with
          p983
        in
        let res364 =
            vSeqTotPat_smapAccumL_Type_Type
              (lam #var"475".
                 lam a755.
                   ({}, f1157 a755))
              {}
              p983
          in
          res364.1
  let vSeqTotPat_sfold_Expr_Expr: all acc2254. (acc2254 -> Ast_Expr -> acc2254) -> acc2254 -> Ast_Expr -> acc2254 =
    lam f1158.
      lam acc2255.
        lam __sem_target1501.
          match
            __sem_target1501
          with
            p984
          in
          let res365 =
              vSeqTotPat_smapAccumL_Expr_Expr
                (lam acc2256.
                   lam a756.
                     (f1158 acc2256 a756, a756))
                acc2255
                p984
            in
            res365.0
  let vSeqTotPat_sfold_Expr_Type: all acc2257. (acc2257 -> Ast_Type -> acc2257) -> acc2257 -> Ast_Expr -> acc2257 =
    lam f1159.
      lam acc2258.
        lam __sem_target1502.
          match
            __sem_target1502
          with
            p985
          in
          let res366 =
              vSeqTotPat_smapAccumL_Expr_Type
                (lam acc2259.
                   lam a757.
                     (f1159 acc2259 a757, a757))
                acc2258
                p985
            in
            res366.0
  let vSeqTotPat_sfold_Kind_Type: all acc2260. (acc2260 -> Ast_Type -> acc2260) -> acc2260 -> Ast_Kind -> acc2260 =
    lam f1160: acc2260 -> Ast_Type -> acc2260.
      lam acc2261: acc2260.
        lam __sem_target1503.
          match
            __sem_target1503
          with
            s218
          in
          match
              vSeqTotPat_smapAccumL_Kind_Type
                (lam a758.
                   lam x368.
                     (f1160 a758 x368, x368))
                acc2261
                s218
            with
              (a759, _)
            in
            a759
  let vSeqTotPat_sfold_Type_Type: all acc2262. (acc2262 -> Ast_Type -> acc2262) -> acc2262 -> Ast_Type -> acc2262 =
    lam f1161.
      lam acc2263.
        lam __sem_target1504.
          match
            __sem_target1504
          with
            p986
          in
          let res367 =
              vSeqTotPat_smapAccumL_Type_Type
                (lam acc2264.
                   lam a760.
                     (f1161 acc2264 a760, a760))
                acc2263
                p986
            in
            res367.0
  let vSeqTotPat_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1162.
      lam __sem_target1505.
        match
          __sem_target1505
        with
          expr288
        in
        let expr289 = f1162 expr288 in
          vSeqTotPat_smap_Expr_Expr (vSeqTotPat_mapPre_Expr_Expr f1162) expr289
  let vSeqTotPat_foldPre_Expr_Expr: all acc2265. (acc2265 -> Ast_Expr -> acc2265) -> acc2265 -> Ast_Expr -> acc2265 =
    lam f1163.
      lam acc2266.
        lam __sem_target1506.
          match
            __sem_target1506
          with
            expr290
          in
          let acc2267 = f1163 acc2266 expr290 in
            vSeqTotPat_sfold_Expr_Expr (vSeqTotPat_foldPre_Expr_Expr f1163) acc2267 expr290
  let vSeqTotPat_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1164.
      lam __sem_target1507.
        match
          __sem_target1507
        with
          expr291
        in
        f1164
            (vSeqTotPat_smap_Expr_Expr (vSeqTotPat_mapPost_Expr_Expr f1164) expr291)
  let vSeqTotPat_foldPost_Expr_Expr: all acc2268. (acc2268 -> Ast_Expr -> acc2268) -> acc2268 -> Ast_Expr -> acc2268 =
    lam f1165.
      lam acc2269.
        lam __sem_target1508.
          match
            __sem_target1508
          with
            expr292
          in
          f1165
              (vSeqTotPat_sfold_Expr_Expr (vSeqTotPat_foldPost_Expr_Expr f1165) acc2269 expr292)
              expr292
  let vSeqTotPat_smapAccumL_Pat_Pat: all acc2270. (acc2270 -> Ast_Pat -> (acc2270, Ast_Pat)) -> acc2270 -> Ast_Pat -> (acc2270, Ast_Pat) =
    lam f1166.
      lam acc2271.
        lam __sem_target1509.
          match
            __sem_target1509
          with
            SeqTotPat_PatSeqTot r324
          then
            match
              mapAccumL f1166 acc2271 r324.pats
            with
              (acc2272, pats3)
            in
            (acc2272, SeqTotPat_PatSeqTot
                { r324 with pats = pats3 })
          else match
            __sem_target1509
          with
            p987
          in
          (acc2271, p987)
  let vSeqTotPat_smapAccumL_Expr_Pat: all acc2273. (acc2273 -> Ast_Pat -> (acc2273, Ast_Pat)) -> acc2273 -> Ast_Expr -> (acc2273, Ast_Expr) =
    lam f1167.
      lam acc2274.
        lam __sem_target1510.
          match
            __sem_target1510
          with
            p988
          in
          (acc2274, p988)
  let vSeqTotPat_smapAccumL_Pat_Expr: all acc2275. (acc2275 -> Ast_Expr -> (acc2275, Ast_Expr)) -> acc2275 -> Ast_Pat -> (acc2275, Ast_Pat) =
    lam f1168.
      lam acc2276.
        lam __sem_target1511.
          match
            __sem_target1511
          with
            p989
          in
          (acc2276, p989)
  let vSeqTotPat_smapAccumL_Pat_Type: all acc2277. (acc2277 -> Ast_Type -> (acc2277, Ast_Type)) -> acc2277 -> Ast_Pat -> (acc2277, Ast_Pat) =
    lam f1169.
      lam acc2278.
        lam __sem_target1512.
          match
            __sem_target1512
          with
            p990
          in
          (acc2278, p990)
  let vSeqTotPat_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f1170.
      lam __sem_target1513.
        match
          __sem_target1513
        with
          p991
        in
        let res368 =
            vSeqTotPat_smapAccumL_Expr_TypeLabel
              (lam #var"476".
                 lam a761.
                   ({}, f1170 a761))
              {}
              p991
          in
          res368.1
  let vSeqTotPat_rappAccumL_Type_Type: all acc2279. (acc2279 -> Ast_Type -> (acc2279, Ast_Type)) -> acc2279 -> Ast_Type -> (acc2279, Ast_Type) =
    lam f1171.
      lam acc2280.
        lam __sem_target1514.
          match
            __sem_target1514
          with
            ty222
          in
          (acc2280, ty222)
  let vSeqTotPat_sfold_Expr_TypeLabel: all acc2281. (acc2281 -> Ast_Type -> acc2281) -> acc2281 -> Ast_Expr -> acc2281 =
    lam f1172.
      lam acc2282.
        lam __sem_target1515.
          match
            __sem_target1515
          with
            p992
          in
          let res369 =
              vSeqTotPat_smapAccumL_Expr_TypeLabel
                (lam acc2283.
                   lam a762.
                     (f1172 acc2283 a762, a762))
                acc2282
                p992
            in
            res369.0
  let vSeqTotPat_smapAccumL_Expr_Expr: all acc2284. (acc2284 -> Ast_Expr -> (acc2284, Ast_Expr)) -> acc2284 -> Ast_Expr -> (acc2284, Ast_Expr) =
    lam f1173.
      lam acc2285.
        lam __sem_target1516.
          match
            __sem_target1516
          with
            p993
          in
          (acc2285, p993)
  let vSeqTotPat_smapAccumL_Expr_Type: all acc2286. (acc2286 -> Ast_Type -> (acc2286, Ast_Type)) -> acc2286 -> Ast_Expr -> (acc2286, Ast_Expr) =
    lam f1174.
      lam acc2287.
        lam __sem_target1517.
          match
            __sem_target1517
          with
            p994
          in
          (acc2287, p994)
  let vSeqTotPat_smapAccumL_Kind_Type: all acc2288. (acc2288 -> Ast_Type -> (acc2288, Ast_Type)) -> acc2288 -> Ast_Kind -> (acc2288, Ast_Kind) =
    lam f1175.
      lam acc2289.
        lam __sem_target1518.
          match
            __sem_target1518
          with
            s219
          in
          (acc2289, s219)
  let vSeqTotPat_smapAccumL_Type_Type: all acc2290. (acc2290 -> Ast_Type -> (acc2290, Ast_Type)) -> acc2290 -> Ast_Type -> (acc2290, Ast_Type) =
    lam f1176.
      lam acc2291.
        lam __sem_target1519.
          match
            __sem_target1519
          with
            p995
          in
          (acc2291, p995)
  let vSeqTotPat_mapAccumLPre_Expr_Expr: all acc2292. (acc2292 -> Ast_Expr -> (acc2292, Ast_Expr)) -> acc2292 -> Ast_Expr -> (acc2292, Ast_Expr) =
    lam f1177.
      lam acc2293.
        lam __sem_target1520.
          match
            __sem_target1520
          with
            expr293
          in
          match
              f1177 acc2293 expr293
            with
              (acc2294, expr294)
            in
            vSeqTotPat_smapAccumL_Expr_Expr (vSeqTotPat_mapAccumLPre_Expr_Expr f1177) acc2294 expr294
  let vSeqTotPat_mapAccumLPost_Expr_Expr: all acc2295. (acc2295 -> Ast_Expr -> (acc2295, Ast_Expr)) -> acc2295 -> Ast_Expr -> (acc2295, Ast_Expr) =
    lam f1178.
      lam acc2296.
        lam __sem_target1521.
          match
            __sem_target1521
          with
            expr295
          in
          match
              vSeqTotPat_smapAccumL_Expr_Expr (vSeqTotPat_mapAccumLPost_Expr_Expr f1178) acc2296 expr295
            with
              (acc2297, expr296)
            in
            f1178 acc2297 expr296
  let vSeqTotPat_smapAccumL_Expr_TypeLabel: all acc2298. (acc2298 -> Ast_Type -> (acc2298, Ast_Type)) -> acc2298 -> Ast_Expr -> (acc2298, Ast_Expr) =
    lam f1179.
      lam acc2299.
        lam __sem_target1522.
          match
            __sem_target1522
          with
            p996
          in
          match
              f1179 acc2299 (vSeqTotPat_tyTm p996)
            with
              (acc2300, ty223)
            in
            (acc2300, vSeqTotPat_withType ty223 p996)
in
con SeqEdgePat_PatSeqEdge: {ty: Ast_Type, info: Info, middle: PatName, prefix: [Ast_Pat], postfix: [Ast_Pat]} -> Ast_Pat in
recursive
  let vSeqEdgePat_tyTm: Ast_Expr -> Ast_Type = lam x353.
      never
  let vSeqEdgePat_tyPat: Ast_Pat -> Ast_Type =
    lam __sem_target1435.
      match
        __sem_target1435
      with
        SeqEdgePat_PatSeqEdge r316
      in
      r316.ty
  let vSeqEdgePat_infoTm: Ast_Expr -> Info = lam x354.
      never
  let vSeqEdgePat_infoTy: Ast_Type -> Info = lam x355.
      never
  let vSeqEdgePat_infoPat: Ast_Pat -> Info =
    lam __sem_target1436.
      match
        __sem_target1436
      with
        SeqEdgePat_PatSeqEdge r317
      in
      r317.info
  let vSeqEdgePat_withInfo: Info -> Ast_Expr -> Ast_Expr = lam x356.
      never
  let vSeqEdgePat_withType: Ast_Type -> Ast_Expr -> Ast_Expr = lam x357.
      never
  let vSeqEdgePat_tyWithInfo: Info -> Ast_Type -> Ast_Type = lam x358.
      never
  let vSeqEdgePat_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target1437.
      match
        __sem_target1437
      with
        ty212
      in
      vSeqEdgePat_rapp_Type_Type vSeqEdgePat_unwrapType ty212
  let vSeqEdgePat_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target1438.
      match
        __sem_target1438
      with
        ty213
      in
      vSeqEdgePat_rapp_Type_Type vSeqEdgePat_inspectType ty213
  let vSeqEdgePat_withInfoPat: Info -> Ast_Pat -> Ast_Pat =
    lam info36.
      lam __sem_target1439.
        match
          __sem_target1439
        with
          SeqEdgePat_PatSeqEdge r318
        in
        SeqEdgePat_PatSeqEdge
            { r318 with info = info36 }
  let vSeqEdgePat_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat =
    lam ty214: Ast_Type.
      lam __sem_target1440.
        match
          __sem_target1440
        with
          SeqEdgePat_PatSeqEdge r319
        in
        SeqEdgePat_PatSeqEdge
            { r319 with ty = ty214 }
  let vSeqEdgePat_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f1110.
      lam __sem_target1441.
        match
          __sem_target1441
        with
          p942
        in
        let res348 =
            vSeqEdgePat_smapAccumL_Pat_Pat
              (lam #var"457".
                 lam a727.
                   ({}, f1110 a727))
              {}
              p942
          in
          res348.1
  let vSeqEdgePat_countPatNodes =
    lam count434.
      lam __sem_target1442.
        match
          __sem_target1442
        with
          t860
        in
        let count435 = addi count434 1 in
          let count436 =
            vSeqEdgePat_sfold_Pat_Pat vSeqEdgePat_countPatNodes count435 t860
          in
          let count437 =
            vSeqEdgePat_sfold_Pat_Expr vSeqEdgePat_countExprNodes count436 t860
          in
          let count438 =
            vSeqEdgePat_sfold_Pat_Type vSeqEdgePat_countTypeNodes count437 t860
          in
          count438
  let vSeqEdgePat_sfold_Pat_Pat: all acc2176. (acc2176 -> Ast_Pat -> acc2176) -> acc2176 -> Ast_Pat -> acc2176 =
    lam f1111.
      lam acc2177.
        lam __sem_target1443.
          match
            __sem_target1443
          with
            p943
          in
          let res349 =
              vSeqEdgePat_smapAccumL_Pat_Pat
                (lam acc2178.
                   lam a728.
                     (f1111 acc2178 a728, a728))
                acc2177
                p943
            in
            res349.0
  let vSeqEdgePat_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f1112.
      lam __sem_target1444.
        match
          __sem_target1444
        with
          p944
        in
        match
            vSeqEdgePat_smapAccumL_Expr_Pat
              (lam #var"458".
                 lam a729.
                   ({}, f1112 a729))
              {}
              p944
          with
            (_, p945)
          in
          p945
  let vSeqEdgePat_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f1113.
      lam __sem_target1445.
        match
          __sem_target1445
        with
          p946
        in
        match
            vSeqEdgePat_smapAccumL_Pat_Expr
              (lam #var"459".
                 lam a730.
                   ({}, f1113 a730))
              {}
              p946
          with
            (_, p947)
          in
          p947
  let vSeqEdgePat_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f1114.
      lam __sem_target1446.
        match
          __sem_target1446
        with
          p948
        in
        match
            vSeqEdgePat_smapAccumL_Pat_Type
              (lam #var"460".
                 lam a731.
                   ({}, f1114 a731))
              {}
              p948
          with
            (_, p949)
          in
          p949
  let vSeqEdgePat_countExprNodes =
    lam count439.
      lam __sem_target1447.
        match
          __sem_target1447
        with
          t861
        in
        let count440 = addi count439 1 in
          let count441 =
            vSeqEdgePat_sfold_Expr_Expr vSeqEdgePat_countExprNodes count440 t861
          in
          let count442 =
            vSeqEdgePat_sfold_Expr_Type vSeqEdgePat_countTypeNodes count441 t861
          in
          let count443 =
            vSeqEdgePat_sfold_Expr_TypeLabel vSeqEdgePat_countTypeNodes count442 t861
          in
          let count444 =
            vSeqEdgePat_sfold_Expr_Pat vSeqEdgePat_countPatNodes count443 t861
          in
          count444
  let vSeqEdgePat_countTypeNodes =
    lam count445.
      lam __sem_target1448.
        match
          __sem_target1448
        with
          t862
        in
        let count446 = addi count445 1 in
          let count447 =
            vSeqEdgePat_sfold_Type_Type vSeqEdgePat_countTypeNodes count446 t862
          in
          count447
  let vSeqEdgePat_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f1115.
      lam __sem_target1449.
        match
          __sem_target1449
        with
          ty215
        in
        let res350 =
            vSeqEdgePat_rappAccumL_Type_Type
              (lam #var"461".
                 lam t863.
                   ({}, f1115 t863))
              {}
              ty215
          in
          res350.1
  let vSeqEdgePat_sfold_Expr_Pat: all acc2179. (acc2179 -> Ast_Pat -> acc2179) -> acc2179 -> Ast_Expr -> acc2179 =
    lam f1116.
      lam acc2180.
        lam __sem_target1450.
          match
            __sem_target1450
          with
            p950
          in
          match
              vSeqEdgePat_smapAccumL_Expr_Pat
                (lam acc2181.
                   lam a732.
                     (f1116 acc2181 a732, a732))
                acc2180
                p950
            with
              (acc2182, _)
            in
            acc2182
  let vSeqEdgePat_sfold_Pat_Expr: all acc2183. (acc2183 -> Ast_Expr -> acc2183) -> acc2183 -> Ast_Pat -> acc2183 =
    lam f1117.
      lam acc2184.
        lam __sem_target1451.
          match
            __sem_target1451
          with
            p951
          in
          match
              vSeqEdgePat_smapAccumL_Pat_Expr
                (lam acc2185.
                   lam a733.
                     (f1117 acc2185 a733, a733))
                acc2184
                p951
            with
              (acc2186, _)
            in
            acc2186
  let vSeqEdgePat_sfold_Pat_Type: all acc2187. (acc2187 -> Ast_Type -> acc2187) -> acc2187 -> Ast_Pat -> acc2187 =
    lam f1118.
      lam acc2188.
        lam __sem_target1452.
          match
            __sem_target1452
          with
            p952
          in
          match
              vSeqEdgePat_smapAccumL_Pat_Type
                (lam acc2189.
                   lam a734.
                     (f1118 acc2189 a734, a734))
                acc2188
                p952
            with
              (acc2190, _)
            in
            acc2190
  let vSeqEdgePat_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1119.
      lam __sem_target1453.
        match
          __sem_target1453
        with
          p953
        in
        let res351 =
            vSeqEdgePat_smapAccumL_Expr_Expr
              (lam #var"462".
                 lam a735.
                   ({}, f1119 a735))
              {}
              p953
          in
          res351.1
  let vSeqEdgePat_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f1120.
      lam __sem_target1454.
        match
          __sem_target1454
        with
          p954
        in
        let res352 =
            vSeqEdgePat_smapAccumL_Expr_Type
              (lam #var"463".
                 lam a736.
                   ({}, f1120 a736))
              {}
              p954
          in
          res352.1
  let vSeqEdgePat_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f1121: Ast_Type -> Ast_Type.
      lam __sem_target1455.
        match
          __sem_target1455
        with
          s204
        in
        match
            vSeqEdgePat_smapAccumL_Kind_Type
              (lam #var"464".
                 lam x359.
                   ({}, f1121 x359))
              {}
              s204
          with
            (_, s205)
          in
          s205
  let vSeqEdgePat_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f1122.
      lam __sem_target1456.
        match
          __sem_target1456
        with
          p955
        in
        let res353 =
            vSeqEdgePat_smapAccumL_Type_Type
              (lam #var"465".
                 lam a737.
                   ({}, f1122 a737))
              {}
              p955
          in
          res353.1
  let vSeqEdgePat_sfold_Expr_Expr: all acc2191. (acc2191 -> Ast_Expr -> acc2191) -> acc2191 -> Ast_Expr -> acc2191 =
    lam f1123.
      lam acc2192.
        lam __sem_target1457.
          match
            __sem_target1457
          with
            p956
          in
          let res354 =
              vSeqEdgePat_smapAccumL_Expr_Expr
                (lam acc2193.
                   lam a738.
                     (f1123 acc2193 a738, a738))
                acc2192
                p956
            in
            res354.0
  let vSeqEdgePat_sfold_Expr_Type: all acc2194. (acc2194 -> Ast_Type -> acc2194) -> acc2194 -> Ast_Expr -> acc2194 =
    lam f1124.
      lam acc2195.
        lam __sem_target1458.
          match
            __sem_target1458
          with
            p957
          in
          let res355 =
              vSeqEdgePat_smapAccumL_Expr_Type
                (lam acc2196.
                   lam a739.
                     (f1124 acc2196 a739, a739))
                acc2195
                p957
            in
            res355.0
  let vSeqEdgePat_sfold_Kind_Type: all acc2197. (acc2197 -> Ast_Type -> acc2197) -> acc2197 -> Ast_Kind -> acc2197 =
    lam f1125: acc2197 -> Ast_Type -> acc2197.
      lam acc2198: acc2197.
        lam __sem_target1459.
          match
            __sem_target1459
          with
            s206
          in
          match
              vSeqEdgePat_smapAccumL_Kind_Type
                (lam a740.
                   lam x360.
                     (f1125 a740 x360, x360))
                acc2198
                s206
            with
              (a741, _)
            in
            a741
  let vSeqEdgePat_sfold_Type_Type: all acc2199. (acc2199 -> Ast_Type -> acc2199) -> acc2199 -> Ast_Type -> acc2199 =
    lam f1126.
      lam acc2200.
        lam __sem_target1460.
          match
            __sem_target1460
          with
            p958
          in
          let res356 =
              vSeqEdgePat_smapAccumL_Type_Type
                (lam acc2201.
                   lam a742.
                     (f1126 acc2201 a742, a742))
                acc2200
                p958
            in
            res356.0
  let vSeqEdgePat_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1127.
      lam __sem_target1461.
        match
          __sem_target1461
        with
          expr279
        in
        let expr280 = f1127 expr279 in
          vSeqEdgePat_smap_Expr_Expr (vSeqEdgePat_mapPre_Expr_Expr f1127) expr280
  let vSeqEdgePat_foldPre_Expr_Expr: all acc2202. (acc2202 -> Ast_Expr -> acc2202) -> acc2202 -> Ast_Expr -> acc2202 =
    lam f1128.
      lam acc2203.
        lam __sem_target1462.
          match
            __sem_target1462
          with
            expr281
          in
          let acc2204 = f1128 acc2203 expr281 in
            vSeqEdgePat_sfold_Expr_Expr (vSeqEdgePat_foldPre_Expr_Expr f1128) acc2204 expr281
  let vSeqEdgePat_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1129.
      lam __sem_target1463.
        match
          __sem_target1463
        with
          expr282
        in
        f1129
            (vSeqEdgePat_smap_Expr_Expr (vSeqEdgePat_mapPost_Expr_Expr f1129) expr282)
  let vSeqEdgePat_foldPost_Expr_Expr: all acc2205. (acc2205 -> Ast_Expr -> acc2205) -> acc2205 -> Ast_Expr -> acc2205 =
    lam f1130.
      lam acc2206.
        lam __sem_target1464.
          match
            __sem_target1464
          with
            expr283
          in
          f1130
              (vSeqEdgePat_sfold_Expr_Expr (vSeqEdgePat_foldPost_Expr_Expr f1130) acc2206 expr283)
              expr283
  let vSeqEdgePat_smapAccumL_Pat_Pat: all acc2207. (acc2207 -> Ast_Pat -> (acc2207, Ast_Pat)) -> acc2207 -> Ast_Pat -> (acc2207, Ast_Pat) =
    lam f1131.
      lam acc2208.
        lam __sem_target1465.
          match
            __sem_target1465
          with
            SeqEdgePat_PatSeqEdge p959
          then
            match
              mapAccumL f1131 acc2208 p959.prefix
            with
              (acc2209, prefix3)
            in
            match
                mapAccumL f1131 acc2209 p959.postfix
              with
                (acc2210, postfix3)
              in
              (acc2210, SeqEdgePat_PatSeqEdge
                  { p959 with prefix = prefix3, postfix = postfix3 })
          else match
            __sem_target1465
          with
            p960
          in
          (acc2208, p960)
  let vSeqEdgePat_smapAccumL_Expr_Pat: all acc2211. (acc2211 -> Ast_Pat -> (acc2211, Ast_Pat)) -> acc2211 -> Ast_Expr -> (acc2211, Ast_Expr) =
    lam f1132.
      lam acc2212.
        lam __sem_target1466.
          match
            __sem_target1466
          with
            p961
          in
          (acc2212, p961)
  let vSeqEdgePat_smapAccumL_Pat_Expr: all acc2213. (acc2213 -> Ast_Expr -> (acc2213, Ast_Expr)) -> acc2213 -> Ast_Pat -> (acc2213, Ast_Pat) =
    lam f1133.
      lam acc2214.
        lam __sem_target1467.
          match
            __sem_target1467
          with
            p962
          in
          (acc2214, p962)
  let vSeqEdgePat_smapAccumL_Pat_Type: all acc2215. (acc2215 -> Ast_Type -> (acc2215, Ast_Type)) -> acc2215 -> Ast_Pat -> (acc2215, Ast_Pat) =
    lam f1134.
      lam acc2216.
        lam __sem_target1468.
          match
            __sem_target1468
          with
            p963
          in
          (acc2216, p963)
  let vSeqEdgePat_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f1135.
      lam __sem_target1469.
        match
          __sem_target1469
        with
          p964
        in
        let res357 =
            vSeqEdgePat_smapAccumL_Expr_TypeLabel
              (lam #var"466".
                 lam a743.
                   ({}, f1135 a743))
              {}
              p964
          in
          res357.1
  let vSeqEdgePat_rappAccumL_Type_Type: all acc2217. (acc2217 -> Ast_Type -> (acc2217, Ast_Type)) -> acc2217 -> Ast_Type -> (acc2217, Ast_Type) =
    lam f1136.
      lam acc2218.
        lam __sem_target1470.
          match
            __sem_target1470
          with
            ty216
          in
          (acc2218, ty216)
  let vSeqEdgePat_sfold_Expr_TypeLabel: all acc2219. (acc2219 -> Ast_Type -> acc2219) -> acc2219 -> Ast_Expr -> acc2219 =
    lam f1137.
      lam acc2220.
        lam __sem_target1471.
          match
            __sem_target1471
          with
            p965
          in
          let res358 =
              vSeqEdgePat_smapAccumL_Expr_TypeLabel
                (lam acc2221.
                   lam a744.
                     (f1137 acc2221 a744, a744))
                acc2220
                p965
            in
            res358.0
  let vSeqEdgePat_smapAccumL_Expr_Expr: all acc2222. (acc2222 -> Ast_Expr -> (acc2222, Ast_Expr)) -> acc2222 -> Ast_Expr -> (acc2222, Ast_Expr) =
    lam f1138.
      lam acc2223.
        lam __sem_target1472.
          match
            __sem_target1472
          with
            p966
          in
          (acc2223, p966)
  let vSeqEdgePat_smapAccumL_Expr_Type: all acc2224. (acc2224 -> Ast_Type -> (acc2224, Ast_Type)) -> acc2224 -> Ast_Expr -> (acc2224, Ast_Expr) =
    lam f1139.
      lam acc2225.
        lam __sem_target1473.
          match
            __sem_target1473
          with
            p967
          in
          (acc2225, p967)
  let vSeqEdgePat_smapAccumL_Kind_Type: all acc2226. (acc2226 -> Ast_Type -> (acc2226, Ast_Type)) -> acc2226 -> Ast_Kind -> (acc2226, Ast_Kind) =
    lam f1140.
      lam acc2227.
        lam __sem_target1474.
          match
            __sem_target1474
          with
            s207
          in
          (acc2227, s207)
  let vSeqEdgePat_smapAccumL_Type_Type: all acc2228. (acc2228 -> Ast_Type -> (acc2228, Ast_Type)) -> acc2228 -> Ast_Type -> (acc2228, Ast_Type) =
    lam f1141.
      lam acc2229.
        lam __sem_target1475.
          match
            __sem_target1475
          with
            p968
          in
          (acc2229, p968)
  let vSeqEdgePat_mapAccumLPre_Expr_Expr: all acc2230. (acc2230 -> Ast_Expr -> (acc2230, Ast_Expr)) -> acc2230 -> Ast_Expr -> (acc2230, Ast_Expr) =
    lam f1142.
      lam acc2231.
        lam __sem_target1476.
          match
            __sem_target1476
          with
            expr284
          in
          match
              f1142 acc2231 expr284
            with
              (acc2232, expr285)
            in
            vSeqEdgePat_smapAccumL_Expr_Expr (vSeqEdgePat_mapAccumLPre_Expr_Expr f1142) acc2232 expr285
  let vSeqEdgePat_mapAccumLPost_Expr_Expr: all acc2233. (acc2233 -> Ast_Expr -> (acc2233, Ast_Expr)) -> acc2233 -> Ast_Expr -> (acc2233, Ast_Expr) =
    lam f1143.
      lam acc2234.
        lam __sem_target1477.
          match
            __sem_target1477
          with
            expr286
          in
          match
              vSeqEdgePat_smapAccumL_Expr_Expr (vSeqEdgePat_mapAccumLPost_Expr_Expr f1143) acc2234 expr286
            with
              (acc2235, expr287)
            in
            f1143 acc2235 expr287
  let vSeqEdgePat_smapAccumL_Expr_TypeLabel: all acc2236. (acc2236 -> Ast_Type -> (acc2236, Ast_Type)) -> acc2236 -> Ast_Expr -> (acc2236, Ast_Expr) =
    lam f1144.
      lam acc2237.
        lam __sem_target1478.
          match
            __sem_target1478
          with
            p969
          in
          match
              f1144 acc2237 (vSeqEdgePat_tyTm p969)
            with
              (acc2238, ty217)
            in
            (acc2238, vSeqEdgePat_withType ty217 p969)
in
con RecordPat_PatRecord: {ty: Ast_Type, info: Info, bindings: Map SID Ast_Pat} -> Ast_Pat in
recursive
  let vRecordPat_tyTm: Ast_Expr -> Ast_Type = lam x345.
      never
  let vRecordPat_tyPat: Ast_Pat -> Ast_Type =
    lam __sem_target1391.
      match
        __sem_target1391
      with
        RecordPat_PatRecord r312
      in
      r312.ty
  let vRecordPat_infoTm: Ast_Expr -> Info = lam x346.
      never
  let vRecordPat_infoTy: Ast_Type -> Info = lam x347.
      never
  let vRecordPat_infoPat: Ast_Pat -> Info =
    lam __sem_target1392.
      match
        __sem_target1392
      with
        RecordPat_PatRecord r313
      in
      r313.info
  let vRecordPat_withInfo: Info -> Ast_Expr -> Ast_Expr = lam x348.
      never
  let vRecordPat_withType: Ast_Type -> Ast_Expr -> Ast_Expr = lam x349.
      never
  let vRecordPat_tyWithInfo: Info -> Ast_Type -> Ast_Type = lam x350.
      never
  let vRecordPat_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target1393.
      match
        __sem_target1393
      with
        ty206
      in
      vRecordPat_rapp_Type_Type vRecordPat_unwrapType ty206
  let vRecordPat_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target1394.
      match
        __sem_target1394
      with
        ty207
      in
      vRecordPat_rapp_Type_Type vRecordPat_inspectType ty207
  let vRecordPat_withInfoPat: Info -> Ast_Pat -> Ast_Pat =
    lam info35.
      lam __sem_target1395.
        match
          __sem_target1395
        with
          RecordPat_PatRecord r314
        in
        RecordPat_PatRecord
            { r314 with info = info35 }
  let vRecordPat_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat =
    lam ty208: Ast_Type.
      lam __sem_target1396.
        match
          __sem_target1396
        with
          RecordPat_PatRecord r315
        in
        RecordPat_PatRecord
            { r315 with ty = ty208 }
  let vRecordPat_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f1075.
      lam __sem_target1397.
        match
          __sem_target1397
        with
          p913
        in
        let res337 =
            vRecordPat_smapAccumL_Pat_Pat
              (lam #var"446".
                 lam a709.
                   ({}, f1075 a709))
              {}
              p913
          in
          res337.1
  let vRecordPat_countPatNodes =
    lam count420.
      lam __sem_target1398.
        match
          __sem_target1398
        with
          t856
        in
        let count421 = addi count420 1 in
          let count422 =
            vRecordPat_sfold_Pat_Pat vRecordPat_countPatNodes count421 t856
          in
          let count423 =
            vRecordPat_sfold_Pat_Expr vRecordPat_countExprNodes count422 t856
          in
          let count424 =
            vRecordPat_sfold_Pat_Type vRecordPat_countTypeNodes count423 t856
          in
          count424
  let vRecordPat_sfold_Pat_Pat: all acc2113. (acc2113 -> Ast_Pat -> acc2113) -> acc2113 -> Ast_Pat -> acc2113 =
    lam f1076.
      lam acc2114.
        lam __sem_target1399.
          match
            __sem_target1399
          with
            p914
          in
          let res338 =
              vRecordPat_smapAccumL_Pat_Pat
                (lam acc2115.
                   lam a710.
                     (f1076 acc2115 a710, a710))
                acc2114
                p914
            in
            res338.0
  let vRecordPat_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f1077.
      lam __sem_target1400.
        match
          __sem_target1400
        with
          p915
        in
        match
            vRecordPat_smapAccumL_Expr_Pat
              (lam #var"447".
                 lam a711.
                   ({}, f1077 a711))
              {}
              p915
          with
            (_, p916)
          in
          p916
  let vRecordPat_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f1078.
      lam __sem_target1401.
        match
          __sem_target1401
        with
          p917
        in
        match
            vRecordPat_smapAccumL_Pat_Expr
              (lam #var"448".
                 lam a712.
                   ({}, f1078 a712))
              {}
              p917
          with
            (_, p918)
          in
          p918
  let vRecordPat_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f1079.
      lam __sem_target1402.
        match
          __sem_target1402
        with
          p919
        in
        match
            vRecordPat_smapAccumL_Pat_Type
              (lam #var"449".
                 lam a713.
                   ({}, f1079 a713))
              {}
              p919
          with
            (_, p920)
          in
          p920
  let vRecordPat_countExprNodes =
    lam count425.
      lam __sem_target1403.
        match
          __sem_target1403
        with
          t857
        in
        let count426 = addi count425 1 in
          let count427 =
            vRecordPat_sfold_Expr_Expr vRecordPat_countExprNodes count426 t857
          in
          let count428 =
            vRecordPat_sfold_Expr_Type vRecordPat_countTypeNodes count427 t857
          in
          let count429 =
            vRecordPat_sfold_Expr_TypeLabel vRecordPat_countTypeNodes count428 t857
          in
          let count430 =
            vRecordPat_sfold_Expr_Pat vRecordPat_countPatNodes count429 t857
          in
          count430
  let vRecordPat_countTypeNodes =
    lam count431.
      lam __sem_target1404.
        match
          __sem_target1404
        with
          t858
        in
        let count432 = addi count431 1 in
          let count433 =
            vRecordPat_sfold_Type_Type vRecordPat_countTypeNodes count432 t858
          in
          count433
  let vRecordPat_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f1080.
      lam __sem_target1405.
        match
          __sem_target1405
        with
          ty209
        in
        let res339 =
            vRecordPat_rappAccumL_Type_Type
              (lam #var"450".
                 lam t859.
                   ({}, f1080 t859))
              {}
              ty209
          in
          res339.1
  let vRecordPat_sfold_Expr_Pat: all acc2116. (acc2116 -> Ast_Pat -> acc2116) -> acc2116 -> Ast_Expr -> acc2116 =
    lam f1081.
      lam acc2117.
        lam __sem_target1406.
          match
            __sem_target1406
          with
            p921
          in
          match
              vRecordPat_smapAccumL_Expr_Pat
                (lam acc2118.
                   lam a714.
                     (f1081 acc2118 a714, a714))
                acc2117
                p921
            with
              (acc2119, _)
            in
            acc2119
  let vRecordPat_sfold_Pat_Expr: all acc2120. (acc2120 -> Ast_Expr -> acc2120) -> acc2120 -> Ast_Pat -> acc2120 =
    lam f1082.
      lam acc2121.
        lam __sem_target1407.
          match
            __sem_target1407
          with
            p922
          in
          match
              vRecordPat_smapAccumL_Pat_Expr
                (lam acc2122.
                   lam a715.
                     (f1082 acc2122 a715, a715))
                acc2121
                p922
            with
              (acc2123, _)
            in
            acc2123
  let vRecordPat_sfold_Pat_Type: all acc2124. (acc2124 -> Ast_Type -> acc2124) -> acc2124 -> Ast_Pat -> acc2124 =
    lam f1083.
      lam acc2125.
        lam __sem_target1408.
          match
            __sem_target1408
          with
            p923
          in
          match
              vRecordPat_smapAccumL_Pat_Type
                (lam acc2126.
                   lam a716.
                     (f1083 acc2126 a716, a716))
                acc2125
                p923
            with
              (acc2127, _)
            in
            acc2127
  let vRecordPat_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1084.
      lam __sem_target1409.
        match
          __sem_target1409
        with
          p924
        in
        let res340 =
            vRecordPat_smapAccumL_Expr_Expr
              (lam #var"451".
                 lam a717.
                   ({}, f1084 a717))
              {}
              p924
          in
          res340.1
  let vRecordPat_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f1085.
      lam __sem_target1410.
        match
          __sem_target1410
        with
          p925
        in
        let res341 =
            vRecordPat_smapAccumL_Expr_Type
              (lam #var"452".
                 lam a718.
                   ({}, f1085 a718))
              {}
              p925
          in
          res341.1
  let vRecordPat_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f1086: Ast_Type -> Ast_Type.
      lam __sem_target1411.
        match
          __sem_target1411
        with
          s200
        in
        match
            vRecordPat_smapAccumL_Kind_Type
              (lam #var"453".
                 lam x351.
                   ({}, f1086 x351))
              {}
              s200
          with
            (_, s201)
          in
          s201
  let vRecordPat_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f1087.
      lam __sem_target1412.
        match
          __sem_target1412
        with
          p926
        in
        let res342 =
            vRecordPat_smapAccumL_Type_Type
              (lam #var"454".
                 lam a719.
                   ({}, f1087 a719))
              {}
              p926
          in
          res342.1
  let vRecordPat_sfold_Expr_Expr: all acc2128. (acc2128 -> Ast_Expr -> acc2128) -> acc2128 -> Ast_Expr -> acc2128 =
    lam f1088.
      lam acc2129.
        lam __sem_target1413.
          match
            __sem_target1413
          with
            p927
          in
          let res343 =
              vRecordPat_smapAccumL_Expr_Expr
                (lam acc2130.
                   lam a720.
                     (f1088 acc2130 a720, a720))
                acc2129
                p927
            in
            res343.0
  let vRecordPat_sfold_Expr_Type: all acc2131. (acc2131 -> Ast_Type -> acc2131) -> acc2131 -> Ast_Expr -> acc2131 =
    lam f1089.
      lam acc2132.
        lam __sem_target1414.
          match
            __sem_target1414
          with
            p928
          in
          let res344 =
              vRecordPat_smapAccumL_Expr_Type
                (lam acc2133.
                   lam a721.
                     (f1089 acc2133 a721, a721))
                acc2132
                p928
            in
            res344.0
  let vRecordPat_sfold_Kind_Type: all acc2134. (acc2134 -> Ast_Type -> acc2134) -> acc2134 -> Ast_Kind -> acc2134 =
    lam f1090: acc2134 -> Ast_Type -> acc2134.
      lam acc2135: acc2134.
        lam __sem_target1415.
          match
            __sem_target1415
          with
            s202
          in
          match
              vRecordPat_smapAccumL_Kind_Type
                (lam a722.
                   lam x352.
                     (f1090 a722 x352, x352))
                acc2135
                s202
            with
              (a723, _)
            in
            a723
  let vRecordPat_sfold_Type_Type: all acc2136. (acc2136 -> Ast_Type -> acc2136) -> acc2136 -> Ast_Type -> acc2136 =
    lam f1091.
      lam acc2137.
        lam __sem_target1416.
          match
            __sem_target1416
          with
            p929
          in
          let res345 =
              vRecordPat_smapAccumL_Type_Type
                (lam acc2138.
                   lam a724.
                     (f1091 acc2138 a724, a724))
                acc2137
                p929
            in
            res345.0
  let vRecordPat_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1092.
      lam __sem_target1417.
        match
          __sem_target1417
        with
          expr270
        in
        let expr271 = f1092 expr270 in
          vRecordPat_smap_Expr_Expr (vRecordPat_mapPre_Expr_Expr f1092) expr271
  let vRecordPat_foldPre_Expr_Expr: all acc2139. (acc2139 -> Ast_Expr -> acc2139) -> acc2139 -> Ast_Expr -> acc2139 =
    lam f1093.
      lam acc2140.
        lam __sem_target1418.
          match
            __sem_target1418
          with
            expr272
          in
          let acc2141 = f1093 acc2140 expr272 in
            vRecordPat_sfold_Expr_Expr (vRecordPat_foldPre_Expr_Expr f1093) acc2141 expr272
  let vRecordPat_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1094.
      lam __sem_target1419.
        match
          __sem_target1419
        with
          expr273
        in
        f1094
            (vRecordPat_smap_Expr_Expr (vRecordPat_mapPost_Expr_Expr f1094) expr273)
  let vRecordPat_foldPost_Expr_Expr: all acc2142. (acc2142 -> Ast_Expr -> acc2142) -> acc2142 -> Ast_Expr -> acc2142 =
    lam f1095.
      lam acc2143.
        lam __sem_target1420.
          match
            __sem_target1420
          with
            expr274
          in
          f1095
              (vRecordPat_sfold_Expr_Expr (vRecordPat_foldPost_Expr_Expr f1095) acc2143 expr274)
              expr274
  let vRecordPat_smapAccumL_Pat_Pat: all acc2144. (acc2144 -> Ast_Pat -> (acc2144, Ast_Pat)) -> acc2144 -> Ast_Pat -> (acc2144, Ast_Pat) =
    lam f1096.
      lam acc2145.
        lam __sem_target1421.
          match
            __sem_target1421
          with
            RecordPat_PatRecord p930
          then
            match
              mapMapAccum
                (lam acc2146.
                   lam #var"455".
                     lam p931.
                       f1096 acc2146 p931)
                acc2145
                p930.bindings
            with
              (acc2147, bindings15)
            in
            (acc2147, RecordPat_PatRecord
                { p930 with bindings = bindings15 })
          else match
            __sem_target1421
          with
            p932
          in
          (acc2145, p932)
  let vRecordPat_smapAccumL_Expr_Pat: all acc2148. (acc2148 -> Ast_Pat -> (acc2148, Ast_Pat)) -> acc2148 -> Ast_Expr -> (acc2148, Ast_Expr) =
    lam f1097.
      lam acc2149.
        lam __sem_target1422.
          match
            __sem_target1422
          with
            p933
          in
          (acc2149, p933)
  let vRecordPat_smapAccumL_Pat_Expr: all acc2150. (acc2150 -> Ast_Expr -> (acc2150, Ast_Expr)) -> acc2150 -> Ast_Pat -> (acc2150, Ast_Pat) =
    lam f1098.
      lam acc2151.
        lam __sem_target1423.
          match
            __sem_target1423
          with
            p934
          in
          (acc2151, p934)
  let vRecordPat_smapAccumL_Pat_Type: all acc2152. (acc2152 -> Ast_Type -> (acc2152, Ast_Type)) -> acc2152 -> Ast_Pat -> (acc2152, Ast_Pat) =
    lam f1099.
      lam acc2153.
        lam __sem_target1424.
          match
            __sem_target1424
          with
            p935
          in
          (acc2153, p935)
  let vRecordPat_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f1100.
      lam __sem_target1425.
        match
          __sem_target1425
        with
          p936
        in
        let res346 =
            vRecordPat_smapAccumL_Expr_TypeLabel
              (lam #var"456".
                 lam a725.
                   ({}, f1100 a725))
              {}
              p936
          in
          res346.1
  let vRecordPat_rappAccumL_Type_Type: all acc2154. (acc2154 -> Ast_Type -> (acc2154, Ast_Type)) -> acc2154 -> Ast_Type -> (acc2154, Ast_Type) =
    lam f1101.
      lam acc2155.
        lam __sem_target1426.
          match
            __sem_target1426
          with
            ty210
          in
          (acc2155, ty210)
  let vRecordPat_sfold_Expr_TypeLabel: all acc2156. (acc2156 -> Ast_Type -> acc2156) -> acc2156 -> Ast_Expr -> acc2156 =
    lam f1102.
      lam acc2157.
        lam __sem_target1427.
          match
            __sem_target1427
          with
            p937
          in
          let res347 =
              vRecordPat_smapAccumL_Expr_TypeLabel
                (lam acc2158.
                   lam a726.
                     (f1102 acc2158 a726, a726))
                acc2157
                p937
            in
            res347.0
  let vRecordPat_smapAccumL_Expr_Expr: all acc2159. (acc2159 -> Ast_Expr -> (acc2159, Ast_Expr)) -> acc2159 -> Ast_Expr -> (acc2159, Ast_Expr) =
    lam f1103.
      lam acc2160.
        lam __sem_target1428.
          match
            __sem_target1428
          with
            p938
          in
          (acc2160, p938)
  let vRecordPat_smapAccumL_Expr_Type: all acc2161. (acc2161 -> Ast_Type -> (acc2161, Ast_Type)) -> acc2161 -> Ast_Expr -> (acc2161, Ast_Expr) =
    lam f1104.
      lam acc2162.
        lam __sem_target1429.
          match
            __sem_target1429
          with
            p939
          in
          (acc2162, p939)
  let vRecordPat_smapAccumL_Kind_Type: all acc2163. (acc2163 -> Ast_Type -> (acc2163, Ast_Type)) -> acc2163 -> Ast_Kind -> (acc2163, Ast_Kind) =
    lam f1105.
      lam acc2164.
        lam __sem_target1430.
          match
            __sem_target1430
          with
            s203
          in
          (acc2164, s203)
  let vRecordPat_smapAccumL_Type_Type: all acc2165. (acc2165 -> Ast_Type -> (acc2165, Ast_Type)) -> acc2165 -> Ast_Type -> (acc2165, Ast_Type) =
    lam f1106.
      lam acc2166.
        lam __sem_target1431.
          match
            __sem_target1431
          with
            p940
          in
          (acc2166, p940)
  let vRecordPat_mapAccumLPre_Expr_Expr: all acc2167. (acc2167 -> Ast_Expr -> (acc2167, Ast_Expr)) -> acc2167 -> Ast_Expr -> (acc2167, Ast_Expr) =
    lam f1107.
      lam acc2168.
        lam __sem_target1432.
          match
            __sem_target1432
          with
            expr275
          in
          match
              f1107 acc2168 expr275
            with
              (acc2169, expr276)
            in
            vRecordPat_smapAccumL_Expr_Expr (vRecordPat_mapAccumLPre_Expr_Expr f1107) acc2169 expr276
  let vRecordPat_mapAccumLPost_Expr_Expr: all acc2170. (acc2170 -> Ast_Expr -> (acc2170, Ast_Expr)) -> acc2170 -> Ast_Expr -> (acc2170, Ast_Expr) =
    lam f1108.
      lam acc2171.
        lam __sem_target1433.
          match
            __sem_target1433
          with
            expr277
          in
          match
              vRecordPat_smapAccumL_Expr_Expr (vRecordPat_mapAccumLPost_Expr_Expr f1108) acc2171 expr277
            with
              (acc2172, expr278)
            in
            f1108 acc2172 expr278
  let vRecordPat_smapAccumL_Expr_TypeLabel: all acc2173. (acc2173 -> Ast_Type -> (acc2173, Ast_Type)) -> acc2173 -> Ast_Expr -> (acc2173, Ast_Expr) =
    lam f1109.
      lam acc2174.
        lam __sem_target1434.
          match
            __sem_target1434
          with
            p941
          in
          match
              f1109 acc2174 (vRecordPat_tyTm p941)
            with
              (acc2175, ty211)
            in
            (acc2175, vRecordPat_withType ty211 p941)
in
con DataPat_PatCon: {ty: Ast_Type, info: Info, ident: Name, subpat: Ast_Pat} -> Ast_Pat in
recursive
  let vDataPat_tyTm: Ast_Expr -> Ast_Type =
    lam __sem_target1343.
      match
        __sem_target1343
      with
        DataAst_TmConDef t843
      then
        t843.ty
      else match
        __sem_target1343
      with
        DataAst_TmConApp t844
      in
      t844.ty
  let vDataPat_tyPat: Ast_Pat -> Ast_Type =
    lam __sem_target1344.
      match
        __sem_target1344
      with
        DataPat_PatCon r306
      in
      r306.ty
  let vDataPat_infoTm: Ast_Expr -> Info =
    lam __sem_target1345.
      match
        __sem_target1345
      with
        DataAst_TmConDef r307
      then
        r307.info
      else match
        __sem_target1345
      with
        DataAst_TmConApp r308
      in
      r308.info
  let vDataPat_infoTy: Ast_Type -> Info = lam x341.
      never
  let vDataPat_infoPat: Ast_Pat -> Info =
    lam __sem_target1346.
      match
        __sem_target1346
      with
        DataPat_PatCon r309
      in
      r309.info
  let vDataPat_withInfo: Info -> Ast_Expr -> Ast_Expr =
    lam info33.
      lam __sem_target1347.
        match
          __sem_target1347
        with
          DataAst_TmConDef t845
        then
          DataAst_TmConDef
            { t845 with info = info33 }
        else match
          __sem_target1347
        with
          DataAst_TmConApp t846
        in
        DataAst_TmConApp
            { t846 with info = info33 }
  let vDataPat_withType: Ast_Type -> Ast_Expr -> Ast_Expr =
    lam ty199: Ast_Type.
      lam __sem_target1348.
        match
          __sem_target1348
        with
          DataAst_TmConDef t847
        then
          DataAst_TmConDef
            { t847 with ty = ty199 }
        else match
          __sem_target1348
        with
          DataAst_TmConApp t848
        in
        DataAst_TmConApp
            { t848 with ty = ty199 }
  let vDataPat_tyWithInfo: Info -> Ast_Type -> Ast_Type = lam x342.
      never
  let vDataPat_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target1349.
      match
        __sem_target1349
      with
        ty200
      in
      vDataPat_rapp_Type_Type vDataPat_unwrapType ty200
  let vDataPat_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target1350.
      match
        __sem_target1350
      with
        ty201
      in
      vDataPat_rapp_Type_Type vDataPat_inspectType ty201
  let vDataPat_withInfoPat: Info -> Ast_Pat -> Ast_Pat =
    lam info34.
      lam __sem_target1351.
        match
          __sem_target1351
        with
          DataPat_PatCon r310
        in
        DataPat_PatCon
            { r310 with info = info34 }
  let vDataPat_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat =
    lam ty202: Ast_Type.
      lam __sem_target1352.
        match
          __sem_target1352
        with
          DataPat_PatCon r311
        in
        DataPat_PatCon
            { r311 with ty = ty202 }
  let vDataPat_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f1040.
      lam __sem_target1353.
        match
          __sem_target1353
        with
          p886
        in
        let res326 =
            vDataPat_smapAccumL_Pat_Pat
              (lam #var"436".
                 lam a691.
                   ({}, f1040 a691))
              {}
              p886
          in
          res326.1
  let vDataPat_countPatNodes =
    lam count406.
      lam __sem_target1354.
        match
          __sem_target1354
        with
          t849
        in
        let count407 = addi count406 1 in
          let count408 = vDataPat_sfold_Pat_Pat vDataPat_countPatNodes count407 t849
          in
          let count409 =
            vDataPat_sfold_Pat_Expr vDataPat_countExprNodes count408 t849
          in
          let count410 =
            vDataPat_sfold_Pat_Type vDataPat_countTypeNodes count409 t849
          in
          count410
  let vDataPat_sfold_Pat_Pat: all acc2048. (acc2048 -> Ast_Pat -> acc2048) -> acc2048 -> Ast_Pat -> acc2048 =
    lam f1041.
      lam acc2049.
        lam __sem_target1355.
          match
            __sem_target1355
          with
            p887
          in
          let res327 =
              vDataPat_smapAccumL_Pat_Pat
                (lam acc2050.
                   lam a692.
                     (f1041 acc2050 a692, a692))
                acc2049
                p887
            in
            res327.0
  let vDataPat_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f1042.
      lam __sem_target1356.
        match
          __sem_target1356
        with
          p888
        in
        match
            vDataPat_smapAccumL_Expr_Pat
              (lam #var"437".
                 lam a693.
                   ({}, f1042 a693))
              {}
              p888
          with
            (_, p889)
          in
          p889
  let vDataPat_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f1043.
      lam __sem_target1357.
        match
          __sem_target1357
        with
          p890
        in
        match
            vDataPat_smapAccumL_Pat_Expr
              (lam #var"438".
                 lam a694.
                   ({}, f1043 a694))
              {}
              p890
          with
            (_, p891)
          in
          p891
  let vDataPat_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f1044.
      lam __sem_target1358.
        match
          __sem_target1358
        with
          p892
        in
        match
            vDataPat_smapAccumL_Pat_Type
              (lam #var"439".
                 lam a695.
                   ({}, f1044 a695))
              {}
              p892
          with
            (_, p893)
          in
          p893
  let vDataPat_countExprNodes =
    lam count411.
      lam __sem_target1359.
        match
          __sem_target1359
        with
          t850
        in
        let count412 = addi count411 1 in
          let count413 =
            vDataPat_sfold_Expr_Expr vDataPat_countExprNodes count412 t850
          in
          let count414 =
            vDataPat_sfold_Expr_Type vDataPat_countTypeNodes count413 t850
          in
          let count415 =
            vDataPat_sfold_Expr_TypeLabel vDataPat_countTypeNodes count414 t850
          in
          let count416 = vDataPat_sfold_Expr_Pat vDataPat_countPatNodes count415 t850
          in
          count416
  let vDataPat_countTypeNodes =
    lam count417.
      lam __sem_target1360.
        match
          __sem_target1360
        with
          t851
        in
        let count418 = addi count417 1 in
          let count419 =
            vDataPat_sfold_Type_Type vDataPat_countTypeNodes count418 t851
          in
          count419
  let vDataPat_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f1045.
      lam __sem_target1361.
        match
          __sem_target1361
        with
          ty203
        in
        let res328 =
            vDataPat_rappAccumL_Type_Type
              (lam #var"440".
                 lam t852.
                   ({}, f1045 t852))
              {}
              ty203
          in
          res328.1
  let vDataPat_sfold_Expr_Pat: all acc2051. (acc2051 -> Ast_Pat -> acc2051) -> acc2051 -> Ast_Expr -> acc2051 =
    lam f1046.
      lam acc2052.
        lam __sem_target1362.
          match
            __sem_target1362
          with
            p894
          in
          match
              vDataPat_smapAccumL_Expr_Pat
                (lam acc2053.
                   lam a696.
                     (f1046 acc2053 a696, a696))
                acc2052
                p894
            with
              (acc2054, _)
            in
            acc2054
  let vDataPat_sfold_Pat_Expr: all acc2055. (acc2055 -> Ast_Expr -> acc2055) -> acc2055 -> Ast_Pat -> acc2055 =
    lam f1047.
      lam acc2056.
        lam __sem_target1363.
          match
            __sem_target1363
          with
            p895
          in
          match
              vDataPat_smapAccumL_Pat_Expr
                (lam acc2057.
                   lam a697.
                     (f1047 acc2057 a697, a697))
                acc2056
                p895
            with
              (acc2058, _)
            in
            acc2058
  let vDataPat_sfold_Pat_Type: all acc2059. (acc2059 -> Ast_Type -> acc2059) -> acc2059 -> Ast_Pat -> acc2059 =
    lam f1048.
      lam acc2060.
        lam __sem_target1364.
          match
            __sem_target1364
          with
            p896
          in
          match
              vDataPat_smapAccumL_Pat_Type
                (lam acc2061.
                   lam a698.
                     (f1048 acc2061 a698, a698))
                acc2060
                p896
            with
              (acc2062, _)
            in
            acc2062
  let vDataPat_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1049.
      lam __sem_target1365.
        match
          __sem_target1365
        with
          p897
        in
        let res329 =
            vDataPat_smapAccumL_Expr_Expr
              (lam #var"441".
                 lam a699.
                   ({}, f1049 a699))
              {}
              p897
          in
          res329.1
  let vDataPat_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f1050.
      lam __sem_target1366.
        match
          __sem_target1366
        with
          p898
        in
        let res330 =
            vDataPat_smapAccumL_Expr_Type
              (lam #var"442".
                 lam a700.
                   ({}, f1050 a700))
              {}
              p898
          in
          res330.1
  let vDataPat_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f1051: Ast_Type -> Ast_Type.
      lam __sem_target1367.
        match
          __sem_target1367
        with
          s196
        in
        match
            vDataPat_smapAccumL_Kind_Type
              (lam #var"443".
                 lam x343.
                   ({}, f1051 x343))
              {}
              s196
          with
            (_, s197)
          in
          s197
  let vDataPat_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f1052.
      lam __sem_target1368.
        match
          __sem_target1368
        with
          p899
        in
        let res331 =
            vDataPat_smapAccumL_Type_Type
              (lam #var"444".
                 lam a701.
                   ({}, f1052 a701))
              {}
              p899
          in
          res331.1
  let vDataPat_sfold_Expr_Expr: all acc2063. (acc2063 -> Ast_Expr -> acc2063) -> acc2063 -> Ast_Expr -> acc2063 =
    lam f1053.
      lam acc2064.
        lam __sem_target1369.
          match
            __sem_target1369
          with
            p900
          in
          let res332 =
              vDataPat_smapAccumL_Expr_Expr
                (lam acc2065.
                   lam a702.
                     (f1053 acc2065 a702, a702))
                acc2064
                p900
            in
            res332.0
  let vDataPat_sfold_Expr_Type: all acc2066. (acc2066 -> Ast_Type -> acc2066) -> acc2066 -> Ast_Expr -> acc2066 =
    lam f1054.
      lam acc2067.
        lam __sem_target1370.
          match
            __sem_target1370
          with
            p901
          in
          let res333 =
              vDataPat_smapAccumL_Expr_Type
                (lam acc2068.
                   lam a703.
                     (f1054 acc2068 a703, a703))
                acc2067
                p901
            in
            res333.0
  let vDataPat_sfold_Kind_Type: all acc2069. (acc2069 -> Ast_Type -> acc2069) -> acc2069 -> Ast_Kind -> acc2069 =
    lam f1055: acc2069 -> Ast_Type -> acc2069.
      lam acc2070: acc2069.
        lam __sem_target1371.
          match
            __sem_target1371
          with
            s198
          in
          match
              vDataPat_smapAccumL_Kind_Type
                (lam a704.
                   lam x344.
                     (f1055 a704 x344, x344))
                acc2070
                s198
            with
              (a705, _)
            in
            a705
  let vDataPat_sfold_Type_Type: all acc2071. (acc2071 -> Ast_Type -> acc2071) -> acc2071 -> Ast_Type -> acc2071 =
    lam f1056.
      lam acc2072.
        lam __sem_target1372.
          match
            __sem_target1372
          with
            p902
          in
          let res334 =
              vDataPat_smapAccumL_Type_Type
                (lam acc2073.
                   lam a706.
                     (f1056 acc2073 a706, a706))
                acc2072
                p902
            in
            res334.0
  let vDataPat_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1057.
      lam __sem_target1373.
        match
          __sem_target1373
        with
          expr261
        in
        let expr262 = f1057 expr261 in
          vDataPat_smap_Expr_Expr (vDataPat_mapPre_Expr_Expr f1057) expr262
  let vDataPat_foldPre_Expr_Expr: all acc2074. (acc2074 -> Ast_Expr -> acc2074) -> acc2074 -> Ast_Expr -> acc2074 =
    lam f1058.
      lam acc2075.
        lam __sem_target1374.
          match
            __sem_target1374
          with
            expr263
          in
          let acc2076 = f1058 acc2075 expr263 in
            vDataPat_sfold_Expr_Expr (vDataPat_foldPre_Expr_Expr f1058) acc2076 expr263
  let vDataPat_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1059.
      lam __sem_target1375.
        match
          __sem_target1375
        with
          expr264
        in
        f1059
            (vDataPat_smap_Expr_Expr (vDataPat_mapPost_Expr_Expr f1059) expr264)
  let vDataPat_foldPost_Expr_Expr: all acc2077. (acc2077 -> Ast_Expr -> acc2077) -> acc2077 -> Ast_Expr -> acc2077 =
    lam f1060.
      lam acc2078.
        lam __sem_target1376.
          match
            __sem_target1376
          with
            expr265
          in
          f1060
              (vDataPat_sfold_Expr_Expr (vDataPat_foldPost_Expr_Expr f1060) acc2078 expr265)
              expr265
  let vDataPat_smapAccumL_Pat_Pat: all acc2079. (acc2079 -> Ast_Pat -> (acc2079, Ast_Pat)) -> acc2079 -> Ast_Pat -> (acc2079, Ast_Pat) =
    lam f1061.
      lam acc2080.
        lam __sem_target1377.
          match
            __sem_target1377
          with
            DataPat_PatCon c16
          then
            match
              f1061 acc2080 c16.subpat
            with
              (acc2081, subpat7)
            in
            (acc2081, DataPat_PatCon
                { c16 with subpat = subpat7 })
          else match
            __sem_target1377
          with
            p903
          in
          (acc2080, p903)
  let vDataPat_smapAccumL_Expr_Pat: all acc2082. (acc2082 -> Ast_Pat -> (acc2082, Ast_Pat)) -> acc2082 -> Ast_Expr -> (acc2082, Ast_Expr) =
    lam f1062.
      lam acc2083.
        lam __sem_target1378.
          match
            __sem_target1378
          with
            p904
          in
          (acc2083, p904)
  let vDataPat_smapAccumL_Pat_Expr: all acc2084. (acc2084 -> Ast_Expr -> (acc2084, Ast_Expr)) -> acc2084 -> Ast_Pat -> (acc2084, Ast_Pat) =
    lam f1063.
      lam acc2085.
        lam __sem_target1379.
          match
            __sem_target1379
          with
            p905
          in
          (acc2085, p905)
  let vDataPat_smapAccumL_Pat_Type: all acc2086. (acc2086 -> Ast_Type -> (acc2086, Ast_Type)) -> acc2086 -> Ast_Pat -> (acc2086, Ast_Pat) =
    lam f1064.
      lam acc2087.
        lam __sem_target1380.
          match
            __sem_target1380
          with
            p906
          in
          (acc2087, p906)
  let vDataPat_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f1065.
      lam __sem_target1381.
        match
          __sem_target1381
        with
          p907
        in
        let res335 =
            vDataPat_smapAccumL_Expr_TypeLabel
              (lam #var"445".
                 lam a707.
                   ({}, f1065 a707))
              {}
              p907
          in
          res335.1
  let vDataPat_rappAccumL_Type_Type: all acc2088. (acc2088 -> Ast_Type -> (acc2088, Ast_Type)) -> acc2088 -> Ast_Type -> (acc2088, Ast_Type) =
    lam f1066.
      lam acc2089.
        lam __sem_target1382.
          match
            __sem_target1382
          with
            ty204
          in
          (acc2089, ty204)
  let vDataPat_sfold_Expr_TypeLabel: all acc2090. (acc2090 -> Ast_Type -> acc2090) -> acc2090 -> Ast_Expr -> acc2090 =
    lam f1067.
      lam acc2091.
        lam __sem_target1383.
          match
            __sem_target1383
          with
            p908
          in
          let res336 =
              vDataPat_smapAccumL_Expr_TypeLabel
                (lam acc2092.
                   lam a708.
                     (f1067 acc2092 a708, a708))
                acc2091
                p908
            in
            res336.0
  let vDataPat_smapAccumL_Expr_Expr: all acc2093. (acc2093 -> Ast_Expr -> (acc2093, Ast_Expr)) -> acc2093 -> Ast_Expr -> (acc2093, Ast_Expr) =
    lam f1068.
      lam acc2094.
        lam __sem_target1384.
          match
            __sem_target1384
          with
            DataAst_TmConDef t853
          then
            match
              f1068 acc2094 t853.inexpr
            with
              (acc2095, inexpr15)
            in
            (acc2095, DataAst_TmConDef
                { t853 with inexpr = inexpr15 })
          else match
            __sem_target1384
          with
            DataAst_TmConApp t854
          then
            match
              f1068 acc2094 t854.body
            with
              (acc2096, body12)
            in
            (acc2096, DataAst_TmConApp
                { t854 with body = body12 })
          else match
            __sem_target1384
          with
            p909
          in
          (acc2094, p909)
  let vDataPat_smapAccumL_Expr_Type: all acc2097. (acc2097 -> Ast_Type -> (acc2097, Ast_Type)) -> acc2097 -> Ast_Expr -> (acc2097, Ast_Expr) =
    lam f1069.
      lam acc2098.
        lam __sem_target1385.
          match
            __sem_target1385
          with
            DataAst_TmConDef t855
          then
            match
              f1069 acc2098 t855.tyIdent
            with
              (acc2099, tyIdent9)
            in
            (acc2099, DataAst_TmConDef
                { t855 with tyIdent = tyIdent9 })
          else match
            __sem_target1385
          with
            p910
          in
          (acc2098, p910)
  let vDataPat_smapAccumL_Kind_Type: all acc2100. (acc2100 -> Ast_Type -> (acc2100, Ast_Type)) -> acc2100 -> Ast_Kind -> (acc2100, Ast_Kind) =
    lam f1070.
      lam acc2101.
        lam __sem_target1386.
          match
            __sem_target1386
          with
            s199
          in
          (acc2101, s199)
  let vDataPat_smapAccumL_Type_Type: all acc2102. (acc2102 -> Ast_Type -> (acc2102, Ast_Type)) -> acc2102 -> Ast_Type -> (acc2102, Ast_Type) =
    lam f1071.
      lam acc2103.
        lam __sem_target1387.
          match
            __sem_target1387
          with
            p911
          in
          (acc2103, p911)
  let vDataPat_mapAccumLPre_Expr_Expr: all acc2104. (acc2104 -> Ast_Expr -> (acc2104, Ast_Expr)) -> acc2104 -> Ast_Expr -> (acc2104, Ast_Expr) =
    lam f1072.
      lam acc2105.
        lam __sem_target1388.
          match
            __sem_target1388
          with
            expr266
          in
          match
              f1072 acc2105 expr266
            with
              (acc2106, expr267)
            in
            vDataPat_smapAccumL_Expr_Expr (vDataPat_mapAccumLPre_Expr_Expr f1072) acc2106 expr267
  let vDataPat_mapAccumLPost_Expr_Expr: all acc2107. (acc2107 -> Ast_Expr -> (acc2107, Ast_Expr)) -> acc2107 -> Ast_Expr -> (acc2107, Ast_Expr) =
    lam f1073.
      lam acc2108.
        lam __sem_target1389.
          match
            __sem_target1389
          with
            expr268
          in
          match
              vDataPat_smapAccumL_Expr_Expr (vDataPat_mapAccumLPost_Expr_Expr f1073) acc2108 expr268
            with
              (acc2109, expr269)
            in
            f1073 acc2109 expr269
  let vDataPat_smapAccumL_Expr_TypeLabel: all acc2110. (acc2110 -> Ast_Type -> (acc2110, Ast_Type)) -> acc2110 -> Ast_Expr -> (acc2110, Ast_Expr) =
    lam f1074.
      lam acc2111.
        lam __sem_target1390.
          match
            __sem_target1390
          with
            p912
          in
          match
              f1074 acc2111 (vDataPat_tyTm p912)
            with
              (acc2112, ty205)
            in
            (acc2112, vDataPat_withType ty205 p912)
in
con IntPat_PatInt: {ty: Ast_Type, val: Int, info: Info} -> Ast_Pat in
recursive
  let vIntPat_tyTm: Ast_Expr -> Ast_Type =
    lam __sem_target1295.
      match
        __sem_target1295
      with
        ConstAst_TmConst t836
      in
      t836.ty
  let vIntPat_tyPat: Ast_Pat -> Ast_Type =
    lam __sem_target1296.
      match
        __sem_target1296
      with
        IntPat_PatInt r301
      in
      r301.ty
  let vIntPat_infoTm: Ast_Expr -> Info =
    lam __sem_target1297.
      match
        __sem_target1297
      with
        ConstAst_TmConst r302
      in
      r302.info
  let vIntPat_infoTy: Ast_Type -> Info = lam x337.
      never
  let vIntPat_infoPat: Ast_Pat -> Info =
    lam __sem_target1298.
      match
        __sem_target1298
      with
        IntPat_PatInt r303
      in
      r303.info
  let vIntPat_withInfo: Info -> Ast_Expr -> Ast_Expr =
    lam info31.
      lam __sem_target1299.
        match
          __sem_target1299
        with
          ConstAst_TmConst t837
        in
        ConstAst_TmConst
            { t837 with info = info31 }
  let vIntPat_withType: Ast_Type -> Ast_Expr -> Ast_Expr =
    lam ty192: Ast_Type.
      lam __sem_target1300.
        match
          __sem_target1300
        with
          ConstAst_TmConst t838
        in
        ConstAst_TmConst
            { t838 with ty = ty192 }
  let vIntPat_tyWithInfo: Info -> Ast_Type -> Ast_Type = lam x338.
      never
  let vIntPat_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target1301.
      match
        __sem_target1301
      with
        ty193
      in
      vIntPat_rapp_Type_Type vIntPat_unwrapType ty193
  let vIntPat_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target1302.
      match
        __sem_target1302
      with
        ty194
      in
      vIntPat_rapp_Type_Type vIntPat_inspectType ty194
  let vIntPat_withInfoPat: Info -> Ast_Pat -> Ast_Pat =
    lam info32.
      lam __sem_target1303.
        match
          __sem_target1303
        with
          IntPat_PatInt r304
        in
        IntPat_PatInt
            { r304 with info = info32 }
  let vIntPat_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat =
    lam ty195: Ast_Type.
      lam __sem_target1304.
        match
          __sem_target1304
        with
          IntPat_PatInt r305
        in
        IntPat_PatInt
            { r305 with ty = ty195 }
  let vIntPat_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f1005.
      lam __sem_target1305.
        match
          __sem_target1305
        with
          p859
        in
        let res315 =
            vIntPat_smapAccumL_Pat_Pat
              (lam #var"426".
                 lam a673.
                   ({}, f1005 a673))
              {}
              p859
          in
          res315.1
  let vIntPat_countPatNodes =
    lam count392.
      lam __sem_target1306.
        match
          __sem_target1306
        with
          t839
        in
        let count393 = addi count392 1 in
          let count394 = vIntPat_sfold_Pat_Pat vIntPat_countPatNodes count393 t839
          in
          let count395 = vIntPat_sfold_Pat_Expr vIntPat_countExprNodes count394 t839
          in
          let count396 = vIntPat_sfold_Pat_Type vIntPat_countTypeNodes count395 t839
          in
          count396
  let vIntPat_sfold_Pat_Pat: all acc1987. (acc1987 -> Ast_Pat -> acc1987) -> acc1987 -> Ast_Pat -> acc1987 =
    lam f1006.
      lam acc1988.
        lam __sem_target1307.
          match
            __sem_target1307
          with
            p860
          in
          let res316 =
              vIntPat_smapAccumL_Pat_Pat
                (lam acc1989.
                   lam a674.
                     (f1006 acc1989 a674, a674))
                acc1988
                p860
            in
            res316.0
  let vIntPat_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f1007.
      lam __sem_target1308.
        match
          __sem_target1308
        with
          p861
        in
        match
            vIntPat_smapAccumL_Expr_Pat
              (lam #var"427".
                 lam a675.
                   ({}, f1007 a675))
              {}
              p861
          with
            (_, p862)
          in
          p862
  let vIntPat_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f1008.
      lam __sem_target1309.
        match
          __sem_target1309
        with
          p863
        in
        match
            vIntPat_smapAccumL_Pat_Expr
              (lam #var"428".
                 lam a676.
                   ({}, f1008 a676))
              {}
              p863
          with
            (_, p864)
          in
          p864
  let vIntPat_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f1009.
      lam __sem_target1310.
        match
          __sem_target1310
        with
          p865
        in
        match
            vIntPat_smapAccumL_Pat_Type
              (lam #var"429".
                 lam a677.
                   ({}, f1009 a677))
              {}
              p865
          with
            (_, p866)
          in
          p866
  let vIntPat_countExprNodes =
    lam count397.
      lam __sem_target1311.
        match
          __sem_target1311
        with
          t840
        in
        let count398 = addi count397 1 in
          let count399 = vIntPat_sfold_Expr_Expr vIntPat_countExprNodes count398 t840
          in
          let count400 = vIntPat_sfold_Expr_Type vIntPat_countTypeNodes count399 t840
          in
          let count401 =
            vIntPat_sfold_Expr_TypeLabel vIntPat_countTypeNodes count400 t840
          in
          let count402 = vIntPat_sfold_Expr_Pat vIntPat_countPatNodes count401 t840
          in
          count402
  let vIntPat_countTypeNodes =
    lam count403.
      lam __sem_target1312.
        match
          __sem_target1312
        with
          t841
        in
        let count404 = addi count403 1 in
          let count405 = vIntPat_sfold_Type_Type vIntPat_countTypeNodes count404 t841
          in
          count405
  let vIntPat_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f1010.
      lam __sem_target1313.
        match
          __sem_target1313
        with
          ty196
        in
        let res317 =
            vIntPat_rappAccumL_Type_Type
              (lam #var"430".
                 lam t842.
                   ({}, f1010 t842))
              {}
              ty196
          in
          res317.1
  let vIntPat_sfold_Expr_Pat: all acc1990. (acc1990 -> Ast_Pat -> acc1990) -> acc1990 -> Ast_Expr -> acc1990 =
    lam f1011.
      lam acc1991.
        lam __sem_target1314.
          match
            __sem_target1314
          with
            p867
          in
          match
              vIntPat_smapAccumL_Expr_Pat
                (lam acc1992.
                   lam a678.
                     (f1011 acc1992 a678, a678))
                acc1991
                p867
            with
              (acc1993, _)
            in
            acc1993
  let vIntPat_sfold_Pat_Expr: all acc1994. (acc1994 -> Ast_Expr -> acc1994) -> acc1994 -> Ast_Pat -> acc1994 =
    lam f1012.
      lam acc1995.
        lam __sem_target1315.
          match
            __sem_target1315
          with
            p868
          in
          match
              vIntPat_smapAccumL_Pat_Expr
                (lam acc1996.
                   lam a679.
                     (f1012 acc1996 a679, a679))
                acc1995
                p868
            with
              (acc1997, _)
            in
            acc1997
  let vIntPat_sfold_Pat_Type: all acc1998. (acc1998 -> Ast_Type -> acc1998) -> acc1998 -> Ast_Pat -> acc1998 =
    lam f1013.
      lam acc1999.
        lam __sem_target1316.
          match
            __sem_target1316
          with
            p869
          in
          match
              vIntPat_smapAccumL_Pat_Type
                (lam acc2000.
                   lam a680.
                     (f1013 acc2000 a680, a680))
                acc1999
                p869
            with
              (acc2001, _)
            in
            acc2001
  let vIntPat_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1014.
      lam __sem_target1317.
        match
          __sem_target1317
        with
          p870
        in
        let res318 =
            vIntPat_smapAccumL_Expr_Expr
              (lam #var"431".
                 lam a681.
                   ({}, f1014 a681))
              {}
              p870
          in
          res318.1
  let vIntPat_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f1015.
      lam __sem_target1318.
        match
          __sem_target1318
        with
          p871
        in
        let res319 =
            vIntPat_smapAccumL_Expr_Type
              (lam #var"432".
                 lam a682.
                   ({}, f1015 a682))
              {}
              p871
          in
          res319.1
  let vIntPat_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f1016: Ast_Type -> Ast_Type.
      lam __sem_target1319.
        match
          __sem_target1319
        with
          s192
        in
        match
            vIntPat_smapAccumL_Kind_Type
              (lam #var"433".
                 lam x339.
                   ({}, f1016 x339))
              {}
              s192
          with
            (_, s193)
          in
          s193
  let vIntPat_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f1017.
      lam __sem_target1320.
        match
          __sem_target1320
        with
          p872
        in
        let res320 =
            vIntPat_smapAccumL_Type_Type
              (lam #var"434".
                 lam a683.
                   ({}, f1017 a683))
              {}
              p872
          in
          res320.1
  let vIntPat_sfold_Expr_Expr: all acc2002. (acc2002 -> Ast_Expr -> acc2002) -> acc2002 -> Ast_Expr -> acc2002 =
    lam f1018.
      lam acc2003.
        lam __sem_target1321.
          match
            __sem_target1321
          with
            p873
          in
          let res321 =
              vIntPat_smapAccumL_Expr_Expr
                (lam acc2004.
                   lam a684.
                     (f1018 acc2004 a684, a684))
                acc2003
                p873
            in
            res321.0
  let vIntPat_sfold_Expr_Type: all acc2005. (acc2005 -> Ast_Type -> acc2005) -> acc2005 -> Ast_Expr -> acc2005 =
    lam f1019.
      lam acc2006.
        lam __sem_target1322.
          match
            __sem_target1322
          with
            p874
          in
          let res322 =
              vIntPat_smapAccumL_Expr_Type
                (lam acc2007.
                   lam a685.
                     (f1019 acc2007 a685, a685))
                acc2006
                p874
            in
            res322.0
  let vIntPat_sfold_Kind_Type: all acc2008. (acc2008 -> Ast_Type -> acc2008) -> acc2008 -> Ast_Kind -> acc2008 =
    lam f1020: acc2008 -> Ast_Type -> acc2008.
      lam acc2009: acc2008.
        lam __sem_target1323.
          match
            __sem_target1323
          with
            s194
          in
          match
              vIntPat_smapAccumL_Kind_Type
                (lam a686.
                   lam x340.
                     (f1020 a686 x340, x340))
                acc2009
                s194
            with
              (a687, _)
            in
            a687
  let vIntPat_sfold_Type_Type: all acc2010. (acc2010 -> Ast_Type -> acc2010) -> acc2010 -> Ast_Type -> acc2010 =
    lam f1021.
      lam acc2011.
        lam __sem_target1324.
          match
            __sem_target1324
          with
            p875
          in
          let res323 =
              vIntPat_smapAccumL_Type_Type
                (lam acc2012.
                   lam a688.
                     (f1021 acc2012 a688, a688))
                acc2011
                p875
            in
            res323.0
  let vIntPat_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1022.
      lam __sem_target1325.
        match
          __sem_target1325
        with
          expr252
        in
        let expr253 = f1022 expr252 in
          vIntPat_smap_Expr_Expr (vIntPat_mapPre_Expr_Expr f1022) expr253
  let vIntPat_foldPre_Expr_Expr: all acc2013. (acc2013 -> Ast_Expr -> acc2013) -> acc2013 -> Ast_Expr -> acc2013 =
    lam f1023.
      lam acc2014.
        lam __sem_target1326.
          match
            __sem_target1326
          with
            expr254
          in
          let acc2015 = f1023 acc2014 expr254 in
            vIntPat_sfold_Expr_Expr (vIntPat_foldPre_Expr_Expr f1023) acc2015 expr254
  let vIntPat_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f1024.
      lam __sem_target1327.
        match
          __sem_target1327
        with
          expr255
        in
        f1024
            (vIntPat_smap_Expr_Expr (vIntPat_mapPost_Expr_Expr f1024) expr255)
  let vIntPat_foldPost_Expr_Expr: all acc2016. (acc2016 -> Ast_Expr -> acc2016) -> acc2016 -> Ast_Expr -> acc2016 =
    lam f1025.
      lam acc2017.
        lam __sem_target1328.
          match
            __sem_target1328
          with
            expr256
          in
          f1025
              (vIntPat_sfold_Expr_Expr (vIntPat_foldPost_Expr_Expr f1025) acc2017 expr256)
              expr256
  let vIntPat_smapAccumL_Pat_Pat: all acc2018. (acc2018 -> Ast_Pat -> (acc2018, Ast_Pat)) -> acc2018 -> Ast_Pat -> (acc2018, Ast_Pat) =
    lam f1026.
      lam acc2019.
        lam __sem_target1329.
          match
            __sem_target1329
          with
            p876
          in
          (acc2019, p876)
  let vIntPat_smapAccumL_Expr_Pat: all acc2020. (acc2020 -> Ast_Pat -> (acc2020, Ast_Pat)) -> acc2020 -> Ast_Expr -> (acc2020, Ast_Expr) =
    lam f1027.
      lam acc2021.
        lam __sem_target1330.
          match
            __sem_target1330
          with
            p877
          in
          (acc2021, p877)
  let vIntPat_smapAccumL_Pat_Expr: all acc2022. (acc2022 -> Ast_Expr -> (acc2022, Ast_Expr)) -> acc2022 -> Ast_Pat -> (acc2022, Ast_Pat) =
    lam f1028.
      lam acc2023.
        lam __sem_target1331.
          match
            __sem_target1331
          with
            p878
          in
          (acc2023, p878)
  let vIntPat_smapAccumL_Pat_Type: all acc2024. (acc2024 -> Ast_Type -> (acc2024, Ast_Type)) -> acc2024 -> Ast_Pat -> (acc2024, Ast_Pat) =
    lam f1029.
      lam acc2025.
        lam __sem_target1332.
          match
            __sem_target1332
          with
            p879
          in
          (acc2025, p879)
  let vIntPat_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f1030.
      lam __sem_target1333.
        match
          __sem_target1333
        with
          p880
        in
        let res324 =
            vIntPat_smapAccumL_Expr_TypeLabel
              (lam #var"435".
                 lam a689.
                   ({}, f1030 a689))
              {}
              p880
          in
          res324.1
  let vIntPat_rappAccumL_Type_Type: all acc2026. (acc2026 -> Ast_Type -> (acc2026, Ast_Type)) -> acc2026 -> Ast_Type -> (acc2026, Ast_Type) =
    lam f1031.
      lam acc2027.
        lam __sem_target1334.
          match
            __sem_target1334
          with
            ty197
          in
          (acc2027, ty197)
  let vIntPat_sfold_Expr_TypeLabel: all acc2028. (acc2028 -> Ast_Type -> acc2028) -> acc2028 -> Ast_Expr -> acc2028 =
    lam f1032.
      lam acc2029.
        lam __sem_target1335.
          match
            __sem_target1335
          with
            p881
          in
          let res325 =
              vIntPat_smapAccumL_Expr_TypeLabel
                (lam acc2030.
                   lam a690.
                     (f1032 acc2030 a690, a690))
                acc2029
                p881
            in
            res325.0
  let vIntPat_smapAccumL_Expr_Expr: all acc2031. (acc2031 -> Ast_Expr -> (acc2031, Ast_Expr)) -> acc2031 -> Ast_Expr -> (acc2031, Ast_Expr) =
    lam f1033.
      lam acc2032.
        lam __sem_target1336.
          match
            __sem_target1336
          with
            p882
          in
          (acc2032, p882)
  let vIntPat_smapAccumL_Expr_Type: all acc2033. (acc2033 -> Ast_Type -> (acc2033, Ast_Type)) -> acc2033 -> Ast_Expr -> (acc2033, Ast_Expr) =
    lam f1034.
      lam acc2034.
        lam __sem_target1337.
          match
            __sem_target1337
          with
            p883
          in
          (acc2034, p883)
  let vIntPat_smapAccumL_Kind_Type: all acc2035. (acc2035 -> Ast_Type -> (acc2035, Ast_Type)) -> acc2035 -> Ast_Kind -> (acc2035, Ast_Kind) =
    lam f1035.
      lam acc2036.
        lam __sem_target1338.
          match
            __sem_target1338
          with
            s195
          in
          (acc2036, s195)
  let vIntPat_smapAccumL_Type_Type: all acc2037. (acc2037 -> Ast_Type -> (acc2037, Ast_Type)) -> acc2037 -> Ast_Type -> (acc2037, Ast_Type) =
    lam f1036.
      lam acc2038.
        lam __sem_target1339.
          match
            __sem_target1339
          with
            p884
          in
          (acc2038, p884)
  let vIntPat_mapAccumLPre_Expr_Expr: all acc2039. (acc2039 -> Ast_Expr -> (acc2039, Ast_Expr)) -> acc2039 -> Ast_Expr -> (acc2039, Ast_Expr) =
    lam f1037.
      lam acc2040.
        lam __sem_target1340.
          match
            __sem_target1340
          with
            expr257
          in
          match
              f1037 acc2040 expr257
            with
              (acc2041, expr258)
            in
            vIntPat_smapAccumL_Expr_Expr (vIntPat_mapAccumLPre_Expr_Expr f1037) acc2041 expr258
  let vIntPat_mapAccumLPost_Expr_Expr: all acc2042. (acc2042 -> Ast_Expr -> (acc2042, Ast_Expr)) -> acc2042 -> Ast_Expr -> (acc2042, Ast_Expr) =
    lam f1038.
      lam acc2043.
        lam __sem_target1341.
          match
            __sem_target1341
          with
            expr259
          in
          match
              vIntPat_smapAccumL_Expr_Expr (vIntPat_mapAccumLPost_Expr_Expr f1038) acc2043 expr259
            with
              (acc2044, expr260)
            in
            f1038 acc2044 expr260
  let vIntPat_smapAccumL_Expr_TypeLabel: all acc2045. (acc2045 -> Ast_Type -> (acc2045, Ast_Type)) -> acc2045 -> Ast_Expr -> (acc2045, Ast_Expr) =
    lam f1039.
      lam acc2046.
        lam __sem_target1342.
          match
            __sem_target1342
          with
            p885
          in
          match
              f1039 acc2046 (vIntPat_tyTm p885)
            with
              (acc2047, ty198)
            in
            (acc2047, vIntPat_withType ty198 p885)
in
con CharPat_PatChar: {ty: Ast_Type, val: Char, info: Info} -> Ast_Pat in
recursive
  let vCharPat_tyTm: Ast_Expr -> Ast_Type = lam x329.
      never
  let vCharPat_tyPat: Ast_Pat -> Ast_Type =
    lam __sem_target1251.
      match
        __sem_target1251
      with
        CharPat_PatChar r297
      in
      r297.ty
  let vCharPat_infoTm: Ast_Expr -> Info = lam x330.
      never
  let vCharPat_infoTy: Ast_Type -> Info = lam x331.
      never
  let vCharPat_infoPat: Ast_Pat -> Info =
    lam __sem_target1252.
      match
        __sem_target1252
      with
        CharPat_PatChar r298
      in
      r298.info
  let vCharPat_withInfo: Info -> Ast_Expr -> Ast_Expr = lam x332.
      never
  let vCharPat_withType: Ast_Type -> Ast_Expr -> Ast_Expr = lam x333.
      never
  let vCharPat_tyWithInfo: Info -> Ast_Type -> Ast_Type = lam x334.
      never
  let vCharPat_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target1253.
      match
        __sem_target1253
      with
        ty186
      in
      vCharPat_rapp_Type_Type vCharPat_unwrapType ty186
  let vCharPat_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target1254.
      match
        __sem_target1254
      with
        ty187
      in
      vCharPat_rapp_Type_Type vCharPat_inspectType ty187
  let vCharPat_withInfoPat: Info -> Ast_Pat -> Ast_Pat =
    lam info30.
      lam __sem_target1255.
        match
          __sem_target1255
        with
          CharPat_PatChar r299
        in
        CharPat_PatChar
            { r299 with info = info30 }
  let vCharPat_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat =
    lam ty188: Ast_Type.
      lam __sem_target1256.
        match
          __sem_target1256
        with
          CharPat_PatChar r300
        in
        CharPat_PatChar
            { r300 with ty = ty188 }
  let vCharPat_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f970.
      lam __sem_target1257.
        match
          __sem_target1257
        with
          p832
        in
        let res304 =
            vCharPat_smapAccumL_Pat_Pat
              (lam #var"416".
                 lam a655.
                   ({}, f970 a655))
              {}
              p832
          in
          res304.1
  let vCharPat_countPatNodes =
    lam count378.
      lam __sem_target1258.
        match
          __sem_target1258
        with
          t832
        in
        let count379 = addi count378 1 in
          let count380 = vCharPat_sfold_Pat_Pat vCharPat_countPatNodes count379 t832
          in
          let count381 =
            vCharPat_sfold_Pat_Expr vCharPat_countExprNodes count380 t832
          in
          let count382 =
            vCharPat_sfold_Pat_Type vCharPat_countTypeNodes count381 t832
          in
          count382
  let vCharPat_sfold_Pat_Pat: all acc1926. (acc1926 -> Ast_Pat -> acc1926) -> acc1926 -> Ast_Pat -> acc1926 =
    lam f971.
      lam acc1927.
        lam __sem_target1259.
          match
            __sem_target1259
          with
            p833
          in
          let res305 =
              vCharPat_smapAccumL_Pat_Pat
                (lam acc1928.
                   lam a656.
                     (f971 acc1928 a656, a656))
                acc1927
                p833
            in
            res305.0
  let vCharPat_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f972.
      lam __sem_target1260.
        match
          __sem_target1260
        with
          p834
        in
        match
            vCharPat_smapAccumL_Expr_Pat
              (lam #var"417".
                 lam a657.
                   ({}, f972 a657))
              {}
              p834
          with
            (_, p835)
          in
          p835
  let vCharPat_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f973.
      lam __sem_target1261.
        match
          __sem_target1261
        with
          p836
        in
        match
            vCharPat_smapAccumL_Pat_Expr
              (lam #var"418".
                 lam a658.
                   ({}, f973 a658))
              {}
              p836
          with
            (_, p837)
          in
          p837
  let vCharPat_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f974.
      lam __sem_target1262.
        match
          __sem_target1262
        with
          p838
        in
        match
            vCharPat_smapAccumL_Pat_Type
              (lam #var"419".
                 lam a659.
                   ({}, f974 a659))
              {}
              p838
          with
            (_, p839)
          in
          p839
  let vCharPat_countExprNodes =
    lam count383.
      lam __sem_target1263.
        match
          __sem_target1263
        with
          t833
        in
        let count384 = addi count383 1 in
          let count385 =
            vCharPat_sfold_Expr_Expr vCharPat_countExprNodes count384 t833
          in
          let count386 =
            vCharPat_sfold_Expr_Type vCharPat_countTypeNodes count385 t833
          in
          let count387 =
            vCharPat_sfold_Expr_TypeLabel vCharPat_countTypeNodes count386 t833
          in
          let count388 = vCharPat_sfold_Expr_Pat vCharPat_countPatNodes count387 t833
          in
          count388
  let vCharPat_countTypeNodes =
    lam count389.
      lam __sem_target1264.
        match
          __sem_target1264
        with
          t834
        in
        let count390 = addi count389 1 in
          let count391 =
            vCharPat_sfold_Type_Type vCharPat_countTypeNodes count390 t834
          in
          count391
  let vCharPat_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f975.
      lam __sem_target1265.
        match
          __sem_target1265
        with
          ty189
        in
        let res306 =
            vCharPat_rappAccumL_Type_Type
              (lam #var"420".
                 lam t835.
                   ({}, f975 t835))
              {}
              ty189
          in
          res306.1
  let vCharPat_sfold_Expr_Pat: all acc1929. (acc1929 -> Ast_Pat -> acc1929) -> acc1929 -> Ast_Expr -> acc1929 =
    lam f976.
      lam acc1930.
        lam __sem_target1266.
          match
            __sem_target1266
          with
            p840
          in
          match
              vCharPat_smapAccumL_Expr_Pat
                (lam acc1931.
                   lam a660.
                     (f976 acc1931 a660, a660))
                acc1930
                p840
            with
              (acc1932, _)
            in
            acc1932
  let vCharPat_sfold_Pat_Expr: all acc1933. (acc1933 -> Ast_Expr -> acc1933) -> acc1933 -> Ast_Pat -> acc1933 =
    lam f977.
      lam acc1934.
        lam __sem_target1267.
          match
            __sem_target1267
          with
            p841
          in
          match
              vCharPat_smapAccumL_Pat_Expr
                (lam acc1935.
                   lam a661.
                     (f977 acc1935 a661, a661))
                acc1934
                p841
            with
              (acc1936, _)
            in
            acc1936
  let vCharPat_sfold_Pat_Type: all acc1937. (acc1937 -> Ast_Type -> acc1937) -> acc1937 -> Ast_Pat -> acc1937 =
    lam f978.
      lam acc1938.
        lam __sem_target1268.
          match
            __sem_target1268
          with
            p842
          in
          match
              vCharPat_smapAccumL_Pat_Type
                (lam acc1939.
                   lam a662.
                     (f978 acc1939 a662, a662))
                acc1938
                p842
            with
              (acc1940, _)
            in
            acc1940
  let vCharPat_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f979.
      lam __sem_target1269.
        match
          __sem_target1269
        with
          p843
        in
        let res307 =
            vCharPat_smapAccumL_Expr_Expr
              (lam #var"421".
                 lam a663.
                   ({}, f979 a663))
              {}
              p843
          in
          res307.1
  let vCharPat_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f980.
      lam __sem_target1270.
        match
          __sem_target1270
        with
          p844
        in
        let res308 =
            vCharPat_smapAccumL_Expr_Type
              (lam #var"422".
                 lam a664.
                   ({}, f980 a664))
              {}
              p844
          in
          res308.1
  let vCharPat_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f981: Ast_Type -> Ast_Type.
      lam __sem_target1271.
        match
          __sem_target1271
        with
          s188
        in
        match
            vCharPat_smapAccumL_Kind_Type
              (lam #var"423".
                 lam x335.
                   ({}, f981 x335))
              {}
              s188
          with
            (_, s189)
          in
          s189
  let vCharPat_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f982.
      lam __sem_target1272.
        match
          __sem_target1272
        with
          p845
        in
        let res309 =
            vCharPat_smapAccumL_Type_Type
              (lam #var"424".
                 lam a665.
                   ({}, f982 a665))
              {}
              p845
          in
          res309.1
  let vCharPat_sfold_Expr_Expr: all acc1941. (acc1941 -> Ast_Expr -> acc1941) -> acc1941 -> Ast_Expr -> acc1941 =
    lam f983.
      lam acc1942.
        lam __sem_target1273.
          match
            __sem_target1273
          with
            p846
          in
          let res310 =
              vCharPat_smapAccumL_Expr_Expr
                (lam acc1943.
                   lam a666.
                     (f983 acc1943 a666, a666))
                acc1942
                p846
            in
            res310.0
  let vCharPat_sfold_Expr_Type: all acc1944. (acc1944 -> Ast_Type -> acc1944) -> acc1944 -> Ast_Expr -> acc1944 =
    lam f984.
      lam acc1945.
        lam __sem_target1274.
          match
            __sem_target1274
          with
            p847
          in
          let res311 =
              vCharPat_smapAccumL_Expr_Type
                (lam acc1946.
                   lam a667.
                     (f984 acc1946 a667, a667))
                acc1945
                p847
            in
            res311.0
  let vCharPat_sfold_Kind_Type: all acc1947. (acc1947 -> Ast_Type -> acc1947) -> acc1947 -> Ast_Kind -> acc1947 =
    lam f985: acc1947 -> Ast_Type -> acc1947.
      lam acc1948: acc1947.
        lam __sem_target1275.
          match
            __sem_target1275
          with
            s190
          in
          match
              vCharPat_smapAccumL_Kind_Type
                (lam a668.
                   lam x336.
                     (f985 a668 x336, x336))
                acc1948
                s190
            with
              (a669, _)
            in
            a669
  let vCharPat_sfold_Type_Type: all acc1949. (acc1949 -> Ast_Type -> acc1949) -> acc1949 -> Ast_Type -> acc1949 =
    lam f986.
      lam acc1950.
        lam __sem_target1276.
          match
            __sem_target1276
          with
            p848
          in
          let res312 =
              vCharPat_smapAccumL_Type_Type
                (lam acc1951.
                   lam a670.
                     (f986 acc1951 a670, a670))
                acc1950
                p848
            in
            res312.0
  let vCharPat_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f987.
      lam __sem_target1277.
        match
          __sem_target1277
        with
          expr243
        in
        let expr244 = f987 expr243 in
          vCharPat_smap_Expr_Expr (vCharPat_mapPre_Expr_Expr f987) expr244
  let vCharPat_foldPre_Expr_Expr: all acc1952. (acc1952 -> Ast_Expr -> acc1952) -> acc1952 -> Ast_Expr -> acc1952 =
    lam f988.
      lam acc1953.
        lam __sem_target1278.
          match
            __sem_target1278
          with
            expr245
          in
          let acc1954 = f988 acc1953 expr245 in
            vCharPat_sfold_Expr_Expr (vCharPat_foldPre_Expr_Expr f988) acc1954 expr245
  let vCharPat_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f989.
      lam __sem_target1279.
        match
          __sem_target1279
        with
          expr246
        in
        f989
            (vCharPat_smap_Expr_Expr (vCharPat_mapPost_Expr_Expr f989) expr246)
  let vCharPat_foldPost_Expr_Expr: all acc1955. (acc1955 -> Ast_Expr -> acc1955) -> acc1955 -> Ast_Expr -> acc1955 =
    lam f990.
      lam acc1956.
        lam __sem_target1280.
          match
            __sem_target1280
          with
            expr247
          in
          f990
              (vCharPat_sfold_Expr_Expr (vCharPat_foldPost_Expr_Expr f990) acc1956 expr247)
              expr247
  let vCharPat_smapAccumL_Pat_Pat: all acc1957. (acc1957 -> Ast_Pat -> (acc1957, Ast_Pat)) -> acc1957 -> Ast_Pat -> (acc1957, Ast_Pat) =
    lam f991.
      lam acc1958.
        lam __sem_target1281.
          match
            __sem_target1281
          with
            p849
          in
          (acc1958, p849)
  let vCharPat_smapAccumL_Expr_Pat: all acc1959. (acc1959 -> Ast_Pat -> (acc1959, Ast_Pat)) -> acc1959 -> Ast_Expr -> (acc1959, Ast_Expr) =
    lam f992.
      lam acc1960.
        lam __sem_target1282.
          match
            __sem_target1282
          with
            p850
          in
          (acc1960, p850)
  let vCharPat_smapAccumL_Pat_Expr: all acc1961. (acc1961 -> Ast_Expr -> (acc1961, Ast_Expr)) -> acc1961 -> Ast_Pat -> (acc1961, Ast_Pat) =
    lam f993.
      lam acc1962.
        lam __sem_target1283.
          match
            __sem_target1283
          with
            p851
          in
          (acc1962, p851)
  let vCharPat_smapAccumL_Pat_Type: all acc1963. (acc1963 -> Ast_Type -> (acc1963, Ast_Type)) -> acc1963 -> Ast_Pat -> (acc1963, Ast_Pat) =
    lam f994.
      lam acc1964.
        lam __sem_target1284.
          match
            __sem_target1284
          with
            p852
          in
          (acc1964, p852)
  let vCharPat_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f995.
      lam __sem_target1285.
        match
          __sem_target1285
        with
          p853
        in
        let res313 =
            vCharPat_smapAccumL_Expr_TypeLabel
              (lam #var"425".
                 lam a671.
                   ({}, f995 a671))
              {}
              p853
          in
          res313.1
  let vCharPat_rappAccumL_Type_Type: all acc1965. (acc1965 -> Ast_Type -> (acc1965, Ast_Type)) -> acc1965 -> Ast_Type -> (acc1965, Ast_Type) =
    lam f996.
      lam acc1966.
        lam __sem_target1286.
          match
            __sem_target1286
          with
            ty190
          in
          (acc1966, ty190)
  let vCharPat_sfold_Expr_TypeLabel: all acc1967. (acc1967 -> Ast_Type -> acc1967) -> acc1967 -> Ast_Expr -> acc1967 =
    lam f997.
      lam acc1968.
        lam __sem_target1287.
          match
            __sem_target1287
          with
            p854
          in
          let res314 =
              vCharPat_smapAccumL_Expr_TypeLabel
                (lam acc1969.
                   lam a672.
                     (f997 acc1969 a672, a672))
                acc1968
                p854
            in
            res314.0
  let vCharPat_smapAccumL_Expr_Expr: all acc1970. (acc1970 -> Ast_Expr -> (acc1970, Ast_Expr)) -> acc1970 -> Ast_Expr -> (acc1970, Ast_Expr) =
    lam f998.
      lam acc1971.
        lam __sem_target1288.
          match
            __sem_target1288
          with
            p855
          in
          (acc1971, p855)
  let vCharPat_smapAccumL_Expr_Type: all acc1972. (acc1972 -> Ast_Type -> (acc1972, Ast_Type)) -> acc1972 -> Ast_Expr -> (acc1972, Ast_Expr) =
    lam f999.
      lam acc1973.
        lam __sem_target1289.
          match
            __sem_target1289
          with
            p856
          in
          (acc1973, p856)
  let vCharPat_smapAccumL_Kind_Type: all acc1974. (acc1974 -> Ast_Type -> (acc1974, Ast_Type)) -> acc1974 -> Ast_Kind -> (acc1974, Ast_Kind) =
    lam f1000.
      lam acc1975.
        lam __sem_target1290.
          match
            __sem_target1290
          with
            s191
          in
          (acc1975, s191)
  let vCharPat_smapAccumL_Type_Type: all acc1976. (acc1976 -> Ast_Type -> (acc1976, Ast_Type)) -> acc1976 -> Ast_Type -> (acc1976, Ast_Type) =
    lam f1001.
      lam acc1977.
        lam __sem_target1291.
          match
            __sem_target1291
          with
            p857
          in
          (acc1977, p857)
  let vCharPat_mapAccumLPre_Expr_Expr: all acc1978. (acc1978 -> Ast_Expr -> (acc1978, Ast_Expr)) -> acc1978 -> Ast_Expr -> (acc1978, Ast_Expr) =
    lam f1002.
      lam acc1979.
        lam __sem_target1292.
          match
            __sem_target1292
          with
            expr248
          in
          match
              f1002 acc1979 expr248
            with
              (acc1980, expr249)
            in
            vCharPat_smapAccumL_Expr_Expr (vCharPat_mapAccumLPre_Expr_Expr f1002) acc1980 expr249
  let vCharPat_mapAccumLPost_Expr_Expr: all acc1981. (acc1981 -> Ast_Expr -> (acc1981, Ast_Expr)) -> acc1981 -> Ast_Expr -> (acc1981, Ast_Expr) =
    lam f1003.
      lam acc1982.
        lam __sem_target1293.
          match
            __sem_target1293
          with
            expr250
          in
          match
              vCharPat_smapAccumL_Expr_Expr (vCharPat_mapAccumLPost_Expr_Expr f1003) acc1982 expr250
            with
              (acc1983, expr251)
            in
            f1003 acc1983 expr251
  let vCharPat_smapAccumL_Expr_TypeLabel: all acc1984. (acc1984 -> Ast_Type -> (acc1984, Ast_Type)) -> acc1984 -> Ast_Expr -> (acc1984, Ast_Expr) =
    lam f1004.
      lam acc1985.
        lam __sem_target1294.
          match
            __sem_target1294
          with
            p858
          in
          match
              f1004 acc1985 (vCharPat_tyTm p858)
            with
              (acc1986, ty191)
            in
            (acc1986, vCharPat_withType ty191 p858)
in
con BoolPat_PatBool: {ty: Ast_Type, val: Bool, info: Info} -> Ast_Pat in
recursive
  let vBoolPat_tyTm: Ast_Expr -> Ast_Type =
    lam __sem_target1203.
      match
        __sem_target1203
      with
        ConstAst_TmConst t825
      in
      t825.ty
  let vBoolPat_tyPat: Ast_Pat -> Ast_Type =
    lam __sem_target1204.
      match
        __sem_target1204
      with
        BoolPat_PatBool r292
      in
      r292.ty
  let vBoolPat_infoTm: Ast_Expr -> Info =
    lam __sem_target1205.
      match
        __sem_target1205
      with
        ConstAst_TmConst r293
      in
      r293.info
  let vBoolPat_infoTy: Ast_Type -> Info = lam x325.
      never
  let vBoolPat_infoPat: Ast_Pat -> Info =
    lam __sem_target1206.
      match
        __sem_target1206
      with
        BoolPat_PatBool r294
      in
      r294.info
  let vBoolPat_withInfo: Info -> Ast_Expr -> Ast_Expr =
    lam info28.
      lam __sem_target1207.
        match
          __sem_target1207
        with
          ConstAst_TmConst t826
        in
        ConstAst_TmConst
            { t826 with info = info28 }
  let vBoolPat_withType: Ast_Type -> Ast_Expr -> Ast_Expr =
    lam ty179: Ast_Type.
      lam __sem_target1208.
        match
          __sem_target1208
        with
          ConstAst_TmConst t827
        in
        ConstAst_TmConst
            { t827 with ty = ty179 }
  let vBoolPat_tyWithInfo: Info -> Ast_Type -> Ast_Type = lam x326.
      never
  let vBoolPat_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target1209.
      match
        __sem_target1209
      with
        ty180
      in
      vBoolPat_rapp_Type_Type vBoolPat_unwrapType ty180
  let vBoolPat_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target1210.
      match
        __sem_target1210
      with
        ty181
      in
      vBoolPat_rapp_Type_Type vBoolPat_inspectType ty181
  let vBoolPat_withInfoPat: Info -> Ast_Pat -> Ast_Pat =
    lam info29.
      lam __sem_target1211.
        match
          __sem_target1211
        with
          BoolPat_PatBool r295
        in
        BoolPat_PatBool
            { r295 with info = info29 }
  let vBoolPat_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat =
    lam ty182: Ast_Type.
      lam __sem_target1212.
        match
          __sem_target1212
        with
          BoolPat_PatBool r296
        in
        BoolPat_PatBool
            { r296 with ty = ty182 }
  let vBoolPat_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f935.
      lam __sem_target1213.
        match
          __sem_target1213
        with
          p805
        in
        let res293 =
            vBoolPat_smapAccumL_Pat_Pat
              (lam #var"406".
                 lam a637.
                   ({}, f935 a637))
              {}
              p805
          in
          res293.1
  let vBoolPat_countPatNodes =
    lam count364.
      lam __sem_target1214.
        match
          __sem_target1214
        with
          t828
        in
        let count365 = addi count364 1 in
          let count366 = vBoolPat_sfold_Pat_Pat vBoolPat_countPatNodes count365 t828
          in
          let count367 =
            vBoolPat_sfold_Pat_Expr vBoolPat_countExprNodes count366 t828
          in
          let count368 =
            vBoolPat_sfold_Pat_Type vBoolPat_countTypeNodes count367 t828
          in
          count368
  let vBoolPat_sfold_Pat_Pat: all acc1865. (acc1865 -> Ast_Pat -> acc1865) -> acc1865 -> Ast_Pat -> acc1865 =
    lam f936.
      lam acc1866.
        lam __sem_target1215.
          match
            __sem_target1215
          with
            p806
          in
          let res294 =
              vBoolPat_smapAccumL_Pat_Pat
                (lam acc1867.
                   lam a638.
                     (f936 acc1867 a638, a638))
                acc1866
                p806
            in
            res294.0
  let vBoolPat_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f937.
      lam __sem_target1216.
        match
          __sem_target1216
        with
          p807
        in
        match
            vBoolPat_smapAccumL_Expr_Pat
              (lam #var"407".
                 lam a639.
                   ({}, f937 a639))
              {}
              p807
          with
            (_, p808)
          in
          p808
  let vBoolPat_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f938.
      lam __sem_target1217.
        match
          __sem_target1217
        with
          p809
        in
        match
            vBoolPat_smapAccumL_Pat_Expr
              (lam #var"408".
                 lam a640.
                   ({}, f938 a640))
              {}
              p809
          with
            (_, p810)
          in
          p810
  let vBoolPat_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f939.
      lam __sem_target1218.
        match
          __sem_target1218
        with
          p811
        in
        match
            vBoolPat_smapAccumL_Pat_Type
              (lam #var"409".
                 lam a641.
                   ({}, f939 a641))
              {}
              p811
          with
            (_, p812)
          in
          p812
  let vBoolPat_countExprNodes =
    lam count369.
      lam __sem_target1219.
        match
          __sem_target1219
        with
          t829
        in
        let count370 = addi count369 1 in
          let count371 =
            vBoolPat_sfold_Expr_Expr vBoolPat_countExprNodes count370 t829
          in
          let count372 =
            vBoolPat_sfold_Expr_Type vBoolPat_countTypeNodes count371 t829
          in
          let count373 =
            vBoolPat_sfold_Expr_TypeLabel vBoolPat_countTypeNodes count372 t829
          in
          let count374 = vBoolPat_sfold_Expr_Pat vBoolPat_countPatNodes count373 t829
          in
          count374
  let vBoolPat_countTypeNodes =
    lam count375.
      lam __sem_target1220.
        match
          __sem_target1220
        with
          t830
        in
        let count376 = addi count375 1 in
          let count377 =
            vBoolPat_sfold_Type_Type vBoolPat_countTypeNodes count376 t830
          in
          count377
  let vBoolPat_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f940.
      lam __sem_target1221.
        match
          __sem_target1221
        with
          ty183
        in
        let res295 =
            vBoolPat_rappAccumL_Type_Type
              (lam #var"410".
                 lam t831.
                   ({}, f940 t831))
              {}
              ty183
          in
          res295.1
  let vBoolPat_sfold_Expr_Pat: all acc1868. (acc1868 -> Ast_Pat -> acc1868) -> acc1868 -> Ast_Expr -> acc1868 =
    lam f941.
      lam acc1869.
        lam __sem_target1222.
          match
            __sem_target1222
          with
            p813
          in
          match
              vBoolPat_smapAccumL_Expr_Pat
                (lam acc1870.
                   lam a642.
                     (f941 acc1870 a642, a642))
                acc1869
                p813
            with
              (acc1871, _)
            in
            acc1871
  let vBoolPat_sfold_Pat_Expr: all acc1872. (acc1872 -> Ast_Expr -> acc1872) -> acc1872 -> Ast_Pat -> acc1872 =
    lam f942.
      lam acc1873.
        lam __sem_target1223.
          match
            __sem_target1223
          with
            p814
          in
          match
              vBoolPat_smapAccumL_Pat_Expr
                (lam acc1874.
                   lam a643.
                     (f942 acc1874 a643, a643))
                acc1873
                p814
            with
              (acc1875, _)
            in
            acc1875
  let vBoolPat_sfold_Pat_Type: all acc1876. (acc1876 -> Ast_Type -> acc1876) -> acc1876 -> Ast_Pat -> acc1876 =
    lam f943.
      lam acc1877.
        lam __sem_target1224.
          match
            __sem_target1224
          with
            p815
          in
          match
              vBoolPat_smapAccumL_Pat_Type
                (lam acc1878.
                   lam a644.
                     (f943 acc1878 a644, a644))
                acc1877
                p815
            with
              (acc1879, _)
            in
            acc1879
  let vBoolPat_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f944.
      lam __sem_target1225.
        match
          __sem_target1225
        with
          p816
        in
        let res296 =
            vBoolPat_smapAccumL_Expr_Expr
              (lam #var"411".
                 lam a645.
                   ({}, f944 a645))
              {}
              p816
          in
          res296.1
  let vBoolPat_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f945.
      lam __sem_target1226.
        match
          __sem_target1226
        with
          p817
        in
        let res297 =
            vBoolPat_smapAccumL_Expr_Type
              (lam #var"412".
                 lam a646.
                   ({}, f945 a646))
              {}
              p817
          in
          res297.1
  let vBoolPat_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f946: Ast_Type -> Ast_Type.
      lam __sem_target1227.
        match
          __sem_target1227
        with
          s184
        in
        match
            vBoolPat_smapAccumL_Kind_Type
              (lam #var"413".
                 lam x327.
                   ({}, f946 x327))
              {}
              s184
          with
            (_, s185)
          in
          s185
  let vBoolPat_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f947.
      lam __sem_target1228.
        match
          __sem_target1228
        with
          p818
        in
        let res298 =
            vBoolPat_smapAccumL_Type_Type
              (lam #var"414".
                 lam a647.
                   ({}, f947 a647))
              {}
              p818
          in
          res298.1
  let vBoolPat_sfold_Expr_Expr: all acc1880. (acc1880 -> Ast_Expr -> acc1880) -> acc1880 -> Ast_Expr -> acc1880 =
    lam f948.
      lam acc1881.
        lam __sem_target1229.
          match
            __sem_target1229
          with
            p819
          in
          let res299 =
              vBoolPat_smapAccumL_Expr_Expr
                (lam acc1882.
                   lam a648.
                     (f948 acc1882 a648, a648))
                acc1881
                p819
            in
            res299.0
  let vBoolPat_sfold_Expr_Type: all acc1883. (acc1883 -> Ast_Type -> acc1883) -> acc1883 -> Ast_Expr -> acc1883 =
    lam f949.
      lam acc1884.
        lam __sem_target1230.
          match
            __sem_target1230
          with
            p820
          in
          let res300 =
              vBoolPat_smapAccumL_Expr_Type
                (lam acc1885.
                   lam a649.
                     (f949 acc1885 a649, a649))
                acc1884
                p820
            in
            res300.0
  let vBoolPat_sfold_Kind_Type: all acc1886. (acc1886 -> Ast_Type -> acc1886) -> acc1886 -> Ast_Kind -> acc1886 =
    lam f950: acc1886 -> Ast_Type -> acc1886.
      lam acc1887: acc1886.
        lam __sem_target1231.
          match
            __sem_target1231
          with
            s186
          in
          match
              vBoolPat_smapAccumL_Kind_Type
                (lam a650.
                   lam x328.
                     (f950 a650 x328, x328))
                acc1887
                s186
            with
              (a651, _)
            in
            a651
  let vBoolPat_sfold_Type_Type: all acc1888. (acc1888 -> Ast_Type -> acc1888) -> acc1888 -> Ast_Type -> acc1888 =
    lam f951.
      lam acc1889.
        lam __sem_target1232.
          match
            __sem_target1232
          with
            p821
          in
          let res301 =
              vBoolPat_smapAccumL_Type_Type
                (lam acc1890.
                   lam a652.
                     (f951 acc1890 a652, a652))
                acc1889
                p821
            in
            res301.0
  let vBoolPat_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f952.
      lam __sem_target1233.
        match
          __sem_target1233
        with
          expr234
        in
        let expr235 = f952 expr234 in
          vBoolPat_smap_Expr_Expr (vBoolPat_mapPre_Expr_Expr f952) expr235
  let vBoolPat_foldPre_Expr_Expr: all acc1891. (acc1891 -> Ast_Expr -> acc1891) -> acc1891 -> Ast_Expr -> acc1891 =
    lam f953.
      lam acc1892.
        lam __sem_target1234.
          match
            __sem_target1234
          with
            expr236
          in
          let acc1893 = f953 acc1892 expr236 in
            vBoolPat_sfold_Expr_Expr (vBoolPat_foldPre_Expr_Expr f953) acc1893 expr236
  let vBoolPat_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f954.
      lam __sem_target1235.
        match
          __sem_target1235
        with
          expr237
        in
        f954
            (vBoolPat_smap_Expr_Expr (vBoolPat_mapPost_Expr_Expr f954) expr237)
  let vBoolPat_foldPost_Expr_Expr: all acc1894. (acc1894 -> Ast_Expr -> acc1894) -> acc1894 -> Ast_Expr -> acc1894 =
    lam f955.
      lam acc1895.
        lam __sem_target1236.
          match
            __sem_target1236
          with
            expr238
          in
          f955
              (vBoolPat_sfold_Expr_Expr (vBoolPat_foldPost_Expr_Expr f955) acc1895 expr238)
              expr238
  let vBoolPat_smapAccumL_Pat_Pat: all acc1896. (acc1896 -> Ast_Pat -> (acc1896, Ast_Pat)) -> acc1896 -> Ast_Pat -> (acc1896, Ast_Pat) =
    lam f956.
      lam acc1897.
        lam __sem_target1237.
          match
            __sem_target1237
          with
            p822
          in
          (acc1897, p822)
  let vBoolPat_smapAccumL_Expr_Pat: all acc1898. (acc1898 -> Ast_Pat -> (acc1898, Ast_Pat)) -> acc1898 -> Ast_Expr -> (acc1898, Ast_Expr) =
    lam f957.
      lam acc1899.
        lam __sem_target1238.
          match
            __sem_target1238
          with
            p823
          in
          (acc1899, p823)
  let vBoolPat_smapAccumL_Pat_Expr: all acc1900. (acc1900 -> Ast_Expr -> (acc1900, Ast_Expr)) -> acc1900 -> Ast_Pat -> (acc1900, Ast_Pat) =
    lam f958.
      lam acc1901.
        lam __sem_target1239.
          match
            __sem_target1239
          with
            p824
          in
          (acc1901, p824)
  let vBoolPat_smapAccumL_Pat_Type: all acc1902. (acc1902 -> Ast_Type -> (acc1902, Ast_Type)) -> acc1902 -> Ast_Pat -> (acc1902, Ast_Pat) =
    lam f959.
      lam acc1903.
        lam __sem_target1240.
          match
            __sem_target1240
          with
            p825
          in
          (acc1903, p825)
  let vBoolPat_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f960.
      lam __sem_target1241.
        match
          __sem_target1241
        with
          p826
        in
        let res302 =
            vBoolPat_smapAccumL_Expr_TypeLabel
              (lam #var"415".
                 lam a653.
                   ({}, f960 a653))
              {}
              p826
          in
          res302.1
  let vBoolPat_rappAccumL_Type_Type: all acc1904. (acc1904 -> Ast_Type -> (acc1904, Ast_Type)) -> acc1904 -> Ast_Type -> (acc1904, Ast_Type) =
    lam f961.
      lam acc1905.
        lam __sem_target1242.
          match
            __sem_target1242
          with
            ty184
          in
          (acc1905, ty184)
  let vBoolPat_sfold_Expr_TypeLabel: all acc1906. (acc1906 -> Ast_Type -> acc1906) -> acc1906 -> Ast_Expr -> acc1906 =
    lam f962.
      lam acc1907.
        lam __sem_target1243.
          match
            __sem_target1243
          with
            p827
          in
          let res303 =
              vBoolPat_smapAccumL_Expr_TypeLabel
                (lam acc1908.
                   lam a654.
                     (f962 acc1908 a654, a654))
                acc1907
                p827
            in
            res303.0
  let vBoolPat_smapAccumL_Expr_Expr: all acc1909. (acc1909 -> Ast_Expr -> (acc1909, Ast_Expr)) -> acc1909 -> Ast_Expr -> (acc1909, Ast_Expr) =
    lam f963.
      lam acc1910.
        lam __sem_target1244.
          match
            __sem_target1244
          with
            p828
          in
          (acc1910, p828)
  let vBoolPat_smapAccumL_Expr_Type: all acc1911. (acc1911 -> Ast_Type -> (acc1911, Ast_Type)) -> acc1911 -> Ast_Expr -> (acc1911, Ast_Expr) =
    lam f964.
      lam acc1912.
        lam __sem_target1245.
          match
            __sem_target1245
          with
            p829
          in
          (acc1912, p829)
  let vBoolPat_smapAccumL_Kind_Type: all acc1913. (acc1913 -> Ast_Type -> (acc1913, Ast_Type)) -> acc1913 -> Ast_Kind -> (acc1913, Ast_Kind) =
    lam f965.
      lam acc1914.
        lam __sem_target1246.
          match
            __sem_target1246
          with
            s187
          in
          (acc1914, s187)
  let vBoolPat_smapAccumL_Type_Type: all acc1915. (acc1915 -> Ast_Type -> (acc1915, Ast_Type)) -> acc1915 -> Ast_Type -> (acc1915, Ast_Type) =
    lam f966.
      lam acc1916.
        lam __sem_target1247.
          match
            __sem_target1247
          with
            p830
          in
          (acc1916, p830)
  let vBoolPat_mapAccumLPre_Expr_Expr: all acc1917. (acc1917 -> Ast_Expr -> (acc1917, Ast_Expr)) -> acc1917 -> Ast_Expr -> (acc1917, Ast_Expr) =
    lam f967.
      lam acc1918.
        lam __sem_target1248.
          match
            __sem_target1248
          with
            expr239
          in
          match
              f967 acc1918 expr239
            with
              (acc1919, expr240)
            in
            vBoolPat_smapAccumL_Expr_Expr (vBoolPat_mapAccumLPre_Expr_Expr f967) acc1919 expr240
  let vBoolPat_mapAccumLPost_Expr_Expr: all acc1920. (acc1920 -> Ast_Expr -> (acc1920, Ast_Expr)) -> acc1920 -> Ast_Expr -> (acc1920, Ast_Expr) =
    lam f968.
      lam acc1921.
        lam __sem_target1249.
          match
            __sem_target1249
          with
            expr241
          in
          match
              vBoolPat_smapAccumL_Expr_Expr (vBoolPat_mapAccumLPost_Expr_Expr f968) acc1921 expr241
            with
              (acc1922, expr242)
            in
            f968 acc1922 expr242
  let vBoolPat_smapAccumL_Expr_TypeLabel: all acc1923. (acc1923 -> Ast_Type -> (acc1923, Ast_Type)) -> acc1923 -> Ast_Expr -> (acc1923, Ast_Expr) =
    lam f969.
      lam acc1924.
        lam __sem_target1250.
          match
            __sem_target1250
          with
            p831
          in
          match
              f969 acc1924 (vBoolPat_tyTm p831)
            with
              (acc1925, ty185)
            in
            (acc1925, vBoolPat_withType ty185 p831)
in
con AndPat_PatAnd: {ty: Ast_Type, info: Info, lpat: Ast_Pat, rpat: Ast_Pat} -> Ast_Pat in
recursive
  let vAndPat_tyTm: Ast_Expr -> Ast_Type = lam x317.
      never
  let vAndPat_tyPat: Ast_Pat -> Ast_Type =
    lam __sem_target1159.
      match
        __sem_target1159
      with
        AndPat_PatAnd r288
      in
      r288.ty
  let vAndPat_infoTm: Ast_Expr -> Info = lam x318.
      never
  let vAndPat_infoTy: Ast_Type -> Info = lam x319.
      never
  let vAndPat_infoPat: Ast_Pat -> Info =
    lam __sem_target1160.
      match
        __sem_target1160
      with
        AndPat_PatAnd r289
      in
      r289.info
  let vAndPat_withInfo: Info -> Ast_Expr -> Ast_Expr = lam x320.
      never
  let vAndPat_withType: Ast_Type -> Ast_Expr -> Ast_Expr = lam x321.
      never
  let vAndPat_tyWithInfo: Info -> Ast_Type -> Ast_Type = lam x322.
      never
  let vAndPat_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target1161.
      match
        __sem_target1161
      with
        ty173
      in
      vAndPat_rapp_Type_Type vAndPat_unwrapType ty173
  let vAndPat_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target1162.
      match
        __sem_target1162
      with
        ty174
      in
      vAndPat_rapp_Type_Type vAndPat_inspectType ty174
  let vAndPat_withInfoPat: Info -> Ast_Pat -> Ast_Pat =
    lam info27.
      lam __sem_target1163.
        match
          __sem_target1163
        with
          AndPat_PatAnd r290
        in
        AndPat_PatAnd
            { r290 with info = info27 }
  let vAndPat_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat =
    lam ty175: Ast_Type.
      lam __sem_target1164.
        match
          __sem_target1164
        with
          AndPat_PatAnd r291
        in
        AndPat_PatAnd
            { r291 with ty = ty175 }
  let vAndPat_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f900.
      lam __sem_target1165.
        match
          __sem_target1165
        with
          p777
        in
        let res282 =
            vAndPat_smapAccumL_Pat_Pat
              (lam #var"396".
                 lam a619.
                   ({}, f900 a619))
              {}
              p777
          in
          res282.1
  let vAndPat_countPatNodes =
    lam count350.
      lam __sem_target1166.
        match
          __sem_target1166
        with
          t821
        in
        let count351 = addi count350 1 in
          let count352 = vAndPat_sfold_Pat_Pat vAndPat_countPatNodes count351 t821
          in
          let count353 = vAndPat_sfold_Pat_Expr vAndPat_countExprNodes count352 t821
          in
          let count354 = vAndPat_sfold_Pat_Type vAndPat_countTypeNodes count353 t821
          in
          count354
  let vAndPat_sfold_Pat_Pat: all acc1802. (acc1802 -> Ast_Pat -> acc1802) -> acc1802 -> Ast_Pat -> acc1802 =
    lam f901.
      lam acc1803.
        lam __sem_target1167.
          match
            __sem_target1167
          with
            p778
          in
          let res283 =
              vAndPat_smapAccumL_Pat_Pat
                (lam acc1804.
                   lam a620.
                     (f901 acc1804 a620, a620))
                acc1803
                p778
            in
            res283.0
  let vAndPat_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f902.
      lam __sem_target1168.
        match
          __sem_target1168
        with
          p779
        in
        match
            vAndPat_smapAccumL_Expr_Pat
              (lam #var"397".
                 lam a621.
                   ({}, f902 a621))
              {}
              p779
          with
            (_, p780)
          in
          p780
  let vAndPat_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f903.
      lam __sem_target1169.
        match
          __sem_target1169
        with
          p781
        in
        match
            vAndPat_smapAccumL_Pat_Expr
              (lam #var"398".
                 lam a622.
                   ({}, f903 a622))
              {}
              p781
          with
            (_, p782)
          in
          p782
  let vAndPat_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f904.
      lam __sem_target1170.
        match
          __sem_target1170
        with
          p783
        in
        match
            vAndPat_smapAccumL_Pat_Type
              (lam #var"399".
                 lam a623.
                   ({}, f904 a623))
              {}
              p783
          with
            (_, p784)
          in
          p784
  let vAndPat_countExprNodes =
    lam count355.
      lam __sem_target1171.
        match
          __sem_target1171
        with
          t822
        in
        let count356 = addi count355 1 in
          let count357 = vAndPat_sfold_Expr_Expr vAndPat_countExprNodes count356 t822
          in
          let count358 = vAndPat_sfold_Expr_Type vAndPat_countTypeNodes count357 t822
          in
          let count359 =
            vAndPat_sfold_Expr_TypeLabel vAndPat_countTypeNodes count358 t822
          in
          let count360 = vAndPat_sfold_Expr_Pat vAndPat_countPatNodes count359 t822
          in
          count360
  let vAndPat_countTypeNodes =
    lam count361.
      lam __sem_target1172.
        match
          __sem_target1172
        with
          t823
        in
        let count362 = addi count361 1 in
          let count363 = vAndPat_sfold_Type_Type vAndPat_countTypeNodes count362 t823
          in
          count363
  let vAndPat_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f905.
      lam __sem_target1173.
        match
          __sem_target1173
        with
          ty176
        in
        let res284 =
            vAndPat_rappAccumL_Type_Type
              (lam #var"400".
                 lam t824.
                   ({}, f905 t824))
              {}
              ty176
          in
          res284.1
  let vAndPat_sfold_Expr_Pat: all acc1805. (acc1805 -> Ast_Pat -> acc1805) -> acc1805 -> Ast_Expr -> acc1805 =
    lam f906.
      lam acc1806.
        lam __sem_target1174.
          match
            __sem_target1174
          with
            p785
          in
          match
              vAndPat_smapAccumL_Expr_Pat
                (lam acc1807.
                   lam a624.
                     (f906 acc1807 a624, a624))
                acc1806
                p785
            with
              (acc1808, _)
            in
            acc1808
  let vAndPat_sfold_Pat_Expr: all acc1809. (acc1809 -> Ast_Expr -> acc1809) -> acc1809 -> Ast_Pat -> acc1809 =
    lam f907.
      lam acc1810.
        lam __sem_target1175.
          match
            __sem_target1175
          with
            p786
          in
          match
              vAndPat_smapAccumL_Pat_Expr
                (lam acc1811.
                   lam a625.
                     (f907 acc1811 a625, a625))
                acc1810
                p786
            with
              (acc1812, _)
            in
            acc1812
  let vAndPat_sfold_Pat_Type: all acc1813. (acc1813 -> Ast_Type -> acc1813) -> acc1813 -> Ast_Pat -> acc1813 =
    lam f908.
      lam acc1814.
        lam __sem_target1176.
          match
            __sem_target1176
          with
            p787
          in
          match
              vAndPat_smapAccumL_Pat_Type
                (lam acc1815.
                   lam a626.
                     (f908 acc1815 a626, a626))
                acc1814
                p787
            with
              (acc1816, _)
            in
            acc1816
  let vAndPat_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f909.
      lam __sem_target1177.
        match
          __sem_target1177
        with
          p788
        in
        let res285 =
            vAndPat_smapAccumL_Expr_Expr
              (lam #var"401".
                 lam a627.
                   ({}, f909 a627))
              {}
              p788
          in
          res285.1
  let vAndPat_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f910.
      lam __sem_target1178.
        match
          __sem_target1178
        with
          p789
        in
        let res286 =
            vAndPat_smapAccumL_Expr_Type
              (lam #var"402".
                 lam a628.
                   ({}, f910 a628))
              {}
              p789
          in
          res286.1
  let vAndPat_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f911: Ast_Type -> Ast_Type.
      lam __sem_target1179.
        match
          __sem_target1179
        with
          s180
        in
        match
            vAndPat_smapAccumL_Kind_Type
              (lam #var"403".
                 lam x323.
                   ({}, f911 x323))
              {}
              s180
          with
            (_, s181)
          in
          s181
  let vAndPat_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f912.
      lam __sem_target1180.
        match
          __sem_target1180
        with
          p790
        in
        let res287 =
            vAndPat_smapAccumL_Type_Type
              (lam #var"404".
                 lam a629.
                   ({}, f912 a629))
              {}
              p790
          in
          res287.1
  let vAndPat_sfold_Expr_Expr: all acc1817. (acc1817 -> Ast_Expr -> acc1817) -> acc1817 -> Ast_Expr -> acc1817 =
    lam f913.
      lam acc1818.
        lam __sem_target1181.
          match
            __sem_target1181
          with
            p791
          in
          let res288 =
              vAndPat_smapAccumL_Expr_Expr
                (lam acc1819.
                   lam a630.
                     (f913 acc1819 a630, a630))
                acc1818
                p791
            in
            res288.0
  let vAndPat_sfold_Expr_Type: all acc1820. (acc1820 -> Ast_Type -> acc1820) -> acc1820 -> Ast_Expr -> acc1820 =
    lam f914.
      lam acc1821.
        lam __sem_target1182.
          match
            __sem_target1182
          with
            p792
          in
          let res289 =
              vAndPat_smapAccumL_Expr_Type
                (lam acc1822.
                   lam a631.
                     (f914 acc1822 a631, a631))
                acc1821
                p792
            in
            res289.0
  let vAndPat_sfold_Kind_Type: all acc1823. (acc1823 -> Ast_Type -> acc1823) -> acc1823 -> Ast_Kind -> acc1823 =
    lam f915: acc1823 -> Ast_Type -> acc1823.
      lam acc1824: acc1823.
        lam __sem_target1183.
          match
            __sem_target1183
          with
            s182
          in
          match
              vAndPat_smapAccumL_Kind_Type
                (lam a632.
                   lam x324.
                     (f915 a632 x324, x324))
                acc1824
                s182
            with
              (a633, _)
            in
            a633
  let vAndPat_sfold_Type_Type: all acc1825. (acc1825 -> Ast_Type -> acc1825) -> acc1825 -> Ast_Type -> acc1825 =
    lam f916.
      lam acc1826.
        lam __sem_target1184.
          match
            __sem_target1184
          with
            p793
          in
          let res290 =
              vAndPat_smapAccumL_Type_Type
                (lam acc1827.
                   lam a634.
                     (f916 acc1827 a634, a634))
                acc1826
                p793
            in
            res290.0
  let vAndPat_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f917.
      lam __sem_target1185.
        match
          __sem_target1185
        with
          expr225
        in
        let expr226 = f917 expr225 in
          vAndPat_smap_Expr_Expr (vAndPat_mapPre_Expr_Expr f917) expr226
  let vAndPat_foldPre_Expr_Expr: all acc1828. (acc1828 -> Ast_Expr -> acc1828) -> acc1828 -> Ast_Expr -> acc1828 =
    lam f918.
      lam acc1829.
        lam __sem_target1186.
          match
            __sem_target1186
          with
            expr227
          in
          let acc1830 = f918 acc1829 expr227 in
            vAndPat_sfold_Expr_Expr (vAndPat_foldPre_Expr_Expr f918) acc1830 expr227
  let vAndPat_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f919.
      lam __sem_target1187.
        match
          __sem_target1187
        with
          expr228
        in
        f919
            (vAndPat_smap_Expr_Expr (vAndPat_mapPost_Expr_Expr f919) expr228)
  let vAndPat_foldPost_Expr_Expr: all acc1831. (acc1831 -> Ast_Expr -> acc1831) -> acc1831 -> Ast_Expr -> acc1831 =
    lam f920.
      lam acc1832.
        lam __sem_target1188.
          match
            __sem_target1188
          with
            expr229
          in
          f920
              (vAndPat_sfold_Expr_Expr (vAndPat_foldPost_Expr_Expr f920) acc1832 expr229)
              expr229
  let vAndPat_smapAccumL_Pat_Pat: all acc1833. (acc1833 -> Ast_Pat -> (acc1833, Ast_Pat)) -> acc1833 -> Ast_Pat -> (acc1833, Ast_Pat) =
    lam f921.
      lam acc1834.
        lam __sem_target1189.
          match
            __sem_target1189
          with
            AndPat_PatAnd p794
          then
            match
              f921 acc1834 p794.lpat
            with
              (acc1835, lpat7)
            in
            match
                f921 acc1835 p794.rpat
              with
                (acc1836, rpat7)
              in
              (acc1836, AndPat_PatAnd
                  { p794 with lpat = lpat7, rpat = rpat7 })
          else match
            __sem_target1189
          with
            p795
          in
          (acc1834, p795)
  let vAndPat_smapAccumL_Expr_Pat: all acc1837. (acc1837 -> Ast_Pat -> (acc1837, Ast_Pat)) -> acc1837 -> Ast_Expr -> (acc1837, Ast_Expr) =
    lam f922.
      lam acc1838.
        lam __sem_target1190.
          match
            __sem_target1190
          with
            p796
          in
          (acc1838, p796)
  let vAndPat_smapAccumL_Pat_Expr: all acc1839. (acc1839 -> Ast_Expr -> (acc1839, Ast_Expr)) -> acc1839 -> Ast_Pat -> (acc1839, Ast_Pat) =
    lam f923.
      lam acc1840.
        lam __sem_target1191.
          match
            __sem_target1191
          with
            p797
          in
          (acc1840, p797)
  let vAndPat_smapAccumL_Pat_Type: all acc1841. (acc1841 -> Ast_Type -> (acc1841, Ast_Type)) -> acc1841 -> Ast_Pat -> (acc1841, Ast_Pat) =
    lam f924.
      lam acc1842.
        lam __sem_target1192.
          match
            __sem_target1192
          with
            p798
          in
          (acc1842, p798)
  let vAndPat_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f925.
      lam __sem_target1193.
        match
          __sem_target1193
        with
          p799
        in
        let res291 =
            vAndPat_smapAccumL_Expr_TypeLabel
              (lam #var"405".
                 lam a635.
                   ({}, f925 a635))
              {}
              p799
          in
          res291.1
  let vAndPat_rappAccumL_Type_Type: all acc1843. (acc1843 -> Ast_Type -> (acc1843, Ast_Type)) -> acc1843 -> Ast_Type -> (acc1843, Ast_Type) =
    lam f926.
      lam acc1844.
        lam __sem_target1194.
          match
            __sem_target1194
          with
            ty177
          in
          (acc1844, ty177)
  let vAndPat_sfold_Expr_TypeLabel: all acc1845. (acc1845 -> Ast_Type -> acc1845) -> acc1845 -> Ast_Expr -> acc1845 =
    lam f927.
      lam acc1846.
        lam __sem_target1195.
          match
            __sem_target1195
          with
            p800
          in
          let res292 =
              vAndPat_smapAccumL_Expr_TypeLabel
                (lam acc1847.
                   lam a636.
                     (f927 acc1847 a636, a636))
                acc1846
                p800
            in
            res292.0
  let vAndPat_smapAccumL_Expr_Expr: all acc1848. (acc1848 -> Ast_Expr -> (acc1848, Ast_Expr)) -> acc1848 -> Ast_Expr -> (acc1848, Ast_Expr) =
    lam f928.
      lam acc1849.
        lam __sem_target1196.
          match
            __sem_target1196
          with
            p801
          in
          (acc1849, p801)
  let vAndPat_smapAccumL_Expr_Type: all acc1850. (acc1850 -> Ast_Type -> (acc1850, Ast_Type)) -> acc1850 -> Ast_Expr -> (acc1850, Ast_Expr) =
    lam f929.
      lam acc1851.
        lam __sem_target1197.
          match
            __sem_target1197
          with
            p802
          in
          (acc1851, p802)
  let vAndPat_smapAccumL_Kind_Type: all acc1852. (acc1852 -> Ast_Type -> (acc1852, Ast_Type)) -> acc1852 -> Ast_Kind -> (acc1852, Ast_Kind) =
    lam f930.
      lam acc1853.
        lam __sem_target1198.
          match
            __sem_target1198
          with
            s183
          in
          (acc1853, s183)
  let vAndPat_smapAccumL_Type_Type: all acc1854. (acc1854 -> Ast_Type -> (acc1854, Ast_Type)) -> acc1854 -> Ast_Type -> (acc1854, Ast_Type) =
    lam f931.
      lam acc1855.
        lam __sem_target1199.
          match
            __sem_target1199
          with
            p803
          in
          (acc1855, p803)
  let vAndPat_mapAccumLPre_Expr_Expr: all acc1856. (acc1856 -> Ast_Expr -> (acc1856, Ast_Expr)) -> acc1856 -> Ast_Expr -> (acc1856, Ast_Expr) =
    lam f932.
      lam acc1857.
        lam __sem_target1200.
          match
            __sem_target1200
          with
            expr230
          in
          match
              f932 acc1857 expr230
            with
              (acc1858, expr231)
            in
            vAndPat_smapAccumL_Expr_Expr (vAndPat_mapAccumLPre_Expr_Expr f932) acc1858 expr231
  let vAndPat_mapAccumLPost_Expr_Expr: all acc1859. (acc1859 -> Ast_Expr -> (acc1859, Ast_Expr)) -> acc1859 -> Ast_Expr -> (acc1859, Ast_Expr) =
    lam f933.
      lam acc1860.
        lam __sem_target1201.
          match
            __sem_target1201
          with
            expr232
          in
          match
              vAndPat_smapAccumL_Expr_Expr (vAndPat_mapAccumLPost_Expr_Expr f933) acc1860 expr232
            with
              (acc1861, expr233)
            in
            f933 acc1861 expr233
  let vAndPat_smapAccumL_Expr_TypeLabel: all acc1862. (acc1862 -> Ast_Type -> (acc1862, Ast_Type)) -> acc1862 -> Ast_Expr -> (acc1862, Ast_Expr) =
    lam f934.
      lam acc1863.
        lam __sem_target1202.
          match
            __sem_target1202
          with
            p804
          in
          match
              f934 acc1863 (vAndPat_tyTm p804)
            with
              (acc1864, ty178)
            in
            (acc1864, vAndPat_withType ty178 p804)
in
con OrPat_PatOr: {ty: Ast_Type, info: Info, lpat: Ast_Pat, rpat: Ast_Pat} -> Ast_Pat in
recursive
  let vOrPat_tyTm: Ast_Expr -> Ast_Type = lam x309.
      never
  let vOrPat_tyPat: Ast_Pat -> Ast_Type =
    lam __sem_target1115.
      match
        __sem_target1115
      with
        OrPat_PatOr r284
      in
      r284.ty
  let vOrPat_infoTm: Ast_Expr -> Info = lam x310.
      never
  let vOrPat_infoTy: Ast_Type -> Info = lam x311.
      never
  let vOrPat_infoPat: Ast_Pat -> Info =
    lam __sem_target1116.
      match
        __sem_target1116
      with
        OrPat_PatOr r285
      in
      r285.info
  let vOrPat_withInfo: Info -> Ast_Expr -> Ast_Expr = lam x312.
      never
  let vOrPat_withType: Ast_Type -> Ast_Expr -> Ast_Expr = lam x313.
      never
  let vOrPat_tyWithInfo: Info -> Ast_Type -> Ast_Type = lam x314.
      never
  let vOrPat_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target1117.
      match
        __sem_target1117
      with
        ty167
      in
      vOrPat_rapp_Type_Type vOrPat_unwrapType ty167
  let vOrPat_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target1118.
      match
        __sem_target1118
      with
        ty168
      in
      vOrPat_rapp_Type_Type vOrPat_inspectType ty168
  let vOrPat_withInfoPat: Info -> Ast_Pat -> Ast_Pat =
    lam info26.
      lam __sem_target1119.
        match
          __sem_target1119
        with
          OrPat_PatOr r286
        in
        OrPat_PatOr
            { r286 with info = info26 }
  let vOrPat_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat =
    lam ty169: Ast_Type.
      lam __sem_target1120.
        match
          __sem_target1120
        with
          OrPat_PatOr r287
        in
        OrPat_PatOr
            { r287 with ty = ty169 }
  let vOrPat_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f865.
      lam __sem_target1121.
        match
          __sem_target1121
        with
          p749
        in
        let res271 =
            vOrPat_smapAccumL_Pat_Pat
              (lam #var"386".
                 lam a601.
                   ({}, f865 a601))
              {}
              p749
          in
          res271.1
  let vOrPat_countPatNodes =
    lam count336.
      lam __sem_target1122.
        match
          __sem_target1122
        with
          t817
        in
        let count337 = addi count336 1 in
          let count338 = vOrPat_sfold_Pat_Pat vOrPat_countPatNodes count337 t817
          in
          let count339 = vOrPat_sfold_Pat_Expr vOrPat_countExprNodes count338 t817
          in
          let count340 = vOrPat_sfold_Pat_Type vOrPat_countTypeNodes count339 t817
          in
          count340
  let vOrPat_sfold_Pat_Pat: all acc1739. (acc1739 -> Ast_Pat -> acc1739) -> acc1739 -> Ast_Pat -> acc1739 =
    lam f866.
      lam acc1740.
        lam __sem_target1123.
          match
            __sem_target1123
          with
            p750
          in
          let res272 =
              vOrPat_smapAccumL_Pat_Pat
                (lam acc1741.
                   lam a602.
                     (f866 acc1741 a602, a602))
                acc1740
                p750
            in
            res272.0
  let vOrPat_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f867.
      lam __sem_target1124.
        match
          __sem_target1124
        with
          p751
        in
        match
            vOrPat_smapAccumL_Expr_Pat
              (lam #var"387".
                 lam a603.
                   ({}, f867 a603))
              {}
              p751
          with
            (_, p752)
          in
          p752
  let vOrPat_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f868.
      lam __sem_target1125.
        match
          __sem_target1125
        with
          p753
        in
        match
            vOrPat_smapAccumL_Pat_Expr
              (lam #var"388".
                 lam a604.
                   ({}, f868 a604))
              {}
              p753
          with
            (_, p754)
          in
          p754
  let vOrPat_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f869.
      lam __sem_target1126.
        match
          __sem_target1126
        with
          p755
        in
        match
            vOrPat_smapAccumL_Pat_Type
              (lam #var"389".
                 lam a605.
                   ({}, f869 a605))
              {}
              p755
          with
            (_, p756)
          in
          p756
  let vOrPat_countExprNodes =
    lam count341.
      lam __sem_target1127.
        match
          __sem_target1127
        with
          t818
        in
        let count342 = addi count341 1 in
          let count343 = vOrPat_sfold_Expr_Expr vOrPat_countExprNodes count342 t818
          in
          let count344 = vOrPat_sfold_Expr_Type vOrPat_countTypeNodes count343 t818
          in
          let count345 =
            vOrPat_sfold_Expr_TypeLabel vOrPat_countTypeNodes count344 t818
          in
          let count346 = vOrPat_sfold_Expr_Pat vOrPat_countPatNodes count345 t818
          in
          count346
  let vOrPat_countTypeNodes =
    lam count347.
      lam __sem_target1128.
        match
          __sem_target1128
        with
          t819
        in
        let count348 = addi count347 1 in
          let count349 = vOrPat_sfold_Type_Type vOrPat_countTypeNodes count348 t819
          in
          count349
  let vOrPat_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f870.
      lam __sem_target1129.
        match
          __sem_target1129
        with
          ty170
        in
        let res273 =
            vOrPat_rappAccumL_Type_Type
              (lam #var"390".
                 lam t820.
                   ({}, f870 t820))
              {}
              ty170
          in
          res273.1
  let vOrPat_sfold_Expr_Pat: all acc1742. (acc1742 -> Ast_Pat -> acc1742) -> acc1742 -> Ast_Expr -> acc1742 =
    lam f871.
      lam acc1743.
        lam __sem_target1130.
          match
            __sem_target1130
          with
            p757
          in
          match
              vOrPat_smapAccumL_Expr_Pat
                (lam acc1744.
                   lam a606.
                     (f871 acc1744 a606, a606))
                acc1743
                p757
            with
              (acc1745, _)
            in
            acc1745
  let vOrPat_sfold_Pat_Expr: all acc1746. (acc1746 -> Ast_Expr -> acc1746) -> acc1746 -> Ast_Pat -> acc1746 =
    lam f872.
      lam acc1747.
        lam __sem_target1131.
          match
            __sem_target1131
          with
            p758
          in
          match
              vOrPat_smapAccumL_Pat_Expr
                (lam acc1748.
                   lam a607.
                     (f872 acc1748 a607, a607))
                acc1747
                p758
            with
              (acc1749, _)
            in
            acc1749
  let vOrPat_sfold_Pat_Type: all acc1750. (acc1750 -> Ast_Type -> acc1750) -> acc1750 -> Ast_Pat -> acc1750 =
    lam f873.
      lam acc1751.
        lam __sem_target1132.
          match
            __sem_target1132
          with
            p759
          in
          match
              vOrPat_smapAccumL_Pat_Type
                (lam acc1752.
                   lam a608.
                     (f873 acc1752 a608, a608))
                acc1751
                p759
            with
              (acc1753, _)
            in
            acc1753
  let vOrPat_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f874.
      lam __sem_target1133.
        match
          __sem_target1133
        with
          p760
        in
        let res274 =
            vOrPat_smapAccumL_Expr_Expr
              (lam #var"391".
                 lam a609.
                   ({}, f874 a609))
              {}
              p760
          in
          res274.1
  let vOrPat_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f875.
      lam __sem_target1134.
        match
          __sem_target1134
        with
          p761
        in
        let res275 =
            vOrPat_smapAccumL_Expr_Type
              (lam #var"392".
                 lam a610.
                   ({}, f875 a610))
              {}
              p761
          in
          res275.1
  let vOrPat_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f876: Ast_Type -> Ast_Type.
      lam __sem_target1135.
        match
          __sem_target1135
        with
          s176
        in
        match
            vOrPat_smapAccumL_Kind_Type
              (lam #var"393".
                 lam x315.
                   ({}, f876 x315))
              {}
              s176
          with
            (_, s177)
          in
          s177
  let vOrPat_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f877.
      lam __sem_target1136.
        match
          __sem_target1136
        with
          p762
        in
        let res276 =
            vOrPat_smapAccumL_Type_Type
              (lam #var"394".
                 lam a611.
                   ({}, f877 a611))
              {}
              p762
          in
          res276.1
  let vOrPat_sfold_Expr_Expr: all acc1754. (acc1754 -> Ast_Expr -> acc1754) -> acc1754 -> Ast_Expr -> acc1754 =
    lam f878.
      lam acc1755.
        lam __sem_target1137.
          match
            __sem_target1137
          with
            p763
          in
          let res277 =
              vOrPat_smapAccumL_Expr_Expr
                (lam acc1756.
                   lam a612.
                     (f878 acc1756 a612, a612))
                acc1755
                p763
            in
            res277.0
  let vOrPat_sfold_Expr_Type: all acc1757. (acc1757 -> Ast_Type -> acc1757) -> acc1757 -> Ast_Expr -> acc1757 =
    lam f879.
      lam acc1758.
        lam __sem_target1138.
          match
            __sem_target1138
          with
            p764
          in
          let res278 =
              vOrPat_smapAccumL_Expr_Type
                (lam acc1759.
                   lam a613.
                     (f879 acc1759 a613, a613))
                acc1758
                p764
            in
            res278.0
  let vOrPat_sfold_Kind_Type: all acc1760. (acc1760 -> Ast_Type -> acc1760) -> acc1760 -> Ast_Kind -> acc1760 =
    lam f880: acc1760 -> Ast_Type -> acc1760.
      lam acc1761: acc1760.
        lam __sem_target1139.
          match
            __sem_target1139
          with
            s178
          in
          match
              vOrPat_smapAccumL_Kind_Type
                (lam a614.
                   lam x316.
                     (f880 a614 x316, x316))
                acc1761
                s178
            with
              (a615, _)
            in
            a615
  let vOrPat_sfold_Type_Type: all acc1762. (acc1762 -> Ast_Type -> acc1762) -> acc1762 -> Ast_Type -> acc1762 =
    lam f881.
      lam acc1763.
        lam __sem_target1140.
          match
            __sem_target1140
          with
            p765
          in
          let res279 =
              vOrPat_smapAccumL_Type_Type
                (lam acc1764.
                   lam a616.
                     (f881 acc1764 a616, a616))
                acc1763
                p765
            in
            res279.0
  let vOrPat_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f882.
      lam __sem_target1141.
        match
          __sem_target1141
        with
          expr216
        in
        let expr217 = f882 expr216 in
          vOrPat_smap_Expr_Expr (vOrPat_mapPre_Expr_Expr f882) expr217
  let vOrPat_foldPre_Expr_Expr: all acc1765. (acc1765 -> Ast_Expr -> acc1765) -> acc1765 -> Ast_Expr -> acc1765 =
    lam f883.
      lam acc1766.
        lam __sem_target1142.
          match
            __sem_target1142
          with
            expr218
          in
          let acc1767 = f883 acc1766 expr218 in
            vOrPat_sfold_Expr_Expr (vOrPat_foldPre_Expr_Expr f883) acc1767 expr218
  let vOrPat_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f884.
      lam __sem_target1143.
        match
          __sem_target1143
        with
          expr219
        in
        f884
            (vOrPat_smap_Expr_Expr (vOrPat_mapPost_Expr_Expr f884) expr219)
  let vOrPat_foldPost_Expr_Expr: all acc1768. (acc1768 -> Ast_Expr -> acc1768) -> acc1768 -> Ast_Expr -> acc1768 =
    lam f885.
      lam acc1769.
        lam __sem_target1144.
          match
            __sem_target1144
          with
            expr220
          in
          f885
              (vOrPat_sfold_Expr_Expr (vOrPat_foldPost_Expr_Expr f885) acc1769 expr220)
              expr220
  let vOrPat_smapAccumL_Pat_Pat: all acc1770. (acc1770 -> Ast_Pat -> (acc1770, Ast_Pat)) -> acc1770 -> Ast_Pat -> (acc1770, Ast_Pat) =
    lam f886.
      lam acc1771.
        lam __sem_target1145.
          match
            __sem_target1145
          with
            OrPat_PatOr p766
          then
            match
              f886 acc1771 p766.lpat
            with
              (acc1772, lpat6)
            in
            match
                f886 acc1772 p766.rpat
              with
                (acc1773, rpat6)
              in
              (acc1773, OrPat_PatOr
                  { p766 with lpat = lpat6, rpat = rpat6 })
          else match
            __sem_target1145
          with
            p767
          in
          (acc1771, p767)
  let vOrPat_smapAccumL_Expr_Pat: all acc1774. (acc1774 -> Ast_Pat -> (acc1774, Ast_Pat)) -> acc1774 -> Ast_Expr -> (acc1774, Ast_Expr) =
    lam f887.
      lam acc1775.
        lam __sem_target1146.
          match
            __sem_target1146
          with
            p768
          in
          (acc1775, p768)
  let vOrPat_smapAccumL_Pat_Expr: all acc1776. (acc1776 -> Ast_Expr -> (acc1776, Ast_Expr)) -> acc1776 -> Ast_Pat -> (acc1776, Ast_Pat) =
    lam f888.
      lam acc1777.
        lam __sem_target1147.
          match
            __sem_target1147
          with
            p769
          in
          (acc1777, p769)
  let vOrPat_smapAccumL_Pat_Type: all acc1778. (acc1778 -> Ast_Type -> (acc1778, Ast_Type)) -> acc1778 -> Ast_Pat -> (acc1778, Ast_Pat) =
    lam f889.
      lam acc1779.
        lam __sem_target1148.
          match
            __sem_target1148
          with
            p770
          in
          (acc1779, p770)
  let vOrPat_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f890.
      lam __sem_target1149.
        match
          __sem_target1149
        with
          p771
        in
        let res280 =
            vOrPat_smapAccumL_Expr_TypeLabel
              (lam #var"395".
                 lam a617.
                   ({}, f890 a617))
              {}
              p771
          in
          res280.1
  let vOrPat_rappAccumL_Type_Type: all acc1780. (acc1780 -> Ast_Type -> (acc1780, Ast_Type)) -> acc1780 -> Ast_Type -> (acc1780, Ast_Type) =
    lam f891.
      lam acc1781.
        lam __sem_target1150.
          match
            __sem_target1150
          with
            ty171
          in
          (acc1781, ty171)
  let vOrPat_sfold_Expr_TypeLabel: all acc1782. (acc1782 -> Ast_Type -> acc1782) -> acc1782 -> Ast_Expr -> acc1782 =
    lam f892.
      lam acc1783.
        lam __sem_target1151.
          match
            __sem_target1151
          with
            p772
          in
          let res281 =
              vOrPat_smapAccumL_Expr_TypeLabel
                (lam acc1784.
                   lam a618.
                     (f892 acc1784 a618, a618))
                acc1783
                p772
            in
            res281.0
  let vOrPat_smapAccumL_Expr_Expr: all acc1785. (acc1785 -> Ast_Expr -> (acc1785, Ast_Expr)) -> acc1785 -> Ast_Expr -> (acc1785, Ast_Expr) =
    lam f893.
      lam acc1786.
        lam __sem_target1152.
          match
            __sem_target1152
          with
            p773
          in
          (acc1786, p773)
  let vOrPat_smapAccumL_Expr_Type: all acc1787. (acc1787 -> Ast_Type -> (acc1787, Ast_Type)) -> acc1787 -> Ast_Expr -> (acc1787, Ast_Expr) =
    lam f894.
      lam acc1788.
        lam __sem_target1153.
          match
            __sem_target1153
          with
            p774
          in
          (acc1788, p774)
  let vOrPat_smapAccumL_Kind_Type: all acc1789. (acc1789 -> Ast_Type -> (acc1789, Ast_Type)) -> acc1789 -> Ast_Kind -> (acc1789, Ast_Kind) =
    lam f895.
      lam acc1790.
        lam __sem_target1154.
          match
            __sem_target1154
          with
            s179
          in
          (acc1790, s179)
  let vOrPat_smapAccumL_Type_Type: all acc1791. (acc1791 -> Ast_Type -> (acc1791, Ast_Type)) -> acc1791 -> Ast_Type -> (acc1791, Ast_Type) =
    lam f896.
      lam acc1792.
        lam __sem_target1155.
          match
            __sem_target1155
          with
            p775
          in
          (acc1792, p775)
  let vOrPat_mapAccumLPre_Expr_Expr: all acc1793. (acc1793 -> Ast_Expr -> (acc1793, Ast_Expr)) -> acc1793 -> Ast_Expr -> (acc1793, Ast_Expr) =
    lam f897.
      lam acc1794.
        lam __sem_target1156.
          match
            __sem_target1156
          with
            expr221
          in
          match
              f897 acc1794 expr221
            with
              (acc1795, expr222)
            in
            vOrPat_smapAccumL_Expr_Expr (vOrPat_mapAccumLPre_Expr_Expr f897) acc1795 expr222
  let vOrPat_mapAccumLPost_Expr_Expr: all acc1796. (acc1796 -> Ast_Expr -> (acc1796, Ast_Expr)) -> acc1796 -> Ast_Expr -> (acc1796, Ast_Expr) =
    lam f898.
      lam acc1797.
        lam __sem_target1157.
          match
            __sem_target1157
          with
            expr223
          in
          match
              vOrPat_smapAccumL_Expr_Expr (vOrPat_mapAccumLPost_Expr_Expr f898) acc1797 expr223
            with
              (acc1798, expr224)
            in
            f898 acc1798 expr224
  let vOrPat_smapAccumL_Expr_TypeLabel: all acc1799. (acc1799 -> Ast_Type -> (acc1799, Ast_Type)) -> acc1799 -> Ast_Expr -> (acc1799, Ast_Expr) =
    lam f899.
      lam acc1800.
        lam __sem_target1158.
          match
            __sem_target1158
          with
            p776
          in
          match
              f899 acc1800 (vOrPat_tyTm p776)
            with
              (acc1801, ty172)
            in
            (acc1801, vOrPat_withType ty172 p776)
in
con NotPat_PatNot: {ty: Ast_Type, info: Info, subpat: Ast_Pat} -> Ast_Pat in
recursive
  let vNotPat_tyTm: Ast_Expr -> Ast_Type = lam x301.
      never
  let vNotPat_tyPat: Ast_Pat -> Ast_Type =
    lam __sem_target1071.
      match
        __sem_target1071
      with
        NotPat_PatNot r280
      in
      r280.ty
  let vNotPat_infoTm: Ast_Expr -> Info = lam x302.
      never
  let vNotPat_infoTy: Ast_Type -> Info = lam x303.
      never
  let vNotPat_infoPat: Ast_Pat -> Info =
    lam __sem_target1072.
      match
        __sem_target1072
      with
        NotPat_PatNot r281
      in
      r281.info
  let vNotPat_withInfo: Info -> Ast_Expr -> Ast_Expr = lam x304.
      never
  let vNotPat_withType: Ast_Type -> Ast_Expr -> Ast_Expr = lam x305.
      never
  let vNotPat_tyWithInfo: Info -> Ast_Type -> Ast_Type = lam x306.
      never
  let vNotPat_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target1073.
      match
        __sem_target1073
      with
        ty161
      in
      vNotPat_rapp_Type_Type vNotPat_unwrapType ty161
  let vNotPat_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target1074.
      match
        __sem_target1074
      with
        ty162
      in
      vNotPat_rapp_Type_Type vNotPat_inspectType ty162
  let vNotPat_withInfoPat: Info -> Ast_Pat -> Ast_Pat =
    lam info25.
      lam __sem_target1075.
        match
          __sem_target1075
        with
          NotPat_PatNot r282
        in
        NotPat_PatNot
            { r282 with info = info25 }
  let vNotPat_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat =
    lam ty163: Ast_Type.
      lam __sem_target1076.
        match
          __sem_target1076
        with
          NotPat_PatNot r283
        in
        NotPat_PatNot
            { r283 with ty = ty163 }
  let vNotPat_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f830.
      lam __sem_target1077.
        match
          __sem_target1077
        with
          p721
        in
        let res260 =
            vNotPat_smapAccumL_Pat_Pat
              (lam #var"376".
                 lam a583.
                   ({}, f830 a583))
              {}
              p721
          in
          res260.1
  let vNotPat_countPatNodes =
    lam count322.
      lam __sem_target1078.
        match
          __sem_target1078
        with
          t813
        in
        let count323 = addi count322 1 in
          let count324 = vNotPat_sfold_Pat_Pat vNotPat_countPatNodes count323 t813
          in
          let count325 = vNotPat_sfold_Pat_Expr vNotPat_countExprNodes count324 t813
          in
          let count326 = vNotPat_sfold_Pat_Type vNotPat_countTypeNodes count325 t813
          in
          count326
  let vNotPat_sfold_Pat_Pat: all acc1677. (acc1677 -> Ast_Pat -> acc1677) -> acc1677 -> Ast_Pat -> acc1677 =
    lam f831.
      lam acc1678.
        lam __sem_target1079.
          match
            __sem_target1079
          with
            p722
          in
          let res261 =
              vNotPat_smapAccumL_Pat_Pat
                (lam acc1679.
                   lam a584.
                     (f831 acc1679 a584, a584))
                acc1678
                p722
            in
            res261.0
  let vNotPat_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f832.
      lam __sem_target1080.
        match
          __sem_target1080
        with
          p723
        in
        match
            vNotPat_smapAccumL_Expr_Pat
              (lam #var"377".
                 lam a585.
                   ({}, f832 a585))
              {}
              p723
          with
            (_, p724)
          in
          p724
  let vNotPat_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f833.
      lam __sem_target1081.
        match
          __sem_target1081
        with
          p725
        in
        match
            vNotPat_smapAccumL_Pat_Expr
              (lam #var"378".
                 lam a586.
                   ({}, f833 a586))
              {}
              p725
          with
            (_, p726)
          in
          p726
  let vNotPat_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f834.
      lam __sem_target1082.
        match
          __sem_target1082
        with
          p727
        in
        match
            vNotPat_smapAccumL_Pat_Type
              (lam #var"379".
                 lam a587.
                   ({}, f834 a587))
              {}
              p727
          with
            (_, p728)
          in
          p728
  let vNotPat_countExprNodes =
    lam count327.
      lam __sem_target1083.
        match
          __sem_target1083
        with
          t814
        in
        let count328 = addi count327 1 in
          let count329 = vNotPat_sfold_Expr_Expr vNotPat_countExprNodes count328 t814
          in
          let count330 = vNotPat_sfold_Expr_Type vNotPat_countTypeNodes count329 t814
          in
          let count331 =
            vNotPat_sfold_Expr_TypeLabel vNotPat_countTypeNodes count330 t814
          in
          let count332 = vNotPat_sfold_Expr_Pat vNotPat_countPatNodes count331 t814
          in
          count332
  let vNotPat_countTypeNodes =
    lam count333.
      lam __sem_target1084.
        match
          __sem_target1084
        with
          t815
        in
        let count334 = addi count333 1 in
          let count335 = vNotPat_sfold_Type_Type vNotPat_countTypeNodes count334 t815
          in
          count335
  let vNotPat_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f835.
      lam __sem_target1085.
        match
          __sem_target1085
        with
          ty164
        in
        let res262 =
            vNotPat_rappAccumL_Type_Type
              (lam #var"380".
                 lam t816.
                   ({}, f835 t816))
              {}
              ty164
          in
          res262.1
  let vNotPat_sfold_Expr_Pat: all acc1680. (acc1680 -> Ast_Pat -> acc1680) -> acc1680 -> Ast_Expr -> acc1680 =
    lam f836.
      lam acc1681.
        lam __sem_target1086.
          match
            __sem_target1086
          with
            p729
          in
          match
              vNotPat_smapAccumL_Expr_Pat
                (lam acc1682.
                   lam a588.
                     (f836 acc1682 a588, a588))
                acc1681
                p729
            with
              (acc1683, _)
            in
            acc1683
  let vNotPat_sfold_Pat_Expr: all acc1684. (acc1684 -> Ast_Expr -> acc1684) -> acc1684 -> Ast_Pat -> acc1684 =
    lam f837.
      lam acc1685.
        lam __sem_target1087.
          match
            __sem_target1087
          with
            p730
          in
          match
              vNotPat_smapAccumL_Pat_Expr
                (lam acc1686.
                   lam a589.
                     (f837 acc1686 a589, a589))
                acc1685
                p730
            with
              (acc1687, _)
            in
            acc1687
  let vNotPat_sfold_Pat_Type: all acc1688. (acc1688 -> Ast_Type -> acc1688) -> acc1688 -> Ast_Pat -> acc1688 =
    lam f838.
      lam acc1689.
        lam __sem_target1088.
          match
            __sem_target1088
          with
            p731
          in
          match
              vNotPat_smapAccumL_Pat_Type
                (lam acc1690.
                   lam a590.
                     (f838 acc1690 a590, a590))
                acc1689
                p731
            with
              (acc1691, _)
            in
            acc1691
  let vNotPat_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f839.
      lam __sem_target1089.
        match
          __sem_target1089
        with
          p732
        in
        let res263 =
            vNotPat_smapAccumL_Expr_Expr
              (lam #var"381".
                 lam a591.
                   ({}, f839 a591))
              {}
              p732
          in
          res263.1
  let vNotPat_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f840.
      lam __sem_target1090.
        match
          __sem_target1090
        with
          p733
        in
        let res264 =
            vNotPat_smapAccumL_Expr_Type
              (lam #var"382".
                 lam a592.
                   ({}, f840 a592))
              {}
              p733
          in
          res264.1
  let vNotPat_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f841: Ast_Type -> Ast_Type.
      lam __sem_target1091.
        match
          __sem_target1091
        with
          s172
        in
        match
            vNotPat_smapAccumL_Kind_Type
              (lam #var"383".
                 lam x307.
                   ({}, f841 x307))
              {}
              s172
          with
            (_, s173)
          in
          s173
  let vNotPat_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f842.
      lam __sem_target1092.
        match
          __sem_target1092
        with
          p734
        in
        let res265 =
            vNotPat_smapAccumL_Type_Type
              (lam #var"384".
                 lam a593.
                   ({}, f842 a593))
              {}
              p734
          in
          res265.1
  let vNotPat_sfold_Expr_Expr: all acc1692. (acc1692 -> Ast_Expr -> acc1692) -> acc1692 -> Ast_Expr -> acc1692 =
    lam f843.
      lam acc1693.
        lam __sem_target1093.
          match
            __sem_target1093
          with
            p735
          in
          let res266 =
              vNotPat_smapAccumL_Expr_Expr
                (lam acc1694.
                   lam a594.
                     (f843 acc1694 a594, a594))
                acc1693
                p735
            in
            res266.0
  let vNotPat_sfold_Expr_Type: all acc1695. (acc1695 -> Ast_Type -> acc1695) -> acc1695 -> Ast_Expr -> acc1695 =
    lam f844.
      lam acc1696.
        lam __sem_target1094.
          match
            __sem_target1094
          with
            p736
          in
          let res267 =
              vNotPat_smapAccumL_Expr_Type
                (lam acc1697.
                   lam a595.
                     (f844 acc1697 a595, a595))
                acc1696
                p736
            in
            res267.0
  let vNotPat_sfold_Kind_Type: all acc1698. (acc1698 -> Ast_Type -> acc1698) -> acc1698 -> Ast_Kind -> acc1698 =
    lam f845: acc1698 -> Ast_Type -> acc1698.
      lam acc1699: acc1698.
        lam __sem_target1095.
          match
            __sem_target1095
          with
            s174
          in
          match
              vNotPat_smapAccumL_Kind_Type
                (lam a596.
                   lam x308.
                     (f845 a596 x308, x308))
                acc1699
                s174
            with
              (a597, _)
            in
            a597
  let vNotPat_sfold_Type_Type: all acc1700. (acc1700 -> Ast_Type -> acc1700) -> acc1700 -> Ast_Type -> acc1700 =
    lam f846.
      lam acc1701.
        lam __sem_target1096.
          match
            __sem_target1096
          with
            p737
          in
          let res268 =
              vNotPat_smapAccumL_Type_Type
                (lam acc1702.
                   lam a598.
                     (f846 acc1702 a598, a598))
                acc1701
                p737
            in
            res268.0
  let vNotPat_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f847.
      lam __sem_target1097.
        match
          __sem_target1097
        with
          expr207
        in
        let expr208 = f847 expr207 in
          vNotPat_smap_Expr_Expr (vNotPat_mapPre_Expr_Expr f847) expr208
  let vNotPat_foldPre_Expr_Expr: all acc1703. (acc1703 -> Ast_Expr -> acc1703) -> acc1703 -> Ast_Expr -> acc1703 =
    lam f848.
      lam acc1704.
        lam __sem_target1098.
          match
            __sem_target1098
          with
            expr209
          in
          let acc1705 = f848 acc1704 expr209 in
            vNotPat_sfold_Expr_Expr (vNotPat_foldPre_Expr_Expr f848) acc1705 expr209
  let vNotPat_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f849.
      lam __sem_target1099.
        match
          __sem_target1099
        with
          expr210
        in
        f849
            (vNotPat_smap_Expr_Expr (vNotPat_mapPost_Expr_Expr f849) expr210)
  let vNotPat_foldPost_Expr_Expr: all acc1706. (acc1706 -> Ast_Expr -> acc1706) -> acc1706 -> Ast_Expr -> acc1706 =
    lam f850.
      lam acc1707.
        lam __sem_target1100.
          match
            __sem_target1100
          with
            expr211
          in
          f850
              (vNotPat_sfold_Expr_Expr (vNotPat_foldPost_Expr_Expr f850) acc1707 expr211)
              expr211
  let vNotPat_smapAccumL_Pat_Pat: all acc1708. (acc1708 -> Ast_Pat -> (acc1708, Ast_Pat)) -> acc1708 -> Ast_Pat -> (acc1708, Ast_Pat) =
    lam f851.
      lam acc1709.
        lam __sem_target1101.
          match
            __sem_target1101
          with
            NotPat_PatNot p738
          then
            match
              f851 acc1709 p738.subpat
            with
              (acc1710, subpat6)
            in
            (acc1710, NotPat_PatNot
                { p738 with subpat = subpat6 })
          else match
            __sem_target1101
          with
            p739
          in
          (acc1709, p739)
  let vNotPat_smapAccumL_Expr_Pat: all acc1711. (acc1711 -> Ast_Pat -> (acc1711, Ast_Pat)) -> acc1711 -> Ast_Expr -> (acc1711, Ast_Expr) =
    lam f852.
      lam acc1712.
        lam __sem_target1102.
          match
            __sem_target1102
          with
            p740
          in
          (acc1712, p740)
  let vNotPat_smapAccumL_Pat_Expr: all acc1713. (acc1713 -> Ast_Expr -> (acc1713, Ast_Expr)) -> acc1713 -> Ast_Pat -> (acc1713, Ast_Pat) =
    lam f853.
      lam acc1714.
        lam __sem_target1103.
          match
            __sem_target1103
          with
            p741
          in
          (acc1714, p741)
  let vNotPat_smapAccumL_Pat_Type: all acc1715. (acc1715 -> Ast_Type -> (acc1715, Ast_Type)) -> acc1715 -> Ast_Pat -> (acc1715, Ast_Pat) =
    lam f854.
      lam acc1716.
        lam __sem_target1104.
          match
            __sem_target1104
          with
            p742
          in
          (acc1716, p742)
  let vNotPat_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f855.
      lam __sem_target1105.
        match
          __sem_target1105
        with
          p743
        in
        let res269 =
            vNotPat_smapAccumL_Expr_TypeLabel
              (lam #var"385".
                 lam a599.
                   ({}, f855 a599))
              {}
              p743
          in
          res269.1
  let vNotPat_rappAccumL_Type_Type: all acc1717. (acc1717 -> Ast_Type -> (acc1717, Ast_Type)) -> acc1717 -> Ast_Type -> (acc1717, Ast_Type) =
    lam f856.
      lam acc1718.
        lam __sem_target1106.
          match
            __sem_target1106
          with
            ty165
          in
          (acc1718, ty165)
  let vNotPat_sfold_Expr_TypeLabel: all acc1719. (acc1719 -> Ast_Type -> acc1719) -> acc1719 -> Ast_Expr -> acc1719 =
    lam f857.
      lam acc1720.
        lam __sem_target1107.
          match
            __sem_target1107
          with
            p744
          in
          let res270 =
              vNotPat_smapAccumL_Expr_TypeLabel
                (lam acc1721.
                   lam a600.
                     (f857 acc1721 a600, a600))
                acc1720
                p744
            in
            res270.0
  let vNotPat_smapAccumL_Expr_Expr: all acc1722. (acc1722 -> Ast_Expr -> (acc1722, Ast_Expr)) -> acc1722 -> Ast_Expr -> (acc1722, Ast_Expr) =
    lam f858.
      lam acc1723.
        lam __sem_target1108.
          match
            __sem_target1108
          with
            p745
          in
          (acc1723, p745)
  let vNotPat_smapAccumL_Expr_Type: all acc1724. (acc1724 -> Ast_Type -> (acc1724, Ast_Type)) -> acc1724 -> Ast_Expr -> (acc1724, Ast_Expr) =
    lam f859.
      lam acc1725.
        lam __sem_target1109.
          match
            __sem_target1109
          with
            p746
          in
          (acc1725, p746)
  let vNotPat_smapAccumL_Kind_Type: all acc1726. (acc1726 -> Ast_Type -> (acc1726, Ast_Type)) -> acc1726 -> Ast_Kind -> (acc1726, Ast_Kind) =
    lam f860.
      lam acc1727.
        lam __sem_target1110.
          match
            __sem_target1110
          with
            s175
          in
          (acc1727, s175)
  let vNotPat_smapAccumL_Type_Type: all acc1728. (acc1728 -> Ast_Type -> (acc1728, Ast_Type)) -> acc1728 -> Ast_Type -> (acc1728, Ast_Type) =
    lam f861.
      lam acc1729.
        lam __sem_target1111.
          match
            __sem_target1111
          with
            p747
          in
          (acc1729, p747)
  let vNotPat_mapAccumLPre_Expr_Expr: all acc1730. (acc1730 -> Ast_Expr -> (acc1730, Ast_Expr)) -> acc1730 -> Ast_Expr -> (acc1730, Ast_Expr) =
    lam f862.
      lam acc1731.
        lam __sem_target1112.
          match
            __sem_target1112
          with
            expr212
          in
          match
              f862 acc1731 expr212
            with
              (acc1732, expr213)
            in
            vNotPat_smapAccumL_Expr_Expr (vNotPat_mapAccumLPre_Expr_Expr f862) acc1732 expr213
  let vNotPat_mapAccumLPost_Expr_Expr: all acc1733. (acc1733 -> Ast_Expr -> (acc1733, Ast_Expr)) -> acc1733 -> Ast_Expr -> (acc1733, Ast_Expr) =
    lam f863.
      lam acc1734.
        lam __sem_target1113.
          match
            __sem_target1113
          with
            expr214
          in
          match
              vNotPat_smapAccumL_Expr_Expr (vNotPat_mapAccumLPost_Expr_Expr f863) acc1734 expr214
            with
              (acc1735, expr215)
            in
            f863 acc1735 expr215
  let vNotPat_smapAccumL_Expr_TypeLabel: all acc1736. (acc1736 -> Ast_Type -> (acc1736, Ast_Type)) -> acc1736 -> Ast_Expr -> (acc1736, Ast_Expr) =
    lam f864.
      lam acc1737.
        lam __sem_target1114.
          match
            __sem_target1114
          with
            p748
          in
          match
              f864 acc1737 (vNotPat_tyTm p748)
            with
              (acc1738, ty166)
            in
            (acc1738, vNotPat_withType ty166 p748)
in
con UnknownTypeAst_TyUnknown: {info: Info} -> Ast_Type in
recursive
  let vUnknownTypeAst_tyTm: Ast_Expr -> Ast_Type = lam x291.
      never
  let vUnknownTypeAst_tyPat: Ast_Pat -> Ast_Type = lam x292.
      never
  let vUnknownTypeAst_infoTm: Ast_Expr -> Info = lam x293.
      never
  let vUnknownTypeAst_infoTy: Ast_Type -> Info =
    lam __sem_target1028.
      match
        __sem_target1028
      with
        UnknownTypeAst_TyUnknown r279
      in
      r279.info
  let vUnknownTypeAst_infoPat: Ast_Pat -> Info = lam x294.
      never
  let vUnknownTypeAst_withInfo: Info -> Ast_Expr -> Ast_Expr = lam x295.
      never
  let vUnknownTypeAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr = lam x296.
      never
  let vUnknownTypeAst_tyWithInfo: Info -> Ast_Type -> Ast_Type =
    lam info24.
      lam __sem_target1029.
        match
          __sem_target1029
        with
          UnknownTypeAst_TyUnknown t808
        in
        UnknownTypeAst_TyUnknown
            { t808 with info = info24 }
  let vUnknownTypeAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target1030.
      match
        __sem_target1030
      with
        ty155
      in
      vUnknownTypeAst_rapp_Type_Type vUnknownTypeAst_unwrapType ty155
  let vUnknownTypeAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target1031.
      match
        __sem_target1031
      with
        ty156
      in
      vUnknownTypeAst_rapp_Type_Type vUnknownTypeAst_inspectType ty156
  let vUnknownTypeAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x297.
      never
  let vUnknownTypeAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x298.
      never
  let vUnknownTypeAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f795.
      lam __sem_target1032.
        match
          __sem_target1032
        with
          p694
        in
        let res249 =
            vUnknownTypeAst_smapAccumL_Pat_Pat
              (lam #var"366".
                 lam a565.
                   ({}, f795 a565))
              {}
              p694
          in
          res249.1
  let vUnknownTypeAst_countPatNodes =
    lam count308.
      lam __sem_target1033.
        match
          __sem_target1033
        with
          t809
        in
        let count309 = addi count308 1 in
          let count310 =
            vUnknownTypeAst_sfold_Pat_Pat vUnknownTypeAst_countPatNodes count309 t809
          in
          let count311 =
            vUnknownTypeAst_sfold_Pat_Expr vUnknownTypeAst_countExprNodes count310 t809
          in
          let count312 =
            vUnknownTypeAst_sfold_Pat_Type vUnknownTypeAst_countTypeNodes count311 t809
          in
          count312
  let vUnknownTypeAst_sfold_Pat_Pat: all acc1616. (acc1616 -> Ast_Pat -> acc1616) -> acc1616 -> Ast_Pat -> acc1616 =
    lam f796.
      lam acc1617.
        lam __sem_target1034.
          match
            __sem_target1034
          with
            p695
          in
          let res250 =
              vUnknownTypeAst_smapAccumL_Pat_Pat
                (lam acc1618.
                   lam a566.
                     (f796 acc1618 a566, a566))
                acc1617
                p695
            in
            res250.0
  let vUnknownTypeAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f797.
      lam __sem_target1035.
        match
          __sem_target1035
        with
          p696
        in
        match
            vUnknownTypeAst_smapAccumL_Expr_Pat
              (lam #var"367".
                 lam a567.
                   ({}, f797 a567))
              {}
              p696
          with
            (_, p697)
          in
          p697
  let vUnknownTypeAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f798.
      lam __sem_target1036.
        match
          __sem_target1036
        with
          p698
        in
        match
            vUnknownTypeAst_smapAccumL_Pat_Expr
              (lam #var"368".
                 lam a568.
                   ({}, f798 a568))
              {}
              p698
          with
            (_, p699)
          in
          p699
  let vUnknownTypeAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f799.
      lam __sem_target1037.
        match
          __sem_target1037
        with
          p700
        in
        match
            vUnknownTypeAst_smapAccumL_Pat_Type
              (lam #var"369".
                 lam a569.
                   ({}, f799 a569))
              {}
              p700
          with
            (_, p701)
          in
          p701
  let vUnknownTypeAst_countExprNodes =
    lam count313.
      lam __sem_target1038.
        match
          __sem_target1038
        with
          t810
        in
        let count314 = addi count313 1 in
          let count315 =
            vUnknownTypeAst_sfold_Expr_Expr vUnknownTypeAst_countExprNodes count314 t810
          in
          let count316 =
            vUnknownTypeAst_sfold_Expr_Type vUnknownTypeAst_countTypeNodes count315 t810
          in
          let count317 =
            vUnknownTypeAst_sfold_Expr_TypeLabel vUnknownTypeAst_countTypeNodes count316 t810
          in
          let count318 =
            vUnknownTypeAst_sfold_Expr_Pat vUnknownTypeAst_countPatNodes count317 t810
          in
          count318
  let vUnknownTypeAst_countTypeNodes =
    lam count319.
      lam __sem_target1039.
        match
          __sem_target1039
        with
          t811
        in
        let count320 = addi count319 1 in
          let count321 =
            vUnknownTypeAst_sfold_Type_Type vUnknownTypeAst_countTypeNodes count320 t811
          in
          count321
  let vUnknownTypeAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f800.
      lam __sem_target1040.
        match
          __sem_target1040
        with
          ty157
        in
        let res251 =
            vUnknownTypeAst_rappAccumL_Type_Type
              (lam #var"370".
                 lam t812.
                   ({}, f800 t812))
              {}
              ty157
          in
          res251.1
  let vUnknownTypeAst_sfold_Expr_Pat: all acc1619. (acc1619 -> Ast_Pat -> acc1619) -> acc1619 -> Ast_Expr -> acc1619 =
    lam f801.
      lam acc1620.
        lam __sem_target1041.
          match
            __sem_target1041
          with
            p702
          in
          match
              vUnknownTypeAst_smapAccumL_Expr_Pat
                (lam acc1621.
                   lam a570.
                     (f801 acc1621 a570, a570))
                acc1620
                p702
            with
              (acc1622, _)
            in
            acc1622
  let vUnknownTypeAst_sfold_Pat_Expr: all acc1623. (acc1623 -> Ast_Expr -> acc1623) -> acc1623 -> Ast_Pat -> acc1623 =
    lam f802.
      lam acc1624.
        lam __sem_target1042.
          match
            __sem_target1042
          with
            p703
          in
          match
              vUnknownTypeAst_smapAccumL_Pat_Expr
                (lam acc1625.
                   lam a571.
                     (f802 acc1625 a571, a571))
                acc1624
                p703
            with
              (acc1626, _)
            in
            acc1626
  let vUnknownTypeAst_sfold_Pat_Type: all acc1627. (acc1627 -> Ast_Type -> acc1627) -> acc1627 -> Ast_Pat -> acc1627 =
    lam f803.
      lam acc1628.
        lam __sem_target1043.
          match
            __sem_target1043
          with
            p704
          in
          match
              vUnknownTypeAst_smapAccumL_Pat_Type
                (lam acc1629.
                   lam a572.
                     (f803 acc1629 a572, a572))
                acc1628
                p704
            with
              (acc1630, _)
            in
            acc1630
  let vUnknownTypeAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f804.
      lam __sem_target1044.
        match
          __sem_target1044
        with
          p705
        in
        let res252 =
            vUnknownTypeAst_smapAccumL_Expr_Expr
              (lam #var"371".
                 lam a573.
                   ({}, f804 a573))
              {}
              p705
          in
          res252.1
  let vUnknownTypeAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f805.
      lam __sem_target1045.
        match
          __sem_target1045
        with
          p706
        in
        let res253 =
            vUnknownTypeAst_smapAccumL_Expr_Type
              (lam #var"372".
                 lam a574.
                   ({}, f805 a574))
              {}
              p706
          in
          res253.1
  let vUnknownTypeAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f806: Ast_Type -> Ast_Type.
      lam __sem_target1046.
        match
          __sem_target1046
        with
          s168
        in
        match
            vUnknownTypeAst_smapAccumL_Kind_Type
              (lam #var"373".
                 lam x299.
                   ({}, f806 x299))
              {}
              s168
          with
            (_, s169)
          in
          s169
  let vUnknownTypeAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f807.
      lam __sem_target1047.
        match
          __sem_target1047
        with
          p707
        in
        let res254 =
            vUnknownTypeAst_smapAccumL_Type_Type
              (lam #var"374".
                 lam a575.
                   ({}, f807 a575))
              {}
              p707
          in
          res254.1
  let vUnknownTypeAst_sremoveUnknown =
    lam __sem_target1048.
      match
        __sem_target1048
      with
        UnknownTypeAst_TyUnknown _
      then
        None
          {}
      else match
        __sem_target1048
      with
        ty158
      in
      Some
          ty158
  let vUnknownTypeAst_sfold_Expr_Expr: all acc1631. (acc1631 -> Ast_Expr -> acc1631) -> acc1631 -> Ast_Expr -> acc1631 =
    lam f808.
      lam acc1632.
        lam __sem_target1049.
          match
            __sem_target1049
          with
            p708
          in
          let res255 =
              vUnknownTypeAst_smapAccumL_Expr_Expr
                (lam acc1633.
                   lam a576.
                     (f808 acc1633 a576, a576))
                acc1632
                p708
            in
            res255.0
  let vUnknownTypeAst_sfold_Expr_Type: all acc1634. (acc1634 -> Ast_Type -> acc1634) -> acc1634 -> Ast_Expr -> acc1634 =
    lam f809.
      lam acc1635.
        lam __sem_target1050.
          match
            __sem_target1050
          with
            p709
          in
          let res256 =
              vUnknownTypeAst_smapAccumL_Expr_Type
                (lam acc1636.
                   lam a577.
                     (f809 acc1636 a577, a577))
                acc1635
                p709
            in
            res256.0
  let vUnknownTypeAst_sfold_Kind_Type: all acc1637. (acc1637 -> Ast_Type -> acc1637) -> acc1637 -> Ast_Kind -> acc1637 =
    lam f810: acc1637 -> Ast_Type -> acc1637.
      lam acc1638: acc1637.
        lam __sem_target1051.
          match
            __sem_target1051
          with
            s170
          in
          match
              vUnknownTypeAst_smapAccumL_Kind_Type
                (lam a578.
                   lam x300.
                     (f810 a578 x300, x300))
                acc1638
                s170
            with
              (a579, _)
            in
            a579
  let vUnknownTypeAst_sfold_Type_Type: all acc1639. (acc1639 -> Ast_Type -> acc1639) -> acc1639 -> Ast_Type -> acc1639 =
    lam f811.
      lam acc1640.
        lam __sem_target1052.
          match
            __sem_target1052
          with
            p710
          in
          let res257 =
              vUnknownTypeAst_smapAccumL_Type_Type
                (lam acc1641.
                   lam a580.
                     (f811 acc1641 a580, a580))
                acc1640
                p710
            in
            res257.0
  let vUnknownTypeAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f812.
      lam __sem_target1053.
        match
          __sem_target1053
        with
          expr198
        in
        let expr199 = f812 expr198 in
          vUnknownTypeAst_smap_Expr_Expr (vUnknownTypeAst_mapPre_Expr_Expr f812) expr199
  let vUnknownTypeAst_foldPre_Expr_Expr: all acc1642. (acc1642 -> Ast_Expr -> acc1642) -> acc1642 -> Ast_Expr -> acc1642 =
    lam f813.
      lam acc1643.
        lam __sem_target1054.
          match
            __sem_target1054
          with
            expr200
          in
          let acc1644 = f813 acc1643 expr200 in
            vUnknownTypeAst_sfold_Expr_Expr (vUnknownTypeAst_foldPre_Expr_Expr f813) acc1644 expr200
  let vUnknownTypeAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f814.
      lam __sem_target1055.
        match
          __sem_target1055
        with
          expr201
        in
        f814
            (vUnknownTypeAst_smap_Expr_Expr (vUnknownTypeAst_mapPost_Expr_Expr f814) expr201)
  let vUnknownTypeAst_foldPost_Expr_Expr: all acc1645. (acc1645 -> Ast_Expr -> acc1645) -> acc1645 -> Ast_Expr -> acc1645 =
    lam f815.
      lam acc1646.
        lam __sem_target1056.
          match
            __sem_target1056
          with
            expr202
          in
          f815
              (vUnknownTypeAst_sfold_Expr_Expr (vUnknownTypeAst_foldPost_Expr_Expr f815) acc1646 expr202)
              expr202
  let vUnknownTypeAst_smapAccumL_Pat_Pat: all acc1647. (acc1647 -> Ast_Pat -> (acc1647, Ast_Pat)) -> acc1647 -> Ast_Pat -> (acc1647, Ast_Pat) =
    lam f816.
      lam acc1648.
        lam __sem_target1057.
          match
            __sem_target1057
          with
            p711
          in
          (acc1648, p711)
  let vUnknownTypeAst_smapAccumL_Expr_Pat: all acc1649. (acc1649 -> Ast_Pat -> (acc1649, Ast_Pat)) -> acc1649 -> Ast_Expr -> (acc1649, Ast_Expr) =
    lam f817.
      lam acc1650.
        lam __sem_target1058.
          match
            __sem_target1058
          with
            p712
          in
          (acc1650, p712)
  let vUnknownTypeAst_smapAccumL_Pat_Expr: all acc1651. (acc1651 -> Ast_Expr -> (acc1651, Ast_Expr)) -> acc1651 -> Ast_Pat -> (acc1651, Ast_Pat) =
    lam f818.
      lam acc1652.
        lam __sem_target1059.
          match
            __sem_target1059
          with
            p713
          in
          (acc1652, p713)
  let vUnknownTypeAst_smapAccumL_Pat_Type: all acc1653. (acc1653 -> Ast_Type -> (acc1653, Ast_Type)) -> acc1653 -> Ast_Pat -> (acc1653, Ast_Pat) =
    lam f819.
      lam acc1654.
        lam __sem_target1060.
          match
            __sem_target1060
          with
            p714
          in
          (acc1654, p714)
  let vUnknownTypeAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f820.
      lam __sem_target1061.
        match
          __sem_target1061
        with
          p715
        in
        let res258 =
            vUnknownTypeAst_smapAccumL_Expr_TypeLabel
              (lam #var"375".
                 lam a581.
                   ({}, f820 a581))
              {}
              p715
          in
          res258.1
  let vUnknownTypeAst_rappAccumL_Type_Type: all acc1655. (acc1655 -> Ast_Type -> (acc1655, Ast_Type)) -> acc1655 -> Ast_Type -> (acc1655, Ast_Type) =
    lam f821.
      lam acc1656.
        lam __sem_target1062.
          match
            __sem_target1062
          with
            ty159
          in
          (acc1656, ty159)
  let vUnknownTypeAst_sfold_Expr_TypeLabel: all acc1657. (acc1657 -> Ast_Type -> acc1657) -> acc1657 -> Ast_Expr -> acc1657 =
    lam f822.
      lam acc1658.
        lam __sem_target1063.
          match
            __sem_target1063
          with
            p716
          in
          let res259 =
              vUnknownTypeAst_smapAccumL_Expr_TypeLabel
                (lam acc1659.
                   lam a582.
                     (f822 acc1659 a582, a582))
                acc1658
                p716
            in
            res259.0
  let vUnknownTypeAst_smapAccumL_Expr_Expr: all acc1660. (acc1660 -> Ast_Expr -> (acc1660, Ast_Expr)) -> acc1660 -> Ast_Expr -> (acc1660, Ast_Expr) =
    lam f823.
      lam acc1661.
        lam __sem_target1064.
          match
            __sem_target1064
          with
            p717
          in
          (acc1661, p717)
  let vUnknownTypeAst_smapAccumL_Expr_Type: all acc1662. (acc1662 -> Ast_Type -> (acc1662, Ast_Type)) -> acc1662 -> Ast_Expr -> (acc1662, Ast_Expr) =
    lam f824.
      lam acc1663.
        lam __sem_target1065.
          match
            __sem_target1065
          with
            p718
          in
          (acc1663, p718)
  let vUnknownTypeAst_smapAccumL_Kind_Type: all acc1664. (acc1664 -> Ast_Type -> (acc1664, Ast_Type)) -> acc1664 -> Ast_Kind -> (acc1664, Ast_Kind) =
    lam f825.
      lam acc1665.
        lam __sem_target1066.
          match
            __sem_target1066
          with
            s171
          in
          (acc1665, s171)
  let vUnknownTypeAst_smapAccumL_Type_Type: all acc1666. (acc1666 -> Ast_Type -> (acc1666, Ast_Type)) -> acc1666 -> Ast_Type -> (acc1666, Ast_Type) =
    lam f826.
      lam acc1667.
        lam __sem_target1067.
          match
            __sem_target1067
          with
            p719
          in
          (acc1667, p719)
  let vUnknownTypeAst_mapAccumLPre_Expr_Expr: all acc1668. (acc1668 -> Ast_Expr -> (acc1668, Ast_Expr)) -> acc1668 -> Ast_Expr -> (acc1668, Ast_Expr) =
    lam f827.
      lam acc1669.
        lam __sem_target1068.
          match
            __sem_target1068
          with
            expr203
          in
          match
              f827 acc1669 expr203
            with
              (acc1670, expr204)
            in
            vUnknownTypeAst_smapAccumL_Expr_Expr
                (vUnknownTypeAst_mapAccumLPre_Expr_Expr f827) acc1670 expr204
  let vUnknownTypeAst_mapAccumLPost_Expr_Expr: all acc1671. (acc1671 -> Ast_Expr -> (acc1671, Ast_Expr)) -> acc1671 -> Ast_Expr -> (acc1671, Ast_Expr) =
    lam f828.
      lam acc1672.
        lam __sem_target1069.
          match
            __sem_target1069
          with
            expr205
          in
          match
              vUnknownTypeAst_smapAccumL_Expr_Expr
                (vUnknownTypeAst_mapAccumLPost_Expr_Expr f828)
                acc1672
                expr205
            with
              (acc1673, expr206)
            in
            f828 acc1673 expr206
  let vUnknownTypeAst_smapAccumL_Expr_TypeLabel: all acc1674. (acc1674 -> Ast_Type -> (acc1674, Ast_Type)) -> acc1674 -> Ast_Expr -> (acc1674, Ast_Expr) =
    lam f829.
      lam acc1675.
        lam __sem_target1070.
          match
            __sem_target1070
          with
            p720
          in
          match
              f829 acc1675 (vUnknownTypeAst_tyTm p720)
            with
              (acc1676, ty160)
            in
            (acc1676, vUnknownTypeAst_withType ty160 p720)
in
con BoolTypeAst_TyBool: {info: Info} -> Ast_Type in
recursive
  let vBoolTypeAst_tyTm: Ast_Expr -> Ast_Type = lam x281.
      never
  let vBoolTypeAst_tyPat: Ast_Pat -> Ast_Type = lam x282.
      never
  let vBoolTypeAst_infoTm: Ast_Expr -> Info = lam x283.
      never
  let vBoolTypeAst_infoTy: Ast_Type -> Info =
    lam __sem_target986.
      match
        __sem_target986
      with
        BoolTypeAst_TyBool r278
      in
      r278.info
  let vBoolTypeAst_infoPat: Ast_Pat -> Info = lam x284.
      never
  let vBoolTypeAst_withInfo: Info -> Ast_Expr -> Ast_Expr = lam x285.
      never
  let vBoolTypeAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr = lam x286.
      never
  let vBoolTypeAst_tyWithInfo: Info -> Ast_Type -> Ast_Type =
    lam info23.
      lam __sem_target987.
        match
          __sem_target987
        with
          BoolTypeAst_TyBool t803
        in
        BoolTypeAst_TyBool
            { t803 with info = info23 }
  let vBoolTypeAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target988.
      match
        __sem_target988
      with
        ty150
      in
      vBoolTypeAst_rapp_Type_Type vBoolTypeAst_unwrapType ty150
  let vBoolTypeAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target989.
      match
        __sem_target989
      with
        ty151
      in
      vBoolTypeAst_rapp_Type_Type vBoolTypeAst_inspectType ty151
  let vBoolTypeAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x287.
      never
  let vBoolTypeAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x288.
      never
  let vBoolTypeAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f760.
      lam __sem_target990.
        match
          __sem_target990
        with
          p667
        in
        let res238 =
            vBoolTypeAst_smapAccumL_Pat_Pat
              (lam #var"356".
                 lam a547.
                   ({}, f760 a547))
              {}
              p667
          in
          res238.1
  let vBoolTypeAst_countPatNodes =
    lam count294.
      lam __sem_target991.
        match
          __sem_target991
        with
          t804
        in
        let count295 = addi count294 1 in
          let count296 =
            vBoolTypeAst_sfold_Pat_Pat vBoolTypeAst_countPatNodes count295 t804
          in
          let count297 =
            vBoolTypeAst_sfold_Pat_Expr vBoolTypeAst_countExprNodes count296 t804
          in
          let count298 =
            vBoolTypeAst_sfold_Pat_Type vBoolTypeAst_countTypeNodes count297 t804
          in
          count298
  let vBoolTypeAst_sfold_Pat_Pat: all acc1555. (acc1555 -> Ast_Pat -> acc1555) -> acc1555 -> Ast_Pat -> acc1555 =
    lam f761.
      lam acc1556.
        lam __sem_target992.
          match
            __sem_target992
          with
            p668
          in
          let res239 =
              vBoolTypeAst_smapAccumL_Pat_Pat
                (lam acc1557.
                   lam a548.
                     (f761 acc1557 a548, a548))
                acc1556
                p668
            in
            res239.0
  let vBoolTypeAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f762.
      lam __sem_target993.
        match
          __sem_target993
        with
          p669
        in
        match
            vBoolTypeAst_smapAccumL_Expr_Pat
              (lam #var"357".
                 lam a549.
                   ({}, f762 a549))
              {}
              p669
          with
            (_, p670)
          in
          p670
  let vBoolTypeAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f763.
      lam __sem_target994.
        match
          __sem_target994
        with
          p671
        in
        match
            vBoolTypeAst_smapAccumL_Pat_Expr
              (lam #var"358".
                 lam a550.
                   ({}, f763 a550))
              {}
              p671
          with
            (_, p672)
          in
          p672
  let vBoolTypeAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f764.
      lam __sem_target995.
        match
          __sem_target995
        with
          p673
        in
        match
            vBoolTypeAst_smapAccumL_Pat_Type
              (lam #var"359".
                 lam a551.
                   ({}, f764 a551))
              {}
              p673
          with
            (_, p674)
          in
          p674
  let vBoolTypeAst_countExprNodes =
    lam count299.
      lam __sem_target996.
        match
          __sem_target996
        with
          t805
        in
        let count300 = addi count299 1 in
          let count301 =
            vBoolTypeAst_sfold_Expr_Expr vBoolTypeAst_countExprNodes count300 t805
          in
          let count302 =
            vBoolTypeAst_sfold_Expr_Type vBoolTypeAst_countTypeNodes count301 t805
          in
          let count303 =
            vBoolTypeAst_sfold_Expr_TypeLabel vBoolTypeAst_countTypeNodes count302 t805
          in
          let count304 =
            vBoolTypeAst_sfold_Expr_Pat vBoolTypeAst_countPatNodes count303 t805
          in
          count304
  let vBoolTypeAst_countTypeNodes =
    lam count305.
      lam __sem_target997.
        match
          __sem_target997
        with
          t806
        in
        let count306 = addi count305 1 in
          let count307 =
            vBoolTypeAst_sfold_Type_Type vBoolTypeAst_countTypeNodes count306 t806
          in
          count307
  let vBoolTypeAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f765.
      lam __sem_target998.
        match
          __sem_target998
        with
          ty152
        in
        let res240 =
            vBoolTypeAst_rappAccumL_Type_Type
              (lam #var"360".
                 lam t807.
                   ({}, f765 t807))
              {}
              ty152
          in
          res240.1
  let vBoolTypeAst_sfold_Expr_Pat: all acc1558. (acc1558 -> Ast_Pat -> acc1558) -> acc1558 -> Ast_Expr -> acc1558 =
    lam f766.
      lam acc1559.
        lam __sem_target999.
          match
            __sem_target999
          with
            p675
          in
          match
              vBoolTypeAst_smapAccumL_Expr_Pat
                (lam acc1560.
                   lam a552.
                     (f766 acc1560 a552, a552))
                acc1559
                p675
            with
              (acc1561, _)
            in
            acc1561
  let vBoolTypeAst_sfold_Pat_Expr: all acc1562. (acc1562 -> Ast_Expr -> acc1562) -> acc1562 -> Ast_Pat -> acc1562 =
    lam f767.
      lam acc1563.
        lam __sem_target1000.
          match
            __sem_target1000
          with
            p676
          in
          match
              vBoolTypeAst_smapAccumL_Pat_Expr
                (lam acc1564.
                   lam a553.
                     (f767 acc1564 a553, a553))
                acc1563
                p676
            with
              (acc1565, _)
            in
            acc1565
  let vBoolTypeAst_sfold_Pat_Type: all acc1566. (acc1566 -> Ast_Type -> acc1566) -> acc1566 -> Ast_Pat -> acc1566 =
    lam f768.
      lam acc1567.
        lam __sem_target1001.
          match
            __sem_target1001
          with
            p677
          in
          match
              vBoolTypeAst_smapAccumL_Pat_Type
                (lam acc1568.
                   lam a554.
                     (f768 acc1568 a554, a554))
                acc1567
                p677
            with
              (acc1569, _)
            in
            acc1569
  let vBoolTypeAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f769.
      lam __sem_target1002.
        match
          __sem_target1002
        with
          p678
        in
        let res241 =
            vBoolTypeAst_smapAccumL_Expr_Expr
              (lam #var"361".
                 lam a555.
                   ({}, f769 a555))
              {}
              p678
          in
          res241.1
  let vBoolTypeAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f770.
      lam __sem_target1003.
        match
          __sem_target1003
        with
          p679
        in
        let res242 =
            vBoolTypeAst_smapAccumL_Expr_Type
              (lam #var"362".
                 lam a556.
                   ({}, f770 a556))
              {}
              p679
          in
          res242.1
  let vBoolTypeAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f771: Ast_Type -> Ast_Type.
      lam __sem_target1004.
        match
          __sem_target1004
        with
          s164
        in
        match
            vBoolTypeAst_smapAccumL_Kind_Type
              (lam #var"363".
                 lam x289.
                   ({}, f771 x289))
              {}
              s164
          with
            (_, s165)
          in
          s165
  let vBoolTypeAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f772.
      lam __sem_target1005.
        match
          __sem_target1005
        with
          p680
        in
        let res243 =
            vBoolTypeAst_smapAccumL_Type_Type
              (lam #var"364".
                 lam a557.
                   ({}, f772 a557))
              {}
              p680
          in
          res243.1
  let vBoolTypeAst_sfold_Expr_Expr: all acc1570. (acc1570 -> Ast_Expr -> acc1570) -> acc1570 -> Ast_Expr -> acc1570 =
    lam f773.
      lam acc1571.
        lam __sem_target1006.
          match
            __sem_target1006
          with
            p681
          in
          let res244 =
              vBoolTypeAst_smapAccumL_Expr_Expr
                (lam acc1572.
                   lam a558.
                     (f773 acc1572 a558, a558))
                acc1571
                p681
            in
            res244.0
  let vBoolTypeAst_sfold_Expr_Type: all acc1573. (acc1573 -> Ast_Type -> acc1573) -> acc1573 -> Ast_Expr -> acc1573 =
    lam f774.
      lam acc1574.
        lam __sem_target1007.
          match
            __sem_target1007
          with
            p682
          in
          let res245 =
              vBoolTypeAst_smapAccumL_Expr_Type
                (lam acc1575.
                   lam a559.
                     (f774 acc1575 a559, a559))
                acc1574
                p682
            in
            res245.0
  let vBoolTypeAst_sfold_Kind_Type: all acc1576. (acc1576 -> Ast_Type -> acc1576) -> acc1576 -> Ast_Kind -> acc1576 =
    lam f775: acc1576 -> Ast_Type -> acc1576.
      lam acc1577: acc1576.
        lam __sem_target1008.
          match
            __sem_target1008
          with
            s166
          in
          match
              vBoolTypeAst_smapAccumL_Kind_Type
                (lam a560.
                   lam x290.
                     (f775 a560 x290, x290))
                acc1577
                s166
            with
              (a561, _)
            in
            a561
  let vBoolTypeAst_sfold_Type_Type: all acc1578. (acc1578 -> Ast_Type -> acc1578) -> acc1578 -> Ast_Type -> acc1578 =
    lam f776.
      lam acc1579.
        lam __sem_target1009.
          match
            __sem_target1009
          with
            p683
          in
          let res246 =
              vBoolTypeAst_smapAccumL_Type_Type
                (lam acc1580.
                   lam a562.
                     (f776 acc1580 a562, a562))
                acc1579
                p683
            in
            res246.0
  let vBoolTypeAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f777.
      lam __sem_target1010.
        match
          __sem_target1010
        with
          expr189
        in
        let expr190 = f777 expr189 in
          vBoolTypeAst_smap_Expr_Expr (vBoolTypeAst_mapPre_Expr_Expr f777) expr190
  let vBoolTypeAst_foldPre_Expr_Expr: all acc1581. (acc1581 -> Ast_Expr -> acc1581) -> acc1581 -> Ast_Expr -> acc1581 =
    lam f778.
      lam acc1582.
        lam __sem_target1011.
          match
            __sem_target1011
          with
            expr191
          in
          let acc1583 = f778 acc1582 expr191 in
            vBoolTypeAst_sfold_Expr_Expr (vBoolTypeAst_foldPre_Expr_Expr f778) acc1583 expr191
  let vBoolTypeAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f779.
      lam __sem_target1012.
        match
          __sem_target1012
        with
          expr192
        in
        f779
            (vBoolTypeAst_smap_Expr_Expr (vBoolTypeAst_mapPost_Expr_Expr f779) expr192)
  let vBoolTypeAst_foldPost_Expr_Expr: all acc1584. (acc1584 -> Ast_Expr -> acc1584) -> acc1584 -> Ast_Expr -> acc1584 =
    lam f780.
      lam acc1585.
        lam __sem_target1013.
          match
            __sem_target1013
          with
            expr193
          in
          f780
              (vBoolTypeAst_sfold_Expr_Expr (vBoolTypeAst_foldPost_Expr_Expr f780) acc1585 expr193)
              expr193
  let vBoolTypeAst_smapAccumL_Pat_Pat: all acc1586. (acc1586 -> Ast_Pat -> (acc1586, Ast_Pat)) -> acc1586 -> Ast_Pat -> (acc1586, Ast_Pat) =
    lam f781.
      lam acc1587.
        lam __sem_target1014.
          match
            __sem_target1014
          with
            p684
          in
          (acc1587, p684)
  let vBoolTypeAst_smapAccumL_Expr_Pat: all acc1588. (acc1588 -> Ast_Pat -> (acc1588, Ast_Pat)) -> acc1588 -> Ast_Expr -> (acc1588, Ast_Expr) =
    lam f782.
      lam acc1589.
        lam __sem_target1015.
          match
            __sem_target1015
          with
            p685
          in
          (acc1589, p685)
  let vBoolTypeAst_smapAccumL_Pat_Expr: all acc1590. (acc1590 -> Ast_Expr -> (acc1590, Ast_Expr)) -> acc1590 -> Ast_Pat -> (acc1590, Ast_Pat) =
    lam f783.
      lam acc1591.
        lam __sem_target1016.
          match
            __sem_target1016
          with
            p686
          in
          (acc1591, p686)
  let vBoolTypeAst_smapAccumL_Pat_Type: all acc1592. (acc1592 -> Ast_Type -> (acc1592, Ast_Type)) -> acc1592 -> Ast_Pat -> (acc1592, Ast_Pat) =
    lam f784.
      lam acc1593.
        lam __sem_target1017.
          match
            __sem_target1017
          with
            p687
          in
          (acc1593, p687)
  let vBoolTypeAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f785.
      lam __sem_target1018.
        match
          __sem_target1018
        with
          p688
        in
        let res247 =
            vBoolTypeAst_smapAccumL_Expr_TypeLabel
              (lam #var"365".
                 lam a563.
                   ({}, f785 a563))
              {}
              p688
          in
          res247.1
  let vBoolTypeAst_rappAccumL_Type_Type: all acc1594. (acc1594 -> Ast_Type -> (acc1594, Ast_Type)) -> acc1594 -> Ast_Type -> (acc1594, Ast_Type) =
    lam f786.
      lam acc1595.
        lam __sem_target1019.
          match
            __sem_target1019
          with
            ty153
          in
          (acc1595, ty153)
  let vBoolTypeAst_sfold_Expr_TypeLabel: all acc1596. (acc1596 -> Ast_Type -> acc1596) -> acc1596 -> Ast_Expr -> acc1596 =
    lam f787.
      lam acc1597.
        lam __sem_target1020.
          match
            __sem_target1020
          with
            p689
          in
          let res248 =
              vBoolTypeAst_smapAccumL_Expr_TypeLabel
                (lam acc1598.
                   lam a564.
                     (f787 acc1598 a564, a564))
                acc1597
                p689
            in
            res248.0
  let vBoolTypeAst_smapAccumL_Expr_Expr: all acc1599. (acc1599 -> Ast_Expr -> (acc1599, Ast_Expr)) -> acc1599 -> Ast_Expr -> (acc1599, Ast_Expr) =
    lam f788.
      lam acc1600.
        lam __sem_target1021.
          match
            __sem_target1021
          with
            p690
          in
          (acc1600, p690)
  let vBoolTypeAst_smapAccumL_Expr_Type: all acc1601. (acc1601 -> Ast_Type -> (acc1601, Ast_Type)) -> acc1601 -> Ast_Expr -> (acc1601, Ast_Expr) =
    lam f789.
      lam acc1602.
        lam __sem_target1022.
          match
            __sem_target1022
          with
            p691
          in
          (acc1602, p691)
  let vBoolTypeAst_smapAccumL_Kind_Type: all acc1603. (acc1603 -> Ast_Type -> (acc1603, Ast_Type)) -> acc1603 -> Ast_Kind -> (acc1603, Ast_Kind) =
    lam f790.
      lam acc1604.
        lam __sem_target1023.
          match
            __sem_target1023
          with
            s167
          in
          (acc1604, s167)
  let vBoolTypeAst_smapAccumL_Type_Type: all acc1605. (acc1605 -> Ast_Type -> (acc1605, Ast_Type)) -> acc1605 -> Ast_Type -> (acc1605, Ast_Type) =
    lam f791.
      lam acc1606.
        lam __sem_target1024.
          match
            __sem_target1024
          with
            p692
          in
          (acc1606, p692)
  let vBoolTypeAst_mapAccumLPre_Expr_Expr: all acc1607. (acc1607 -> Ast_Expr -> (acc1607, Ast_Expr)) -> acc1607 -> Ast_Expr -> (acc1607, Ast_Expr) =
    lam f792.
      lam acc1608.
        lam __sem_target1025.
          match
            __sem_target1025
          with
            expr194
          in
          match
              f792 acc1608 expr194
            with
              (acc1609, expr195)
            in
            vBoolTypeAst_smapAccumL_Expr_Expr (vBoolTypeAst_mapAccumLPre_Expr_Expr f792) acc1609 expr195
  let vBoolTypeAst_mapAccumLPost_Expr_Expr: all acc1610. (acc1610 -> Ast_Expr -> (acc1610, Ast_Expr)) -> acc1610 -> Ast_Expr -> (acc1610, Ast_Expr) =
    lam f793.
      lam acc1611.
        lam __sem_target1026.
          match
            __sem_target1026
          with
            expr196
          in
          match
              vBoolTypeAst_smapAccumL_Expr_Expr (vBoolTypeAst_mapAccumLPost_Expr_Expr f793) acc1611 expr196
            with
              (acc1612, expr197)
            in
            f793 acc1612 expr197
  let vBoolTypeAst_smapAccumL_Expr_TypeLabel: all acc1613. (acc1613 -> Ast_Type -> (acc1613, Ast_Type)) -> acc1613 -> Ast_Expr -> (acc1613, Ast_Expr) =
    lam f794.
      lam acc1614.
        lam __sem_target1027.
          match
            __sem_target1027
          with
            p693
          in
          match
              f794 acc1614 (vBoolTypeAst_tyTm p693)
            with
              (acc1615, ty154)
            in
            (acc1615, vBoolTypeAst_withType ty154 p693)
in
con IntTypeAst_TyInt: {info: Info} -> Ast_Type in
recursive
  let vIntTypeAst_tyTm: Ast_Expr -> Ast_Type = lam x271.
      never
  let vIntTypeAst_tyPat: Ast_Pat -> Ast_Type = lam x272.
      never
  let vIntTypeAst_infoTm: Ast_Expr -> Info = lam x273.
      never
  let vIntTypeAst_infoTy: Ast_Type -> Info =
    lam __sem_target944.
      match
        __sem_target944
      with
        IntTypeAst_TyInt r277
      in
      r277.info
  let vIntTypeAst_infoPat: Ast_Pat -> Info = lam x274.
      never
  let vIntTypeAst_withInfo: Info -> Ast_Expr -> Ast_Expr = lam x275.
      never
  let vIntTypeAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr = lam x276.
      never
  let vIntTypeAst_tyWithInfo: Info -> Ast_Type -> Ast_Type =
    lam info22.
      lam __sem_target945.
        match
          __sem_target945
        with
          IntTypeAst_TyInt t798
        in
        IntTypeAst_TyInt
            { t798 with info = info22 }
  let vIntTypeAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target946.
      match
        __sem_target946
      with
        ty145
      in
      vIntTypeAst_rapp_Type_Type vIntTypeAst_unwrapType ty145
  let vIntTypeAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target947.
      match
        __sem_target947
      with
        ty146
      in
      vIntTypeAst_rapp_Type_Type vIntTypeAst_inspectType ty146
  let vIntTypeAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x277.
      never
  let vIntTypeAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x278.
      never
  let vIntTypeAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f725.
      lam __sem_target948.
        match
          __sem_target948
        with
          p640
        in
        let res227 =
            vIntTypeAst_smapAccumL_Pat_Pat
              (lam #var"346".
                 lam a529.
                   ({}, f725 a529))
              {}
              p640
          in
          res227.1
  let vIntTypeAst_countPatNodes =
    lam count280.
      lam __sem_target949.
        match
          __sem_target949
        with
          t799
        in
        let count281 = addi count280 1 in
          let count282 =
            vIntTypeAst_sfold_Pat_Pat vIntTypeAst_countPatNodes count281 t799
          in
          let count283 =
            vIntTypeAst_sfold_Pat_Expr vIntTypeAst_countExprNodes count282 t799
          in
          let count284 =
            vIntTypeAst_sfold_Pat_Type vIntTypeAst_countTypeNodes count283 t799
          in
          count284
  let vIntTypeAst_sfold_Pat_Pat: all acc1494. (acc1494 -> Ast_Pat -> acc1494) -> acc1494 -> Ast_Pat -> acc1494 =
    lam f726.
      lam acc1495.
        lam __sem_target950.
          match
            __sem_target950
          with
            p641
          in
          let res228 =
              vIntTypeAst_smapAccumL_Pat_Pat
                (lam acc1496.
                   lam a530.
                     (f726 acc1496 a530, a530))
                acc1495
                p641
            in
            res228.0
  let vIntTypeAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f727.
      lam __sem_target951.
        match
          __sem_target951
        with
          p642
        in
        match
            vIntTypeAst_smapAccumL_Expr_Pat
              (lam #var"347".
                 lam a531.
                   ({}, f727 a531))
              {}
              p642
          with
            (_, p643)
          in
          p643
  let vIntTypeAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f728.
      lam __sem_target952.
        match
          __sem_target952
        with
          p644
        in
        match
            vIntTypeAst_smapAccumL_Pat_Expr
              (lam #var"348".
                 lam a532.
                   ({}, f728 a532))
              {}
              p644
          with
            (_, p645)
          in
          p645
  let vIntTypeAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f729.
      lam __sem_target953.
        match
          __sem_target953
        with
          p646
        in
        match
            vIntTypeAst_smapAccumL_Pat_Type
              (lam #var"349".
                 lam a533.
                   ({}, f729 a533))
              {}
              p646
          with
            (_, p647)
          in
          p647
  let vIntTypeAst_countExprNodes =
    lam count285.
      lam __sem_target954.
        match
          __sem_target954
        with
          t800
        in
        let count286 = addi count285 1 in
          let count287 =
            vIntTypeAst_sfold_Expr_Expr vIntTypeAst_countExprNodes count286 t800
          in
          let count288 =
            vIntTypeAst_sfold_Expr_Type vIntTypeAst_countTypeNodes count287 t800
          in
          let count289 =
            vIntTypeAst_sfold_Expr_TypeLabel vIntTypeAst_countTypeNodes count288 t800
          in
          let count290 =
            vIntTypeAst_sfold_Expr_Pat vIntTypeAst_countPatNodes count289 t800
          in
          count290
  let vIntTypeAst_countTypeNodes =
    lam count291.
      lam __sem_target955.
        match
          __sem_target955
        with
          t801
        in
        let count292 = addi count291 1 in
          let count293 =
            vIntTypeAst_sfold_Type_Type vIntTypeAst_countTypeNodes count292 t801
          in
          count293
  let vIntTypeAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f730.
      lam __sem_target956.
        match
          __sem_target956
        with
          ty147
        in
        let res229 =
            vIntTypeAst_rappAccumL_Type_Type
              (lam #var"350".
                 lam t802.
                   ({}, f730 t802))
              {}
              ty147
          in
          res229.1
  let vIntTypeAst_sfold_Expr_Pat: all acc1497. (acc1497 -> Ast_Pat -> acc1497) -> acc1497 -> Ast_Expr -> acc1497 =
    lam f731.
      lam acc1498.
        lam __sem_target957.
          match
            __sem_target957
          with
            p648
          in
          match
              vIntTypeAst_smapAccumL_Expr_Pat
                (lam acc1499.
                   lam a534.
                     (f731 acc1499 a534, a534))
                acc1498
                p648
            with
              (acc1500, _)
            in
            acc1500
  let vIntTypeAst_sfold_Pat_Expr: all acc1501. (acc1501 -> Ast_Expr -> acc1501) -> acc1501 -> Ast_Pat -> acc1501 =
    lam f732.
      lam acc1502.
        lam __sem_target958.
          match
            __sem_target958
          with
            p649
          in
          match
              vIntTypeAst_smapAccumL_Pat_Expr
                (lam acc1503.
                   lam a535.
                     (f732 acc1503 a535, a535))
                acc1502
                p649
            with
              (acc1504, _)
            in
            acc1504
  let vIntTypeAst_sfold_Pat_Type: all acc1505. (acc1505 -> Ast_Type -> acc1505) -> acc1505 -> Ast_Pat -> acc1505 =
    lam f733.
      lam acc1506.
        lam __sem_target959.
          match
            __sem_target959
          with
            p650
          in
          match
              vIntTypeAst_smapAccumL_Pat_Type
                (lam acc1507.
                   lam a536.
                     (f733 acc1507 a536, a536))
                acc1506
                p650
            with
              (acc1508, _)
            in
            acc1508
  let vIntTypeAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f734.
      lam __sem_target960.
        match
          __sem_target960
        with
          p651
        in
        let res230 =
            vIntTypeAst_smapAccumL_Expr_Expr
              (lam #var"351".
                 lam a537.
                   ({}, f734 a537))
              {}
              p651
          in
          res230.1
  let vIntTypeAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f735.
      lam __sem_target961.
        match
          __sem_target961
        with
          p652
        in
        let res231 =
            vIntTypeAst_smapAccumL_Expr_Type
              (lam #var"352".
                 lam a538.
                   ({}, f735 a538))
              {}
              p652
          in
          res231.1
  let vIntTypeAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f736: Ast_Type -> Ast_Type.
      lam __sem_target962.
        match
          __sem_target962
        with
          s160
        in
        match
            vIntTypeAst_smapAccumL_Kind_Type
              (lam #var"353".
                 lam x279.
                   ({}, f736 x279))
              {}
              s160
          with
            (_, s161)
          in
          s161
  let vIntTypeAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f737.
      lam __sem_target963.
        match
          __sem_target963
        with
          p653
        in
        let res232 =
            vIntTypeAst_smapAccumL_Type_Type
              (lam #var"354".
                 lam a539.
                   ({}, f737 a539))
              {}
              p653
          in
          res232.1
  let vIntTypeAst_sfold_Expr_Expr: all acc1509. (acc1509 -> Ast_Expr -> acc1509) -> acc1509 -> Ast_Expr -> acc1509 =
    lam f738.
      lam acc1510.
        lam __sem_target964.
          match
            __sem_target964
          with
            p654
          in
          let res233 =
              vIntTypeAst_smapAccumL_Expr_Expr
                (lam acc1511.
                   lam a540.
                     (f738 acc1511 a540, a540))
                acc1510
                p654
            in
            res233.0
  let vIntTypeAst_sfold_Expr_Type: all acc1512. (acc1512 -> Ast_Type -> acc1512) -> acc1512 -> Ast_Expr -> acc1512 =
    lam f739.
      lam acc1513.
        lam __sem_target965.
          match
            __sem_target965
          with
            p655
          in
          let res234 =
              vIntTypeAst_smapAccumL_Expr_Type
                (lam acc1514.
                   lam a541.
                     (f739 acc1514 a541, a541))
                acc1513
                p655
            in
            res234.0
  let vIntTypeAst_sfold_Kind_Type: all acc1515. (acc1515 -> Ast_Type -> acc1515) -> acc1515 -> Ast_Kind -> acc1515 =
    lam f740: acc1515 -> Ast_Type -> acc1515.
      lam acc1516: acc1515.
        lam __sem_target966.
          match
            __sem_target966
          with
            s162
          in
          match
              vIntTypeAst_smapAccumL_Kind_Type
                (lam a542.
                   lam x280.
                     (f740 a542 x280, x280))
                acc1516
                s162
            with
              (a543, _)
            in
            a543
  let vIntTypeAst_sfold_Type_Type: all acc1517. (acc1517 -> Ast_Type -> acc1517) -> acc1517 -> Ast_Type -> acc1517 =
    lam f741.
      lam acc1518.
        lam __sem_target967.
          match
            __sem_target967
          with
            p656
          in
          let res235 =
              vIntTypeAst_smapAccumL_Type_Type
                (lam acc1519.
                   lam a544.
                     (f741 acc1519 a544, a544))
                acc1518
                p656
            in
            res235.0
  let vIntTypeAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f742.
      lam __sem_target968.
        match
          __sem_target968
        with
          expr180
        in
        let expr181 = f742 expr180 in
          vIntTypeAst_smap_Expr_Expr (vIntTypeAst_mapPre_Expr_Expr f742) expr181
  let vIntTypeAst_foldPre_Expr_Expr: all acc1520. (acc1520 -> Ast_Expr -> acc1520) -> acc1520 -> Ast_Expr -> acc1520 =
    lam f743.
      lam acc1521.
        lam __sem_target969.
          match
            __sem_target969
          with
            expr182
          in
          let acc1522 = f743 acc1521 expr182 in
            vIntTypeAst_sfold_Expr_Expr (vIntTypeAst_foldPre_Expr_Expr f743) acc1522 expr182
  let vIntTypeAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f744.
      lam __sem_target970.
        match
          __sem_target970
        with
          expr183
        in
        f744
            (vIntTypeAst_smap_Expr_Expr (vIntTypeAst_mapPost_Expr_Expr f744) expr183)
  let vIntTypeAst_foldPost_Expr_Expr: all acc1523. (acc1523 -> Ast_Expr -> acc1523) -> acc1523 -> Ast_Expr -> acc1523 =
    lam f745.
      lam acc1524.
        lam __sem_target971.
          match
            __sem_target971
          with
            expr184
          in
          f745
              (vIntTypeAst_sfold_Expr_Expr (vIntTypeAst_foldPost_Expr_Expr f745) acc1524 expr184)
              expr184
  let vIntTypeAst_smapAccumL_Pat_Pat: all acc1525. (acc1525 -> Ast_Pat -> (acc1525, Ast_Pat)) -> acc1525 -> Ast_Pat -> (acc1525, Ast_Pat) =
    lam f746.
      lam acc1526.
        lam __sem_target972.
          match
            __sem_target972
          with
            p657
          in
          (acc1526, p657)
  let vIntTypeAst_smapAccumL_Expr_Pat: all acc1527. (acc1527 -> Ast_Pat -> (acc1527, Ast_Pat)) -> acc1527 -> Ast_Expr -> (acc1527, Ast_Expr) =
    lam f747.
      lam acc1528.
        lam __sem_target973.
          match
            __sem_target973
          with
            p658
          in
          (acc1528, p658)
  let vIntTypeAst_smapAccumL_Pat_Expr: all acc1529. (acc1529 -> Ast_Expr -> (acc1529, Ast_Expr)) -> acc1529 -> Ast_Pat -> (acc1529, Ast_Pat) =
    lam f748.
      lam acc1530.
        lam __sem_target974.
          match
            __sem_target974
          with
            p659
          in
          (acc1530, p659)
  let vIntTypeAst_smapAccumL_Pat_Type: all acc1531. (acc1531 -> Ast_Type -> (acc1531, Ast_Type)) -> acc1531 -> Ast_Pat -> (acc1531, Ast_Pat) =
    lam f749.
      lam acc1532.
        lam __sem_target975.
          match
            __sem_target975
          with
            p660
          in
          (acc1532, p660)
  let vIntTypeAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f750.
      lam __sem_target976.
        match
          __sem_target976
        with
          p661
        in
        let res236 =
            vIntTypeAst_smapAccumL_Expr_TypeLabel
              (lam #var"355".
                 lam a545.
                   ({}, f750 a545))
              {}
              p661
          in
          res236.1
  let vIntTypeAst_rappAccumL_Type_Type: all acc1533. (acc1533 -> Ast_Type -> (acc1533, Ast_Type)) -> acc1533 -> Ast_Type -> (acc1533, Ast_Type) =
    lam f751.
      lam acc1534.
        lam __sem_target977.
          match
            __sem_target977
          with
            ty148
          in
          (acc1534, ty148)
  let vIntTypeAst_sfold_Expr_TypeLabel: all acc1535. (acc1535 -> Ast_Type -> acc1535) -> acc1535 -> Ast_Expr -> acc1535 =
    lam f752.
      lam acc1536.
        lam __sem_target978.
          match
            __sem_target978
          with
            p662
          in
          let res237 =
              vIntTypeAst_smapAccumL_Expr_TypeLabel
                (lam acc1537.
                   lam a546.
                     (f752 acc1537 a546, a546))
                acc1536
                p662
            in
            res237.0
  let vIntTypeAst_smapAccumL_Expr_Expr: all acc1538. (acc1538 -> Ast_Expr -> (acc1538, Ast_Expr)) -> acc1538 -> Ast_Expr -> (acc1538, Ast_Expr) =
    lam f753.
      lam acc1539.
        lam __sem_target979.
          match
            __sem_target979
          with
            p663
          in
          (acc1539, p663)
  let vIntTypeAst_smapAccumL_Expr_Type: all acc1540. (acc1540 -> Ast_Type -> (acc1540, Ast_Type)) -> acc1540 -> Ast_Expr -> (acc1540, Ast_Expr) =
    lam f754.
      lam acc1541.
        lam __sem_target980.
          match
            __sem_target980
          with
            p664
          in
          (acc1541, p664)
  let vIntTypeAst_smapAccumL_Kind_Type: all acc1542. (acc1542 -> Ast_Type -> (acc1542, Ast_Type)) -> acc1542 -> Ast_Kind -> (acc1542, Ast_Kind) =
    lam f755.
      lam acc1543.
        lam __sem_target981.
          match
            __sem_target981
          with
            s163
          in
          (acc1543, s163)
  let vIntTypeAst_smapAccumL_Type_Type: all acc1544. (acc1544 -> Ast_Type -> (acc1544, Ast_Type)) -> acc1544 -> Ast_Type -> (acc1544, Ast_Type) =
    lam f756.
      lam acc1545.
        lam __sem_target982.
          match
            __sem_target982
          with
            p665
          in
          (acc1545, p665)
  let vIntTypeAst_mapAccumLPre_Expr_Expr: all acc1546. (acc1546 -> Ast_Expr -> (acc1546, Ast_Expr)) -> acc1546 -> Ast_Expr -> (acc1546, Ast_Expr) =
    lam f757.
      lam acc1547.
        lam __sem_target983.
          match
            __sem_target983
          with
            expr185
          in
          match
              f757 acc1547 expr185
            with
              (acc1548, expr186)
            in
            vIntTypeAst_smapAccumL_Expr_Expr (vIntTypeAst_mapAccumLPre_Expr_Expr f757) acc1548 expr186
  let vIntTypeAst_mapAccumLPost_Expr_Expr: all acc1549. (acc1549 -> Ast_Expr -> (acc1549, Ast_Expr)) -> acc1549 -> Ast_Expr -> (acc1549, Ast_Expr) =
    lam f758.
      lam acc1550.
        lam __sem_target984.
          match
            __sem_target984
          with
            expr187
          in
          match
              vIntTypeAst_smapAccumL_Expr_Expr (vIntTypeAst_mapAccumLPost_Expr_Expr f758) acc1550 expr187
            with
              (acc1551, expr188)
            in
            f758 acc1551 expr188
  let vIntTypeAst_smapAccumL_Expr_TypeLabel: all acc1552. (acc1552 -> Ast_Type -> (acc1552, Ast_Type)) -> acc1552 -> Ast_Expr -> (acc1552, Ast_Expr) =
    lam f759.
      lam acc1553.
        lam __sem_target985.
          match
            __sem_target985
          with
            p666
          in
          match
              f759 acc1553 (vIntTypeAst_tyTm p666)
            with
              (acc1554, ty149)
            in
            (acc1554, vIntTypeAst_withType ty149 p666)
in
con FloatTypeAst_TyFloat: {info: Info} -> Ast_Type in
recursive
  let vFloatTypeAst_tyTm: Ast_Expr -> Ast_Type = lam x261.
      never
  let vFloatTypeAst_tyPat: Ast_Pat -> Ast_Type = lam x262.
      never
  let vFloatTypeAst_infoTm: Ast_Expr -> Info = lam x263.
      never
  let vFloatTypeAst_infoTy: Ast_Type -> Info =
    lam __sem_target902.
      match
        __sem_target902
      with
        FloatTypeAst_TyFloat r276
      in
      r276.info
  let vFloatTypeAst_infoPat: Ast_Pat -> Info = lam x264.
      never
  let vFloatTypeAst_withInfo: Info -> Ast_Expr -> Ast_Expr = lam x265.
      never
  let vFloatTypeAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr = lam x266.
      never
  let vFloatTypeAst_tyWithInfo: Info -> Ast_Type -> Ast_Type =
    lam info21.
      lam __sem_target903.
        match
          __sem_target903
        with
          FloatTypeAst_TyFloat t793
        in
        FloatTypeAst_TyFloat
            { t793 with info = info21 }
  let vFloatTypeAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target904.
      match
        __sem_target904
      with
        ty140
      in
      vFloatTypeAst_rapp_Type_Type vFloatTypeAst_unwrapType ty140
  let vFloatTypeAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target905.
      match
        __sem_target905
      with
        ty141
      in
      vFloatTypeAst_rapp_Type_Type vFloatTypeAst_inspectType ty141
  let vFloatTypeAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x267.
      never
  let vFloatTypeAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x268.
      never
  let vFloatTypeAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f690.
      lam __sem_target906.
        match
          __sem_target906
        with
          p613
        in
        let res216 =
            vFloatTypeAst_smapAccumL_Pat_Pat
              (lam #var"336".
                 lam a511.
                   ({}, f690 a511))
              {}
              p613
          in
          res216.1
  let vFloatTypeAst_countPatNodes =
    lam count266.
      lam __sem_target907.
        match
          __sem_target907
        with
          t794
        in
        let count267 = addi count266 1 in
          let count268 =
            vFloatTypeAst_sfold_Pat_Pat vFloatTypeAst_countPatNodes count267 t794
          in
          let count269 =
            vFloatTypeAst_sfold_Pat_Expr vFloatTypeAst_countExprNodes count268 t794
          in
          let count270 =
            vFloatTypeAst_sfold_Pat_Type vFloatTypeAst_countTypeNodes count269 t794
          in
          count270
  let vFloatTypeAst_sfold_Pat_Pat: all acc1433. (acc1433 -> Ast_Pat -> acc1433) -> acc1433 -> Ast_Pat -> acc1433 =
    lam f691.
      lam acc1434.
        lam __sem_target908.
          match
            __sem_target908
          with
            p614
          in
          let res217 =
              vFloatTypeAst_smapAccumL_Pat_Pat
                (lam acc1435.
                   lam a512.
                     (f691 acc1435 a512, a512))
                acc1434
                p614
            in
            res217.0
  let vFloatTypeAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f692.
      lam __sem_target909.
        match
          __sem_target909
        with
          p615
        in
        match
            vFloatTypeAst_smapAccumL_Expr_Pat
              (lam #var"337".
                 lam a513.
                   ({}, f692 a513))
              {}
              p615
          with
            (_, p616)
          in
          p616
  let vFloatTypeAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f693.
      lam __sem_target910.
        match
          __sem_target910
        with
          p617
        in
        match
            vFloatTypeAst_smapAccumL_Pat_Expr
              (lam #var"338".
                 lam a514.
                   ({}, f693 a514))
              {}
              p617
          with
            (_, p618)
          in
          p618
  let vFloatTypeAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f694.
      lam __sem_target911.
        match
          __sem_target911
        with
          p619
        in
        match
            vFloatTypeAst_smapAccumL_Pat_Type
              (lam #var"339".
                 lam a515.
                   ({}, f694 a515))
              {}
              p619
          with
            (_, p620)
          in
          p620
  let vFloatTypeAst_countExprNodes =
    lam count271.
      lam __sem_target912.
        match
          __sem_target912
        with
          t795
        in
        let count272 = addi count271 1 in
          let count273 =
            vFloatTypeAst_sfold_Expr_Expr vFloatTypeAst_countExprNodes count272 t795
          in
          let count274 =
            vFloatTypeAst_sfold_Expr_Type vFloatTypeAst_countTypeNodes count273 t795
          in
          let count275 =
            vFloatTypeAst_sfold_Expr_TypeLabel vFloatTypeAst_countTypeNodes count274 t795
          in
          let count276 =
            vFloatTypeAst_sfold_Expr_Pat vFloatTypeAst_countPatNodes count275 t795
          in
          count276
  let vFloatTypeAst_countTypeNodes =
    lam count277.
      lam __sem_target913.
        match
          __sem_target913
        with
          t796
        in
        let count278 = addi count277 1 in
          let count279 =
            vFloatTypeAst_sfold_Type_Type vFloatTypeAst_countTypeNodes count278 t796
          in
          count279
  let vFloatTypeAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f695.
      lam __sem_target914.
        match
          __sem_target914
        with
          ty142
        in
        let res218 =
            vFloatTypeAst_rappAccumL_Type_Type
              (lam #var"340".
                 lam t797.
                   ({}, f695 t797))
              {}
              ty142
          in
          res218.1
  let vFloatTypeAst_sfold_Expr_Pat: all acc1436. (acc1436 -> Ast_Pat -> acc1436) -> acc1436 -> Ast_Expr -> acc1436 =
    lam f696.
      lam acc1437.
        lam __sem_target915.
          match
            __sem_target915
          with
            p621
          in
          match
              vFloatTypeAst_smapAccumL_Expr_Pat
                (lam acc1438.
                   lam a516.
                     (f696 acc1438 a516, a516))
                acc1437
                p621
            with
              (acc1439, _)
            in
            acc1439
  let vFloatTypeAst_sfold_Pat_Expr: all acc1440. (acc1440 -> Ast_Expr -> acc1440) -> acc1440 -> Ast_Pat -> acc1440 =
    lam f697.
      lam acc1441.
        lam __sem_target916.
          match
            __sem_target916
          with
            p622
          in
          match
              vFloatTypeAst_smapAccumL_Pat_Expr
                (lam acc1442.
                   lam a517.
                     (f697 acc1442 a517, a517))
                acc1441
                p622
            with
              (acc1443, _)
            in
            acc1443
  let vFloatTypeAst_sfold_Pat_Type: all acc1444. (acc1444 -> Ast_Type -> acc1444) -> acc1444 -> Ast_Pat -> acc1444 =
    lam f698.
      lam acc1445.
        lam __sem_target917.
          match
            __sem_target917
          with
            p623
          in
          match
              vFloatTypeAst_smapAccumL_Pat_Type
                (lam acc1446.
                   lam a518.
                     (f698 acc1446 a518, a518))
                acc1445
                p623
            with
              (acc1447, _)
            in
            acc1447
  let vFloatTypeAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f699.
      lam __sem_target918.
        match
          __sem_target918
        with
          p624
        in
        let res219 =
            vFloatTypeAst_smapAccumL_Expr_Expr
              (lam #var"341".
                 lam a519.
                   ({}, f699 a519))
              {}
              p624
          in
          res219.1
  let vFloatTypeAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f700.
      lam __sem_target919.
        match
          __sem_target919
        with
          p625
        in
        let res220 =
            vFloatTypeAst_smapAccumL_Expr_Type
              (lam #var"342".
                 lam a520.
                   ({}, f700 a520))
              {}
              p625
          in
          res220.1
  let vFloatTypeAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f701: Ast_Type -> Ast_Type.
      lam __sem_target920.
        match
          __sem_target920
        with
          s156
        in
        match
            vFloatTypeAst_smapAccumL_Kind_Type
              (lam #var"343".
                 lam x269.
                   ({}, f701 x269))
              {}
              s156
          with
            (_, s157)
          in
          s157
  let vFloatTypeAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f702.
      lam __sem_target921.
        match
          __sem_target921
        with
          p626
        in
        let res221 =
            vFloatTypeAst_smapAccumL_Type_Type
              (lam #var"344".
                 lam a521.
                   ({}, f702 a521))
              {}
              p626
          in
          res221.1
  let vFloatTypeAst_sfold_Expr_Expr: all acc1448. (acc1448 -> Ast_Expr -> acc1448) -> acc1448 -> Ast_Expr -> acc1448 =
    lam f703.
      lam acc1449.
        lam __sem_target922.
          match
            __sem_target922
          with
            p627
          in
          let res222 =
              vFloatTypeAst_smapAccumL_Expr_Expr
                (lam acc1450.
                   lam a522.
                     (f703 acc1450 a522, a522))
                acc1449
                p627
            in
            res222.0
  let vFloatTypeAst_sfold_Expr_Type: all acc1451. (acc1451 -> Ast_Type -> acc1451) -> acc1451 -> Ast_Expr -> acc1451 =
    lam f704.
      lam acc1452.
        lam __sem_target923.
          match
            __sem_target923
          with
            p628
          in
          let res223 =
              vFloatTypeAst_smapAccumL_Expr_Type
                (lam acc1453.
                   lam a523.
                     (f704 acc1453 a523, a523))
                acc1452
                p628
            in
            res223.0
  let vFloatTypeAst_sfold_Kind_Type: all acc1454. (acc1454 -> Ast_Type -> acc1454) -> acc1454 -> Ast_Kind -> acc1454 =
    lam f705: acc1454 -> Ast_Type -> acc1454.
      lam acc1455: acc1454.
        lam __sem_target924.
          match
            __sem_target924
          with
            s158
          in
          match
              vFloatTypeAst_smapAccumL_Kind_Type
                (lam a524.
                   lam x270.
                     (f705 a524 x270, x270))
                acc1455
                s158
            with
              (a525, _)
            in
            a525
  let vFloatTypeAst_sfold_Type_Type: all acc1456. (acc1456 -> Ast_Type -> acc1456) -> acc1456 -> Ast_Type -> acc1456 =
    lam f706.
      lam acc1457.
        lam __sem_target925.
          match
            __sem_target925
          with
            p629
          in
          let res224 =
              vFloatTypeAst_smapAccumL_Type_Type
                (lam acc1458.
                   lam a526.
                     (f706 acc1458 a526, a526))
                acc1457
                p629
            in
            res224.0
  let vFloatTypeAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f707.
      lam __sem_target926.
        match
          __sem_target926
        with
          expr171
        in
        let expr172 = f707 expr171 in
          vFloatTypeAst_smap_Expr_Expr (vFloatTypeAst_mapPre_Expr_Expr f707) expr172
  let vFloatTypeAst_foldPre_Expr_Expr: all acc1459. (acc1459 -> Ast_Expr -> acc1459) -> acc1459 -> Ast_Expr -> acc1459 =
    lam f708.
      lam acc1460.
        lam __sem_target927.
          match
            __sem_target927
          with
            expr173
          in
          let acc1461 = f708 acc1460 expr173 in
            vFloatTypeAst_sfold_Expr_Expr (vFloatTypeAst_foldPre_Expr_Expr f708) acc1461 expr173
  let vFloatTypeAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f709.
      lam __sem_target928.
        match
          __sem_target928
        with
          expr174
        in
        f709
            (vFloatTypeAst_smap_Expr_Expr (vFloatTypeAst_mapPost_Expr_Expr f709) expr174)
  let vFloatTypeAst_foldPost_Expr_Expr: all acc1462. (acc1462 -> Ast_Expr -> acc1462) -> acc1462 -> Ast_Expr -> acc1462 =
    lam f710.
      lam acc1463.
        lam __sem_target929.
          match
            __sem_target929
          with
            expr175
          in
          f710
              (vFloatTypeAst_sfold_Expr_Expr (vFloatTypeAst_foldPost_Expr_Expr f710) acc1463 expr175)
              expr175
  let vFloatTypeAst_smapAccumL_Pat_Pat: all acc1464. (acc1464 -> Ast_Pat -> (acc1464, Ast_Pat)) -> acc1464 -> Ast_Pat -> (acc1464, Ast_Pat) =
    lam f711.
      lam acc1465.
        lam __sem_target930.
          match
            __sem_target930
          with
            p630
          in
          (acc1465, p630)
  let vFloatTypeAst_smapAccumL_Expr_Pat: all acc1466. (acc1466 -> Ast_Pat -> (acc1466, Ast_Pat)) -> acc1466 -> Ast_Expr -> (acc1466, Ast_Expr) =
    lam f712.
      lam acc1467.
        lam __sem_target931.
          match
            __sem_target931
          with
            p631
          in
          (acc1467, p631)
  let vFloatTypeAst_smapAccumL_Pat_Expr: all acc1468. (acc1468 -> Ast_Expr -> (acc1468, Ast_Expr)) -> acc1468 -> Ast_Pat -> (acc1468, Ast_Pat) =
    lam f713.
      lam acc1469.
        lam __sem_target932.
          match
            __sem_target932
          with
            p632
          in
          (acc1469, p632)
  let vFloatTypeAst_smapAccumL_Pat_Type: all acc1470. (acc1470 -> Ast_Type -> (acc1470, Ast_Type)) -> acc1470 -> Ast_Pat -> (acc1470, Ast_Pat) =
    lam f714.
      lam acc1471.
        lam __sem_target933.
          match
            __sem_target933
          with
            p633
          in
          (acc1471, p633)
  let vFloatTypeAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f715.
      lam __sem_target934.
        match
          __sem_target934
        with
          p634
        in
        let res225 =
            vFloatTypeAst_smapAccumL_Expr_TypeLabel
              (lam #var"345".
                 lam a527.
                   ({}, f715 a527))
              {}
              p634
          in
          res225.1
  let vFloatTypeAst_rappAccumL_Type_Type: all acc1472. (acc1472 -> Ast_Type -> (acc1472, Ast_Type)) -> acc1472 -> Ast_Type -> (acc1472, Ast_Type) =
    lam f716.
      lam acc1473.
        lam __sem_target935.
          match
            __sem_target935
          with
            ty143
          in
          (acc1473, ty143)
  let vFloatTypeAst_sfold_Expr_TypeLabel: all acc1474. (acc1474 -> Ast_Type -> acc1474) -> acc1474 -> Ast_Expr -> acc1474 =
    lam f717.
      lam acc1475.
        lam __sem_target936.
          match
            __sem_target936
          with
            p635
          in
          let res226 =
              vFloatTypeAst_smapAccumL_Expr_TypeLabel
                (lam acc1476.
                   lam a528.
                     (f717 acc1476 a528, a528))
                acc1475
                p635
            in
            res226.0
  let vFloatTypeAst_smapAccumL_Expr_Expr: all acc1477. (acc1477 -> Ast_Expr -> (acc1477, Ast_Expr)) -> acc1477 -> Ast_Expr -> (acc1477, Ast_Expr) =
    lam f718.
      lam acc1478.
        lam __sem_target937.
          match
            __sem_target937
          with
            p636
          in
          (acc1478, p636)
  let vFloatTypeAst_smapAccumL_Expr_Type: all acc1479. (acc1479 -> Ast_Type -> (acc1479, Ast_Type)) -> acc1479 -> Ast_Expr -> (acc1479, Ast_Expr) =
    lam f719.
      lam acc1480.
        lam __sem_target938.
          match
            __sem_target938
          with
            p637
          in
          (acc1480, p637)
  let vFloatTypeAst_smapAccumL_Kind_Type: all acc1481. (acc1481 -> Ast_Type -> (acc1481, Ast_Type)) -> acc1481 -> Ast_Kind -> (acc1481, Ast_Kind) =
    lam f720.
      lam acc1482.
        lam __sem_target939.
          match
            __sem_target939
          with
            s159
          in
          (acc1482, s159)
  let vFloatTypeAst_smapAccumL_Type_Type: all acc1483. (acc1483 -> Ast_Type -> (acc1483, Ast_Type)) -> acc1483 -> Ast_Type -> (acc1483, Ast_Type) =
    lam f721.
      lam acc1484.
        lam __sem_target940.
          match
            __sem_target940
          with
            p638
          in
          (acc1484, p638)
  let vFloatTypeAst_mapAccumLPre_Expr_Expr: all acc1485. (acc1485 -> Ast_Expr -> (acc1485, Ast_Expr)) -> acc1485 -> Ast_Expr -> (acc1485, Ast_Expr) =
    lam f722.
      lam acc1486.
        lam __sem_target941.
          match
            __sem_target941
          with
            expr176
          in
          match
              f722 acc1486 expr176
            with
              (acc1487, expr177)
            in
            vFloatTypeAst_smapAccumL_Expr_Expr (vFloatTypeAst_mapAccumLPre_Expr_Expr f722) acc1487 expr177
  let vFloatTypeAst_mapAccumLPost_Expr_Expr: all acc1488. (acc1488 -> Ast_Expr -> (acc1488, Ast_Expr)) -> acc1488 -> Ast_Expr -> (acc1488, Ast_Expr) =
    lam f723.
      lam acc1489.
        lam __sem_target942.
          match
            __sem_target942
          with
            expr178
          in
          match
              vFloatTypeAst_smapAccumL_Expr_Expr
                (vFloatTypeAst_mapAccumLPost_Expr_Expr f723) acc1489 expr178
            with
              (acc1490, expr179)
            in
            f723 acc1490 expr179
  let vFloatTypeAst_smapAccumL_Expr_TypeLabel: all acc1491. (acc1491 -> Ast_Type -> (acc1491, Ast_Type)) -> acc1491 -> Ast_Expr -> (acc1491, Ast_Expr) =
    lam f724.
      lam acc1492.
        lam __sem_target943.
          match
            __sem_target943
          with
            p639
          in
          match
              f724 acc1492 (vFloatTypeAst_tyTm p639)
            with
              (acc1493, ty144)
            in
            (acc1493, vFloatTypeAst_withType ty144 p639)
in
con CharTypeAst_TyChar: {info: Info} -> Ast_Type in
recursive
  let vCharTypeAst_tyTm: Ast_Expr -> Ast_Type = lam x251.
      never
  let vCharTypeAst_tyPat: Ast_Pat -> Ast_Type = lam x252.
      never
  let vCharTypeAst_infoTm: Ast_Expr -> Info = lam x253.
      never
  let vCharTypeAst_infoTy: Ast_Type -> Info =
    lam __sem_target860.
      match
        __sem_target860
      with
        CharTypeAst_TyChar r275
      in
      r275.info
  let vCharTypeAst_infoPat: Ast_Pat -> Info = lam x254.
      never
  let vCharTypeAst_withInfo: Info -> Ast_Expr -> Ast_Expr = lam x255.
      never
  let vCharTypeAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr = lam x256.
      never
  let vCharTypeAst_tyWithInfo: Info -> Ast_Type -> Ast_Type =
    lam info20.
      lam __sem_target861.
        match
          __sem_target861
        with
          CharTypeAst_TyChar t788
        in
        CharTypeAst_TyChar
            { t788 with info = info20 }
  let vCharTypeAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target862.
      match
        __sem_target862
      with
        ty135
      in
      vCharTypeAst_rapp_Type_Type vCharTypeAst_unwrapType ty135
  let vCharTypeAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target863.
      match
        __sem_target863
      with
        ty136
      in
      vCharTypeAst_rapp_Type_Type vCharTypeAst_inspectType ty136
  let vCharTypeAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x257.
      never
  let vCharTypeAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x258.
      never
  let vCharTypeAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f655.
      lam __sem_target864.
        match
          __sem_target864
        with
          p586
        in
        let res205 =
            vCharTypeAst_smapAccumL_Pat_Pat
              (lam #var"326".
                 lam a493.
                   ({}, f655 a493))
              {}
              p586
          in
          res205.1
  let vCharTypeAst_countPatNodes =
    lam count252.
      lam __sem_target865.
        match
          __sem_target865
        with
          t789
        in
        let count253 = addi count252 1 in
          let count254 =
            vCharTypeAst_sfold_Pat_Pat vCharTypeAst_countPatNodes count253 t789
          in
          let count255 =
            vCharTypeAst_sfold_Pat_Expr vCharTypeAst_countExprNodes count254 t789
          in
          let count256 =
            vCharTypeAst_sfold_Pat_Type vCharTypeAst_countTypeNodes count255 t789
          in
          count256
  let vCharTypeAst_sfold_Pat_Pat: all acc1372. (acc1372 -> Ast_Pat -> acc1372) -> acc1372 -> Ast_Pat -> acc1372 =
    lam f656.
      lam acc1373.
        lam __sem_target866.
          match
            __sem_target866
          with
            p587
          in
          let res206 =
              vCharTypeAst_smapAccumL_Pat_Pat
                (lam acc1374.
                   lam a494.
                     (f656 acc1374 a494, a494))
                acc1373
                p587
            in
            res206.0
  let vCharTypeAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f657.
      lam __sem_target867.
        match
          __sem_target867
        with
          p588
        in
        match
            vCharTypeAst_smapAccumL_Expr_Pat
              (lam #var"327".
                 lam a495.
                   ({}, f657 a495))
              {}
              p588
          with
            (_, p589)
          in
          p589
  let vCharTypeAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f658.
      lam __sem_target868.
        match
          __sem_target868
        with
          p590
        in
        match
            vCharTypeAst_smapAccumL_Pat_Expr
              (lam #var"328".
                 lam a496.
                   ({}, f658 a496))
              {}
              p590
          with
            (_, p591)
          in
          p591
  let vCharTypeAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f659.
      lam __sem_target869.
        match
          __sem_target869
        with
          p592
        in
        match
            vCharTypeAst_smapAccumL_Pat_Type
              (lam #var"329".
                 lam a497.
                   ({}, f659 a497))
              {}
              p592
          with
            (_, p593)
          in
          p593
  let vCharTypeAst_countExprNodes =
    lam count257.
      lam __sem_target870.
        match
          __sem_target870
        with
          t790
        in
        let count258 = addi count257 1 in
          let count259 =
            vCharTypeAst_sfold_Expr_Expr vCharTypeAst_countExprNodes count258 t790
          in
          let count260 =
            vCharTypeAst_sfold_Expr_Type vCharTypeAst_countTypeNodes count259 t790
          in
          let count261 =
            vCharTypeAst_sfold_Expr_TypeLabel vCharTypeAst_countTypeNodes count260 t790
          in
          let count262 =
            vCharTypeAst_sfold_Expr_Pat vCharTypeAst_countPatNodes count261 t790
          in
          count262
  let vCharTypeAst_countTypeNodes =
    lam count263.
      lam __sem_target871.
        match
          __sem_target871
        with
          t791
        in
        let count264 = addi count263 1 in
          let count265 =
            vCharTypeAst_sfold_Type_Type vCharTypeAst_countTypeNodes count264 t791
          in
          count265
  let vCharTypeAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f660.
      lam __sem_target872.
        match
          __sem_target872
        with
          ty137
        in
        let res207 =
            vCharTypeAst_rappAccumL_Type_Type
              (lam #var"330".
                 lam t792.
                   ({}, f660 t792))
              {}
              ty137
          in
          res207.1
  let vCharTypeAst_sfold_Expr_Pat: all acc1375. (acc1375 -> Ast_Pat -> acc1375) -> acc1375 -> Ast_Expr -> acc1375 =
    lam f661.
      lam acc1376.
        lam __sem_target873.
          match
            __sem_target873
          with
            p594
          in
          match
              vCharTypeAst_smapAccumL_Expr_Pat
                (lam acc1377.
                   lam a498.
                     (f661 acc1377 a498, a498))
                acc1376
                p594
            with
              (acc1378, _)
            in
            acc1378
  let vCharTypeAst_sfold_Pat_Expr: all acc1379. (acc1379 -> Ast_Expr -> acc1379) -> acc1379 -> Ast_Pat -> acc1379 =
    lam f662.
      lam acc1380.
        lam __sem_target874.
          match
            __sem_target874
          with
            p595
          in
          match
              vCharTypeAst_smapAccumL_Pat_Expr
                (lam acc1381.
                   lam a499.
                     (f662 acc1381 a499, a499))
                acc1380
                p595
            with
              (acc1382, _)
            in
            acc1382
  let vCharTypeAst_sfold_Pat_Type: all acc1383. (acc1383 -> Ast_Type -> acc1383) -> acc1383 -> Ast_Pat -> acc1383 =
    lam f663.
      lam acc1384.
        lam __sem_target875.
          match
            __sem_target875
          with
            p596
          in
          match
              vCharTypeAst_smapAccumL_Pat_Type
                (lam acc1385.
                   lam a500.
                     (f663 acc1385 a500, a500))
                acc1384
                p596
            with
              (acc1386, _)
            in
            acc1386
  let vCharTypeAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f664.
      lam __sem_target876.
        match
          __sem_target876
        with
          p597
        in
        let res208 =
            vCharTypeAst_smapAccumL_Expr_Expr
              (lam #var"331".
                 lam a501.
                   ({}, f664 a501))
              {}
              p597
          in
          res208.1
  let vCharTypeAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f665.
      lam __sem_target877.
        match
          __sem_target877
        with
          p598
        in
        let res209 =
            vCharTypeAst_smapAccumL_Expr_Type
              (lam #var"332".
                 lam a502.
                   ({}, f665 a502))
              {}
              p598
          in
          res209.1
  let vCharTypeAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f666: Ast_Type -> Ast_Type.
      lam __sem_target878.
        match
          __sem_target878
        with
          s152
        in
        match
            vCharTypeAst_smapAccumL_Kind_Type
              (lam #var"333".
                 lam x259.
                   ({}, f666 x259))
              {}
              s152
          with
            (_, s153)
          in
          s153
  let vCharTypeAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f667.
      lam __sem_target879.
        match
          __sem_target879
        with
          p599
        in
        let res210 =
            vCharTypeAst_smapAccumL_Type_Type
              (lam #var"334".
                 lam a503.
                   ({}, f667 a503))
              {}
              p599
          in
          res210.1
  let vCharTypeAst_sfold_Expr_Expr: all acc1387. (acc1387 -> Ast_Expr -> acc1387) -> acc1387 -> Ast_Expr -> acc1387 =
    lam f668.
      lam acc1388.
        lam __sem_target880.
          match
            __sem_target880
          with
            p600
          in
          let res211 =
              vCharTypeAst_smapAccumL_Expr_Expr
                (lam acc1389.
                   lam a504.
                     (f668 acc1389 a504, a504))
                acc1388
                p600
            in
            res211.0
  let vCharTypeAst_sfold_Expr_Type: all acc1390. (acc1390 -> Ast_Type -> acc1390) -> acc1390 -> Ast_Expr -> acc1390 =
    lam f669.
      lam acc1391.
        lam __sem_target881.
          match
            __sem_target881
          with
            p601
          in
          let res212 =
              vCharTypeAst_smapAccumL_Expr_Type
                (lam acc1392.
                   lam a505.
                     (f669 acc1392 a505, a505))
                acc1391
                p601
            in
            res212.0
  let vCharTypeAst_sfold_Kind_Type: all acc1393. (acc1393 -> Ast_Type -> acc1393) -> acc1393 -> Ast_Kind -> acc1393 =
    lam f670: acc1393 -> Ast_Type -> acc1393.
      lam acc1394: acc1393.
        lam __sem_target882.
          match
            __sem_target882
          with
            s154
          in
          match
              vCharTypeAst_smapAccumL_Kind_Type
                (lam a506.
                   lam x260.
                     (f670 a506 x260, x260))
                acc1394
                s154
            with
              (a507, _)
            in
            a507
  let vCharTypeAst_sfold_Type_Type: all acc1395. (acc1395 -> Ast_Type -> acc1395) -> acc1395 -> Ast_Type -> acc1395 =
    lam f671.
      lam acc1396.
        lam __sem_target883.
          match
            __sem_target883
          with
            p602
          in
          let res213 =
              vCharTypeAst_smapAccumL_Type_Type
                (lam acc1397.
                   lam a508.
                     (f671 acc1397 a508, a508))
                acc1396
                p602
            in
            res213.0
  let vCharTypeAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f672.
      lam __sem_target884.
        match
          __sem_target884
        with
          expr162
        in
        let expr163 = f672 expr162 in
          vCharTypeAst_smap_Expr_Expr (vCharTypeAst_mapPre_Expr_Expr f672) expr163
  let vCharTypeAst_foldPre_Expr_Expr: all acc1398. (acc1398 -> Ast_Expr -> acc1398) -> acc1398 -> Ast_Expr -> acc1398 =
    lam f673.
      lam acc1399.
        lam __sem_target885.
          match
            __sem_target885
          with
            expr164
          in
          let acc1400 = f673 acc1399 expr164 in
            vCharTypeAst_sfold_Expr_Expr (vCharTypeAst_foldPre_Expr_Expr f673) acc1400 expr164
  let vCharTypeAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f674.
      lam __sem_target886.
        match
          __sem_target886
        with
          expr165
        in
        f674
            (vCharTypeAst_smap_Expr_Expr (vCharTypeAst_mapPost_Expr_Expr f674) expr165)
  let vCharTypeAst_foldPost_Expr_Expr: all acc1401. (acc1401 -> Ast_Expr -> acc1401) -> acc1401 -> Ast_Expr -> acc1401 =
    lam f675.
      lam acc1402.
        lam __sem_target887.
          match
            __sem_target887
          with
            expr166
          in
          f675
              (vCharTypeAst_sfold_Expr_Expr (vCharTypeAst_foldPost_Expr_Expr f675) acc1402 expr166)
              expr166
  let vCharTypeAst_smapAccumL_Pat_Pat: all acc1403. (acc1403 -> Ast_Pat -> (acc1403, Ast_Pat)) -> acc1403 -> Ast_Pat -> (acc1403, Ast_Pat) =
    lam f676.
      lam acc1404.
        lam __sem_target888.
          match
            __sem_target888
          with
            p603
          in
          (acc1404, p603)
  let vCharTypeAst_smapAccumL_Expr_Pat: all acc1405. (acc1405 -> Ast_Pat -> (acc1405, Ast_Pat)) -> acc1405 -> Ast_Expr -> (acc1405, Ast_Expr) =
    lam f677.
      lam acc1406.
        lam __sem_target889.
          match
            __sem_target889
          with
            p604
          in
          (acc1406, p604)
  let vCharTypeAst_smapAccumL_Pat_Expr: all acc1407. (acc1407 -> Ast_Expr -> (acc1407, Ast_Expr)) -> acc1407 -> Ast_Pat -> (acc1407, Ast_Pat) =
    lam f678.
      lam acc1408.
        lam __sem_target890.
          match
            __sem_target890
          with
            p605
          in
          (acc1408, p605)
  let vCharTypeAst_smapAccumL_Pat_Type: all acc1409. (acc1409 -> Ast_Type -> (acc1409, Ast_Type)) -> acc1409 -> Ast_Pat -> (acc1409, Ast_Pat) =
    lam f679.
      lam acc1410.
        lam __sem_target891.
          match
            __sem_target891
          with
            p606
          in
          (acc1410, p606)
  let vCharTypeAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f680.
      lam __sem_target892.
        match
          __sem_target892
        with
          p607
        in
        let res214 =
            vCharTypeAst_smapAccumL_Expr_TypeLabel
              (lam #var"335".
                 lam a509.
                   ({}, f680 a509))
              {}
              p607
          in
          res214.1
  let vCharTypeAst_rappAccumL_Type_Type: all acc1411. (acc1411 -> Ast_Type -> (acc1411, Ast_Type)) -> acc1411 -> Ast_Type -> (acc1411, Ast_Type) =
    lam f681.
      lam acc1412.
        lam __sem_target893.
          match
            __sem_target893
          with
            ty138
          in
          (acc1412, ty138)
  let vCharTypeAst_sfold_Expr_TypeLabel: all acc1413. (acc1413 -> Ast_Type -> acc1413) -> acc1413 -> Ast_Expr -> acc1413 =
    lam f682.
      lam acc1414.
        lam __sem_target894.
          match
            __sem_target894
          with
            p608
          in
          let res215 =
              vCharTypeAst_smapAccumL_Expr_TypeLabel
                (lam acc1415.
                   lam a510.
                     (f682 acc1415 a510, a510))
                acc1414
                p608
            in
            res215.0
  let vCharTypeAst_smapAccumL_Expr_Expr: all acc1416. (acc1416 -> Ast_Expr -> (acc1416, Ast_Expr)) -> acc1416 -> Ast_Expr -> (acc1416, Ast_Expr) =
    lam f683.
      lam acc1417.
        lam __sem_target895.
          match
            __sem_target895
          with
            p609
          in
          (acc1417, p609)
  let vCharTypeAst_smapAccumL_Expr_Type: all acc1418. (acc1418 -> Ast_Type -> (acc1418, Ast_Type)) -> acc1418 -> Ast_Expr -> (acc1418, Ast_Expr) =
    lam f684.
      lam acc1419.
        lam __sem_target896.
          match
            __sem_target896
          with
            p610
          in
          (acc1419, p610)
  let vCharTypeAst_smapAccumL_Kind_Type: all acc1420. (acc1420 -> Ast_Type -> (acc1420, Ast_Type)) -> acc1420 -> Ast_Kind -> (acc1420, Ast_Kind) =
    lam f685.
      lam acc1421.
        lam __sem_target897.
          match
            __sem_target897
          with
            s155
          in
          (acc1421, s155)
  let vCharTypeAst_smapAccumL_Type_Type: all acc1422. (acc1422 -> Ast_Type -> (acc1422, Ast_Type)) -> acc1422 -> Ast_Type -> (acc1422, Ast_Type) =
    lam f686.
      lam acc1423.
        lam __sem_target898.
          match
            __sem_target898
          with
            p611
          in
          (acc1423, p611)
  let vCharTypeAst_mapAccumLPre_Expr_Expr: all acc1424. (acc1424 -> Ast_Expr -> (acc1424, Ast_Expr)) -> acc1424 -> Ast_Expr -> (acc1424, Ast_Expr) =
    lam f687.
      lam acc1425.
        lam __sem_target899.
          match
            __sem_target899
          with
            expr167
          in
          match
              f687 acc1425 expr167
            with
              (acc1426, expr168)
            in
            vCharTypeAst_smapAccumL_Expr_Expr (vCharTypeAst_mapAccumLPre_Expr_Expr f687) acc1426 expr168
  let vCharTypeAst_mapAccumLPost_Expr_Expr: all acc1427. (acc1427 -> Ast_Expr -> (acc1427, Ast_Expr)) -> acc1427 -> Ast_Expr -> (acc1427, Ast_Expr) =
    lam f688.
      lam acc1428.
        lam __sem_target900.
          match
            __sem_target900
          with
            expr169
          in
          match
              vCharTypeAst_smapAccumL_Expr_Expr (vCharTypeAst_mapAccumLPost_Expr_Expr f688) acc1428 expr169
            with
              (acc1429, expr170)
            in
            f688 acc1429 expr170
  let vCharTypeAst_smapAccumL_Expr_TypeLabel: all acc1430. (acc1430 -> Ast_Type -> (acc1430, Ast_Type)) -> acc1430 -> Ast_Expr -> (acc1430, Ast_Expr) =
    lam f689.
      lam acc1431.
        lam __sem_target901.
          match
            __sem_target901
          with
            p612
          in
          match
              f689 acc1431 (vCharTypeAst_tyTm p612)
            with
              (acc1432, ty139)
            in
            (acc1432, vCharTypeAst_withType ty139 p612)
in
con FunTypeAst_TyArrow: {to: Ast_Type, from: Ast_Type, info: Info} -> Ast_Type in
recursive
  let vFunTypeAst_tyTm: Ast_Expr -> Ast_Type = lam x241.
      never
  let vFunTypeAst_tyPat: Ast_Pat -> Ast_Type = lam x242.
      never
  let vFunTypeAst_infoTm: Ast_Expr -> Info = lam x243.
      never
  let vFunTypeAst_infoTy: Ast_Type -> Info =
    lam __sem_target818.
      match
        __sem_target818
      with
        FunTypeAst_TyArrow r274
      in
      r274.info
  let vFunTypeAst_infoPat: Ast_Pat -> Info = lam x244.
      never
  let vFunTypeAst_withInfo: Info -> Ast_Expr -> Ast_Expr = lam x245.
      never
  let vFunTypeAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr = lam x246.
      never
  let vFunTypeAst_tyWithInfo: Info -> Ast_Type -> Ast_Type =
    lam info19.
      lam __sem_target819.
        match
          __sem_target819
        with
          FunTypeAst_TyArrow t782
        in
        FunTypeAst_TyArrow
            { t782 with info = info19 }
  let vFunTypeAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target820.
      match
        __sem_target820
      with
        ty130
      in
      vFunTypeAst_rapp_Type_Type vFunTypeAst_unwrapType ty130
  let vFunTypeAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target821.
      match
        __sem_target821
      with
        ty131
      in
      vFunTypeAst_rapp_Type_Type vFunTypeAst_inspectType ty131
  let vFunTypeAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x247.
      never
  let vFunTypeAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x248.
      never
  let vFunTypeAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f620.
      lam __sem_target822.
        match
          __sem_target822
        with
          p559
        in
        let res194 =
            vFunTypeAst_smapAccumL_Pat_Pat
              (lam #var"316".
                 lam a475.
                   ({}, f620 a475))
              {}
              p559
          in
          res194.1
  let vFunTypeAst_countPatNodes =
    lam count238.
      lam __sem_target823.
        match
          __sem_target823
        with
          t783
        in
        let count239 = addi count238 1 in
          let count240 =
            vFunTypeAst_sfold_Pat_Pat vFunTypeAst_countPatNodes count239 t783
          in
          let count241 =
            vFunTypeAst_sfold_Pat_Expr vFunTypeAst_countExprNodes count240 t783
          in
          let count242 =
            vFunTypeAst_sfold_Pat_Type vFunTypeAst_countTypeNodes count241 t783
          in
          count242
  let vFunTypeAst_sfold_Pat_Pat: all acc1309. (acc1309 -> Ast_Pat -> acc1309) -> acc1309 -> Ast_Pat -> acc1309 =
    lam f621.
      lam acc1310.
        lam __sem_target824.
          match
            __sem_target824
          with
            p560
          in
          let res195 =
              vFunTypeAst_smapAccumL_Pat_Pat
                (lam acc1311.
                   lam a476.
                     (f621 acc1311 a476, a476))
                acc1310
                p560
            in
            res195.0
  let vFunTypeAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f622.
      lam __sem_target825.
        match
          __sem_target825
        with
          p561
        in
        match
            vFunTypeAst_smapAccumL_Expr_Pat
              (lam #var"317".
                 lam a477.
                   ({}, f622 a477))
              {}
              p561
          with
            (_, p562)
          in
          p562
  let vFunTypeAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f623.
      lam __sem_target826.
        match
          __sem_target826
        with
          p563
        in
        match
            vFunTypeAst_smapAccumL_Pat_Expr
              (lam #var"318".
                 lam a478.
                   ({}, f623 a478))
              {}
              p563
          with
            (_, p564)
          in
          p564
  let vFunTypeAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f624.
      lam __sem_target827.
        match
          __sem_target827
        with
          p565
        in
        match
            vFunTypeAst_smapAccumL_Pat_Type
              (lam #var"319".
                 lam a479.
                   ({}, f624 a479))
              {}
              p565
          with
            (_, p566)
          in
          p566
  let vFunTypeAst_countExprNodes =
    lam count243.
      lam __sem_target828.
        match
          __sem_target828
        with
          t784
        in
        let count244 = addi count243 1 in
          let count245 =
            vFunTypeAst_sfold_Expr_Expr vFunTypeAst_countExprNodes count244 t784
          in
          let count246 =
            vFunTypeAst_sfold_Expr_Type vFunTypeAst_countTypeNodes count245 t784
          in
          let count247 =
            vFunTypeAst_sfold_Expr_TypeLabel vFunTypeAst_countTypeNodes count246 t784
          in
          let count248 =
            vFunTypeAst_sfold_Expr_Pat vFunTypeAst_countPatNodes count247 t784
          in
          count248
  let vFunTypeAst_countTypeNodes =
    lam count249.
      lam __sem_target829.
        match
          __sem_target829
        with
          t785
        in
        let count250 = addi count249 1 in
          let count251 =
            vFunTypeAst_sfold_Type_Type vFunTypeAst_countTypeNodes count250 t785
          in
          count251
  let vFunTypeAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f625.
      lam __sem_target830.
        match
          __sem_target830
        with
          ty132
        in
        let res196 =
            vFunTypeAst_rappAccumL_Type_Type
              (lam #var"320".
                 lam t786.
                   ({}, f625 t786))
              {}
              ty132
          in
          res196.1
  let vFunTypeAst_sfold_Expr_Pat: all acc1312. (acc1312 -> Ast_Pat -> acc1312) -> acc1312 -> Ast_Expr -> acc1312 =
    lam f626.
      lam acc1313.
        lam __sem_target831.
          match
            __sem_target831
          with
            p567
          in
          match
              vFunTypeAst_smapAccumL_Expr_Pat
                (lam acc1314.
                   lam a480.
                     (f626 acc1314 a480, a480))
                acc1313
                p567
            with
              (acc1315, _)
            in
            acc1315
  let vFunTypeAst_sfold_Pat_Expr: all acc1316. (acc1316 -> Ast_Expr -> acc1316) -> acc1316 -> Ast_Pat -> acc1316 =
    lam f627.
      lam acc1317.
        lam __sem_target832.
          match
            __sem_target832
          with
            p568
          in
          match
              vFunTypeAst_smapAccumL_Pat_Expr
                (lam acc1318.
                   lam a481.
                     (f627 acc1318 a481, a481))
                acc1317
                p568
            with
              (acc1319, _)
            in
            acc1319
  let vFunTypeAst_sfold_Pat_Type: all acc1320. (acc1320 -> Ast_Type -> acc1320) -> acc1320 -> Ast_Pat -> acc1320 =
    lam f628.
      lam acc1321.
        lam __sem_target833.
          match
            __sem_target833
          with
            p569
          in
          match
              vFunTypeAst_smapAccumL_Pat_Type
                (lam acc1322.
                   lam a482.
                     (f628 acc1322 a482, a482))
                acc1321
                p569
            with
              (acc1323, _)
            in
            acc1323
  let vFunTypeAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f629.
      lam __sem_target834.
        match
          __sem_target834
        with
          p570
        in
        let res197 =
            vFunTypeAst_smapAccumL_Expr_Expr
              (lam #var"321".
                 lam a483.
                   ({}, f629 a483))
              {}
              p570
          in
          res197.1
  let vFunTypeAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f630.
      lam __sem_target835.
        match
          __sem_target835
        with
          p571
        in
        let res198 =
            vFunTypeAst_smapAccumL_Expr_Type
              (lam #var"322".
                 lam a484.
                   ({}, f630 a484))
              {}
              p571
          in
          res198.1
  let vFunTypeAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f631: Ast_Type -> Ast_Type.
      lam __sem_target836.
        match
          __sem_target836
        with
          s148
        in
        match
            vFunTypeAst_smapAccumL_Kind_Type
              (lam #var"323".
                 lam x249.
                   ({}, f631 x249))
              {}
              s148
          with
            (_, s149)
          in
          s149
  let vFunTypeAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f632.
      lam __sem_target837.
        match
          __sem_target837
        with
          p572
        in
        let res199 =
            vFunTypeAst_smapAccumL_Type_Type
              (lam #var"324".
                 lam a485.
                   ({}, f632 a485))
              {}
              p572
          in
          res199.1
  let vFunTypeAst_sfold_Expr_Expr: all acc1324. (acc1324 -> Ast_Expr -> acc1324) -> acc1324 -> Ast_Expr -> acc1324 =
    lam f633.
      lam acc1325.
        lam __sem_target838.
          match
            __sem_target838
          with
            p573
          in
          let res200 =
              vFunTypeAst_smapAccumL_Expr_Expr
                (lam acc1326.
                   lam a486.
                     (f633 acc1326 a486, a486))
                acc1325
                p573
            in
            res200.0
  let vFunTypeAst_sfold_Expr_Type: all acc1327. (acc1327 -> Ast_Type -> acc1327) -> acc1327 -> Ast_Expr -> acc1327 =
    lam f634.
      lam acc1328.
        lam __sem_target839.
          match
            __sem_target839
          with
            p574
          in
          let res201 =
              vFunTypeAst_smapAccumL_Expr_Type
                (lam acc1329.
                   lam a487.
                     (f634 acc1329 a487, a487))
                acc1328
                p574
            in
            res201.0
  let vFunTypeAst_sfold_Kind_Type: all acc1330. (acc1330 -> Ast_Type -> acc1330) -> acc1330 -> Ast_Kind -> acc1330 =
    lam f635: acc1330 -> Ast_Type -> acc1330.
      lam acc1331: acc1330.
        lam __sem_target840.
          match
            __sem_target840
          with
            s150
          in
          match
              vFunTypeAst_smapAccumL_Kind_Type
                (lam a488.
                   lam x250.
                     (f635 a488 x250, x250))
                acc1331
                s150
            with
              (a489, _)
            in
            a489
  let vFunTypeAst_sfold_Type_Type: all acc1332. (acc1332 -> Ast_Type -> acc1332) -> acc1332 -> Ast_Type -> acc1332 =
    lam f636.
      lam acc1333.
        lam __sem_target841.
          match
            __sem_target841
          with
            p575
          in
          let res202 =
              vFunTypeAst_smapAccumL_Type_Type
                (lam acc1334.
                   lam a490.
                     (f636 acc1334 a490, a490))
                acc1333
                p575
            in
            res202.0
  let vFunTypeAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f637.
      lam __sem_target842.
        match
          __sem_target842
        with
          expr153
        in
        let expr154 = f637 expr153 in
          vFunTypeAst_smap_Expr_Expr (vFunTypeAst_mapPre_Expr_Expr f637) expr154
  let vFunTypeAst_foldPre_Expr_Expr: all acc1335. (acc1335 -> Ast_Expr -> acc1335) -> acc1335 -> Ast_Expr -> acc1335 =
    lam f638.
      lam acc1336.
        lam __sem_target843.
          match
            __sem_target843
          with
            expr155
          in
          let acc1337 = f638 acc1336 expr155 in
            vFunTypeAst_sfold_Expr_Expr (vFunTypeAst_foldPre_Expr_Expr f638) acc1337 expr155
  let vFunTypeAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f639.
      lam __sem_target844.
        match
          __sem_target844
        with
          expr156
        in
        f639
            (vFunTypeAst_smap_Expr_Expr (vFunTypeAst_mapPost_Expr_Expr f639) expr156)
  let vFunTypeAst_foldPost_Expr_Expr: all acc1338. (acc1338 -> Ast_Expr -> acc1338) -> acc1338 -> Ast_Expr -> acc1338 =
    lam f640.
      lam acc1339.
        lam __sem_target845.
          match
            __sem_target845
          with
            expr157
          in
          f640
              (vFunTypeAst_sfold_Expr_Expr (vFunTypeAst_foldPost_Expr_Expr f640) acc1339 expr157)
              expr157
  let vFunTypeAst_smapAccumL_Pat_Pat: all acc1340. (acc1340 -> Ast_Pat -> (acc1340, Ast_Pat)) -> acc1340 -> Ast_Pat -> (acc1340, Ast_Pat) =
    lam f641.
      lam acc1341.
        lam __sem_target846.
          match
            __sem_target846
          with
            p576
          in
          (acc1341, p576)
  let vFunTypeAst_smapAccumL_Expr_Pat: all acc1342. (acc1342 -> Ast_Pat -> (acc1342, Ast_Pat)) -> acc1342 -> Ast_Expr -> (acc1342, Ast_Expr) =
    lam f642.
      lam acc1343.
        lam __sem_target847.
          match
            __sem_target847
          with
            p577
          in
          (acc1343, p577)
  let vFunTypeAst_smapAccumL_Pat_Expr: all acc1344. (acc1344 -> Ast_Expr -> (acc1344, Ast_Expr)) -> acc1344 -> Ast_Pat -> (acc1344, Ast_Pat) =
    lam f643.
      lam acc1345.
        lam __sem_target848.
          match
            __sem_target848
          with
            p578
          in
          (acc1345, p578)
  let vFunTypeAst_smapAccumL_Pat_Type: all acc1346. (acc1346 -> Ast_Type -> (acc1346, Ast_Type)) -> acc1346 -> Ast_Pat -> (acc1346, Ast_Pat) =
    lam f644.
      lam acc1347.
        lam __sem_target849.
          match
            __sem_target849
          with
            p579
          in
          (acc1347, p579)
  let vFunTypeAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f645.
      lam __sem_target850.
        match
          __sem_target850
        with
          p580
        in
        let res203 =
            vFunTypeAst_smapAccumL_Expr_TypeLabel
              (lam #var"325".
                 lam a491.
                   ({}, f645 a491))
              {}
              p580
          in
          res203.1
  let vFunTypeAst_rappAccumL_Type_Type: all acc1348. (acc1348 -> Ast_Type -> (acc1348, Ast_Type)) -> acc1348 -> Ast_Type -> (acc1348, Ast_Type) =
    lam f646.
      lam acc1349.
        lam __sem_target851.
          match
            __sem_target851
          with
            ty133
          in
          (acc1349, ty133)
  let vFunTypeAst_sfold_Expr_TypeLabel: all acc1350. (acc1350 -> Ast_Type -> acc1350) -> acc1350 -> Ast_Expr -> acc1350 =
    lam f647.
      lam acc1351.
        lam __sem_target852.
          match
            __sem_target852
          with
            p581
          in
          let res204 =
              vFunTypeAst_smapAccumL_Expr_TypeLabel
                (lam acc1352.
                   lam a492.
                     (f647 acc1352 a492, a492))
                acc1351
                p581
            in
            res204.0
  let vFunTypeAst_smapAccumL_Expr_Expr: all acc1353. (acc1353 -> Ast_Expr -> (acc1353, Ast_Expr)) -> acc1353 -> Ast_Expr -> (acc1353, Ast_Expr) =
    lam f648.
      lam acc1354.
        lam __sem_target853.
          match
            __sem_target853
          with
            p582
          in
          (acc1354, p582)
  let vFunTypeAst_smapAccumL_Expr_Type: all acc1355. (acc1355 -> Ast_Type -> (acc1355, Ast_Type)) -> acc1355 -> Ast_Expr -> (acc1355, Ast_Expr) =
    lam f649.
      lam acc1356.
        lam __sem_target854.
          match
            __sem_target854
          with
            p583
          in
          (acc1356, p583)
  let vFunTypeAst_smapAccumL_Kind_Type: all acc1357. (acc1357 -> Ast_Type -> (acc1357, Ast_Type)) -> acc1357 -> Ast_Kind -> (acc1357, Ast_Kind) =
    lam f650.
      lam acc1358.
        lam __sem_target855.
          match
            __sem_target855
          with
            s151
          in
          (acc1358, s151)
  let vFunTypeAst_smapAccumL_Type_Type: all acc1359. (acc1359 -> Ast_Type -> (acc1359, Ast_Type)) -> acc1359 -> Ast_Type -> (acc1359, Ast_Type) =
    lam f651.
      lam acc1360.
        lam __sem_target856.
          match
            __sem_target856
          with
            FunTypeAst_TyArrow t787
          then
            match
              f651 acc1360 t787.from
            with
              (acc1361, from3)
            in
            match
                f651 acc1361 t787.to
              with
                (acc1362, to3)
              in
              (acc1362, FunTypeAst_TyArrow
                  { t787 with from = from3, to = to3 })
          else match
            __sem_target856
          with
            p584
          in
          (acc1360, p584)
  let vFunTypeAst_mapAccumLPre_Expr_Expr: all acc1363. (acc1363 -> Ast_Expr -> (acc1363, Ast_Expr)) -> acc1363 -> Ast_Expr -> (acc1363, Ast_Expr) =
    lam f652.
      lam acc1364.
        lam __sem_target857.
          match
            __sem_target857
          with
            expr158
          in
          match
              f652 acc1364 expr158
            with
              (acc1365, expr159)
            in
            vFunTypeAst_smapAccumL_Expr_Expr (vFunTypeAst_mapAccumLPre_Expr_Expr f652) acc1365 expr159
  let vFunTypeAst_mapAccumLPost_Expr_Expr: all acc1366. (acc1366 -> Ast_Expr -> (acc1366, Ast_Expr)) -> acc1366 -> Ast_Expr -> (acc1366, Ast_Expr) =
    lam f653.
      lam acc1367.
        lam __sem_target858.
          match
            __sem_target858
          with
            expr160
          in
          match
              vFunTypeAst_smapAccumL_Expr_Expr (vFunTypeAst_mapAccumLPost_Expr_Expr f653) acc1367 expr160
            with
              (acc1368, expr161)
            in
            f653 acc1368 expr161
  let vFunTypeAst_smapAccumL_Expr_TypeLabel: all acc1369. (acc1369 -> Ast_Type -> (acc1369, Ast_Type)) -> acc1369 -> Ast_Expr -> (acc1369, Ast_Expr) =
    lam f654.
      lam acc1370.
        lam __sem_target859.
          match
            __sem_target859
          with
            p585
          in
          match
              f654 acc1370 (vFunTypeAst_tyTm p585)
            with
              (acc1371, ty134)
            in
            (acc1371, vFunTypeAst_withType ty134 p585)
in
con SeqTypeAst_TySeq: {ty: Ast_Type, info: Info} -> Ast_Type in
recursive
  let vSeqTypeAst_tyTm: Ast_Expr -> Ast_Type = lam x231.
      never
  let vSeqTypeAst_tyPat: Ast_Pat -> Ast_Type = lam x232.
      never
  let vSeqTypeAst_infoTm: Ast_Expr -> Info = lam x233.
      never
  let vSeqTypeAst_infoTy: Ast_Type -> Info =
    lam __sem_target776.
      match
        __sem_target776
      with
        SeqTypeAst_TySeq r273
      in
      r273.info
  let vSeqTypeAst_infoPat: Ast_Pat -> Info = lam x234.
      never
  let vSeqTypeAst_withInfo: Info -> Ast_Expr -> Ast_Expr = lam x235.
      never
  let vSeqTypeAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr = lam x236.
      never
  let vSeqTypeAst_tyWithInfo: Info -> Ast_Type -> Ast_Type =
    lam info18.
      lam __sem_target777.
        match
          __sem_target777
        with
          SeqTypeAst_TySeq t776
        in
        SeqTypeAst_TySeq
            { t776 with info = info18 }
  let vSeqTypeAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target778.
      match
        __sem_target778
      with
        ty124
      in
      vSeqTypeAst_rapp_Type_Type vSeqTypeAst_unwrapType ty124
  let vSeqTypeAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target779.
      match
        __sem_target779
      with
        ty125
      in
      vSeqTypeAst_rapp_Type_Type vSeqTypeAst_inspectType ty125
  let vSeqTypeAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x237.
      never
  let vSeqTypeAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x238.
      never
  let vSeqTypeAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f585.
      lam __sem_target780.
        match
          __sem_target780
        with
          p532
        in
        let res183 =
            vSeqTypeAst_smapAccumL_Pat_Pat
              (lam #var"306".
                 lam a457.
                   ({}, f585 a457))
              {}
              p532
          in
          res183.1
  let vSeqTypeAst_countPatNodes =
    lam count224.
      lam __sem_target781.
        match
          __sem_target781
        with
          t777
        in
        let count225 = addi count224 1 in
          let count226 =
            vSeqTypeAst_sfold_Pat_Pat vSeqTypeAst_countPatNodes count225 t777
          in
          let count227 =
            vSeqTypeAst_sfold_Pat_Expr vSeqTypeAst_countExprNodes count226 t777
          in
          let count228 =
            vSeqTypeAst_sfold_Pat_Type vSeqTypeAst_countTypeNodes count227 t777
          in
          count228
  let vSeqTypeAst_sfold_Pat_Pat: all acc1247. (acc1247 -> Ast_Pat -> acc1247) -> acc1247 -> Ast_Pat -> acc1247 =
    lam f586.
      lam acc1248.
        lam __sem_target782.
          match
            __sem_target782
          with
            p533
          in
          let res184 =
              vSeqTypeAst_smapAccumL_Pat_Pat
                (lam acc1249.
                   lam a458.
                     (f586 acc1249 a458, a458))
                acc1248
                p533
            in
            res184.0
  let vSeqTypeAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f587.
      lam __sem_target783.
        match
          __sem_target783
        with
          p534
        in
        match
            vSeqTypeAst_smapAccumL_Expr_Pat
              (lam #var"307".
                 lam a459.
                   ({}, f587 a459))
              {}
              p534
          with
            (_, p535)
          in
          p535
  let vSeqTypeAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f588.
      lam __sem_target784.
        match
          __sem_target784
        with
          p536
        in
        match
            vSeqTypeAst_smapAccumL_Pat_Expr
              (lam #var"308".
                 lam a460.
                   ({}, f588 a460))
              {}
              p536
          with
            (_, p537)
          in
          p537
  let vSeqTypeAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f589.
      lam __sem_target785.
        match
          __sem_target785
        with
          p538
        in
        match
            vSeqTypeAst_smapAccumL_Pat_Type
              (lam #var"309".
                 lam a461.
                   ({}, f589 a461))
              {}
              p538
          with
            (_, p539)
          in
          p539
  let vSeqTypeAst_countExprNodes =
    lam count229.
      lam __sem_target786.
        match
          __sem_target786
        with
          t778
        in
        let count230 = addi count229 1 in
          let count231 =
            vSeqTypeAst_sfold_Expr_Expr vSeqTypeAst_countExprNodes count230 t778
          in
          let count232 =
            vSeqTypeAst_sfold_Expr_Type vSeqTypeAst_countTypeNodes count231 t778
          in
          let count233 =
            vSeqTypeAst_sfold_Expr_TypeLabel vSeqTypeAst_countTypeNodes count232 t778
          in
          let count234 =
            vSeqTypeAst_sfold_Expr_Pat vSeqTypeAst_countPatNodes count233 t778
          in
          count234
  let vSeqTypeAst_countTypeNodes =
    lam count235.
      lam __sem_target787.
        match
          __sem_target787
        with
          t779
        in
        let count236 = addi count235 1 in
          let count237 =
            vSeqTypeAst_sfold_Type_Type vSeqTypeAst_countTypeNodes count236 t779
          in
          count237
  let vSeqTypeAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f590.
      lam __sem_target788.
        match
          __sem_target788
        with
          ty126
        in
        let res185 =
            vSeqTypeAst_rappAccumL_Type_Type
              (lam #var"310".
                 lam t780.
                   ({}, f590 t780))
              {}
              ty126
          in
          res185.1
  let vSeqTypeAst_sfold_Expr_Pat: all acc1250. (acc1250 -> Ast_Pat -> acc1250) -> acc1250 -> Ast_Expr -> acc1250 =
    lam f591.
      lam acc1251.
        lam __sem_target789.
          match
            __sem_target789
          with
            p540
          in
          match
              vSeqTypeAst_smapAccumL_Expr_Pat
                (lam acc1252.
                   lam a462.
                     (f591 acc1252 a462, a462))
                acc1251
                p540
            with
              (acc1253, _)
            in
            acc1253
  let vSeqTypeAst_sfold_Pat_Expr: all acc1254. (acc1254 -> Ast_Expr -> acc1254) -> acc1254 -> Ast_Pat -> acc1254 =
    lam f592.
      lam acc1255.
        lam __sem_target790.
          match
            __sem_target790
          with
            p541
          in
          match
              vSeqTypeAst_smapAccumL_Pat_Expr
                (lam acc1256.
                   lam a463.
                     (f592 acc1256 a463, a463))
                acc1255
                p541
            with
              (acc1257, _)
            in
            acc1257
  let vSeqTypeAst_sfold_Pat_Type: all acc1258. (acc1258 -> Ast_Type -> acc1258) -> acc1258 -> Ast_Pat -> acc1258 =
    lam f593.
      lam acc1259.
        lam __sem_target791.
          match
            __sem_target791
          with
            p542
          in
          match
              vSeqTypeAst_smapAccumL_Pat_Type
                (lam acc1260.
                   lam a464.
                     (f593 acc1260 a464, a464))
                acc1259
                p542
            with
              (acc1261, _)
            in
            acc1261
  let vSeqTypeAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f594.
      lam __sem_target792.
        match
          __sem_target792
        with
          p543
        in
        let res186 =
            vSeqTypeAst_smapAccumL_Expr_Expr
              (lam #var"311".
                 lam a465.
                   ({}, f594 a465))
              {}
              p543
          in
          res186.1
  let vSeqTypeAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f595.
      lam __sem_target793.
        match
          __sem_target793
        with
          p544
        in
        let res187 =
            vSeqTypeAst_smapAccumL_Expr_Type
              (lam #var"312".
                 lam a466.
                   ({}, f595 a466))
              {}
              p544
          in
          res187.1
  let vSeqTypeAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f596: Ast_Type -> Ast_Type.
      lam __sem_target794.
        match
          __sem_target794
        with
          s144
        in
        match
            vSeqTypeAst_smapAccumL_Kind_Type
              (lam #var"313".
                 lam x239.
                   ({}, f596 x239))
              {}
              s144
          with
            (_, s145)
          in
          s145
  let vSeqTypeAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f597.
      lam __sem_target795.
        match
          __sem_target795
        with
          p545
        in
        let res188 =
            vSeqTypeAst_smapAccumL_Type_Type
              (lam #var"314".
                 lam a467.
                   ({}, f597 a467))
              {}
              p545
          in
          res188.1
  let vSeqTypeAst_sfold_Expr_Expr: all acc1262. (acc1262 -> Ast_Expr -> acc1262) -> acc1262 -> Ast_Expr -> acc1262 =
    lam f598.
      lam acc1263.
        lam __sem_target796.
          match
            __sem_target796
          with
            p546
          in
          let res189 =
              vSeqTypeAst_smapAccumL_Expr_Expr
                (lam acc1264.
                   lam a468.
                     (f598 acc1264 a468, a468))
                acc1263
                p546
            in
            res189.0
  let vSeqTypeAst_sfold_Expr_Type: all acc1265. (acc1265 -> Ast_Type -> acc1265) -> acc1265 -> Ast_Expr -> acc1265 =
    lam f599.
      lam acc1266.
        lam __sem_target797.
          match
            __sem_target797
          with
            p547
          in
          let res190 =
              vSeqTypeAst_smapAccumL_Expr_Type
                (lam acc1267.
                   lam a469.
                     (f599 acc1267 a469, a469))
                acc1266
                p547
            in
            res190.0
  let vSeqTypeAst_sfold_Kind_Type: all acc1268. (acc1268 -> Ast_Type -> acc1268) -> acc1268 -> Ast_Kind -> acc1268 =
    lam f600: acc1268 -> Ast_Type -> acc1268.
      lam acc1269: acc1268.
        lam __sem_target798.
          match
            __sem_target798
          with
            s146
          in
          match
              vSeqTypeAst_smapAccumL_Kind_Type
                (lam a470.
                   lam x240.
                     (f600 a470 x240, x240))
                acc1269
                s146
            with
              (a471, _)
            in
            a471
  let vSeqTypeAst_sfold_Type_Type: all acc1270. (acc1270 -> Ast_Type -> acc1270) -> acc1270 -> Ast_Type -> acc1270 =
    lam f601.
      lam acc1271.
        lam __sem_target799.
          match
            __sem_target799
          with
            p548
          in
          let res191 =
              vSeqTypeAst_smapAccumL_Type_Type
                (lam acc1272.
                   lam a472.
                     (f601 acc1272 a472, a472))
                acc1271
                p548
            in
            res191.0
  let vSeqTypeAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f602.
      lam __sem_target800.
        match
          __sem_target800
        with
          expr144
        in
        let expr145 = f602 expr144 in
          vSeqTypeAst_smap_Expr_Expr (vSeqTypeAst_mapPre_Expr_Expr f602) expr145
  let vSeqTypeAst_foldPre_Expr_Expr: all acc1273. (acc1273 -> Ast_Expr -> acc1273) -> acc1273 -> Ast_Expr -> acc1273 =
    lam f603.
      lam acc1274.
        lam __sem_target801.
          match
            __sem_target801
          with
            expr146
          in
          let acc1275 = f603 acc1274 expr146 in
            vSeqTypeAst_sfold_Expr_Expr (vSeqTypeAst_foldPre_Expr_Expr f603) acc1275 expr146
  let vSeqTypeAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f604.
      lam __sem_target802.
        match
          __sem_target802
        with
          expr147
        in
        f604
            (vSeqTypeAst_smap_Expr_Expr (vSeqTypeAst_mapPost_Expr_Expr f604) expr147)
  let vSeqTypeAst_foldPost_Expr_Expr: all acc1276. (acc1276 -> Ast_Expr -> acc1276) -> acc1276 -> Ast_Expr -> acc1276 =
    lam f605.
      lam acc1277.
        lam __sem_target803.
          match
            __sem_target803
          with
            expr148
          in
          f605
              (vSeqTypeAst_sfold_Expr_Expr (vSeqTypeAst_foldPost_Expr_Expr f605) acc1277 expr148)
              expr148
  let vSeqTypeAst_smapAccumL_Pat_Pat: all acc1278. (acc1278 -> Ast_Pat -> (acc1278, Ast_Pat)) -> acc1278 -> Ast_Pat -> (acc1278, Ast_Pat) =
    lam f606.
      lam acc1279.
        lam __sem_target804.
          match
            __sem_target804
          with
            p549
          in
          (acc1279, p549)
  let vSeqTypeAst_smapAccumL_Expr_Pat: all acc1280. (acc1280 -> Ast_Pat -> (acc1280, Ast_Pat)) -> acc1280 -> Ast_Expr -> (acc1280, Ast_Expr) =
    lam f607.
      lam acc1281.
        lam __sem_target805.
          match
            __sem_target805
          with
            p550
          in
          (acc1281, p550)
  let vSeqTypeAst_smapAccumL_Pat_Expr: all acc1282. (acc1282 -> Ast_Expr -> (acc1282, Ast_Expr)) -> acc1282 -> Ast_Pat -> (acc1282, Ast_Pat) =
    lam f608.
      lam acc1283.
        lam __sem_target806.
          match
            __sem_target806
          with
            p551
          in
          (acc1283, p551)
  let vSeqTypeAst_smapAccumL_Pat_Type: all acc1284. (acc1284 -> Ast_Type -> (acc1284, Ast_Type)) -> acc1284 -> Ast_Pat -> (acc1284, Ast_Pat) =
    lam f609.
      lam acc1285.
        lam __sem_target807.
          match
            __sem_target807
          with
            p552
          in
          (acc1285, p552)
  let vSeqTypeAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f610.
      lam __sem_target808.
        match
          __sem_target808
        with
          p553
        in
        let res192 =
            vSeqTypeAst_smapAccumL_Expr_TypeLabel
              (lam #var"315".
                 lam a473.
                   ({}, f610 a473))
              {}
              p553
          in
          res192.1
  let vSeqTypeAst_rappAccumL_Type_Type: all acc1286. (acc1286 -> Ast_Type -> (acc1286, Ast_Type)) -> acc1286 -> Ast_Type -> (acc1286, Ast_Type) =
    lam f611.
      lam acc1287.
        lam __sem_target809.
          match
            __sem_target809
          with
            ty127
          in
          (acc1287, ty127)
  let vSeqTypeAst_sfold_Expr_TypeLabel: all acc1288. (acc1288 -> Ast_Type -> acc1288) -> acc1288 -> Ast_Expr -> acc1288 =
    lam f612.
      lam acc1289.
        lam __sem_target810.
          match
            __sem_target810
          with
            p554
          in
          let res193 =
              vSeqTypeAst_smapAccumL_Expr_TypeLabel
                (lam acc1290.
                   lam a474.
                     (f612 acc1290 a474, a474))
                acc1289
                p554
            in
            res193.0
  let vSeqTypeAst_smapAccumL_Expr_Expr: all acc1291. (acc1291 -> Ast_Expr -> (acc1291, Ast_Expr)) -> acc1291 -> Ast_Expr -> (acc1291, Ast_Expr) =
    lam f613.
      lam acc1292.
        lam __sem_target811.
          match
            __sem_target811
          with
            p555
          in
          (acc1292, p555)
  let vSeqTypeAst_smapAccumL_Expr_Type: all acc1293. (acc1293 -> Ast_Type -> (acc1293, Ast_Type)) -> acc1293 -> Ast_Expr -> (acc1293, Ast_Expr) =
    lam f614.
      lam acc1294.
        lam __sem_target812.
          match
            __sem_target812
          with
            p556
          in
          (acc1294, p556)
  let vSeqTypeAst_smapAccumL_Kind_Type: all acc1295. (acc1295 -> Ast_Type -> (acc1295, Ast_Type)) -> acc1295 -> Ast_Kind -> (acc1295, Ast_Kind) =
    lam f615.
      lam acc1296.
        lam __sem_target813.
          match
            __sem_target813
          with
            s147
          in
          (acc1296, s147)
  let vSeqTypeAst_smapAccumL_Type_Type: all acc1297. (acc1297 -> Ast_Type -> (acc1297, Ast_Type)) -> acc1297 -> Ast_Type -> (acc1297, Ast_Type) =
    lam f616.
      lam acc1298.
        lam __sem_target814.
          match
            __sem_target814
          with
            SeqTypeAst_TySeq t781
          then
            match
              f616 acc1298 t781.ty
            with
              (acc1299, ty128)
            in
            (acc1299, SeqTypeAst_TySeq
                { t781 with ty = ty128 })
          else match
            __sem_target814
          with
            p557
          in
          (acc1298, p557)
  let vSeqTypeAst_mapAccumLPre_Expr_Expr: all acc1300. (acc1300 -> Ast_Expr -> (acc1300, Ast_Expr)) -> acc1300 -> Ast_Expr -> (acc1300, Ast_Expr) =
    lam f617.
      lam acc1301.
        lam __sem_target815.
          match
            __sem_target815
          with
            expr149
          in
          match
              f617 acc1301 expr149
            with
              (acc1302, expr150)
            in
            vSeqTypeAst_smapAccumL_Expr_Expr (vSeqTypeAst_mapAccumLPre_Expr_Expr f617) acc1302 expr150
  let vSeqTypeAst_mapAccumLPost_Expr_Expr: all acc1303. (acc1303 -> Ast_Expr -> (acc1303, Ast_Expr)) -> acc1303 -> Ast_Expr -> (acc1303, Ast_Expr) =
    lam f618.
      lam acc1304.
        lam __sem_target816.
          match
            __sem_target816
          with
            expr151
          in
          match
              vSeqTypeAst_smapAccumL_Expr_Expr (vSeqTypeAst_mapAccumLPost_Expr_Expr f618) acc1304 expr151
            with
              (acc1305, expr152)
            in
            f618 acc1305 expr152
  let vSeqTypeAst_smapAccumL_Expr_TypeLabel: all acc1306. (acc1306 -> Ast_Type -> (acc1306, Ast_Type)) -> acc1306 -> Ast_Expr -> (acc1306, Ast_Expr) =
    lam f619.
      lam acc1307.
        lam __sem_target817.
          match
            __sem_target817
          with
            p558
          in
          match
              f619 acc1307 (vSeqTypeAst_tyTm p558)
            with
              (acc1308, ty129)
            in
            (acc1308, vSeqTypeAst_withType ty129 p558)
in
con TensorTypeAst_TyTensor: {ty: Ast_Type, info: Info} -> Ast_Type in
recursive
  let vTensorTypeAst_tyTm: Ast_Expr -> Ast_Type = lam x221.
      never
  let vTensorTypeAst_tyPat: Ast_Pat -> Ast_Type = lam x222.
      never
  let vTensorTypeAst_infoTm: Ast_Expr -> Info = lam x223.
      never
  let vTensorTypeAst_infoTy: Ast_Type -> Info =
    lam __sem_target734.
      match
        __sem_target734
      with
        TensorTypeAst_TyTensor r272
      in
      r272.info
  let vTensorTypeAst_infoPat: Ast_Pat -> Info = lam x224.
      never
  let vTensorTypeAst_withInfo: Info -> Ast_Expr -> Ast_Expr = lam x225.
      never
  let vTensorTypeAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr = lam x226.
      never
  let vTensorTypeAst_tyWithInfo: Info -> Ast_Type -> Ast_Type =
    lam info17.
      lam __sem_target735.
        match
          __sem_target735
        with
          TensorTypeAst_TyTensor t770
        in
        TensorTypeAst_TyTensor
            { t770 with info = info17 }
  let vTensorTypeAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target736.
      match
        __sem_target736
      with
        ty118
      in
      vTensorTypeAst_rapp_Type_Type vTensorTypeAst_unwrapType ty118
  let vTensorTypeAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target737.
      match
        __sem_target737
      with
        ty119
      in
      vTensorTypeAst_rapp_Type_Type vTensorTypeAst_inspectType ty119
  let vTensorTypeAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x227.
      never
  let vTensorTypeAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x228.
      never
  let vTensorTypeAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f550.
      lam __sem_target738.
        match
          __sem_target738
        with
          p505
        in
        let res172 =
            vTensorTypeAst_smapAccumL_Pat_Pat
              (lam #var"296".
                 lam a439.
                   ({}, f550 a439))
              {}
              p505
          in
          res172.1
  let vTensorTypeAst_countPatNodes =
    lam count210.
      lam __sem_target739.
        match
          __sem_target739
        with
          t771
        in
        let count211 = addi count210 1 in
          let count212 =
            vTensorTypeAst_sfold_Pat_Pat vTensorTypeAst_countPatNodes count211 t771
          in
          let count213 =
            vTensorTypeAst_sfold_Pat_Expr vTensorTypeAst_countExprNodes count212 t771
          in
          let count214 =
            vTensorTypeAst_sfold_Pat_Type vTensorTypeAst_countTypeNodes count213 t771
          in
          count214
  let vTensorTypeAst_sfold_Pat_Pat: all acc1185. (acc1185 -> Ast_Pat -> acc1185) -> acc1185 -> Ast_Pat -> acc1185 =
    lam f551.
      lam acc1186.
        lam __sem_target740.
          match
            __sem_target740
          with
            p506
          in
          let res173 =
              vTensorTypeAst_smapAccumL_Pat_Pat
                (lam acc1187.
                   lam a440.
                     (f551 acc1187 a440, a440))
                acc1186
                p506
            in
            res173.0
  let vTensorTypeAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f552.
      lam __sem_target741.
        match
          __sem_target741
        with
          p507
        in
        match
            vTensorTypeAst_smapAccumL_Expr_Pat
              (lam #var"297".
                 lam a441.
                   ({}, f552 a441))
              {}
              p507
          with
            (_, p508)
          in
          p508
  let vTensorTypeAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f553.
      lam __sem_target742.
        match
          __sem_target742
        with
          p509
        in
        match
            vTensorTypeAst_smapAccumL_Pat_Expr
              (lam #var"298".
                 lam a442.
                   ({}, f553 a442))
              {}
              p509
          with
            (_, p510)
          in
          p510
  let vTensorTypeAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f554.
      lam __sem_target743.
        match
          __sem_target743
        with
          p511
        in
        match
            vTensorTypeAst_smapAccumL_Pat_Type
              (lam #var"299".
                 lam a443.
                   ({}, f554 a443))
              {}
              p511
          with
            (_, p512)
          in
          p512
  let vTensorTypeAst_countExprNodes =
    lam count215.
      lam __sem_target744.
        match
          __sem_target744
        with
          t772
        in
        let count216 = addi count215 1 in
          let count217 =
            vTensorTypeAst_sfold_Expr_Expr vTensorTypeAst_countExprNodes count216 t772
          in
          let count218 =
            vTensorTypeAst_sfold_Expr_Type vTensorTypeAst_countTypeNodes count217 t772
          in
          let count219 =
            vTensorTypeAst_sfold_Expr_TypeLabel vTensorTypeAst_countTypeNodes count218 t772
          in
          let count220 =
            vTensorTypeAst_sfold_Expr_Pat vTensorTypeAst_countPatNodes count219 t772
          in
          count220
  let vTensorTypeAst_countTypeNodes =
    lam count221.
      lam __sem_target745.
        match
          __sem_target745
        with
          t773
        in
        let count222 = addi count221 1 in
          let count223 =
            vTensorTypeAst_sfold_Type_Type vTensorTypeAst_countTypeNodes count222 t773
          in
          count223
  let vTensorTypeAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f555.
      lam __sem_target746.
        match
          __sem_target746
        with
          ty120
        in
        let res174 =
            vTensorTypeAst_rappAccumL_Type_Type
              (lam #var"300".
                 lam t774.
                   ({}, f555 t774))
              {}
              ty120
          in
          res174.1
  let vTensorTypeAst_sfold_Expr_Pat: all acc1188. (acc1188 -> Ast_Pat -> acc1188) -> acc1188 -> Ast_Expr -> acc1188 =
    lam f556.
      lam acc1189.
        lam __sem_target747.
          match
            __sem_target747
          with
            p513
          in
          match
              vTensorTypeAst_smapAccumL_Expr_Pat
                (lam acc1190.
                   lam a444.
                     (f556 acc1190 a444, a444))
                acc1189
                p513
            with
              (acc1191, _)
            in
            acc1191
  let vTensorTypeAst_sfold_Pat_Expr: all acc1192. (acc1192 -> Ast_Expr -> acc1192) -> acc1192 -> Ast_Pat -> acc1192 =
    lam f557.
      lam acc1193.
        lam __sem_target748.
          match
            __sem_target748
          with
            p514
          in
          match
              vTensorTypeAst_smapAccumL_Pat_Expr
                (lam acc1194.
                   lam a445.
                     (f557 acc1194 a445, a445))
                acc1193
                p514
            with
              (acc1195, _)
            in
            acc1195
  let vTensorTypeAst_sfold_Pat_Type: all acc1196. (acc1196 -> Ast_Type -> acc1196) -> acc1196 -> Ast_Pat -> acc1196 =
    lam f558.
      lam acc1197.
        lam __sem_target749.
          match
            __sem_target749
          with
            p515
          in
          match
              vTensorTypeAst_smapAccumL_Pat_Type
                (lam acc1198.
                   lam a446.
                     (f558 acc1198 a446, a446))
                acc1197
                p515
            with
              (acc1199, _)
            in
            acc1199
  let vTensorTypeAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f559.
      lam __sem_target750.
        match
          __sem_target750
        with
          p516
        in
        let res175 =
            vTensorTypeAst_smapAccumL_Expr_Expr
              (lam #var"301".
                 lam a447.
                   ({}, f559 a447))
              {}
              p516
          in
          res175.1
  let vTensorTypeAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f560.
      lam __sem_target751.
        match
          __sem_target751
        with
          p517
        in
        let res176 =
            vTensorTypeAst_smapAccumL_Expr_Type
              (lam #var"302".
                 lam a448.
                   ({}, f560 a448))
              {}
              p517
          in
          res176.1
  let vTensorTypeAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f561: Ast_Type -> Ast_Type.
      lam __sem_target752.
        match
          __sem_target752
        with
          s140
        in
        match
            vTensorTypeAst_smapAccumL_Kind_Type
              (lam #var"303".
                 lam x229.
                   ({}, f561 x229))
              {}
              s140
          with
            (_, s141)
          in
          s141
  let vTensorTypeAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f562.
      lam __sem_target753.
        match
          __sem_target753
        with
          p518
        in
        let res177 =
            vTensorTypeAst_smapAccumL_Type_Type
              (lam #var"304".
                 lam a449.
                   ({}, f562 a449))
              {}
              p518
          in
          res177.1
  let vTensorTypeAst_sfold_Expr_Expr: all acc1200. (acc1200 -> Ast_Expr -> acc1200) -> acc1200 -> Ast_Expr -> acc1200 =
    lam f563.
      lam acc1201.
        lam __sem_target754.
          match
            __sem_target754
          with
            p519
          in
          let res178 =
              vTensorTypeAst_smapAccumL_Expr_Expr
                (lam acc1202.
                   lam a450.
                     (f563 acc1202 a450, a450))
                acc1201
                p519
            in
            res178.0
  let vTensorTypeAst_sfold_Expr_Type: all acc1203. (acc1203 -> Ast_Type -> acc1203) -> acc1203 -> Ast_Expr -> acc1203 =
    lam f564.
      lam acc1204.
        lam __sem_target755.
          match
            __sem_target755
          with
            p520
          in
          let res179 =
              vTensorTypeAst_smapAccumL_Expr_Type
                (lam acc1205.
                   lam a451.
                     (f564 acc1205 a451, a451))
                acc1204
                p520
            in
            res179.0
  let vTensorTypeAst_sfold_Kind_Type: all acc1206. (acc1206 -> Ast_Type -> acc1206) -> acc1206 -> Ast_Kind -> acc1206 =
    lam f565: acc1206 -> Ast_Type -> acc1206.
      lam acc1207: acc1206.
        lam __sem_target756.
          match
            __sem_target756
          with
            s142
          in
          match
              vTensorTypeAst_smapAccumL_Kind_Type
                (lam a452.
                   lam x230.
                     (f565 a452 x230, x230))
                acc1207
                s142
            with
              (a453, _)
            in
            a453
  let vTensorTypeAst_sfold_Type_Type: all acc1208. (acc1208 -> Ast_Type -> acc1208) -> acc1208 -> Ast_Type -> acc1208 =
    lam f566.
      lam acc1209.
        lam __sem_target757.
          match
            __sem_target757
          with
            p521
          in
          let res180 =
              vTensorTypeAst_smapAccumL_Type_Type
                (lam acc1210.
                   lam a454.
                     (f566 acc1210 a454, a454))
                acc1209
                p521
            in
            res180.0
  let vTensorTypeAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f567.
      lam __sem_target758.
        match
          __sem_target758
        with
          expr135
        in
        let expr136 = f567 expr135 in
          vTensorTypeAst_smap_Expr_Expr (vTensorTypeAst_mapPre_Expr_Expr f567) expr136
  let vTensorTypeAst_foldPre_Expr_Expr: all acc1211. (acc1211 -> Ast_Expr -> acc1211) -> acc1211 -> Ast_Expr -> acc1211 =
    lam f568.
      lam acc1212.
        lam __sem_target759.
          match
            __sem_target759
          with
            expr137
          in
          let acc1213 = f568 acc1212 expr137 in
            vTensorTypeAst_sfold_Expr_Expr (vTensorTypeAst_foldPre_Expr_Expr f568) acc1213 expr137
  let vTensorTypeAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f569.
      lam __sem_target760.
        match
          __sem_target760
        with
          expr138
        in
        f569
            (vTensorTypeAst_smap_Expr_Expr (vTensorTypeAst_mapPost_Expr_Expr f569) expr138)
  let vTensorTypeAst_foldPost_Expr_Expr: all acc1214. (acc1214 -> Ast_Expr -> acc1214) -> acc1214 -> Ast_Expr -> acc1214 =
    lam f570.
      lam acc1215.
        lam __sem_target761.
          match
            __sem_target761
          with
            expr139
          in
          f570
              (vTensorTypeAst_sfold_Expr_Expr (vTensorTypeAst_foldPost_Expr_Expr f570) acc1215 expr139)
              expr139
  let vTensorTypeAst_smapAccumL_Pat_Pat: all acc1216. (acc1216 -> Ast_Pat -> (acc1216, Ast_Pat)) -> acc1216 -> Ast_Pat -> (acc1216, Ast_Pat) =
    lam f571.
      lam acc1217.
        lam __sem_target762.
          match
            __sem_target762
          with
            p522
          in
          (acc1217, p522)
  let vTensorTypeAst_smapAccumL_Expr_Pat: all acc1218. (acc1218 -> Ast_Pat -> (acc1218, Ast_Pat)) -> acc1218 -> Ast_Expr -> (acc1218, Ast_Expr) =
    lam f572.
      lam acc1219.
        lam __sem_target763.
          match
            __sem_target763
          with
            p523
          in
          (acc1219, p523)
  let vTensorTypeAst_smapAccumL_Pat_Expr: all acc1220. (acc1220 -> Ast_Expr -> (acc1220, Ast_Expr)) -> acc1220 -> Ast_Pat -> (acc1220, Ast_Pat) =
    lam f573.
      lam acc1221.
        lam __sem_target764.
          match
            __sem_target764
          with
            p524
          in
          (acc1221, p524)
  let vTensorTypeAst_smapAccumL_Pat_Type: all acc1222. (acc1222 -> Ast_Type -> (acc1222, Ast_Type)) -> acc1222 -> Ast_Pat -> (acc1222, Ast_Pat) =
    lam f574.
      lam acc1223.
        lam __sem_target765.
          match
            __sem_target765
          with
            p525
          in
          (acc1223, p525)
  let vTensorTypeAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f575.
      lam __sem_target766.
        match
          __sem_target766
        with
          p526
        in
        let res181 =
            vTensorTypeAst_smapAccumL_Expr_TypeLabel
              (lam #var"305".
                 lam a455.
                   ({}, f575 a455))
              {}
              p526
          in
          res181.1
  let vTensorTypeAst_rappAccumL_Type_Type: all acc1224. (acc1224 -> Ast_Type -> (acc1224, Ast_Type)) -> acc1224 -> Ast_Type -> (acc1224, Ast_Type) =
    lam f576.
      lam acc1225.
        lam __sem_target767.
          match
            __sem_target767
          with
            ty121
          in
          (acc1225, ty121)
  let vTensorTypeAst_sfold_Expr_TypeLabel: all acc1226. (acc1226 -> Ast_Type -> acc1226) -> acc1226 -> Ast_Expr -> acc1226 =
    lam f577.
      lam acc1227.
        lam __sem_target768.
          match
            __sem_target768
          with
            p527
          in
          let res182 =
              vTensorTypeAst_smapAccumL_Expr_TypeLabel
                (lam acc1228.
                   lam a456.
                     (f577 acc1228 a456, a456))
                acc1227
                p527
            in
            res182.0
  let vTensorTypeAst_smapAccumL_Expr_Expr: all acc1229. (acc1229 -> Ast_Expr -> (acc1229, Ast_Expr)) -> acc1229 -> Ast_Expr -> (acc1229, Ast_Expr) =
    lam f578.
      lam acc1230.
        lam __sem_target769.
          match
            __sem_target769
          with
            p528
          in
          (acc1230, p528)
  let vTensorTypeAst_smapAccumL_Expr_Type: all acc1231. (acc1231 -> Ast_Type -> (acc1231, Ast_Type)) -> acc1231 -> Ast_Expr -> (acc1231, Ast_Expr) =
    lam f579.
      lam acc1232.
        lam __sem_target770.
          match
            __sem_target770
          with
            p529
          in
          (acc1232, p529)
  let vTensorTypeAst_smapAccumL_Kind_Type: all acc1233. (acc1233 -> Ast_Type -> (acc1233, Ast_Type)) -> acc1233 -> Ast_Kind -> (acc1233, Ast_Kind) =
    lam f580.
      lam acc1234.
        lam __sem_target771.
          match
            __sem_target771
          with
            s143
          in
          (acc1234, s143)
  let vTensorTypeAst_smapAccumL_Type_Type: all acc1235. (acc1235 -> Ast_Type -> (acc1235, Ast_Type)) -> acc1235 -> Ast_Type -> (acc1235, Ast_Type) =
    lam f581.
      lam acc1236.
        lam __sem_target772.
          match
            __sem_target772
          with
            TensorTypeAst_TyTensor t775
          then
            match
              f581 acc1236 t775.ty
            with
              (acc1237, ty122)
            in
            (acc1237, TensorTypeAst_TyTensor
                { t775 with ty = ty122 })
          else match
            __sem_target772
          with
            p530
          in
          (acc1236, p530)
  let vTensorTypeAst_mapAccumLPre_Expr_Expr: all acc1238. (acc1238 -> Ast_Expr -> (acc1238, Ast_Expr)) -> acc1238 -> Ast_Expr -> (acc1238, Ast_Expr) =
    lam f582.
      lam acc1239.
        lam __sem_target773.
          match
            __sem_target773
          with
            expr140
          in
          match
              f582 acc1239 expr140
            with
              (acc1240, expr141)
            in
            vTensorTypeAst_smapAccumL_Expr_Expr
                (vTensorTypeAst_mapAccumLPre_Expr_Expr f582) acc1240 expr141
  let vTensorTypeAst_mapAccumLPost_Expr_Expr: all acc1241. (acc1241 -> Ast_Expr -> (acc1241, Ast_Expr)) -> acc1241 -> Ast_Expr -> (acc1241, Ast_Expr) =
    lam f583.
      lam acc1242.
        lam __sem_target774.
          match
            __sem_target774
          with
            expr142
          in
          match
              vTensorTypeAst_smapAccumL_Expr_Expr
                (vTensorTypeAst_mapAccumLPost_Expr_Expr f583) acc1242 expr142
            with
              (acc1243, expr143)
            in
            f583 acc1243 expr143
  let vTensorTypeAst_smapAccumL_Expr_TypeLabel: all acc1244. (acc1244 -> Ast_Type -> (acc1244, Ast_Type)) -> acc1244 -> Ast_Expr -> (acc1244, Ast_Expr) =
    lam f584.
      lam acc1245.
        lam __sem_target775.
          match
            __sem_target775
          with
            p531
          in
          match
              f584 acc1245 (vTensorTypeAst_tyTm p531)
            with
              (acc1246, ty123)
            in
            (acc1246, vTensorTypeAst_withType ty123 p531)
in
con RecordTypeAst_TyRecord: {info: Info, fields: Map SID Ast_Type} -> Ast_Type in
recursive
  let vRecordTypeAst_tyTm: Ast_Expr -> Ast_Type = lam x206.
      never
  let vRecordTypeAst_tyPat: Ast_Pat -> Ast_Type = lam x207.
      never
  let vRecordTypeAst_infoTm: Ast_Expr -> Info = lam x208.
      never
  let vRecordTypeAst_infoTy: Ast_Type -> Info =
    lam __sem_target692.
      match
        __sem_target692
      with
        RecordTypeAst_TyRecord r271
      in
      r271.info
  let vRecordTypeAst_infoPat: Ast_Pat -> Info = lam x209.
      never
  let vRecordTypeAst_withInfo: Info -> Ast_Expr -> Ast_Expr = lam x215.
      never
  let vRecordTypeAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr = lam x216.
      never
  let vRecordTypeAst_tyWithInfo: Info -> Ast_Type -> Ast_Type =
    lam info16.
      lam __sem_target693.
        match
          __sem_target693
        with
          RecordTypeAst_TyRecord t764
        in
        RecordTypeAst_TyRecord
            { t764 with info = info16 }
  let vRecordTypeAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target694.
      match
        __sem_target694
      with
        ty113
      in
      vRecordTypeAst_rapp_Type_Type vRecordTypeAst_unwrapType ty113
  let vRecordTypeAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target695.
      match
        __sem_target695
      with
        ty114
      in
      vRecordTypeAst_rapp_Type_Type vRecordTypeAst_inspectType ty114
  let vRecordTypeAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x217.
      never
  let vRecordTypeAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x218.
      never
  let vRecordTypeAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f515.
      lam __sem_target696.
        match
          __sem_target696
        with
          p478
        in
        let res161 =
            vRecordTypeAst_smapAccumL_Pat_Pat
              (lam #var"285".
                 lam a421.
                   ({}, f515 a421))
              {}
              p478
          in
          res161.1
  let vRecordTypeAst_countPatNodes =
    lam count196.
      lam __sem_target697.
        match
          __sem_target697
        with
          t765
        in
        let count197 = addi count196 1 in
          let count198 =
            vRecordTypeAst_sfold_Pat_Pat vRecordTypeAst_countPatNodes count197 t765
          in
          let count199 =
            vRecordTypeAst_sfold_Pat_Expr vRecordTypeAst_countExprNodes count198 t765
          in
          let count200 =
            vRecordTypeAst_sfold_Pat_Type vRecordTypeAst_countTypeNodes count199 t765
          in
          count200
  let vRecordTypeAst_sfold_Pat_Pat: all acc1122. (acc1122 -> Ast_Pat -> acc1122) -> acc1122 -> Ast_Pat -> acc1122 =
    lam f516.
      lam acc1123.
        lam __sem_target698.
          match
            __sem_target698
          with
            p479
          in
          let res162 =
              vRecordTypeAst_smapAccumL_Pat_Pat
                (lam acc1124.
                   lam a422.
                     (f516 acc1124 a422, a422))
                acc1123
                p479
            in
            res162.0
  let vRecordTypeAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f517.
      lam __sem_target699.
        match
          __sem_target699
        with
          p480
        in
        match
            vRecordTypeAst_smapAccumL_Expr_Pat
              (lam #var"286".
                 lam a423.
                   ({}, f517 a423))
              {}
              p480
          with
            (_, p481)
          in
          p481
  let vRecordTypeAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f518.
      lam __sem_target700.
        match
          __sem_target700
        with
          p482
        in
        match
            vRecordTypeAst_smapAccumL_Pat_Expr
              (lam #var"287".
                 lam a424.
                   ({}, f518 a424))
              {}
              p482
          with
            (_, p483)
          in
          p483
  let vRecordTypeAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f519.
      lam __sem_target701.
        match
          __sem_target701
        with
          p484
        in
        match
            vRecordTypeAst_smapAccumL_Pat_Type
              (lam #var"288".
                 lam a425.
                   ({}, f519 a425))
              {}
              p484
          with
            (_, p485)
          in
          p485
  let vRecordTypeAst_countExprNodes =
    lam count201.
      lam __sem_target702.
        match
          __sem_target702
        with
          t766
        in
        let count202 = addi count201 1 in
          let count203 =
            vRecordTypeAst_sfold_Expr_Expr vRecordTypeAst_countExprNodes count202 t766
          in
          let count204 =
            vRecordTypeAst_sfold_Expr_Type vRecordTypeAst_countTypeNodes count203 t766
          in
          let count205 =
            vRecordTypeAst_sfold_Expr_TypeLabel vRecordTypeAst_countTypeNodes count204 t766
          in
          let count206 =
            vRecordTypeAst_sfold_Expr_Pat vRecordTypeAst_countPatNodes count205 t766
          in
          count206
  let vRecordTypeAst_countTypeNodes =
    lam count207.
      lam __sem_target703.
        match
          __sem_target703
        with
          t767
        in
        let count208 = addi count207 1 in
          let count209 =
            vRecordTypeAst_sfold_Type_Type vRecordTypeAst_countTypeNodes count208 t767
          in
          count209
  let vRecordTypeAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f520.
      lam __sem_target704.
        match
          __sem_target704
        with
          ty115
        in
        let res163 =
            vRecordTypeAst_rappAccumL_Type_Type
              (lam #var"289".
                 lam t768.
                   ({}, f520 t768))
              {}
              ty115
          in
          res163.1
  let vRecordTypeAst_sfold_Expr_Pat: all acc1125. (acc1125 -> Ast_Pat -> acc1125) -> acc1125 -> Ast_Expr -> acc1125 =
    lam f521.
      lam acc1126.
        lam __sem_target705.
          match
            __sem_target705
          with
            p486
          in
          match
              vRecordTypeAst_smapAccumL_Expr_Pat
                (lam acc1127.
                   lam a426.
                     (f521 acc1127 a426, a426))
                acc1126
                p486
            with
              (acc1128, _)
            in
            acc1128
  let vRecordTypeAst_sfold_Pat_Expr: all acc1129. (acc1129 -> Ast_Expr -> acc1129) -> acc1129 -> Ast_Pat -> acc1129 =
    lam f522.
      lam acc1130.
        lam __sem_target706.
          match
            __sem_target706
          with
            p487
          in
          match
              vRecordTypeAst_smapAccumL_Pat_Expr
                (lam acc1131.
                   lam a427.
                     (f522 acc1131 a427, a427))
                acc1130
                p487
            with
              (acc1132, _)
            in
            acc1132
  let vRecordTypeAst_sfold_Pat_Type: all acc1133. (acc1133 -> Ast_Type -> acc1133) -> acc1133 -> Ast_Pat -> acc1133 =
    lam f523.
      lam acc1134.
        lam __sem_target707.
          match
            __sem_target707
          with
            p488
          in
          match
              vRecordTypeAst_smapAccumL_Pat_Type
                (lam acc1135.
                   lam a428.
                     (f523 acc1135 a428, a428))
                acc1134
                p488
            with
              (acc1136, _)
            in
            acc1136
  let vRecordTypeAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f524.
      lam __sem_target708.
        match
          __sem_target708
        with
          p489
        in
        let res164 =
            vRecordTypeAst_smapAccumL_Expr_Expr
              (lam #var"290".
                 lam a429.
                   ({}, f524 a429))
              {}
              p489
          in
          res164.1
  let vRecordTypeAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f525.
      lam __sem_target709.
        match
          __sem_target709
        with
          p490
        in
        let res165 =
            vRecordTypeAst_smapAccumL_Expr_Type
              (lam #var"291".
                 lam a430.
                   ({}, f525 a430))
              {}
              p490
          in
          res165.1
  let vRecordTypeAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f526: Ast_Type -> Ast_Type.
      lam __sem_target710.
        match
          __sem_target710
        with
          s136
        in
        match
            vRecordTypeAst_smapAccumL_Kind_Type
              (lam #var"292".
                 lam x219.
                   ({}, f526 x219))
              {}
              s136
          with
            (_, s137)
          in
          s137
  let vRecordTypeAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f527.
      lam __sem_target711.
        match
          __sem_target711
        with
          p491
        in
        let res166 =
            vRecordTypeAst_smapAccumL_Type_Type
              (lam #var"293".
                 lam a431.
                   ({}, f527 a431))
              {}
              p491
          in
          res166.1
  let vRecordTypeAst_sfold_Expr_Expr: all acc1137. (acc1137 -> Ast_Expr -> acc1137) -> acc1137 -> Ast_Expr -> acc1137 =
    lam f528.
      lam acc1138.
        lam __sem_target712.
          match
            __sem_target712
          with
            p492
          in
          let res167 =
              vRecordTypeAst_smapAccumL_Expr_Expr
                (lam acc1139.
                   lam a432.
                     (f528 acc1139 a432, a432))
                acc1138
                p492
            in
            res167.0
  let vRecordTypeAst_sfold_Expr_Type: all acc1140. (acc1140 -> Ast_Type -> acc1140) -> acc1140 -> Ast_Expr -> acc1140 =
    lam f529.
      lam acc1141.
        lam __sem_target713.
          match
            __sem_target713
          with
            p493
          in
          let res168 =
              vRecordTypeAst_smapAccumL_Expr_Type
                (lam acc1142.
                   lam a433.
                     (f529 acc1142 a433, a433))
                acc1141
                p493
            in
            res168.0
  let vRecordTypeAst_sfold_Kind_Type: all acc1143. (acc1143 -> Ast_Type -> acc1143) -> acc1143 -> Ast_Kind -> acc1143 =
    lam f530: acc1143 -> Ast_Type -> acc1143.
      lam acc1144: acc1143.
        lam __sem_target714.
          match
            __sem_target714
          with
            s138
          in
          match
              vRecordTypeAst_smapAccumL_Kind_Type
                (lam a434.
                   lam x220.
                     (f530 a434 x220, x220))
                acc1144
                s138
            with
              (a435, _)
            in
            a435
  let vRecordTypeAst_sfold_Type_Type: all acc1145. (acc1145 -> Ast_Type -> acc1145) -> acc1145 -> Ast_Type -> acc1145 =
    lam f531.
      lam acc1146.
        lam __sem_target715.
          match
            __sem_target715
          with
            p494
          in
          let res169 =
              vRecordTypeAst_smapAccumL_Type_Type
                (lam acc1147.
                   lam a436.
                     (f531 acc1147 a436, a436))
                acc1146
                p494
            in
            res169.0
  let vRecordTypeAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f532.
      lam __sem_target716.
        match
          __sem_target716
        with
          expr126
        in
        let expr127 = f532 expr126 in
          vRecordTypeAst_smap_Expr_Expr (vRecordTypeAst_mapPre_Expr_Expr f532) expr127
  let vRecordTypeAst_foldPre_Expr_Expr: all acc1148. (acc1148 -> Ast_Expr -> acc1148) -> acc1148 -> Ast_Expr -> acc1148 =
    lam f533.
      lam acc1149.
        lam __sem_target717.
          match
            __sem_target717
          with
            expr128
          in
          let acc1150 = f533 acc1149 expr128 in
            vRecordTypeAst_sfold_Expr_Expr (vRecordTypeAst_foldPre_Expr_Expr f533) acc1150 expr128
  let vRecordTypeAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f534.
      lam __sem_target718.
        match
          __sem_target718
        with
          expr129
        in
        f534
            (vRecordTypeAst_smap_Expr_Expr (vRecordTypeAst_mapPost_Expr_Expr f534) expr129)
  let vRecordTypeAst_foldPost_Expr_Expr: all acc1151. (acc1151 -> Ast_Expr -> acc1151) -> acc1151 -> Ast_Expr -> acc1151 =
    lam f535.
      lam acc1152.
        lam __sem_target719.
          match
            __sem_target719
          with
            expr130
          in
          f535
              (vRecordTypeAst_sfold_Expr_Expr (vRecordTypeAst_foldPost_Expr_Expr f535) acc1152 expr130)
              expr130
  let vRecordTypeAst_smapAccumL_Pat_Pat: all acc1153. (acc1153 -> Ast_Pat -> (acc1153, Ast_Pat)) -> acc1153 -> Ast_Pat -> (acc1153, Ast_Pat) =
    lam f536.
      lam acc1154.
        lam __sem_target720.
          match
            __sem_target720
          with
            p495
          in
          (acc1154, p495)
  let vRecordTypeAst_smapAccumL_Expr_Pat: all acc1155. (acc1155 -> Ast_Pat -> (acc1155, Ast_Pat)) -> acc1155 -> Ast_Expr -> (acc1155, Ast_Expr) =
    lam f537.
      lam acc1156.
        lam __sem_target721.
          match
            __sem_target721
          with
            p496
          in
          (acc1156, p496)
  let vRecordTypeAst_smapAccumL_Pat_Expr: all acc1157. (acc1157 -> Ast_Expr -> (acc1157, Ast_Expr)) -> acc1157 -> Ast_Pat -> (acc1157, Ast_Pat) =
    lam f538.
      lam acc1158.
        lam __sem_target722.
          match
            __sem_target722
          with
            p497
          in
          (acc1158, p497)
  let vRecordTypeAst_smapAccumL_Pat_Type: all acc1159. (acc1159 -> Ast_Type -> (acc1159, Ast_Type)) -> acc1159 -> Ast_Pat -> (acc1159, Ast_Pat) =
    lam f539.
      lam acc1160.
        lam __sem_target723.
          match
            __sem_target723
          with
            p498
          in
          (acc1160, p498)
  let vRecordTypeAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f540.
      lam __sem_target724.
        match
          __sem_target724
        with
          p499
        in
        let res170 =
            vRecordTypeAst_smapAccumL_Expr_TypeLabel
              (lam #var"294".
                 lam a437.
                   ({}, f540 a437))
              {}
              p499
          in
          res170.1
  let vRecordTypeAst_rappAccumL_Type_Type: all acc1161. (acc1161 -> Ast_Type -> (acc1161, Ast_Type)) -> acc1161 -> Ast_Type -> (acc1161, Ast_Type) =
    lam f541.
      lam acc1162.
        lam __sem_target725.
          match
            __sem_target725
          with
            ty116
          in
          (acc1162, ty116)
  let vRecordTypeAst_sfold_Expr_TypeLabel: all acc1163. (acc1163 -> Ast_Type -> acc1163) -> acc1163 -> Ast_Expr -> acc1163 =
    lam f542.
      lam acc1164.
        lam __sem_target726.
          match
            __sem_target726
          with
            p500
          in
          let res171 =
              vRecordTypeAst_smapAccumL_Expr_TypeLabel
                (lam acc1165.
                   lam a438.
                     (f542 acc1165 a438, a438))
                acc1164
                p500
            in
            res171.0
  let vRecordTypeAst_smapAccumL_Expr_Expr: all acc1166. (acc1166 -> Ast_Expr -> (acc1166, Ast_Expr)) -> acc1166 -> Ast_Expr -> (acc1166, Ast_Expr) =
    lam f543.
      lam acc1167.
        lam __sem_target727.
          match
            __sem_target727
          with
            p501
          in
          (acc1167, p501)
  let vRecordTypeAst_smapAccumL_Expr_Type: all acc1168. (acc1168 -> Ast_Type -> (acc1168, Ast_Type)) -> acc1168 -> Ast_Expr -> (acc1168, Ast_Expr) =
    lam f544.
      lam acc1169.
        lam __sem_target728.
          match
            __sem_target728
          with
            p502
          in
          (acc1169, p502)
  let vRecordTypeAst_smapAccumL_Kind_Type: all acc1170. (acc1170 -> Ast_Type -> (acc1170, Ast_Type)) -> acc1170 -> Ast_Kind -> (acc1170, Ast_Kind) =
    lam f545.
      lam acc1171.
        lam __sem_target729.
          match
            __sem_target729
          with
            s139
          in
          (acc1171, s139)
  let vRecordTypeAst_smapAccumL_Type_Type: all acc1172. (acc1172 -> Ast_Type -> (acc1172, Ast_Type)) -> acc1172 -> Ast_Type -> (acc1172, Ast_Type) =
    lam f546.
      lam acc1173.
        lam __sem_target730.
          match
            __sem_target730
          with
            RecordTypeAst_TyRecord t769
          then
            match
              mapMapAccum
                (lam acc1174.
                   lam #var"295".
                     lam e30.
                       f546 acc1174 e30)
                acc1173
                t769.fields
            with
              (acc1175, fields3)
            in
            (acc1175, RecordTypeAst_TyRecord
                { t769 with fields = fields3 })
          else match
            __sem_target730
          with
            p503
          in
          (acc1173, p503)
  let vRecordTypeAst_mapAccumLPre_Expr_Expr: all acc1176. (acc1176 -> Ast_Expr -> (acc1176, Ast_Expr)) -> acc1176 -> Ast_Expr -> (acc1176, Ast_Expr) =
    lam f547.
      lam acc1177.
        lam __sem_target731.
          match
            __sem_target731
          with
            expr131
          in
          match
              f547 acc1177 expr131
            with
              (acc1178, expr132)
            in
            vRecordTypeAst_smapAccumL_Expr_Expr
                (vRecordTypeAst_mapAccumLPre_Expr_Expr f547) acc1178 expr132
  let vRecordTypeAst_mapAccumLPost_Expr_Expr: all acc1179. (acc1179 -> Ast_Expr -> (acc1179, Ast_Expr)) -> acc1179 -> Ast_Expr -> (acc1179, Ast_Expr) =
    lam f548.
      lam acc1180.
        lam __sem_target732.
          match
            __sem_target732
          with
            expr133
          in
          match
              vRecordTypeAst_smapAccumL_Expr_Expr
                (vRecordTypeAst_mapAccumLPost_Expr_Expr f548) acc1180 expr133
            with
              (acc1181, expr134)
            in
            f548 acc1181 expr134
  let vRecordTypeAst_smapAccumL_Expr_TypeLabel: all acc1182. (acc1182 -> Ast_Type -> (acc1182, Ast_Type)) -> acc1182 -> Ast_Expr -> (acc1182, Ast_Expr) =
    lam f549.
      lam acc1183.
        lam __sem_target733.
          match
            __sem_target733
          with
            p504
          in
          match
              f549 acc1183 (vRecordTypeAst_tyTm p504)
            with
              (acc1184, ty117)
            in
            (acc1184, vRecordTypeAst_withType ty117 p504)
in
con VariantTypeAst_TyVariant: {info: Info, constrs: Map Name Ast_Type} -> Ast_Type in
recursive
  let vVariantTypeAst_tyTm: Ast_Expr -> Ast_Type = lam x196.
      never
  let vVariantTypeAst_tyPat: Ast_Pat -> Ast_Type = lam x197.
      never
  let vVariantTypeAst_infoTm: Ast_Expr -> Info = lam x198.
      never
  let vVariantTypeAst_infoTy: Ast_Type -> Info =
    lam __sem_target650.
      match
        __sem_target650
      with
        VariantTypeAst_TyVariant r270
      in
      r270.info
  let vVariantTypeAst_infoPat: Ast_Pat -> Info = lam x199.
      never
  let vVariantTypeAst_withInfo: Info -> Ast_Expr -> Ast_Expr = lam x200.
      never
  let vVariantTypeAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr = lam x201.
      never
  let vVariantTypeAst_tyWithInfo: Info -> Ast_Type -> Ast_Type =
    lam info15.
      lam __sem_target651.
        match
          __sem_target651
        with
          VariantTypeAst_TyVariant t758
        in
        VariantTypeAst_TyVariant
            { t758 with info = info15 }
  let vVariantTypeAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target652.
      match
        __sem_target652
      with
        ty108
      in
      vVariantTypeAst_rapp_Type_Type vVariantTypeAst_unwrapType ty108
  let vVariantTypeAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target653.
      match
        __sem_target653
      with
        ty109
      in
      vVariantTypeAst_rapp_Type_Type vVariantTypeAst_inspectType ty109
  let vVariantTypeAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x202.
      never
  let vVariantTypeAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x203.
      never
  let vVariantTypeAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f480.
      lam __sem_target654.
        match
          __sem_target654
        with
          p451
        in
        let res150 =
            vVariantTypeAst_smapAccumL_Pat_Pat
              (lam #var"274".
                 lam a403.
                   ({}, f480 a403))
              {}
              p451
          in
          res150.1
  let vVariantTypeAst_countPatNodes =
    lam count182.
      lam __sem_target655.
        match
          __sem_target655
        with
          t759
        in
        let count183 = addi count182 1 in
          let count184 =
            vVariantTypeAst_sfold_Pat_Pat vVariantTypeAst_countPatNodes count183 t759
          in
          let count185 =
            vVariantTypeAst_sfold_Pat_Expr vVariantTypeAst_countExprNodes count184 t759
          in
          let count186 =
            vVariantTypeAst_sfold_Pat_Type vVariantTypeAst_countTypeNodes count185 t759
          in
          count186
  let vVariantTypeAst_sfold_Pat_Pat: all acc1059. (acc1059 -> Ast_Pat -> acc1059) -> acc1059 -> Ast_Pat -> acc1059 =
    lam f481.
      lam acc1060.
        lam __sem_target656.
          match
            __sem_target656
          with
            p452
          in
          let res151 =
              vVariantTypeAst_smapAccumL_Pat_Pat
                (lam acc1061.
                   lam a404.
                     (f481 acc1061 a404, a404))
                acc1060
                p452
            in
            res151.0
  let vVariantTypeAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f482.
      lam __sem_target657.
        match
          __sem_target657
        with
          p453
        in
        match
            vVariantTypeAst_smapAccumL_Expr_Pat
              (lam #var"275".
                 lam a405.
                   ({}, f482 a405))
              {}
              p453
          with
            (_, p454)
          in
          p454
  let vVariantTypeAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f483.
      lam __sem_target658.
        match
          __sem_target658
        with
          p455
        in
        match
            vVariantTypeAst_smapAccumL_Pat_Expr
              (lam #var"276".
                 lam a406.
                   ({}, f483 a406))
              {}
              p455
          with
            (_, p456)
          in
          p456
  let vVariantTypeAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f484.
      lam __sem_target659.
        match
          __sem_target659
        with
          p457
        in
        match
            vVariantTypeAst_smapAccumL_Pat_Type
              (lam #var"277".
                 lam a407.
                   ({}, f484 a407))
              {}
              p457
          with
            (_, p458)
          in
          p458
  let vVariantTypeAst_countExprNodes =
    lam count187.
      lam __sem_target660.
        match
          __sem_target660
        with
          t760
        in
        let count188 = addi count187 1 in
          let count189 =
            vVariantTypeAst_sfold_Expr_Expr vVariantTypeAst_countExprNodes count188 t760
          in
          let count190 =
            vVariantTypeAst_sfold_Expr_Type vVariantTypeAst_countTypeNodes count189 t760
          in
          let count191 =
            vVariantTypeAst_sfold_Expr_TypeLabel vVariantTypeAst_countTypeNodes count190 t760
          in
          let count192 =
            vVariantTypeAst_sfold_Expr_Pat vVariantTypeAst_countPatNodes count191 t760
          in
          count192
  let vVariantTypeAst_countTypeNodes =
    lam count193.
      lam __sem_target661.
        match
          __sem_target661
        with
          t761
        in
        let count194 = addi count193 1 in
          let count195 =
            vVariantTypeAst_sfold_Type_Type vVariantTypeAst_countTypeNodes count194 t761
          in
          count195
  let vVariantTypeAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f485.
      lam __sem_target662.
        match
          __sem_target662
        with
          ty110
        in
        let res152 =
            vVariantTypeAst_rappAccumL_Type_Type
              (lam #var"278".
                 lam t762.
                   ({}, f485 t762))
              {}
              ty110
          in
          res152.1
  let vVariantTypeAst_sfold_Expr_Pat: all acc1062. (acc1062 -> Ast_Pat -> acc1062) -> acc1062 -> Ast_Expr -> acc1062 =
    lam f486.
      lam acc1063.
        lam __sem_target663.
          match
            __sem_target663
          with
            p459
          in
          match
              vVariantTypeAst_smapAccumL_Expr_Pat
                (lam acc1064.
                   lam a408.
                     (f486 acc1064 a408, a408))
                acc1063
                p459
            with
              (acc1065, _)
            in
            acc1065
  let vVariantTypeAst_sfold_Pat_Expr: all acc1066. (acc1066 -> Ast_Expr -> acc1066) -> acc1066 -> Ast_Pat -> acc1066 =
    lam f487.
      lam acc1067.
        lam __sem_target664.
          match
            __sem_target664
          with
            p460
          in
          match
              vVariantTypeAst_smapAccumL_Pat_Expr
                (lam acc1068.
                   lam a409.
                     (f487 acc1068 a409, a409))
                acc1067
                p460
            with
              (acc1069, _)
            in
            acc1069
  let vVariantTypeAst_sfold_Pat_Type: all acc1070. (acc1070 -> Ast_Type -> acc1070) -> acc1070 -> Ast_Pat -> acc1070 =
    lam f488.
      lam acc1071.
        lam __sem_target665.
          match
            __sem_target665
          with
            p461
          in
          match
              vVariantTypeAst_smapAccumL_Pat_Type
                (lam acc1072.
                   lam a410.
                     (f488 acc1072 a410, a410))
                acc1071
                p461
            with
              (acc1073, _)
            in
            acc1073
  let vVariantTypeAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f489.
      lam __sem_target666.
        match
          __sem_target666
        with
          p462
        in
        let res153 =
            vVariantTypeAst_smapAccumL_Expr_Expr
              (lam #var"279".
                 lam a411.
                   ({}, f489 a411))
              {}
              p462
          in
          res153.1
  let vVariantTypeAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f490.
      lam __sem_target667.
        match
          __sem_target667
        with
          p463
        in
        let res154 =
            vVariantTypeAst_smapAccumL_Expr_Type
              (lam #var"280".
                 lam a412.
                   ({}, f490 a412))
              {}
              p463
          in
          res154.1
  let vVariantTypeAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f491: Ast_Type -> Ast_Type.
      lam __sem_target668.
        match
          __sem_target668
        with
          s132
        in
        match
            vVariantTypeAst_smapAccumL_Kind_Type
              (lam #var"281".
                 lam x204.
                   ({}, f491 x204))
              {}
              s132
          with
            (_, s133)
          in
          s133
  let vVariantTypeAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f492.
      lam __sem_target669.
        match
          __sem_target669
        with
          p464
        in
        let res155 =
            vVariantTypeAst_smapAccumL_Type_Type
              (lam #var"282".
                 lam a413.
                   ({}, f492 a413))
              {}
              p464
          in
          res155.1
  let vVariantTypeAst_sfold_Expr_Expr: all acc1074. (acc1074 -> Ast_Expr -> acc1074) -> acc1074 -> Ast_Expr -> acc1074 =
    lam f493.
      lam acc1075.
        lam __sem_target670.
          match
            __sem_target670
          with
            p465
          in
          let res156 =
              vVariantTypeAst_smapAccumL_Expr_Expr
                (lam acc1076.
                   lam a414.
                     (f493 acc1076 a414, a414))
                acc1075
                p465
            in
            res156.0
  let vVariantTypeAst_sfold_Expr_Type: all acc1077. (acc1077 -> Ast_Type -> acc1077) -> acc1077 -> Ast_Expr -> acc1077 =
    lam f494.
      lam acc1078.
        lam __sem_target671.
          match
            __sem_target671
          with
            p466
          in
          let res157 =
              vVariantTypeAst_smapAccumL_Expr_Type
                (lam acc1079.
                   lam a415.
                     (f494 acc1079 a415, a415))
                acc1078
                p466
            in
            res157.0
  let vVariantTypeAst_sfold_Kind_Type: all acc1080. (acc1080 -> Ast_Type -> acc1080) -> acc1080 -> Ast_Kind -> acc1080 =
    lam f495: acc1080 -> Ast_Type -> acc1080.
      lam acc1081: acc1080.
        lam __sem_target672.
          match
            __sem_target672
          with
            s134
          in
          match
              vVariantTypeAst_smapAccumL_Kind_Type
                (lam a416.
                   lam x205.
                     (f495 a416 x205, x205))
                acc1081
                s134
            with
              (a417, _)
            in
            a417
  let vVariantTypeAst_sfold_Type_Type: all acc1082. (acc1082 -> Ast_Type -> acc1082) -> acc1082 -> Ast_Type -> acc1082 =
    lam f496.
      lam acc1083.
        lam __sem_target673.
          match
            __sem_target673
          with
            p467
          in
          let res158 =
              vVariantTypeAst_smapAccumL_Type_Type
                (lam acc1084.
                   lam a418.
                     (f496 acc1084 a418, a418))
                acc1083
                p467
            in
            res158.0
  let vVariantTypeAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f497.
      lam __sem_target674.
        match
          __sem_target674
        with
          expr117
        in
        let expr118 = f497 expr117 in
          vVariantTypeAst_smap_Expr_Expr (vVariantTypeAst_mapPre_Expr_Expr f497) expr118
  let vVariantTypeAst_foldPre_Expr_Expr: all acc1085. (acc1085 -> Ast_Expr -> acc1085) -> acc1085 -> Ast_Expr -> acc1085 =
    lam f498.
      lam acc1086.
        lam __sem_target675.
          match
            __sem_target675
          with
            expr119
          in
          let acc1087 = f498 acc1086 expr119 in
            vVariantTypeAst_sfold_Expr_Expr (vVariantTypeAst_foldPre_Expr_Expr f498) acc1087 expr119
  let vVariantTypeAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f499.
      lam __sem_target676.
        match
          __sem_target676
        with
          expr120
        in
        f499
            (vVariantTypeAst_smap_Expr_Expr (vVariantTypeAst_mapPost_Expr_Expr f499) expr120)
  let vVariantTypeAst_foldPost_Expr_Expr: all acc1088. (acc1088 -> Ast_Expr -> acc1088) -> acc1088 -> Ast_Expr -> acc1088 =
    lam f500.
      lam acc1089.
        lam __sem_target677.
          match
            __sem_target677
          with
            expr121
          in
          f500
              (vVariantTypeAst_sfold_Expr_Expr (vVariantTypeAst_foldPost_Expr_Expr f500) acc1089 expr121)
              expr121
  let vVariantTypeAst_smapAccumL_Pat_Pat: all acc1090. (acc1090 -> Ast_Pat -> (acc1090, Ast_Pat)) -> acc1090 -> Ast_Pat -> (acc1090, Ast_Pat) =
    lam f501.
      lam acc1091.
        lam __sem_target678.
          match
            __sem_target678
          with
            p468
          in
          (acc1091, p468)
  let vVariantTypeAst_smapAccumL_Expr_Pat: all acc1092. (acc1092 -> Ast_Pat -> (acc1092, Ast_Pat)) -> acc1092 -> Ast_Expr -> (acc1092, Ast_Expr) =
    lam f502.
      lam acc1093.
        lam __sem_target679.
          match
            __sem_target679
          with
            p469
          in
          (acc1093, p469)
  let vVariantTypeAst_smapAccumL_Pat_Expr: all acc1094. (acc1094 -> Ast_Expr -> (acc1094, Ast_Expr)) -> acc1094 -> Ast_Pat -> (acc1094, Ast_Pat) =
    lam f503.
      lam acc1095.
        lam __sem_target680.
          match
            __sem_target680
          with
            p470
          in
          (acc1095, p470)
  let vVariantTypeAst_smapAccumL_Pat_Type: all acc1096. (acc1096 -> Ast_Type -> (acc1096, Ast_Type)) -> acc1096 -> Ast_Pat -> (acc1096, Ast_Pat) =
    lam f504.
      lam acc1097.
        lam __sem_target681.
          match
            __sem_target681
          with
            p471
          in
          (acc1097, p471)
  let vVariantTypeAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f505.
      lam __sem_target682.
        match
          __sem_target682
        with
          p472
        in
        let res159 =
            vVariantTypeAst_smapAccumL_Expr_TypeLabel
              (lam #var"283".
                 lam a419.
                   ({}, f505 a419))
              {}
              p472
          in
          res159.1
  let vVariantTypeAst_rappAccumL_Type_Type: all acc1098. (acc1098 -> Ast_Type -> (acc1098, Ast_Type)) -> acc1098 -> Ast_Type -> (acc1098, Ast_Type) =
    lam f506.
      lam acc1099.
        lam __sem_target683.
          match
            __sem_target683
          with
            ty111
          in
          (acc1099, ty111)
  let vVariantTypeAst_sfold_Expr_TypeLabel: all acc1100. (acc1100 -> Ast_Type -> acc1100) -> acc1100 -> Ast_Expr -> acc1100 =
    lam f507.
      lam acc1101.
        lam __sem_target684.
          match
            __sem_target684
          with
            p473
          in
          let res160 =
              vVariantTypeAst_smapAccumL_Expr_TypeLabel
                (lam acc1102.
                   lam a420.
                     (f507 acc1102 a420, a420))
                acc1101
                p473
            in
            res160.0
  let vVariantTypeAst_smapAccumL_Expr_Expr: all acc1103. (acc1103 -> Ast_Expr -> (acc1103, Ast_Expr)) -> acc1103 -> Ast_Expr -> (acc1103, Ast_Expr) =
    lam f508.
      lam acc1104.
        lam __sem_target685.
          match
            __sem_target685
          with
            p474
          in
          (acc1104, p474)
  let vVariantTypeAst_smapAccumL_Expr_Type: all acc1105. (acc1105 -> Ast_Type -> (acc1105, Ast_Type)) -> acc1105 -> Ast_Expr -> (acc1105, Ast_Expr) =
    lam f509.
      lam acc1106.
        lam __sem_target686.
          match
            __sem_target686
          with
            p475
          in
          (acc1106, p475)
  let vVariantTypeAst_smapAccumL_Kind_Type: all acc1107. (acc1107 -> Ast_Type -> (acc1107, Ast_Type)) -> acc1107 -> Ast_Kind -> (acc1107, Ast_Kind) =
    lam f510.
      lam acc1108.
        lam __sem_target687.
          match
            __sem_target687
          with
            s135
          in
          (acc1108, s135)
  let vVariantTypeAst_smapAccumL_Type_Type: all acc1109. (acc1109 -> Ast_Type -> (acc1109, Ast_Type)) -> acc1109 -> Ast_Type -> (acc1109, Ast_Type) =
    lam f511.
      lam acc1110.
        lam __sem_target688.
          match
            __sem_target688
          with
            VariantTypeAst_TyVariant t763
          then
            match
              mapMapAccum
                (lam acc1111.
                   lam #var"284".
                     lam e29.
                       f511 acc1111 e29)
                acc1110
                t763.constrs
            with
              (acc1112, constrs3)
            in
            (acc1112, VariantTypeAst_TyVariant
                { t763 with constrs = constrs3 })
          else match
            __sem_target688
          with
            p476
          in
          (acc1110, p476)
  let vVariantTypeAst_mapAccumLPre_Expr_Expr: all acc1113. (acc1113 -> Ast_Expr -> (acc1113, Ast_Expr)) -> acc1113 -> Ast_Expr -> (acc1113, Ast_Expr) =
    lam f512.
      lam acc1114.
        lam __sem_target689.
          match
            __sem_target689
          with
            expr122
          in
          match
              f512 acc1114 expr122
            with
              (acc1115, expr123)
            in
            vVariantTypeAst_smapAccumL_Expr_Expr
                (vVariantTypeAst_mapAccumLPre_Expr_Expr f512) acc1115 expr123
  let vVariantTypeAst_mapAccumLPost_Expr_Expr: all acc1116. (acc1116 -> Ast_Expr -> (acc1116, Ast_Expr)) -> acc1116 -> Ast_Expr -> (acc1116, Ast_Expr) =
    lam f513.
      lam acc1117.
        lam __sem_target690.
          match
            __sem_target690
          with
            expr124
          in
          match
              vVariantTypeAst_smapAccumL_Expr_Expr
                (vVariantTypeAst_mapAccumLPost_Expr_Expr f513)
                acc1117
                expr124
            with
              (acc1118, expr125)
            in
            f513 acc1118 expr125
  let vVariantTypeAst_smapAccumL_Expr_TypeLabel: all acc1119. (acc1119 -> Ast_Type -> (acc1119, Ast_Type)) -> acc1119 -> Ast_Expr -> (acc1119, Ast_Expr) =
    lam f514.
      lam acc1120.
        lam __sem_target691.
          match
            __sem_target691
          with
            p477
          in
          match
              f514 acc1120 (vVariantTypeAst_tyTm p477)
            with
              (acc1121, ty112)
            in
            (acc1121, vVariantTypeAst_withType ty112 p477)
in
con ConTypeAst_TyCon: {data: Ast_Type, info: Info, ident: Name} -> Ast_Type in
recursive
  let vConTypeAst_tyTm: Ast_Expr -> Ast_Type = lam x186.
      never
  let vConTypeAst_tyPat: Ast_Pat -> Ast_Type = lam x187.
      never
  let vConTypeAst_infoTm: Ast_Expr -> Info = lam x188.
      never
  let vConTypeAst_infoTy: Ast_Type -> Info =
    lam __sem_target608.
      match
        __sem_target608
      with
        ConTypeAst_TyCon r269
      in
      r269.info
  let vConTypeAst_infoPat: Ast_Pat -> Info = lam x189.
      never
  let vConTypeAst_withInfo: Info -> Ast_Expr -> Ast_Expr = lam x190.
      never
  let vConTypeAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr = lam x191.
      never
  let vConTypeAst_tyWithInfo: Info -> Ast_Type -> Ast_Type =
    lam info14.
      lam __sem_target609.
        match
          __sem_target609
        with
          ConTypeAst_TyCon t752
        in
        ConTypeAst_TyCon
            { t752 with info = info14 }
  let vConTypeAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target610.
      match
        __sem_target610
      with
        ty103
      in
      vConTypeAst_rapp_Type_Type vConTypeAst_unwrapType ty103
  let vConTypeAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target611.
      match
        __sem_target611
      with
        ty104
      in
      vConTypeAst_rapp_Type_Type vConTypeAst_inspectType ty104
  let vConTypeAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x192.
      never
  let vConTypeAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x193.
      never
  let vConTypeAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f445.
      lam __sem_target612.
        match
          __sem_target612
        with
          p424
        in
        let res139 =
            vConTypeAst_smapAccumL_Pat_Pat
              (lam #var"264".
                 lam a385.
                   ({}, f445 a385))
              {}
              p424
          in
          res139.1
  let vConTypeAst_countPatNodes =
    lam count168.
      lam __sem_target613.
        match
          __sem_target613
        with
          t753
        in
        let count169 = addi count168 1 in
          let count170 =
            vConTypeAst_sfold_Pat_Pat vConTypeAst_countPatNodes count169 t753
          in
          let count171 =
            vConTypeAst_sfold_Pat_Expr vConTypeAst_countExprNodes count170 t753
          in
          let count172 =
            vConTypeAst_sfold_Pat_Type vConTypeAst_countTypeNodes count171 t753
          in
          count172
  let vConTypeAst_sfold_Pat_Pat: all acc997. (acc997 -> Ast_Pat -> acc997) -> acc997 -> Ast_Pat -> acc997 =
    lam f446.
      lam acc998.
        lam __sem_target614.
          match
            __sem_target614
          with
            p425
          in
          let res140 =
              vConTypeAst_smapAccumL_Pat_Pat
                (lam acc999.
                   lam a386.
                     (f446 acc999 a386, a386))
                acc998
                p425
            in
            res140.0
  let vConTypeAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f447.
      lam __sem_target615.
        match
          __sem_target615
        with
          p426
        in
        match
            vConTypeAst_smapAccumL_Expr_Pat
              (lam #var"265".
                 lam a387.
                   ({}, f447 a387))
              {}
              p426
          with
            (_, p427)
          in
          p427
  let vConTypeAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f448.
      lam __sem_target616.
        match
          __sem_target616
        with
          p428
        in
        match
            vConTypeAst_smapAccumL_Pat_Expr
              (lam #var"266".
                 lam a388.
                   ({}, f448 a388))
              {}
              p428
          with
            (_, p429)
          in
          p429
  let vConTypeAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f449.
      lam __sem_target617.
        match
          __sem_target617
        with
          p430
        in
        match
            vConTypeAst_smapAccumL_Pat_Type
              (lam #var"267".
                 lam a389.
                   ({}, f449 a389))
              {}
              p430
          with
            (_, p431)
          in
          p431
  let vConTypeAst_countExprNodes =
    lam count173.
      lam __sem_target618.
        match
          __sem_target618
        with
          t754
        in
        let count174 = addi count173 1 in
          let count175 =
            vConTypeAst_sfold_Expr_Expr vConTypeAst_countExprNodes count174 t754
          in
          let count176 =
            vConTypeAst_sfold_Expr_Type vConTypeAst_countTypeNodes count175 t754
          in
          let count177 =
            vConTypeAst_sfold_Expr_TypeLabel vConTypeAst_countTypeNodes count176 t754
          in
          let count178 =
            vConTypeAst_sfold_Expr_Pat vConTypeAst_countPatNodes count177 t754
          in
          count178
  let vConTypeAst_countTypeNodes =
    lam count179.
      lam __sem_target619.
        match
          __sem_target619
        with
          t755
        in
        let count180 = addi count179 1 in
          let count181 =
            vConTypeAst_sfold_Type_Type vConTypeAst_countTypeNodes count180 t755
          in
          count181
  let vConTypeAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f450.
      lam __sem_target620.
        match
          __sem_target620
        with
          ty105
        in
        let res141 =
            vConTypeAst_rappAccumL_Type_Type
              (lam #var"268".
                 lam t756.
                   ({}, f450 t756))
              {}
              ty105
          in
          res141.1
  let vConTypeAst_sfold_Expr_Pat: all acc1000. (acc1000 -> Ast_Pat -> acc1000) -> acc1000 -> Ast_Expr -> acc1000 =
    lam f451.
      lam acc1001.
        lam __sem_target621.
          match
            __sem_target621
          with
            p432
          in
          match
              vConTypeAst_smapAccumL_Expr_Pat
                (lam acc1002.
                   lam a390.
                     (f451 acc1002 a390, a390))
                acc1001
                p432
            with
              (acc1003, _)
            in
            acc1003
  let vConTypeAst_sfold_Pat_Expr: all acc1004. (acc1004 -> Ast_Expr -> acc1004) -> acc1004 -> Ast_Pat -> acc1004 =
    lam f452.
      lam acc1005.
        lam __sem_target622.
          match
            __sem_target622
          with
            p433
          in
          match
              vConTypeAst_smapAccumL_Pat_Expr
                (lam acc1006.
                   lam a391.
                     (f452 acc1006 a391, a391))
                acc1005
                p433
            with
              (acc1007, _)
            in
            acc1007
  let vConTypeAst_sfold_Pat_Type: all acc1008. (acc1008 -> Ast_Type -> acc1008) -> acc1008 -> Ast_Pat -> acc1008 =
    lam f453.
      lam acc1009.
        lam __sem_target623.
          match
            __sem_target623
          with
            p434
          in
          match
              vConTypeAst_smapAccumL_Pat_Type
                (lam acc1010.
                   lam a392.
                     (f453 acc1010 a392, a392))
                acc1009
                p434
            with
              (acc1011, _)
            in
            acc1011
  let vConTypeAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f454.
      lam __sem_target624.
        match
          __sem_target624
        with
          p435
        in
        let res142 =
            vConTypeAst_smapAccumL_Expr_Expr
              (lam #var"269".
                 lam a393.
                   ({}, f454 a393))
              {}
              p435
          in
          res142.1
  let vConTypeAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f455.
      lam __sem_target625.
        match
          __sem_target625
        with
          p436
        in
        let res143 =
            vConTypeAst_smapAccumL_Expr_Type
              (lam #var"270".
                 lam a394.
                   ({}, f455 a394))
              {}
              p436
          in
          res143.1
  let vConTypeAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f456: Ast_Type -> Ast_Type.
      lam __sem_target626.
        match
          __sem_target626
        with
          s128
        in
        match
            vConTypeAst_smapAccumL_Kind_Type
              (lam #var"271".
                 lam x194.
                   ({}, f456 x194))
              {}
              s128
          with
            (_, s129)
          in
          s129
  let vConTypeAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f457.
      lam __sem_target627.
        match
          __sem_target627
        with
          p437
        in
        let res144 =
            vConTypeAst_smapAccumL_Type_Type
              (lam #var"272".
                 lam a395.
                   ({}, f457 a395))
              {}
              p437
          in
          res144.1
  let vConTypeAst_sfold_Expr_Expr: all acc1012. (acc1012 -> Ast_Expr -> acc1012) -> acc1012 -> Ast_Expr -> acc1012 =
    lam f458.
      lam acc1013.
        lam __sem_target628.
          match
            __sem_target628
          with
            p438
          in
          let res145 =
              vConTypeAst_smapAccumL_Expr_Expr
                (lam acc1014.
                   lam a396.
                     (f458 acc1014 a396, a396))
                acc1013
                p438
            in
            res145.0
  let vConTypeAst_sfold_Expr_Type: all acc1015. (acc1015 -> Ast_Type -> acc1015) -> acc1015 -> Ast_Expr -> acc1015 =
    lam f459.
      lam acc1016.
        lam __sem_target629.
          match
            __sem_target629
          with
            p439
          in
          let res146 =
              vConTypeAst_smapAccumL_Expr_Type
                (lam acc1017.
                   lam a397.
                     (f459 acc1017 a397, a397))
                acc1016
                p439
            in
            res146.0
  let vConTypeAst_sfold_Kind_Type: all acc1018. (acc1018 -> Ast_Type -> acc1018) -> acc1018 -> Ast_Kind -> acc1018 =
    lam f460: acc1018 -> Ast_Type -> acc1018.
      lam acc1019: acc1018.
        lam __sem_target630.
          match
            __sem_target630
          with
            s130
          in
          match
              vConTypeAst_smapAccumL_Kind_Type
                (lam a398.
                   lam x195.
                     (f460 a398 x195, x195))
                acc1019
                s130
            with
              (a399, _)
            in
            a399
  let vConTypeAst_sfold_Type_Type: all acc1020. (acc1020 -> Ast_Type -> acc1020) -> acc1020 -> Ast_Type -> acc1020 =
    lam f461.
      lam acc1021.
        lam __sem_target631.
          match
            __sem_target631
          with
            p440
          in
          let res147 =
              vConTypeAst_smapAccumL_Type_Type
                (lam acc1022.
                   lam a400.
                     (f461 acc1022 a400, a400))
                acc1021
                p440
            in
            res147.0
  let vConTypeAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f462.
      lam __sem_target632.
        match
          __sem_target632
        with
          expr108
        in
        let expr109 = f462 expr108 in
          vConTypeAst_smap_Expr_Expr (vConTypeAst_mapPre_Expr_Expr f462) expr109
  let vConTypeAst_foldPre_Expr_Expr: all acc1023. (acc1023 -> Ast_Expr -> acc1023) -> acc1023 -> Ast_Expr -> acc1023 =
    lam f463.
      lam acc1024.
        lam __sem_target633.
          match
            __sem_target633
          with
            expr110
          in
          let acc1025 = f463 acc1024 expr110 in
            vConTypeAst_sfold_Expr_Expr (vConTypeAst_foldPre_Expr_Expr f463) acc1025 expr110
  let vConTypeAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f464.
      lam __sem_target634.
        match
          __sem_target634
        with
          expr111
        in
        f464
            (vConTypeAst_smap_Expr_Expr (vConTypeAst_mapPost_Expr_Expr f464) expr111)
  let vConTypeAst_foldPost_Expr_Expr: all acc1026. (acc1026 -> Ast_Expr -> acc1026) -> acc1026 -> Ast_Expr -> acc1026 =
    lam f465.
      lam acc1027.
        lam __sem_target635.
          match
            __sem_target635
          with
            expr112
          in
          f465
              (vConTypeAst_sfold_Expr_Expr (vConTypeAst_foldPost_Expr_Expr f465) acc1027 expr112)
              expr112
  let vConTypeAst_smapAccumL_Pat_Pat: all acc1028. (acc1028 -> Ast_Pat -> (acc1028, Ast_Pat)) -> acc1028 -> Ast_Pat -> (acc1028, Ast_Pat) =
    lam f466.
      lam acc1029.
        lam __sem_target636.
          match
            __sem_target636
          with
            p441
          in
          (acc1029, p441)
  let vConTypeAst_smapAccumL_Expr_Pat: all acc1030. (acc1030 -> Ast_Pat -> (acc1030, Ast_Pat)) -> acc1030 -> Ast_Expr -> (acc1030, Ast_Expr) =
    lam f467.
      lam acc1031.
        lam __sem_target637.
          match
            __sem_target637
          with
            p442
          in
          (acc1031, p442)
  let vConTypeAst_smapAccumL_Pat_Expr: all acc1032. (acc1032 -> Ast_Expr -> (acc1032, Ast_Expr)) -> acc1032 -> Ast_Pat -> (acc1032, Ast_Pat) =
    lam f468.
      lam acc1033.
        lam __sem_target638.
          match
            __sem_target638
          with
            p443
          in
          (acc1033, p443)
  let vConTypeAst_smapAccumL_Pat_Type: all acc1034. (acc1034 -> Ast_Type -> (acc1034, Ast_Type)) -> acc1034 -> Ast_Pat -> (acc1034, Ast_Pat) =
    lam f469.
      lam acc1035.
        lam __sem_target639.
          match
            __sem_target639
          with
            p444
          in
          (acc1035, p444)
  let vConTypeAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f470.
      lam __sem_target640.
        match
          __sem_target640
        with
          p445
        in
        let res148 =
            vConTypeAst_smapAccumL_Expr_TypeLabel
              (lam #var"273".
                 lam a401.
                   ({}, f470 a401))
              {}
              p445
          in
          res148.1
  let vConTypeAst_rappAccumL_Type_Type: all acc1036. (acc1036 -> Ast_Type -> (acc1036, Ast_Type)) -> acc1036 -> Ast_Type -> (acc1036, Ast_Type) =
    lam f471.
      lam acc1037.
        lam __sem_target641.
          match
            __sem_target641
          with
            ty106
          in
          (acc1037, ty106)
  let vConTypeAst_sfold_Expr_TypeLabel: all acc1038. (acc1038 -> Ast_Type -> acc1038) -> acc1038 -> Ast_Expr -> acc1038 =
    lam f472.
      lam acc1039.
        lam __sem_target642.
          match
            __sem_target642
          with
            p446
          in
          let res149 =
              vConTypeAst_smapAccumL_Expr_TypeLabel
                (lam acc1040.
                   lam a402.
                     (f472 acc1040 a402, a402))
                acc1039
                p446
            in
            res149.0
  let vConTypeAst_smapAccumL_Expr_Expr: all acc1041. (acc1041 -> Ast_Expr -> (acc1041, Ast_Expr)) -> acc1041 -> Ast_Expr -> (acc1041, Ast_Expr) =
    lam f473.
      lam acc1042.
        lam __sem_target643.
          match
            __sem_target643
          with
            p447
          in
          (acc1042, p447)
  let vConTypeAst_smapAccumL_Expr_Type: all acc1043. (acc1043 -> Ast_Type -> (acc1043, Ast_Type)) -> acc1043 -> Ast_Expr -> (acc1043, Ast_Expr) =
    lam f474.
      lam acc1044.
        lam __sem_target644.
          match
            __sem_target644
          with
            p448
          in
          (acc1044, p448)
  let vConTypeAst_smapAccumL_Kind_Type: all acc1045. (acc1045 -> Ast_Type -> (acc1045, Ast_Type)) -> acc1045 -> Ast_Kind -> (acc1045, Ast_Kind) =
    lam f475.
      lam acc1046.
        lam __sem_target645.
          match
            __sem_target645
          with
            s131
          in
          (acc1046, s131)
  let vConTypeAst_smapAccumL_Type_Type: all acc1047. (acc1047 -> Ast_Type -> (acc1047, Ast_Type)) -> acc1047 -> Ast_Type -> (acc1047, Ast_Type) =
    lam f476.
      lam acc1048.
        lam __sem_target646.
          match
            __sem_target646
          with
            ConTypeAst_TyCon t757
          then
            match
              f476 acc1048 t757.data
            with
              (acc1049, data4)
            in
            (acc1049, ConTypeAst_TyCon
                { t757 with data = data4 })
          else match
            __sem_target646
          with
            p449
          in
          (acc1048, p449)
  let vConTypeAst_mapAccumLPre_Expr_Expr: all acc1050. (acc1050 -> Ast_Expr -> (acc1050, Ast_Expr)) -> acc1050 -> Ast_Expr -> (acc1050, Ast_Expr) =
    lam f477.
      lam acc1051.
        lam __sem_target647.
          match
            __sem_target647
          with
            expr113
          in
          match
              f477 acc1051 expr113
            with
              (acc1052, expr114)
            in
            vConTypeAst_smapAccumL_Expr_Expr (vConTypeAst_mapAccumLPre_Expr_Expr f477) acc1052 expr114
  let vConTypeAst_mapAccumLPost_Expr_Expr: all acc1053. (acc1053 -> Ast_Expr -> (acc1053, Ast_Expr)) -> acc1053 -> Ast_Expr -> (acc1053, Ast_Expr) =
    lam f478.
      lam acc1054.
        lam __sem_target648.
          match
            __sem_target648
          with
            expr115
          in
          match
              vConTypeAst_smapAccumL_Expr_Expr (vConTypeAst_mapAccumLPost_Expr_Expr f478) acc1054 expr115
            with
              (acc1055, expr116)
            in
            f478 acc1055 expr116
  let vConTypeAst_smapAccumL_Expr_TypeLabel: all acc1056. (acc1056 -> Ast_Type -> (acc1056, Ast_Type)) -> acc1056 -> Ast_Expr -> (acc1056, Ast_Expr) =
    lam f479.
      lam acc1057.
        lam __sem_target649.
          match
            __sem_target649
          with
            p450
          in
          match
              f479 acc1057 (vConTypeAst_tyTm p450)
            with
              (acc1058, ty107)
            in
            (acc1058, vConTypeAst_withType ty107 p450)
in
type DataTypeAst_DataRec =
  {cons: Set Name, info: Info, positive: Bool, universe: Map Name (Set Name)}
in
con DataTypeAst_TyData: DataTypeAst_DataRec -> Ast_Type in
recursive
  let vDataTypeAst_tyTm: Ast_Expr -> Ast_Type = lam x175.
      never
  let vDataTypeAst_tyPat: Ast_Pat -> Ast_Type = lam x176.
      never
  let vDataTypeAst_infoTm: Ast_Expr -> Info = lam x177.
      never
  let vDataTypeAst_infoTy: Ast_Type -> Info =
    lam __sem_target565.
      match
        __sem_target565
      with
        DataTypeAst_TyData r267
      in
      r267.info
  let vDataTypeAst_infoPat: Ast_Pat -> Info = lam x178.
      never
  let vDataTypeAst_withInfo: Info -> Ast_Expr -> Ast_Expr = lam x179.
      never
  let vDataTypeAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr = lam x180.
      never
  let vDataTypeAst_tyWithInfo: Info -> Ast_Type -> Ast_Type =
    lam info13.
      lam __sem_target566.
        match
          __sem_target566
        with
          DataTypeAst_TyData t747
        in
        DataTypeAst_TyData
            { t747 with info = info13 }
  let vDataTypeAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target567.
      match
        __sem_target567
      with
        ty98
      in
      vDataTypeAst_rapp_Type_Type vDataTypeAst_unwrapType ty98
  let vDataTypeAst_computeData: DataTypeAst_DataRec -> Map Name (Set Name) =
    lam __sem_target568.
      match
        __sem_target568
      with
        r268
      in
      match
          r268.positive
        with
          true
        then
          mapMap (setIntersect r268.cons) r268.universe
        else
          mapMap
            (lam x181.
               setSubtract x181 r268.cons)
            r268.universe
  let vDataTypeAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target569.
      match
        __sem_target569
      with
        ty99
      in
      vDataTypeAst_rapp_Type_Type vDataTypeAst_inspectType ty99
  let vDataTypeAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x182.
      never
  let vDataTypeAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x183.
      never
  let vDataTypeAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f410.
      lam __sem_target570.
        match
          __sem_target570
        with
          p397
        in
        let res128 =
            vDataTypeAst_smapAccumL_Pat_Pat
              (lam #var"254".
                 lam a367.
                   ({}, f410 a367))
              {}
              p397
          in
          res128.1
  let vDataTypeAst_countPatNodes =
    lam count154.
      lam __sem_target571.
        match
          __sem_target571
        with
          t748
        in
        let count155 = addi count154 1 in
          let count156 =
            vDataTypeAst_sfold_Pat_Pat vDataTypeAst_countPatNodes count155 t748
          in
          let count157 =
            vDataTypeAst_sfold_Pat_Expr vDataTypeAst_countExprNodes count156 t748
          in
          let count158 =
            vDataTypeAst_sfold_Pat_Type vDataTypeAst_countTypeNodes count157 t748
          in
          count158
  let vDataTypeAst_sfold_Pat_Pat: all acc936. (acc936 -> Ast_Pat -> acc936) -> acc936 -> Ast_Pat -> acc936 =
    lam f411.
      lam acc937.
        lam __sem_target572.
          match
            __sem_target572
          with
            p398
          in
          let res129 =
              vDataTypeAst_smapAccumL_Pat_Pat
                (lam acc938.
                   lam a368.
                     (f411 acc938 a368, a368))
                acc937
                p398
            in
            res129.0
  let vDataTypeAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f412.
      lam __sem_target573.
        match
          __sem_target573
        with
          p399
        in
        match
            vDataTypeAst_smapAccumL_Expr_Pat
              (lam #var"255".
                 lam a369.
                   ({}, f412 a369))
              {}
              p399
          with
            (_, p400)
          in
          p400
  let vDataTypeAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f413.
      lam __sem_target574.
        match
          __sem_target574
        with
          p401
        in
        match
            vDataTypeAst_smapAccumL_Pat_Expr
              (lam #var"256".
                 lam a370.
                   ({}, f413 a370))
              {}
              p401
          with
            (_, p402)
          in
          p402
  let vDataTypeAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f414.
      lam __sem_target575.
        match
          __sem_target575
        with
          p403
        in
        match
            vDataTypeAst_smapAccumL_Pat_Type
              (lam #var"257".
                 lam a371.
                   ({}, f414 a371))
              {}
              p403
          with
            (_, p404)
          in
          p404
  let vDataTypeAst_countExprNodes =
    lam count159.
      lam __sem_target576.
        match
          __sem_target576
        with
          t749
        in
        let count160 = addi count159 1 in
          let count161 =
            vDataTypeAst_sfold_Expr_Expr vDataTypeAst_countExprNodes count160 t749
          in
          let count162 =
            vDataTypeAst_sfold_Expr_Type vDataTypeAst_countTypeNodes count161 t749
          in
          let count163 =
            vDataTypeAst_sfold_Expr_TypeLabel vDataTypeAst_countTypeNodes count162 t749
          in
          let count164 =
            vDataTypeAst_sfold_Expr_Pat vDataTypeAst_countPatNodes count163 t749
          in
          count164
  let vDataTypeAst_countTypeNodes =
    lam count165.
      lam __sem_target577.
        match
          __sem_target577
        with
          t750
        in
        let count166 = addi count165 1 in
          let count167 =
            vDataTypeAst_sfold_Type_Type vDataTypeAst_countTypeNodes count166 t750
          in
          count167
  let vDataTypeAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f415.
      lam __sem_target578.
        match
          __sem_target578
        with
          ty100
        in
        let res130 =
            vDataTypeAst_rappAccumL_Type_Type
              (lam #var"258".
                 lam t751.
                   ({}, f415 t751))
              {}
              ty100
          in
          res130.1
  let vDataTypeAst_sfold_Expr_Pat: all acc939. (acc939 -> Ast_Pat -> acc939) -> acc939 -> Ast_Expr -> acc939 =
    lam f416.
      lam acc940.
        lam __sem_target579.
          match
            __sem_target579
          with
            p405
          in
          match
              vDataTypeAst_smapAccumL_Expr_Pat
                (lam acc941.
                   lam a372.
                     (f416 acc941 a372, a372))
                acc940
                p405
            with
              (acc942, _)
            in
            acc942
  let vDataTypeAst_sfold_Pat_Expr: all acc943. (acc943 -> Ast_Expr -> acc943) -> acc943 -> Ast_Pat -> acc943 =
    lam f417.
      lam acc944.
        lam __sem_target580.
          match
            __sem_target580
          with
            p406
          in
          match
              vDataTypeAst_smapAccumL_Pat_Expr
                (lam acc945.
                   lam a373.
                     (f417 acc945 a373, a373))
                acc944
                p406
            with
              (acc946, _)
            in
            acc946
  let vDataTypeAst_sfold_Pat_Type: all acc947. (acc947 -> Ast_Type -> acc947) -> acc947 -> Ast_Pat -> acc947 =
    lam f418.
      lam acc948.
        lam __sem_target581.
          match
            __sem_target581
          with
            p407
          in
          match
              vDataTypeAst_smapAccumL_Pat_Type
                (lam acc949.
                   lam a374.
                     (f418 acc949 a374, a374))
                acc948
                p407
            with
              (acc950, _)
            in
            acc950
  let vDataTypeAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f419.
      lam __sem_target582.
        match
          __sem_target582
        with
          p408
        in
        let res131 =
            vDataTypeAst_smapAccumL_Expr_Expr
              (lam #var"259".
                 lam a375.
                   ({}, f419 a375))
              {}
              p408
          in
          res131.1
  let vDataTypeAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f420.
      lam __sem_target583.
        match
          __sem_target583
        with
          p409
        in
        let res132 =
            vDataTypeAst_smapAccumL_Expr_Type
              (lam #var"260".
                 lam a376.
                   ({}, f420 a376))
              {}
              p409
          in
          res132.1
  let vDataTypeAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f421: Ast_Type -> Ast_Type.
      lam __sem_target584.
        match
          __sem_target584
        with
          s124
        in
        match
            vDataTypeAst_smapAccumL_Kind_Type
              (lam #var"261".
                 lam x184.
                   ({}, f421 x184))
              {}
              s124
          with
            (_, s125)
          in
          s125
  let vDataTypeAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f422.
      lam __sem_target585.
        match
          __sem_target585
        with
          p410
        in
        let res133 =
            vDataTypeAst_smapAccumL_Type_Type
              (lam #var"262".
                 lam a377.
                   ({}, f422 a377))
              {}
              p410
          in
          res133.1
  let vDataTypeAst_sfold_Expr_Expr: all acc951. (acc951 -> Ast_Expr -> acc951) -> acc951 -> Ast_Expr -> acc951 =
    lam f423.
      lam acc952.
        lam __sem_target586.
          match
            __sem_target586
          with
            p411
          in
          let res134 =
              vDataTypeAst_smapAccumL_Expr_Expr
                (lam acc953.
                   lam a378.
                     (f423 acc953 a378, a378))
                acc952
                p411
            in
            res134.0
  let vDataTypeAst_sfold_Expr_Type: all acc954. (acc954 -> Ast_Type -> acc954) -> acc954 -> Ast_Expr -> acc954 =
    lam f424.
      lam acc955.
        lam __sem_target587.
          match
            __sem_target587
          with
            p412
          in
          let res135 =
              vDataTypeAst_smapAccumL_Expr_Type
                (lam acc956.
                   lam a379.
                     (f424 acc956 a379, a379))
                acc955
                p412
            in
            res135.0
  let vDataTypeAst_sfold_Kind_Type: all acc957. (acc957 -> Ast_Type -> acc957) -> acc957 -> Ast_Kind -> acc957 =
    lam f425: acc957 -> Ast_Type -> acc957.
      lam acc958: acc957.
        lam __sem_target588.
          match
            __sem_target588
          with
            s126
          in
          match
              vDataTypeAst_smapAccumL_Kind_Type
                (lam a380.
                   lam x185.
                     (f425 a380 x185, x185))
                acc958
                s126
            with
              (a381, _)
            in
            a381
  let vDataTypeAst_sfold_Type_Type: all acc959. (acc959 -> Ast_Type -> acc959) -> acc959 -> Ast_Type -> acc959 =
    lam f426.
      lam acc960.
        lam __sem_target589.
          match
            __sem_target589
          with
            p413
          in
          let res136 =
              vDataTypeAst_smapAccumL_Type_Type
                (lam acc961.
                   lam a382.
                     (f426 acc961 a382, a382))
                acc960
                p413
            in
            res136.0
  let vDataTypeAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f427.
      lam __sem_target590.
        match
          __sem_target590
        with
          expr99
        in
        let expr100 = f427 expr99 in
          vDataTypeAst_smap_Expr_Expr (vDataTypeAst_mapPre_Expr_Expr f427) expr100
  let vDataTypeAst_foldPre_Expr_Expr: all acc962. (acc962 -> Ast_Expr -> acc962) -> acc962 -> Ast_Expr -> acc962 =
    lam f428.
      lam acc963.
        lam __sem_target591.
          match
            __sem_target591
          with
            expr101
          in
          let acc964 = f428 acc963 expr101 in
            vDataTypeAst_sfold_Expr_Expr (vDataTypeAst_foldPre_Expr_Expr f428) acc964 expr101
  let vDataTypeAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f429.
      lam __sem_target592.
        match
          __sem_target592
        with
          expr102
        in
        f429
            (vDataTypeAst_smap_Expr_Expr (vDataTypeAst_mapPost_Expr_Expr f429) expr102)
  let vDataTypeAst_foldPost_Expr_Expr: all acc965. (acc965 -> Ast_Expr -> acc965) -> acc965 -> Ast_Expr -> acc965 =
    lam f430.
      lam acc966.
        lam __sem_target593.
          match
            __sem_target593
          with
            expr103
          in
          f430
              (vDataTypeAst_sfold_Expr_Expr (vDataTypeAst_foldPost_Expr_Expr f430) acc966 expr103)
              expr103
  let vDataTypeAst_smapAccumL_Pat_Pat: all acc967. (acc967 -> Ast_Pat -> (acc967, Ast_Pat)) -> acc967 -> Ast_Pat -> (acc967, Ast_Pat) =
    lam f431.
      lam acc968.
        lam __sem_target594.
          match
            __sem_target594
          with
            p414
          in
          (acc968, p414)
  let vDataTypeAst_smapAccumL_Expr_Pat: all acc969. (acc969 -> Ast_Pat -> (acc969, Ast_Pat)) -> acc969 -> Ast_Expr -> (acc969, Ast_Expr) =
    lam f432.
      lam acc970.
        lam __sem_target595.
          match
            __sem_target595
          with
            p415
          in
          (acc970, p415)
  let vDataTypeAst_smapAccumL_Pat_Expr: all acc971. (acc971 -> Ast_Expr -> (acc971, Ast_Expr)) -> acc971 -> Ast_Pat -> (acc971, Ast_Pat) =
    lam f433.
      lam acc972.
        lam __sem_target596.
          match
            __sem_target596
          with
            p416
          in
          (acc972, p416)
  let vDataTypeAst_smapAccumL_Pat_Type: all acc973. (acc973 -> Ast_Type -> (acc973, Ast_Type)) -> acc973 -> Ast_Pat -> (acc973, Ast_Pat) =
    lam f434.
      lam acc974.
        lam __sem_target597.
          match
            __sem_target597
          with
            p417
          in
          (acc974, p417)
  let vDataTypeAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f435.
      lam __sem_target598.
        match
          __sem_target598
        with
          p418
        in
        let res137 =
            vDataTypeAst_smapAccumL_Expr_TypeLabel
              (lam #var"263".
                 lam a383.
                   ({}, f435 a383))
              {}
              p418
          in
          res137.1
  let vDataTypeAst_rappAccumL_Type_Type: all acc975. (acc975 -> Ast_Type -> (acc975, Ast_Type)) -> acc975 -> Ast_Type -> (acc975, Ast_Type) =
    lam f436.
      lam acc976.
        lam __sem_target599.
          match
            __sem_target599
          with
            ty101
          in
          (acc976, ty101)
  let vDataTypeAst_sfold_Expr_TypeLabel: all acc977. (acc977 -> Ast_Type -> acc977) -> acc977 -> Ast_Expr -> acc977 =
    lam f437.
      lam acc978.
        lam __sem_target600.
          match
            __sem_target600
          with
            p419
          in
          let res138 =
              vDataTypeAst_smapAccumL_Expr_TypeLabel
                (lam acc979.
                   lam a384.
                     (f437 acc979 a384, a384))
                acc978
                p419
            in
            res138.0
  let vDataTypeAst_smapAccumL_Expr_Expr: all acc980. (acc980 -> Ast_Expr -> (acc980, Ast_Expr)) -> acc980 -> Ast_Expr -> (acc980, Ast_Expr) =
    lam f438.
      lam acc981.
        lam __sem_target601.
          match
            __sem_target601
          with
            p420
          in
          (acc981, p420)
  let vDataTypeAst_smapAccumL_Expr_Type: all acc982. (acc982 -> Ast_Type -> (acc982, Ast_Type)) -> acc982 -> Ast_Expr -> (acc982, Ast_Expr) =
    lam f439.
      lam acc983.
        lam __sem_target602.
          match
            __sem_target602
          with
            p421
          in
          (acc983, p421)
  let vDataTypeAst_smapAccumL_Kind_Type: all acc984. (acc984 -> Ast_Type -> (acc984, Ast_Type)) -> acc984 -> Ast_Kind -> (acc984, Ast_Kind) =
    lam f440.
      lam acc985.
        lam __sem_target603.
          match
            __sem_target603
          with
            s127
          in
          (acc985, s127)
  let vDataTypeAst_smapAccumL_Type_Type: all acc986. (acc986 -> Ast_Type -> (acc986, Ast_Type)) -> acc986 -> Ast_Type -> (acc986, Ast_Type) =
    lam f441.
      lam acc987.
        lam __sem_target604.
          match
            __sem_target604
          with
            p422
          in
          (acc987, p422)
  let vDataTypeAst_mapAccumLPre_Expr_Expr: all acc988. (acc988 -> Ast_Expr -> (acc988, Ast_Expr)) -> acc988 -> Ast_Expr -> (acc988, Ast_Expr) =
    lam f442.
      lam acc989.
        lam __sem_target605.
          match
            __sem_target605
          with
            expr104
          in
          match
              f442 acc989 expr104
            with
              (acc990, expr105)
            in
            vDataTypeAst_smapAccumL_Expr_Expr (vDataTypeAst_mapAccumLPre_Expr_Expr f442) acc990 expr105
  let vDataTypeAst_mapAccumLPost_Expr_Expr: all acc991. (acc991 -> Ast_Expr -> (acc991, Ast_Expr)) -> acc991 -> Ast_Expr -> (acc991, Ast_Expr) =
    lam f443.
      lam acc992.
        lam __sem_target606.
          match
            __sem_target606
          with
            expr106
          in
          match
              vDataTypeAst_smapAccumL_Expr_Expr (vDataTypeAst_mapAccumLPost_Expr_Expr f443) acc992 expr106
            with
              (acc993, expr107)
            in
            f443 acc993 expr107
  let vDataTypeAst_smapAccumL_Expr_TypeLabel: all acc994. (acc994 -> Ast_Type -> (acc994, Ast_Type)) -> acc994 -> Ast_Expr -> (acc994, Ast_Expr) =
    lam f444.
      lam acc995.
        lam __sem_target607.
          match
            __sem_target607
          with
            p423
          in
          match
              f444 acc995 (vDataTypeAst_tyTm p423)
            with
              (acc996, ty102)
            in
            (acc996, vDataTypeAst_withType ty102 p423)
in
con VarTypeAst_TyVar: {info: Info, ident: Name} -> Ast_Type in
recursive
  let vVarTypeAst_tyTm: Ast_Expr -> Ast_Type = lam x165.
      never
  let vVarTypeAst_tyPat: Ast_Pat -> Ast_Type = lam x166.
      never
  let vVarTypeAst_infoTm: Ast_Expr -> Info = lam x167.
      never
  let vVarTypeAst_infoTy: Ast_Type -> Info =
    lam __sem_target523.
      match
        __sem_target523
      with
        VarTypeAst_TyVar t741
      in
      t741.info
  let vVarTypeAst_infoPat: Ast_Pat -> Info = lam x168.
      never
  let vVarTypeAst_withInfo: Info -> Ast_Expr -> Ast_Expr = lam x169.
      never
  let vVarTypeAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr = lam x170.
      never
  let vVarTypeAst_tyWithInfo: Info -> Ast_Type -> Ast_Type =
    lam info12.
      lam __sem_target524.
        match
          __sem_target524
        with
          VarTypeAst_TyVar t742
        in
        VarTypeAst_TyVar
            { t742 with info = info12 }
  let vVarTypeAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target525.
      match
        __sem_target525
      with
        ty93
      in
      vVarTypeAst_rapp_Type_Type vVarTypeAst_unwrapType ty93
  let vVarTypeAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target526.
      match
        __sem_target526
      with
        ty94
      in
      vVarTypeAst_rapp_Type_Type vVarTypeAst_inspectType ty94
  let vVarTypeAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x171.
      never
  let vVarTypeAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x172.
      never
  let vVarTypeAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f375.
      lam __sem_target527.
        match
          __sem_target527
        with
          p370
        in
        let res117 =
            vVarTypeAst_smapAccumL_Pat_Pat
              (lam #var"244".
                 lam a349.
                   ({}, f375 a349))
              {}
              p370
          in
          res117.1
  let vVarTypeAst_countPatNodes =
    lam count140.
      lam __sem_target528.
        match
          __sem_target528
        with
          t743
        in
        let count141 = addi count140 1 in
          let count142 =
            vVarTypeAst_sfold_Pat_Pat vVarTypeAst_countPatNodes count141 t743
          in
          let count143 =
            vVarTypeAst_sfold_Pat_Expr vVarTypeAst_countExprNodes count142 t743
          in
          let count144 =
            vVarTypeAst_sfold_Pat_Type vVarTypeAst_countTypeNodes count143 t743
          in
          count144
  let vVarTypeAst_sfold_Pat_Pat: all acc875. (acc875 -> Ast_Pat -> acc875) -> acc875 -> Ast_Pat -> acc875 =
    lam f376.
      lam acc876.
        lam __sem_target529.
          match
            __sem_target529
          with
            p371
          in
          let res118 =
              vVarTypeAst_smapAccumL_Pat_Pat
                (lam acc877.
                   lam a350.
                     (f376 acc877 a350, a350))
                acc876
                p371
            in
            res118.0
  let vVarTypeAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f377.
      lam __sem_target530.
        match
          __sem_target530
        with
          p372
        in
        match
            vVarTypeAst_smapAccumL_Expr_Pat
              (lam #var"245".
                 lam a351.
                   ({}, f377 a351))
              {}
              p372
          with
            (_, p373)
          in
          p373
  let vVarTypeAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f378.
      lam __sem_target531.
        match
          __sem_target531
        with
          p374
        in
        match
            vVarTypeAst_smapAccumL_Pat_Expr
              (lam #var"246".
                 lam a352.
                   ({}, f378 a352))
              {}
              p374
          with
            (_, p375)
          in
          p375
  let vVarTypeAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f379.
      lam __sem_target532.
        match
          __sem_target532
        with
          p376
        in
        match
            vVarTypeAst_smapAccumL_Pat_Type
              (lam #var"247".
                 lam a353.
                   ({}, f379 a353))
              {}
              p376
          with
            (_, p377)
          in
          p377
  let vVarTypeAst_countExprNodes =
    lam count145.
      lam __sem_target533.
        match
          __sem_target533
        with
          t744
        in
        let count146 = addi count145 1 in
          let count147 =
            vVarTypeAst_sfold_Expr_Expr vVarTypeAst_countExprNodes count146 t744
          in
          let count148 =
            vVarTypeAst_sfold_Expr_Type vVarTypeAst_countTypeNodes count147 t744
          in
          let count149 =
            vVarTypeAst_sfold_Expr_TypeLabel vVarTypeAst_countTypeNodes count148 t744
          in
          let count150 =
            vVarTypeAst_sfold_Expr_Pat vVarTypeAst_countPatNodes count149 t744
          in
          count150
  let vVarTypeAst_countTypeNodes =
    lam count151.
      lam __sem_target534.
        match
          __sem_target534
        with
          t745
        in
        let count152 = addi count151 1 in
          let count153 =
            vVarTypeAst_sfold_Type_Type vVarTypeAst_countTypeNodes count152 t745
          in
          count153
  let vVarTypeAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f380.
      lam __sem_target535.
        match
          __sem_target535
        with
          ty95
        in
        let res119 =
            vVarTypeAst_rappAccumL_Type_Type
              (lam #var"248".
                 lam t746.
                   ({}, f380 t746))
              {}
              ty95
          in
          res119.1
  let vVarTypeAst_sfold_Expr_Pat: all acc878. (acc878 -> Ast_Pat -> acc878) -> acc878 -> Ast_Expr -> acc878 =
    lam f381.
      lam acc879.
        lam __sem_target536.
          match
            __sem_target536
          with
            p378
          in
          match
              vVarTypeAst_smapAccumL_Expr_Pat
                (lam acc880.
                   lam a354.
                     (f381 acc880 a354, a354))
                acc879
                p378
            with
              (acc881, _)
            in
            acc881
  let vVarTypeAst_sfold_Pat_Expr: all acc882. (acc882 -> Ast_Expr -> acc882) -> acc882 -> Ast_Pat -> acc882 =
    lam f382.
      lam acc883.
        lam __sem_target537.
          match
            __sem_target537
          with
            p379
          in
          match
              vVarTypeAst_smapAccumL_Pat_Expr
                (lam acc884.
                   lam a355.
                     (f382 acc884 a355, a355))
                acc883
                p379
            with
              (acc885, _)
            in
            acc885
  let vVarTypeAst_sfold_Pat_Type: all acc886. (acc886 -> Ast_Type -> acc886) -> acc886 -> Ast_Pat -> acc886 =
    lam f383.
      lam acc887.
        lam __sem_target538.
          match
            __sem_target538
          with
            p380
          in
          match
              vVarTypeAst_smapAccumL_Pat_Type
                (lam acc888.
                   lam a356.
                     (f383 acc888 a356, a356))
                acc887
                p380
            with
              (acc889, _)
            in
            acc889
  let vVarTypeAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f384.
      lam __sem_target539.
        match
          __sem_target539
        with
          p381
        in
        let res120 =
            vVarTypeAst_smapAccumL_Expr_Expr
              (lam #var"249".
                 lam a357.
                   ({}, f384 a357))
              {}
              p381
          in
          res120.1
  let vVarTypeAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f385.
      lam __sem_target540.
        match
          __sem_target540
        with
          p382
        in
        let res121 =
            vVarTypeAst_smapAccumL_Expr_Type
              (lam #var"250".
                 lam a358.
                   ({}, f385 a358))
              {}
              p382
          in
          res121.1
  let vVarTypeAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f386: Ast_Type -> Ast_Type.
      lam __sem_target541.
        match
          __sem_target541
        with
          s120
        in
        match
            vVarTypeAst_smapAccumL_Kind_Type
              (lam #var"251".
                 lam x173.
                   ({}, f386 x173))
              {}
              s120
          with
            (_, s121)
          in
          s121
  let vVarTypeAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f387.
      lam __sem_target542.
        match
          __sem_target542
        with
          p383
        in
        let res122 =
            vVarTypeAst_smapAccumL_Type_Type
              (lam #var"252".
                 lam a359.
                   ({}, f387 a359))
              {}
              p383
          in
          res122.1
  let vVarTypeAst_sfold_Expr_Expr: all acc890. (acc890 -> Ast_Expr -> acc890) -> acc890 -> Ast_Expr -> acc890 =
    lam f388.
      lam acc891.
        lam __sem_target543.
          match
            __sem_target543
          with
            p384
          in
          let res123 =
              vVarTypeAst_smapAccumL_Expr_Expr
                (lam acc892.
                   lam a360.
                     (f388 acc892 a360, a360))
                acc891
                p384
            in
            res123.0
  let vVarTypeAst_sfold_Expr_Type: all acc893. (acc893 -> Ast_Type -> acc893) -> acc893 -> Ast_Expr -> acc893 =
    lam f389.
      lam acc894.
        lam __sem_target544.
          match
            __sem_target544
          with
            p385
          in
          let res124 =
              vVarTypeAst_smapAccumL_Expr_Type
                (lam acc895.
                   lam a361.
                     (f389 acc895 a361, a361))
                acc894
                p385
            in
            res124.0
  let vVarTypeAst_sfold_Kind_Type: all acc896. (acc896 -> Ast_Type -> acc896) -> acc896 -> Ast_Kind -> acc896 =
    lam f390: acc896 -> Ast_Type -> acc896.
      lam acc897: acc896.
        lam __sem_target545.
          match
            __sem_target545
          with
            s122
          in
          match
              vVarTypeAst_smapAccumL_Kind_Type
                (lam a362.
                   lam x174.
                     (f390 a362 x174, x174))
                acc897
                s122
            with
              (a363, _)
            in
            a363
  let vVarTypeAst_sfold_Type_Type: all acc898. (acc898 -> Ast_Type -> acc898) -> acc898 -> Ast_Type -> acc898 =
    lam f391.
      lam acc899.
        lam __sem_target546.
          match
            __sem_target546
          with
            p386
          in
          let res125 =
              vVarTypeAst_smapAccumL_Type_Type
                (lam acc900.
                   lam a364.
                     (f391 acc900 a364, a364))
                acc899
                p386
            in
            res125.0
  let vVarTypeAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f392.
      lam __sem_target547.
        match
          __sem_target547
        with
          expr90
        in
        let expr91 = f392 expr90 in
          vVarTypeAst_smap_Expr_Expr (vVarTypeAst_mapPre_Expr_Expr f392) expr91
  let vVarTypeAst_foldPre_Expr_Expr: all acc901. (acc901 -> Ast_Expr -> acc901) -> acc901 -> Ast_Expr -> acc901 =
    lam f393.
      lam acc902.
        lam __sem_target548.
          match
            __sem_target548
          with
            expr92
          in
          let acc903 = f393 acc902 expr92 in
            vVarTypeAst_sfold_Expr_Expr (vVarTypeAst_foldPre_Expr_Expr f393) acc903 expr92
  let vVarTypeAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f394.
      lam __sem_target549.
        match
          __sem_target549
        with
          expr93
        in
        f394
            (vVarTypeAst_smap_Expr_Expr (vVarTypeAst_mapPost_Expr_Expr f394) expr93)
  let vVarTypeAst_foldPost_Expr_Expr: all acc904. (acc904 -> Ast_Expr -> acc904) -> acc904 -> Ast_Expr -> acc904 =
    lam f395.
      lam acc905.
        lam __sem_target550.
          match
            __sem_target550
          with
            expr94
          in
          f395
              (vVarTypeAst_sfold_Expr_Expr (vVarTypeAst_foldPost_Expr_Expr f395) acc905 expr94)
              expr94
  let vVarTypeAst_smapAccumL_Pat_Pat: all acc906. (acc906 -> Ast_Pat -> (acc906, Ast_Pat)) -> acc906 -> Ast_Pat -> (acc906, Ast_Pat) =
    lam f396.
      lam acc907.
        lam __sem_target551.
          match
            __sem_target551
          with
            p387
          in
          (acc907, p387)
  let vVarTypeAst_smapAccumL_Expr_Pat: all acc908. (acc908 -> Ast_Pat -> (acc908, Ast_Pat)) -> acc908 -> Ast_Expr -> (acc908, Ast_Expr) =
    lam f397.
      lam acc909.
        lam __sem_target552.
          match
            __sem_target552
          with
            p388
          in
          (acc909, p388)
  let vVarTypeAst_smapAccumL_Pat_Expr: all acc910. (acc910 -> Ast_Expr -> (acc910, Ast_Expr)) -> acc910 -> Ast_Pat -> (acc910, Ast_Pat) =
    lam f398.
      lam acc911.
        lam __sem_target553.
          match
            __sem_target553
          with
            p389
          in
          (acc911, p389)
  let vVarTypeAst_smapAccumL_Pat_Type: all acc912. (acc912 -> Ast_Type -> (acc912, Ast_Type)) -> acc912 -> Ast_Pat -> (acc912, Ast_Pat) =
    lam f399.
      lam acc913.
        lam __sem_target554.
          match
            __sem_target554
          with
            p390
          in
          (acc913, p390)
  let vVarTypeAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f400.
      lam __sem_target555.
        match
          __sem_target555
        with
          p391
        in
        let res126 =
            vVarTypeAst_smapAccumL_Expr_TypeLabel
              (lam #var"253".
                 lam a365.
                   ({}, f400 a365))
              {}
              p391
          in
          res126.1
  let vVarTypeAst_rappAccumL_Type_Type: all acc914. (acc914 -> Ast_Type -> (acc914, Ast_Type)) -> acc914 -> Ast_Type -> (acc914, Ast_Type) =
    lam f401.
      lam acc915.
        lam __sem_target556.
          match
            __sem_target556
          with
            ty96
          in
          (acc915, ty96)
  let vVarTypeAst_sfold_Expr_TypeLabel: all acc916. (acc916 -> Ast_Type -> acc916) -> acc916 -> Ast_Expr -> acc916 =
    lam f402.
      lam acc917.
        lam __sem_target557.
          match
            __sem_target557
          with
            p392
          in
          let res127 =
              vVarTypeAst_smapAccumL_Expr_TypeLabel
                (lam acc918.
                   lam a366.
                     (f402 acc918 a366, a366))
                acc917
                p392
            in
            res127.0
  let vVarTypeAst_smapAccumL_Expr_Expr: all acc919. (acc919 -> Ast_Expr -> (acc919, Ast_Expr)) -> acc919 -> Ast_Expr -> (acc919, Ast_Expr) =
    lam f403.
      lam acc920.
        lam __sem_target558.
          match
            __sem_target558
          with
            p393
          in
          (acc920, p393)
  let vVarTypeAst_smapAccumL_Expr_Type: all acc921. (acc921 -> Ast_Type -> (acc921, Ast_Type)) -> acc921 -> Ast_Expr -> (acc921, Ast_Expr) =
    lam f404.
      lam acc922.
        lam __sem_target559.
          match
            __sem_target559
          with
            p394
          in
          (acc922, p394)
  let vVarTypeAst_smapAccumL_Kind_Type: all acc923. (acc923 -> Ast_Type -> (acc923, Ast_Type)) -> acc923 -> Ast_Kind -> (acc923, Ast_Kind) =
    lam f405.
      lam acc924.
        lam __sem_target560.
          match
            __sem_target560
          with
            s123
          in
          (acc924, s123)
  let vVarTypeAst_smapAccumL_Type_Type: all acc925. (acc925 -> Ast_Type -> (acc925, Ast_Type)) -> acc925 -> Ast_Type -> (acc925, Ast_Type) =
    lam f406.
      lam acc926.
        lam __sem_target561.
          match
            __sem_target561
          with
            p395
          in
          (acc926, p395)
  let vVarTypeAst_mapAccumLPre_Expr_Expr: all acc927. (acc927 -> Ast_Expr -> (acc927, Ast_Expr)) -> acc927 -> Ast_Expr -> (acc927, Ast_Expr) =
    lam f407.
      lam acc928.
        lam __sem_target562.
          match
            __sem_target562
          with
            expr95
          in
          match
              f407 acc928 expr95
            with
              (acc929, expr96)
            in
            vVarTypeAst_smapAccumL_Expr_Expr (vVarTypeAst_mapAccumLPre_Expr_Expr f407) acc929 expr96
  let vVarTypeAst_mapAccumLPost_Expr_Expr: all acc930. (acc930 -> Ast_Expr -> (acc930, Ast_Expr)) -> acc930 -> Ast_Expr -> (acc930, Ast_Expr) =
    lam f408.
      lam acc931.
        lam __sem_target563.
          match
            __sem_target563
          with
            expr97
          in
          match
              vVarTypeAst_smapAccumL_Expr_Expr (vVarTypeAst_mapAccumLPost_Expr_Expr f408) acc931 expr97
            with
              (acc932, expr98)
            in
            f408 acc932 expr98
  let vVarTypeAst_smapAccumL_Expr_TypeLabel: all acc933. (acc933 -> Ast_Type -> (acc933, Ast_Type)) -> acc933 -> Ast_Expr -> (acc933, Ast_Expr) =
    lam f409.
      lam acc934.
        lam __sem_target564.
          match
            __sem_target564
          with
            p396
          in
          match
              f409 acc934 (vVarTypeAst_tyTm p396)
            with
              (acc935, ty97)
            in
            (acc935, vVarTypeAst_withType ty97 p396)
in
con AllTypeAst_TyAll: {ty: Ast_Type, info: Info, kind: Ast_Kind, ident: Name} -> Ast_Type in
recursive
  let vAllTypeAst_tyTm: Ast_Expr -> Ast_Type = lam x155.
      never
  let vAllTypeAst_tyPat: Ast_Pat -> Ast_Type = lam x156.
      never
  let vAllTypeAst_infoTm: Ast_Expr -> Info = lam x157.
      never
  let vAllTypeAst_infoTy: Ast_Type -> Info =
    lam __sem_target479.
      match
        __sem_target479
      with
        AllTypeAst_TyAll t732
      in
      t732.info
  let vAllTypeAst_infoPat: Ast_Pat -> Info = lam x158.
      never
  let vAllTypeAst_withInfo: Info -> Ast_Expr -> Ast_Expr = lam x159.
      never
  let vAllTypeAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr = lam x160.
      never
  let vAllTypeAst_stripTyAll =
    lam __sem_target480.
      match
        __sem_target480
      with
        ty85
      in
      vAllTypeAst_stripTyAllBase "" ty85
  let vAllTypeAst_tyWithInfo: Info -> Ast_Type -> Ast_Type =
    lam info11.
      lam __sem_target481.
        match
          __sem_target481
        with
          AllTypeAst_TyAll t733
        in
        AllTypeAst_TyAll
            { t733 with info = info11 }
  let vAllTypeAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target482.
      match
        __sem_target482
      with
        ty86
      in
      vAllTypeAst_rapp_Type_Type vAllTypeAst_unwrapType ty86
  let vAllTypeAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target483.
      match
        __sem_target483
      with
        AllTypeAst_TyAll t734
      then
        vAllTypeAst_inspectType t734.ty
      else match
        __sem_target483
      with
        ty87
      in
      vAllTypeAst_rapp_Type_Type vAllTypeAst_inspectType ty87
  let vAllTypeAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x161.
      never
  let vAllTypeAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x162.
      never
  let vAllTypeAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f340.
      lam __sem_target484.
        match
          __sem_target484
        with
          p343
        in
        let res106 =
            vAllTypeAst_smapAccumL_Pat_Pat
              (lam #var"234".
                 lam a331.
                   ({}, f340 a331))
              {}
              p343
          in
          res106.1
  let vAllTypeAst_countPatNodes =
    lam count126.
      lam __sem_target485.
        match
          __sem_target485
        with
          t735
        in
        let count127 = addi count126 1 in
          let count128 =
            vAllTypeAst_sfold_Pat_Pat vAllTypeAst_countPatNodes count127 t735
          in
          let count129 =
            vAllTypeAst_sfold_Pat_Expr vAllTypeAst_countExprNodes count128 t735
          in
          let count130 =
            vAllTypeAst_sfold_Pat_Type vAllTypeAst_countTypeNodes count129 t735
          in
          count130
  let vAllTypeAst_sfold_Pat_Pat: all acc812. (acc812 -> Ast_Pat -> acc812) -> acc812 -> Ast_Pat -> acc812 =
    lam f341.
      lam acc813.
        lam __sem_target486.
          match
            __sem_target486
          with
            p344
          in
          let res107 =
              vAllTypeAst_smapAccumL_Pat_Pat
                (lam acc814.
                   lam a332.
                     (f341 acc814 a332, a332))
                acc813
                p344
            in
            res107.0
  let vAllTypeAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f342.
      lam __sem_target487.
        match
          __sem_target487
        with
          p345
        in
        match
            vAllTypeAst_smapAccumL_Expr_Pat
              (lam #var"235".
                 lam a333.
                   ({}, f342 a333))
              {}
              p345
          with
            (_, p346)
          in
          p346
  let vAllTypeAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f343.
      lam __sem_target488.
        match
          __sem_target488
        with
          p347
        in
        match
            vAllTypeAst_smapAccumL_Pat_Expr
              (lam #var"236".
                 lam a334.
                   ({}, f343 a334))
              {}
              p347
          with
            (_, p348)
          in
          p348
  let vAllTypeAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f344.
      lam __sem_target489.
        match
          __sem_target489
        with
          p349
        in
        match
            vAllTypeAst_smapAccumL_Pat_Type
              (lam #var"237".
                 lam a335.
                   ({}, f344 a335))
              {}
              p349
          with
            (_, p350)
          in
          p350
  let vAllTypeAst_countExprNodes =
    lam count131.
      lam __sem_target490.
        match
          __sem_target490
        with
          t736
        in
        let count132 = addi count131 1 in
          let count133 =
            vAllTypeAst_sfold_Expr_Expr vAllTypeAst_countExprNodes count132 t736
          in
          let count134 =
            vAllTypeAst_sfold_Expr_Type vAllTypeAst_countTypeNodes count133 t736
          in
          let count135 =
            vAllTypeAst_sfold_Expr_TypeLabel vAllTypeAst_countTypeNodes count134 t736
          in
          let count136 =
            vAllTypeAst_sfold_Expr_Pat vAllTypeAst_countPatNodes count135 t736
          in
          count136
  let vAllTypeAst_countTypeNodes =
    lam count137.
      lam __sem_target491.
        match
          __sem_target491
        with
          t737
        in
        let count138 = addi count137 1 in
          let count139 =
            vAllTypeAst_sfold_Type_Type vAllTypeAst_countTypeNodes count138 t737
          in
          count139
  let vAllTypeAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f345.
      lam __sem_target492.
        match
          __sem_target492
        with
          ty88
        in
        let res108 =
            vAllTypeAst_rappAccumL_Type_Type
              (lam #var"238".
                 lam t738.
                   ({}, f345 t738))
              {}
              ty88
          in
          res108.1
  let vAllTypeAst_sfold_Expr_Pat: all acc815. (acc815 -> Ast_Pat -> acc815) -> acc815 -> Ast_Expr -> acc815 =
    lam f346.
      lam acc816.
        lam __sem_target493.
          match
            __sem_target493
          with
            p351
          in
          match
              vAllTypeAst_smapAccumL_Expr_Pat
                (lam acc817.
                   lam a336.
                     (f346 acc817 a336, a336))
                acc816
                p351
            with
              (acc818, _)
            in
            acc818
  let vAllTypeAst_sfold_Pat_Expr: all acc819. (acc819 -> Ast_Expr -> acc819) -> acc819 -> Ast_Pat -> acc819 =
    lam f347.
      lam acc820.
        lam __sem_target494.
          match
            __sem_target494
          with
            p352
          in
          match
              vAllTypeAst_smapAccumL_Pat_Expr
                (lam acc821.
                   lam a337.
                     (f347 acc821 a337, a337))
                acc820
                p352
            with
              (acc822, _)
            in
            acc822
  let vAllTypeAst_sfold_Pat_Type: all acc823. (acc823 -> Ast_Type -> acc823) -> acc823 -> Ast_Pat -> acc823 =
    lam f348.
      lam acc824.
        lam __sem_target495.
          match
            __sem_target495
          with
            p353
          in
          match
              vAllTypeAst_smapAccumL_Pat_Type
                (lam acc825.
                   lam a338.
                     (f348 acc825 a338, a338))
                acc824
                p353
            with
              (acc826, _)
            in
            acc826
  let vAllTypeAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f349.
      lam __sem_target496.
        match
          __sem_target496
        with
          p354
        in
        let res109 =
            vAllTypeAst_smapAccumL_Expr_Expr
              (lam #var"239".
                 lam a339.
                   ({}, f349 a339))
              {}
              p354
          in
          res109.1
  let vAllTypeAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f350.
      lam __sem_target497.
        match
          __sem_target497
        with
          p355
        in
        let res110 =
            vAllTypeAst_smapAccumL_Expr_Type
              (lam #var"240".
                 lam a340.
                   ({}, f350 a340))
              {}
              p355
          in
          res110.1
  let vAllTypeAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f351: Ast_Type -> Ast_Type.
      lam __sem_target498.
        match
          __sem_target498
        with
          s116
        in
        match
            vAllTypeAst_smapAccumL_Kind_Type
              (lam #var"241".
                 lam x163.
                   ({}, f351 x163))
              {}
              s116
          with
            (_, s117)
          in
          s117
  let vAllTypeAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f352.
      lam __sem_target499.
        match
          __sem_target499
        with
          p356
        in
        let res111 =
            vAllTypeAst_smapAccumL_Type_Type
              (lam #var"242".
                 lam a341.
                   ({}, f352 a341))
              {}
              p356
          in
          res111.1
  let vAllTypeAst_stripTyAllBase =
    lam vars4: [(Name, Ast_Kind)].
      lam __sem_target500.
        match
          __sem_target500
        with
          AllTypeAst_TyAll t739
        then
          vAllTypeAst_stripTyAllBase (snoc vars4 (t739.ident, t739.kind)) t739.ty
        else match
          __sem_target500
        with
          ty89
        in
        vAllTypeAst_rappAccumL_Type_Type vAllTypeAst_stripTyAllBase vars4 ty89
  let vAllTypeAst_sfold_Expr_Expr: all acc827. (acc827 -> Ast_Expr -> acc827) -> acc827 -> Ast_Expr -> acc827 =
    lam f353.
      lam acc828.
        lam __sem_target501.
          match
            __sem_target501
          with
            p357
          in
          let res112 =
              vAllTypeAst_smapAccumL_Expr_Expr
                (lam acc829.
                   lam a342.
                     (f353 acc829 a342, a342))
                acc828
                p357
            in
            res112.0
  let vAllTypeAst_sfold_Expr_Type: all acc830. (acc830 -> Ast_Type -> acc830) -> acc830 -> Ast_Expr -> acc830 =
    lam f354.
      lam acc831.
        lam __sem_target502.
          match
            __sem_target502
          with
            p358
          in
          let res113 =
              vAllTypeAst_smapAccumL_Expr_Type
                (lam acc832.
                   lam a343.
                     (f354 acc832 a343, a343))
                acc831
                p358
            in
            res113.0
  let vAllTypeAst_sfold_Kind_Type: all acc833. (acc833 -> Ast_Type -> acc833) -> acc833 -> Ast_Kind -> acc833 =
    lam f355: acc833 -> Ast_Type -> acc833.
      lam acc834: acc833.
        lam __sem_target503.
          match
            __sem_target503
          with
            s118
          in
          match
              vAllTypeAst_smapAccumL_Kind_Type
                (lam a344.
                   lam x164.
                     (f355 a344 x164, x164))
                acc834
                s118
            with
              (a345, _)
            in
            a345
  let vAllTypeAst_sfold_Type_Type: all acc835. (acc835 -> Ast_Type -> acc835) -> acc835 -> Ast_Type -> acc835 =
    lam f356.
      lam acc836.
        lam __sem_target504.
          match
            __sem_target504
          with
            p359
          in
          let res114 =
              vAllTypeAst_smapAccumL_Type_Type
                (lam acc837.
                   lam a346.
                     (f356 acc837 a346, a346))
                acc836
                p359
            in
            res114.0
  let vAllTypeAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f357.
      lam __sem_target505.
        match
          __sem_target505
        with
          expr81
        in
        let expr82 = f357 expr81 in
          vAllTypeAst_smap_Expr_Expr (vAllTypeAst_mapPre_Expr_Expr f357) expr82
  let vAllTypeAst_foldPre_Expr_Expr: all acc838. (acc838 -> Ast_Expr -> acc838) -> acc838 -> Ast_Expr -> acc838 =
    lam f358.
      lam acc839.
        lam __sem_target506.
          match
            __sem_target506
          with
            expr83
          in
          let acc840 = f358 acc839 expr83 in
            vAllTypeAst_sfold_Expr_Expr (vAllTypeAst_foldPre_Expr_Expr f358) acc840 expr83
  let vAllTypeAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f359.
      lam __sem_target507.
        match
          __sem_target507
        with
          expr84
        in
        f359
            (vAllTypeAst_smap_Expr_Expr (vAllTypeAst_mapPost_Expr_Expr f359) expr84)
  let vAllTypeAst_foldPost_Expr_Expr: all acc841. (acc841 -> Ast_Expr -> acc841) -> acc841 -> Ast_Expr -> acc841 =
    lam f360.
      lam acc842.
        lam __sem_target508.
          match
            __sem_target508
          with
            expr85
          in
          f360
              (vAllTypeAst_sfold_Expr_Expr (vAllTypeAst_foldPost_Expr_Expr f360) acc842 expr85)
              expr85
  let vAllTypeAst_smapAccumL_Pat_Pat: all acc843. (acc843 -> Ast_Pat -> (acc843, Ast_Pat)) -> acc843 -> Ast_Pat -> (acc843, Ast_Pat) =
    lam f361.
      lam acc844.
        lam __sem_target509.
          match
            __sem_target509
          with
            p360
          in
          (acc844, p360)
  let vAllTypeAst_smapAccumL_Expr_Pat: all acc845. (acc845 -> Ast_Pat -> (acc845, Ast_Pat)) -> acc845 -> Ast_Expr -> (acc845, Ast_Expr) =
    lam f362.
      lam acc846.
        lam __sem_target510.
          match
            __sem_target510
          with
            p361
          in
          (acc846, p361)
  let vAllTypeAst_smapAccumL_Pat_Expr: all acc847. (acc847 -> Ast_Expr -> (acc847, Ast_Expr)) -> acc847 -> Ast_Pat -> (acc847, Ast_Pat) =
    lam f363.
      lam acc848.
        lam __sem_target511.
          match
            __sem_target511
          with
            p362
          in
          (acc848, p362)
  let vAllTypeAst_smapAccumL_Pat_Type: all acc849. (acc849 -> Ast_Type -> (acc849, Ast_Type)) -> acc849 -> Ast_Pat -> (acc849, Ast_Pat) =
    lam f364.
      lam acc850.
        lam __sem_target512.
          match
            __sem_target512
          with
            p363
          in
          (acc850, p363)
  let vAllTypeAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f365.
      lam __sem_target513.
        match
          __sem_target513
        with
          p364
        in
        let res115 =
            vAllTypeAst_smapAccumL_Expr_TypeLabel
              (lam #var"243".
                 lam a347.
                   ({}, f365 a347))
              {}
              p364
          in
          res115.1
  let vAllTypeAst_rappAccumL_Type_Type: all acc851. (acc851 -> Ast_Type -> (acc851, Ast_Type)) -> acc851 -> Ast_Type -> (acc851, Ast_Type) =
    lam f366.
      lam acc852.
        lam __sem_target514.
          match
            __sem_target514
          with
            ty90
          in
          (acc852, ty90)
  let vAllTypeAst_sfold_Expr_TypeLabel: all acc853. (acc853 -> Ast_Type -> acc853) -> acc853 -> Ast_Expr -> acc853 =
    lam f367.
      lam acc854.
        lam __sem_target515.
          match
            __sem_target515
          with
            p365
          in
          let res116 =
              vAllTypeAst_smapAccumL_Expr_TypeLabel
                (lam acc855.
                   lam a348.
                     (f367 acc855 a348, a348))
                acc854
                p365
            in
            res116.0
  let vAllTypeAst_smapAccumL_Expr_Expr: all acc856. (acc856 -> Ast_Expr -> (acc856, Ast_Expr)) -> acc856 -> Ast_Expr -> (acc856, Ast_Expr) =
    lam f368.
      lam acc857.
        lam __sem_target516.
          match
            __sem_target516
          with
            p366
          in
          (acc857, p366)
  let vAllTypeAst_smapAccumL_Expr_Type: all acc858. (acc858 -> Ast_Type -> (acc858, Ast_Type)) -> acc858 -> Ast_Expr -> (acc858, Ast_Expr) =
    lam f369.
      lam acc859.
        lam __sem_target517.
          match
            __sem_target517
          with
            p367
          in
          (acc859, p367)
  let vAllTypeAst_smapAccumL_Kind_Type: all acc860. (acc860 -> Ast_Type -> (acc860, Ast_Type)) -> acc860 -> Ast_Kind -> (acc860, Ast_Kind) =
    lam f370.
      lam acc861.
        lam __sem_target518.
          match
            __sem_target518
          with
            s119
          in
          (acc861, s119)
  let vAllTypeAst_smapAccumL_Type_Type: all acc862. (acc862 -> Ast_Type -> (acc862, Ast_Type)) -> acc862 -> Ast_Type -> (acc862, Ast_Type) =
    lam f371.
      lam acc863.
        lam __sem_target519.
          match
            __sem_target519
          with
            AllTypeAst_TyAll t740
          then
            match
              vAllTypeAst_smapAccumL_Kind_Type f371 acc863 t740.kind
            with
              (acc864, kind4)
            in
            match
                f371 acc864 t740.ty
              with
                (acc865, ty91)
              in
              (acc865, AllTypeAst_TyAll
                  { t740 with kind = kind4, ty = ty91 })
          else match
            __sem_target519
          with
            p368
          in
          (acc863, p368)
  let vAllTypeAst_mapAccumLPre_Expr_Expr: all acc866. (acc866 -> Ast_Expr -> (acc866, Ast_Expr)) -> acc866 -> Ast_Expr -> (acc866, Ast_Expr) =
    lam f372.
      lam acc867.
        lam __sem_target520.
          match
            __sem_target520
          with
            expr86
          in
          match
              f372 acc867 expr86
            with
              (acc868, expr87)
            in
            vAllTypeAst_smapAccumL_Expr_Expr (vAllTypeAst_mapAccumLPre_Expr_Expr f372) acc868 expr87
  let vAllTypeAst_mapAccumLPost_Expr_Expr: all acc869. (acc869 -> Ast_Expr -> (acc869, Ast_Expr)) -> acc869 -> Ast_Expr -> (acc869, Ast_Expr) =
    lam f373.
      lam acc870.
        lam __sem_target521.
          match
            __sem_target521
          with
            expr88
          in
          match
              vAllTypeAst_smapAccumL_Expr_Expr (vAllTypeAst_mapAccumLPost_Expr_Expr f373) acc870 expr88
            with
              (acc871, expr89)
            in
            f373 acc871 expr89
  let vAllTypeAst_smapAccumL_Expr_TypeLabel: all acc872. (acc872 -> Ast_Type -> (acc872, Ast_Type)) -> acc872 -> Ast_Expr -> (acc872, Ast_Expr) =
    lam f374.
      lam acc873.
        lam __sem_target522.
          match
            __sem_target522
          with
            p369
          in
          match
              f374 acc873 (vAllTypeAst_tyTm p369)
            with
              (acc874, ty92)
            in
            (acc874, vAllTypeAst_withType ty92 p369)
in
con AppTypeAst_TyApp: {lhs: Ast_Type, rhs: Ast_Type, info: Info} -> Ast_Type in
recursive
  let vAppTypeAst_tyTm: Ast_Expr -> Ast_Type = lam x145.
      never
  let vAppTypeAst_tyPat: Ast_Pat -> Ast_Type = lam x146.
      never
  let vAppTypeAst_infoTm: Ast_Expr -> Info = lam x147.
      never
  let vAppTypeAst_infoTy: Ast_Type -> Info =
    lam __sem_target437.
      match
        __sem_target437
      with
        AppTypeAst_TyApp r266
      in
      r266.info
  let vAppTypeAst_infoPat: Ast_Pat -> Info = lam x148.
      never
  let vAppTypeAst_withInfo: Info -> Ast_Expr -> Ast_Expr = lam x149.
      never
  let vAppTypeAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr = lam x150.
      never
  let vAppTypeAst_tyWithInfo: Info -> Ast_Type -> Ast_Type =
    lam info10.
      lam __sem_target438.
        match
          __sem_target438
        with
          AppTypeAst_TyApp t726
        in
        AppTypeAst_TyApp
            { t726 with info = info10 }
  let vAppTypeAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target439.
      match
        __sem_target439
      with
        ty80
      in
      vAppTypeAst_rapp_Type_Type vAppTypeAst_unwrapType ty80
  let vAppTypeAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target440.
      match
        __sem_target440
      with
        ty81
      in
      vAppTypeAst_rapp_Type_Type vAppTypeAst_inspectType ty81
  let vAppTypeAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x151.
      never
  let vAppTypeAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x152.
      never
  let vAppTypeAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f305.
      lam __sem_target441.
        match
          __sem_target441
        with
          p316
        in
        let res95 =
            vAppTypeAst_smapAccumL_Pat_Pat
              (lam #var"224".
                 lam a313.
                   ({}, f305 a313))
              {}
              p316
          in
          res95.1
  let vAppTypeAst_countPatNodes =
    lam count112.
      lam __sem_target442.
        match
          __sem_target442
        with
          t727
        in
        let count113 = addi count112 1 in
          let count114 =
            vAppTypeAst_sfold_Pat_Pat vAppTypeAst_countPatNodes count113 t727
          in
          let count115 =
            vAppTypeAst_sfold_Pat_Expr vAppTypeAst_countExprNodes count114 t727
          in
          let count116 =
            vAppTypeAst_sfold_Pat_Type vAppTypeAst_countTypeNodes count115 t727
          in
          count116
  let vAppTypeAst_sfold_Pat_Pat: all acc749. (acc749 -> Ast_Pat -> acc749) -> acc749 -> Ast_Pat -> acc749 =
    lam f306.
      lam acc750.
        lam __sem_target443.
          match
            __sem_target443
          with
            p317
          in
          let res96 =
              vAppTypeAst_smapAccumL_Pat_Pat
                (lam acc751.
                   lam a314.
                     (f306 acc751 a314, a314))
                acc750
                p317
            in
            res96.0
  let vAppTypeAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f307.
      lam __sem_target444.
        match
          __sem_target444
        with
          p318
        in
        match
            vAppTypeAst_smapAccumL_Expr_Pat
              (lam #var"225".
                 lam a315.
                   ({}, f307 a315))
              {}
              p318
          with
            (_, p319)
          in
          p319
  let vAppTypeAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f308.
      lam __sem_target445.
        match
          __sem_target445
        with
          p320
        in
        match
            vAppTypeAst_smapAccumL_Pat_Expr
              (lam #var"226".
                 lam a316.
                   ({}, f308 a316))
              {}
              p320
          with
            (_, p321)
          in
          p321
  let vAppTypeAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f309.
      lam __sem_target446.
        match
          __sem_target446
        with
          p322
        in
        match
            vAppTypeAst_smapAccumL_Pat_Type
              (lam #var"227".
                 lam a317.
                   ({}, f309 a317))
              {}
              p322
          with
            (_, p323)
          in
          p323
  let vAppTypeAst_countExprNodes =
    lam count117.
      lam __sem_target447.
        match
          __sem_target447
        with
          t728
        in
        let count118 = addi count117 1 in
          let count119 =
            vAppTypeAst_sfold_Expr_Expr vAppTypeAst_countExprNodes count118 t728
          in
          let count120 =
            vAppTypeAst_sfold_Expr_Type vAppTypeAst_countTypeNodes count119 t728
          in
          let count121 =
            vAppTypeAst_sfold_Expr_TypeLabel vAppTypeAst_countTypeNodes count120 t728
          in
          let count122 =
            vAppTypeAst_sfold_Expr_Pat vAppTypeAst_countPatNodes count121 t728
          in
          count122
  let vAppTypeAst_countTypeNodes =
    lam count123.
      lam __sem_target448.
        match
          __sem_target448
        with
          t729
        in
        let count124 = addi count123 1 in
          let count125 =
            vAppTypeAst_sfold_Type_Type vAppTypeAst_countTypeNodes count124 t729
          in
          count125
  let vAppTypeAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f310.
      lam __sem_target449.
        match
          __sem_target449
        with
          ty82
        in
        let res97 =
            vAppTypeAst_rappAccumL_Type_Type
              (lam #var"228".
                 lam t730.
                   ({}, f310 t730))
              {}
              ty82
          in
          res97.1
  let vAppTypeAst_sfold_Expr_Pat: all acc752. (acc752 -> Ast_Pat -> acc752) -> acc752 -> Ast_Expr -> acc752 =
    lam f311.
      lam acc753.
        lam __sem_target450.
          match
            __sem_target450
          with
            p324
          in
          match
              vAppTypeAst_smapAccumL_Expr_Pat
                (lam acc754.
                   lam a318.
                     (f311 acc754 a318, a318))
                acc753
                p324
            with
              (acc755, _)
            in
            acc755
  let vAppTypeAst_sfold_Pat_Expr: all acc756. (acc756 -> Ast_Expr -> acc756) -> acc756 -> Ast_Pat -> acc756 =
    lam f312.
      lam acc757.
        lam __sem_target451.
          match
            __sem_target451
          with
            p325
          in
          match
              vAppTypeAst_smapAccumL_Pat_Expr
                (lam acc758.
                   lam a319.
                     (f312 acc758 a319, a319))
                acc757
                p325
            with
              (acc759, _)
            in
            acc759
  let vAppTypeAst_sfold_Pat_Type: all acc760. (acc760 -> Ast_Type -> acc760) -> acc760 -> Ast_Pat -> acc760 =
    lam f313.
      lam acc761.
        lam __sem_target452.
          match
            __sem_target452
          with
            p326
          in
          match
              vAppTypeAst_smapAccumL_Pat_Type
                (lam acc762.
                   lam a320.
                     (f313 acc762 a320, a320))
                acc761
                p326
            with
              (acc763, _)
            in
            acc763
  let vAppTypeAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f314.
      lam __sem_target453.
        match
          __sem_target453
        with
          p327
        in
        let res98 =
            vAppTypeAst_smapAccumL_Expr_Expr
              (lam #var"229".
                 lam a321.
                   ({}, f314 a321))
              {}
              p327
          in
          res98.1
  let vAppTypeAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f315.
      lam __sem_target454.
        match
          __sem_target454
        with
          p328
        in
        let res99 =
            vAppTypeAst_smapAccumL_Expr_Type
              (lam #var"230".
                 lam a322.
                   ({}, f315 a322))
              {}
              p328
          in
          res99.1
  let vAppTypeAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f316: Ast_Type -> Ast_Type.
      lam __sem_target455.
        match
          __sem_target455
        with
          s107
        in
        match
            vAppTypeAst_smapAccumL_Kind_Type
              (lam #var"231".
                 lam x153.
                   ({}, f316 x153))
              {}
              s107
          with
            (_, s108)
          in
          s108
  let vAppTypeAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f317.
      lam __sem_target456.
        match
          __sem_target456
        with
          p329
        in
        let res100 =
            vAppTypeAst_smapAccumL_Type_Type
              (lam #var"232".
                 lam a323.
                   ({}, f317 a323))
              {}
              p329
          in
          res100.1
  let vAppTypeAst_sfold_Expr_Expr: all acc764. (acc764 -> Ast_Expr -> acc764) -> acc764 -> Ast_Expr -> acc764 =
    lam f318.
      lam acc765.
        lam __sem_target457.
          match
            __sem_target457
          with
            p330
          in
          let res101 =
              vAppTypeAst_smapAccumL_Expr_Expr
                (lam acc766.
                   lam a324.
                     (f318 acc766 a324, a324))
                acc765
                p330
            in
            res101.0
  let vAppTypeAst_sfold_Expr_Type: all acc767. (acc767 -> Ast_Type -> acc767) -> acc767 -> Ast_Expr -> acc767 =
    lam f319.
      lam acc768.
        lam __sem_target458.
          match
            __sem_target458
          with
            p331
          in
          let res102 =
              vAppTypeAst_smapAccumL_Expr_Type
                (lam acc769.
                   lam a325.
                     (f319 acc769 a325, a325))
                acc768
                p331
            in
            res102.0
  let vAppTypeAst_sfold_Kind_Type: all acc770. (acc770 -> Ast_Type -> acc770) -> acc770 -> Ast_Kind -> acc770 =
    lam f320: acc770 -> Ast_Type -> acc770.
      lam acc771: acc770.
        lam __sem_target459.
          match
            __sem_target459
          with
            s109
          in
          match
              vAppTypeAst_smapAccumL_Kind_Type
                (lam a326.
                   lam x154.
                     (f320 a326 x154, x154))
                acc771
                s109
            with
              (a327, _)
            in
            a327
  let vAppTypeAst_sfold_Type_Type: all acc772. (acc772 -> Ast_Type -> acc772) -> acc772 -> Ast_Type -> acc772 =
    lam f321.
      lam acc773.
        lam __sem_target460.
          match
            __sem_target460
          with
            p332
          in
          let res103 =
              vAppTypeAst_smapAccumL_Type_Type
                (lam acc774.
                   lam a328.
                     (f321 acc774 a328, a328))
                acc773
                p332
            in
            res103.0
  let vAppTypeAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f322.
      lam __sem_target461.
        match
          __sem_target461
        with
          expr72
        in
        let expr73 = f322 expr72 in
          vAppTypeAst_smap_Expr_Expr (vAppTypeAst_mapPre_Expr_Expr f322) expr73
  let vAppTypeAst_foldPre_Expr_Expr: all acc775. (acc775 -> Ast_Expr -> acc775) -> acc775 -> Ast_Expr -> acc775 =
    lam f323.
      lam acc776.
        lam __sem_target462.
          match
            __sem_target462
          with
            expr74
          in
          let acc777 = f323 acc776 expr74 in
            vAppTypeAst_sfold_Expr_Expr (vAppTypeAst_foldPre_Expr_Expr f323) acc777 expr74
  let vAppTypeAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f324.
      lam __sem_target463.
        match
          __sem_target463
        with
          expr75
        in
        f324
            (vAppTypeAst_smap_Expr_Expr (vAppTypeAst_mapPost_Expr_Expr f324) expr75)
  let vAppTypeAst_foldPost_Expr_Expr: all acc778. (acc778 -> Ast_Expr -> acc778) -> acc778 -> Ast_Expr -> acc778 =
    lam f325.
      lam acc779.
        lam __sem_target464.
          match
            __sem_target464
          with
            expr76
          in
          f325
              (vAppTypeAst_sfold_Expr_Expr (vAppTypeAst_foldPost_Expr_Expr f325) acc779 expr76)
              expr76
  let vAppTypeAst_smapAccumL_Pat_Pat: all acc780. (acc780 -> Ast_Pat -> (acc780, Ast_Pat)) -> acc780 -> Ast_Pat -> (acc780, Ast_Pat) =
    lam f326.
      lam acc781.
        lam __sem_target465.
          match
            __sem_target465
          with
            p333
          in
          (acc781, p333)
  let vAppTypeAst_smapAccumL_Expr_Pat: all acc782. (acc782 -> Ast_Pat -> (acc782, Ast_Pat)) -> acc782 -> Ast_Expr -> (acc782, Ast_Expr) =
    lam f327.
      lam acc783.
        lam __sem_target466.
          match
            __sem_target466
          with
            p334
          in
          (acc783, p334)
  let vAppTypeAst_smapAccumL_Pat_Expr: all acc784. (acc784 -> Ast_Expr -> (acc784, Ast_Expr)) -> acc784 -> Ast_Pat -> (acc784, Ast_Pat) =
    lam f328.
      lam acc785.
        lam __sem_target467.
          match
            __sem_target467
          with
            p335
          in
          (acc785, p335)
  let vAppTypeAst_smapAccumL_Pat_Type: all acc786. (acc786 -> Ast_Type -> (acc786, Ast_Type)) -> acc786 -> Ast_Pat -> (acc786, Ast_Pat) =
    lam f329.
      lam acc787.
        lam __sem_target468.
          match
            __sem_target468
          with
            p336
          in
          (acc787, p336)
  let vAppTypeAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f330.
      lam __sem_target469.
        match
          __sem_target469
        with
          p337
        in
        let res104 =
            vAppTypeAst_smapAccumL_Expr_TypeLabel
              (lam #var"233".
                 lam a329.
                   ({}, f330 a329))
              {}
              p337
          in
          res104.1
  let vAppTypeAst_rappAccumL_Type_Type: all acc788. (acc788 -> Ast_Type -> (acc788, Ast_Type)) -> acc788 -> Ast_Type -> (acc788, Ast_Type) =
    lam f331.
      lam acc789.
        lam __sem_target470.
          match
            __sem_target470
          with
            ty83
          in
          (acc789, ty83)
  let vAppTypeAst_sfold_Expr_TypeLabel: all acc790. (acc790 -> Ast_Type -> acc790) -> acc790 -> Ast_Expr -> acc790 =
    lam f332.
      lam acc791.
        lam __sem_target471.
          match
            __sem_target471
          with
            p338
          in
          let res105 =
              vAppTypeAst_smapAccumL_Expr_TypeLabel
                (lam acc792.
                   lam a330.
                     (f332 acc792 a330, a330))
                acc791
                p338
            in
            res105.0
  let vAppTypeAst_smapAccumL_Expr_Expr: all acc793. (acc793 -> Ast_Expr -> (acc793, Ast_Expr)) -> acc793 -> Ast_Expr -> (acc793, Ast_Expr) =
    lam f333.
      lam acc794.
        lam __sem_target472.
          match
            __sem_target472
          with
            p339
          in
          (acc794, p339)
  let vAppTypeAst_smapAccumL_Expr_Type: all acc795. (acc795 -> Ast_Type -> (acc795, Ast_Type)) -> acc795 -> Ast_Expr -> (acc795, Ast_Expr) =
    lam f334.
      lam acc796.
        lam __sem_target473.
          match
            __sem_target473
          with
            p340
          in
          (acc796, p340)
  let vAppTypeAst_smapAccumL_Kind_Type: all acc797. (acc797 -> Ast_Type -> (acc797, Ast_Type)) -> acc797 -> Ast_Kind -> (acc797, Ast_Kind) =
    lam f335.
      lam acc798.
        lam __sem_target474.
          match
            __sem_target474
          with
            s115
          in
          (acc798, s115)
  let vAppTypeAst_smapAccumL_Type_Type: all acc799. (acc799 -> Ast_Type -> (acc799, Ast_Type)) -> acc799 -> Ast_Type -> (acc799, Ast_Type) =
    lam f336.
      lam acc800.
        lam __sem_target475.
          match
            __sem_target475
          with
            AppTypeAst_TyApp t731
          then
            match
              f336 acc800 t731.lhs
            with
              (acc801, lhs10)
            in
            match
                f336 acc801 t731.rhs
              with
                (acc802, rhs10)
              in
              (acc802, AppTypeAst_TyApp
                  { t731 with lhs = lhs10, rhs = rhs10 })
          else match
            __sem_target475
          with
            p341
          in
          (acc800, p341)
  let vAppTypeAst_mapAccumLPre_Expr_Expr: all acc803. (acc803 -> Ast_Expr -> (acc803, Ast_Expr)) -> acc803 -> Ast_Expr -> (acc803, Ast_Expr) =
    lam f337.
      lam acc804.
        lam __sem_target476.
          match
            __sem_target476
          with
            expr77
          in
          match
              f337 acc804 expr77
            with
              (acc805, expr78)
            in
            vAppTypeAst_smapAccumL_Expr_Expr (vAppTypeAst_mapAccumLPre_Expr_Expr f337) acc805 expr78
  let vAppTypeAst_mapAccumLPost_Expr_Expr: all acc806. (acc806 -> Ast_Expr -> (acc806, Ast_Expr)) -> acc806 -> Ast_Expr -> (acc806, Ast_Expr) =
    lam f338.
      lam acc807.
        lam __sem_target477.
          match
            __sem_target477
          with
            expr79
          in
          match
              vAppTypeAst_smapAccumL_Expr_Expr (vAppTypeAst_mapAccumLPost_Expr_Expr f338) acc807 expr79
            with
              (acc808, expr80)
            in
            f338 acc808 expr80
  let vAppTypeAst_smapAccumL_Expr_TypeLabel: all acc809. (acc809 -> Ast_Type -> (acc809, Ast_Type)) -> acc809 -> Ast_Expr -> (acc809, Ast_Expr) =
    lam f339.
      lam acc810.
        lam __sem_target478.
          match
            __sem_target478
          with
            p342
          in
          match
              f339 acc810 (vAppTypeAst_tyTm p342)
            with
              (acc811, ty84)
            in
            (acc811, vAppTypeAst_withType ty84 p342)
in
con AliasTypeAst_TyAlias: {content: Ast_Type, display: Ast_Type} -> Ast_Type in
recursive
  let vAliasTypeAst_tyTm: Ast_Expr -> Ast_Type = lam x135.
      never
  let vAliasTypeAst_tyPat: Ast_Pat -> Ast_Type = lam x136.
      never
  let vAliasTypeAst_infoTm: Ast_Expr -> Info = lam x137.
      never
  let vAliasTypeAst_infoTy: Ast_Type -> Info =
    lam __sem_target393.
      match
        __sem_target393
      with
        AllTypeAst_TyAll t712
      then
        t712.info
      else match
        __sem_target393
      with
        AliasTypeAst_TyAlias t713
      in
      vAliasTypeAst_infoTy t713.display
  let vAliasTypeAst_infoPat: Ast_Pat -> Info = lam x138.
      never
  let vAliasTypeAst_withInfo: Info -> Ast_Expr -> Ast_Expr = lam x139.
      never
  let vAliasTypeAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr = lam x140.
      never
  let vAliasTypeAst_stripTyAll =
    lam __sem_target394.
      match
        __sem_target394
      with
        AliasTypeAst_TyAlias t714 & ty71
      then
        let #var"X32" = vAliasTypeAst_stripTyAll t714.content in
        match
          #var"X32"
        with
          ("", _)
        then
          ("", ty71)
        else match
          #var"X32"
        with
          stripped3
        in
        stripped3
      else match
        __sem_target394
      with
        ty72
      in
      vAliasTypeAst_stripTyAllBase "" ty72
  let vAliasTypeAst_tyWithInfo: Info -> Ast_Type -> Ast_Type =
    lam info9.
      lam __sem_target395.
        match
          __sem_target395
        with
          AllTypeAst_TyAll t715
        then
          AllTypeAst_TyAll
            { t715 with info = info9 }
        else match
          __sem_target395
        with
          AliasTypeAst_TyAlias t716
        in
        AliasTypeAst_TyAlias
            { t716 with display = vAliasTypeAst_tyWithInfo info9 t716.display }
  let vAliasTypeAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target396.
      match
        __sem_target396
      with
        ty73
      in
      vAliasTypeAst_rapp_Type_Type vAliasTypeAst_unwrapType ty73
  let vAliasTypeAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target397.
      match
        __sem_target397
      with
        AllTypeAst_TyAll t717
      then
        vAliasTypeAst_inspectType t717.ty
      else match
        __sem_target397
      with
        ty74
      in
      vAliasTypeAst_rapp_Type_Type vAliasTypeAst_inspectType ty74
  let vAliasTypeAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x141.
      never
  let vAliasTypeAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x142.
      never
  let vAliasTypeAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f270.
      lam __sem_target398.
        match
          __sem_target398
        with
          p289
        in
        let res84 =
            vAliasTypeAst_smapAccumL_Pat_Pat
              (lam #var"214".
                 lam a295.
                   ({}, f270 a295))
              {}
              p289
          in
          res84.1
  let vAliasTypeAst_countPatNodes =
    lam count98.
      lam __sem_target399.
        match
          __sem_target399
        with
          t718
        in
        let count99 = addi count98 1 in
          let count100 =
            vAliasTypeAst_sfold_Pat_Pat vAliasTypeAst_countPatNodes count99 t718
          in
          let count101 =
            vAliasTypeAst_sfold_Pat_Expr vAliasTypeAst_countExprNodes count100 t718
          in
          let count102 =
            vAliasTypeAst_sfold_Pat_Type vAliasTypeAst_countTypeNodes count101 t718
          in
          count102
  let vAliasTypeAst_sfold_Pat_Pat: all acc684. (acc684 -> Ast_Pat -> acc684) -> acc684 -> Ast_Pat -> acc684 =
    lam f271.
      lam acc685.
        lam __sem_target400.
          match
            __sem_target400
          with
            p290
          in
          let res85 =
              vAliasTypeAst_smapAccumL_Pat_Pat
                (lam acc686.
                   lam a296.
                     (f271 acc686 a296, a296))
                acc685
                p290
            in
            res85.0
  let vAliasTypeAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f272.
      lam __sem_target401.
        match
          __sem_target401
        with
          p291
        in
        match
            vAliasTypeAst_smapAccumL_Expr_Pat
              (lam #var"215".
                 lam a297.
                   ({}, f272 a297))
              {}
              p291
          with
            (_, p292)
          in
          p292
  let vAliasTypeAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f273.
      lam __sem_target402.
        match
          __sem_target402
        with
          p293
        in
        match
            vAliasTypeAst_smapAccumL_Pat_Expr
              (lam #var"216".
                 lam a298.
                   ({}, f273 a298))
              {}
              p293
          with
            (_, p294)
          in
          p294
  let vAliasTypeAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f274.
      lam __sem_target403.
        match
          __sem_target403
        with
          p295
        in
        match
            vAliasTypeAst_smapAccumL_Pat_Type
              (lam #var"217".
                 lam a299.
                   ({}, f274 a299))
              {}
              p295
          with
            (_, p296)
          in
          p296
  let vAliasTypeAst_countExprNodes =
    lam count103.
      lam __sem_target404.
        match
          __sem_target404
        with
          t719
        in
        let count104 = addi count103 1 in
          let count105 =
            vAliasTypeAst_sfold_Expr_Expr vAliasTypeAst_countExprNodes count104 t719
          in
          let count106 =
            vAliasTypeAst_sfold_Expr_Type vAliasTypeAst_countTypeNodes count105 t719
          in
          let count107 =
            vAliasTypeAst_sfold_Expr_TypeLabel vAliasTypeAst_countTypeNodes count106 t719
          in
          let count108 =
            vAliasTypeAst_sfold_Expr_Pat vAliasTypeAst_countPatNodes count107 t719
          in
          count108
  let vAliasTypeAst_countTypeNodes =
    lam count109.
      lam __sem_target405.
        match
          __sem_target405
        with
          t720
        in
        let count110 = addi count109 1 in
          let count111 =
            vAliasTypeAst_sfold_Type_Type vAliasTypeAst_countTypeNodes count110 t720
          in
          count111
  let vAliasTypeAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f275.
      lam __sem_target406.
        match
          __sem_target406
        with
          ty75
        in
        let res86 =
            vAliasTypeAst_rappAccumL_Type_Type
              (lam #var"218".
                 lam t721.
                   ({}, f275 t721))
              {}
              ty75
          in
          res86.1
  let vAliasTypeAst_sfold_Expr_Pat: all acc687. (acc687 -> Ast_Pat -> acc687) -> acc687 -> Ast_Expr -> acc687 =
    lam f276.
      lam acc688.
        lam __sem_target407.
          match
            __sem_target407
          with
            p297
          in
          match
              vAliasTypeAst_smapAccumL_Expr_Pat
                (lam acc689.
                   lam a300.
                     (f276 acc689 a300, a300))
                acc688
                p297
            with
              (acc690, _)
            in
            acc690
  let vAliasTypeAst_sfold_Pat_Expr: all acc691. (acc691 -> Ast_Expr -> acc691) -> acc691 -> Ast_Pat -> acc691 =
    lam f277.
      lam acc692.
        lam __sem_target408.
          match
            __sem_target408
          with
            p298
          in
          match
              vAliasTypeAst_smapAccumL_Pat_Expr
                (lam acc693.
                   lam a301.
                     (f277 acc693 a301, a301))
                acc692
                p298
            with
              (acc694, _)
            in
            acc694
  let vAliasTypeAst_sfold_Pat_Type: all acc695. (acc695 -> Ast_Type -> acc695) -> acc695 -> Ast_Pat -> acc695 =
    lam f278.
      lam acc696.
        lam __sem_target409.
          match
            __sem_target409
          with
            p299
          in
          match
              vAliasTypeAst_smapAccumL_Pat_Type
                (lam acc697.
                   lam a302.
                     (f278 acc697 a302, a302))
                acc696
                p299
            with
              (acc698, _)
            in
            acc698
  let vAliasTypeAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f279.
      lam __sem_target410.
        match
          __sem_target410
        with
          p300
        in
        let res87 =
            vAliasTypeAst_smapAccumL_Expr_Expr
              (lam #var"219".
                 lam a303.
                   ({}, f279 a303))
              {}
              p300
          in
          res87.1
  let vAliasTypeAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f280.
      lam __sem_target411.
        match
          __sem_target411
        with
          p301
        in
        let res88 =
            vAliasTypeAst_smapAccumL_Expr_Type
              (lam #var"220".
                 lam a304.
                   ({}, f280 a304))
              {}
              p301
          in
          res88.1
  let vAliasTypeAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f281: Ast_Type -> Ast_Type.
      lam __sem_target412.
        match
          __sem_target412
        with
          s103
        in
        match
            vAliasTypeAst_smapAccumL_Kind_Type
              (lam #var"221".
                 lam x143.
                   ({}, f281 x143))
              {}
              s103
          with
            (_, s104)
          in
          s104
  let vAliasTypeAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f282.
      lam __sem_target413.
        match
          __sem_target413
        with
          p302
        in
        let res89 =
            vAliasTypeAst_smapAccumL_Type_Type
              (lam #var"222".
                 lam a305.
                   ({}, f282 a305))
              {}
              p302
          in
          res89.1
  let vAliasTypeAst_stripTyAllBase =
    lam vars3: [(Name, Ast_Kind)].
      lam __sem_target414.
        match
          __sem_target414
        with
          AllTypeAst_TyAll t722
        then
          vAliasTypeAst_stripTyAllBase (snoc vars3 (t722.ident, t722.kind)) t722.ty
        else match
          __sem_target414
        with
          ty76
        in
        vAliasTypeAst_rappAccumL_Type_Type vAliasTypeAst_stripTyAllBase vars3 ty76
  let vAliasTypeAst_sfold_Expr_Expr: all acc699. (acc699 -> Ast_Expr -> acc699) -> acc699 -> Ast_Expr -> acc699 =
    lam f283.
      lam acc700.
        lam __sem_target415.
          match
            __sem_target415
          with
            p303
          in
          let res90 =
              vAliasTypeAst_smapAccumL_Expr_Expr
                (lam acc701.
                   lam a306.
                     (f283 acc701 a306, a306))
                acc700
                p303
            in
            res90.0
  let vAliasTypeAst_sfold_Expr_Type: all acc702. (acc702 -> Ast_Type -> acc702) -> acc702 -> Ast_Expr -> acc702 =
    lam f284.
      lam acc703.
        lam __sem_target416.
          match
            __sem_target416
          with
            p304
          in
          let res91 =
              vAliasTypeAst_smapAccumL_Expr_Type
                (lam acc704.
                   lam a307.
                     (f284 acc704 a307, a307))
                acc703
                p304
            in
            res91.0
  let vAliasTypeAst_sfold_Kind_Type: all acc705. (acc705 -> Ast_Type -> acc705) -> acc705 -> Ast_Kind -> acc705 =
    lam f285: acc705 -> Ast_Type -> acc705.
      lam acc706: acc705.
        lam __sem_target417.
          match
            __sem_target417
          with
            s105
          in
          match
              vAliasTypeAst_smapAccumL_Kind_Type
                (lam a308.
                   lam x144.
                     (f285 a308 x144, x144))
                acc706
                s105
            with
              (a309, _)
            in
            a309
  let vAliasTypeAst_sfold_Type_Type: all acc707. (acc707 -> Ast_Type -> acc707) -> acc707 -> Ast_Type -> acc707 =
    lam f286.
      lam acc708.
        lam __sem_target418.
          match
            __sem_target418
          with
            p305
          in
          let res92 =
              vAliasTypeAst_smapAccumL_Type_Type
                (lam acc709.
                   lam a310.
                     (f286 acc709 a310, a310))
                acc708
                p305
            in
            res92.0
  let vAliasTypeAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f287.
      lam __sem_target419.
        match
          __sem_target419
        with
          expr63
        in
        let expr64 = f287 expr63 in
          vAliasTypeAst_smap_Expr_Expr (vAliasTypeAst_mapPre_Expr_Expr f287) expr64
  let vAliasTypeAst_foldPre_Expr_Expr: all acc710. (acc710 -> Ast_Expr -> acc710) -> acc710 -> Ast_Expr -> acc710 =
    lam f288.
      lam acc711.
        lam __sem_target420.
          match
            __sem_target420
          with
            expr65
          in
          let acc712 = f288 acc711 expr65 in
            vAliasTypeAst_sfold_Expr_Expr (vAliasTypeAst_foldPre_Expr_Expr f288) acc712 expr65
  let vAliasTypeAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f289.
      lam __sem_target421.
        match
          __sem_target421
        with
          expr66
        in
        f289
            (vAliasTypeAst_smap_Expr_Expr (vAliasTypeAst_mapPost_Expr_Expr f289) expr66)
  let vAliasTypeAst_foldPost_Expr_Expr: all acc713. (acc713 -> Ast_Expr -> acc713) -> acc713 -> Ast_Expr -> acc713 =
    lam f290.
      lam acc714.
        lam __sem_target422.
          match
            __sem_target422
          with
            expr67
          in
          f290
              (vAliasTypeAst_sfold_Expr_Expr (vAliasTypeAst_foldPost_Expr_Expr f290) acc714 expr67)
              expr67
  let vAliasTypeAst_smapAccumL_Pat_Pat: all acc715. (acc715 -> Ast_Pat -> (acc715, Ast_Pat)) -> acc715 -> Ast_Pat -> (acc715, Ast_Pat) =
    lam f291.
      lam acc716.
        lam __sem_target423.
          match
            __sem_target423
          with
            p306
          in
          (acc716, p306)
  let vAliasTypeAst_smapAccumL_Expr_Pat: all acc717. (acc717 -> Ast_Pat -> (acc717, Ast_Pat)) -> acc717 -> Ast_Expr -> (acc717, Ast_Expr) =
    lam f292.
      lam acc718.
        lam __sem_target424.
          match
            __sem_target424
          with
            p307
          in
          (acc718, p307)
  let vAliasTypeAst_smapAccumL_Pat_Expr: all acc719. (acc719 -> Ast_Expr -> (acc719, Ast_Expr)) -> acc719 -> Ast_Pat -> (acc719, Ast_Pat) =
    lam f293.
      lam acc720.
        lam __sem_target425.
          match
            __sem_target425
          with
            p308
          in
          (acc720, p308)
  let vAliasTypeAst_smapAccumL_Pat_Type: all acc721. (acc721 -> Ast_Type -> (acc721, Ast_Type)) -> acc721 -> Ast_Pat -> (acc721, Ast_Pat) =
    lam f294.
      lam acc722.
        lam __sem_target426.
          match
            __sem_target426
          with
            p309
          in
          (acc722, p309)
  let vAliasTypeAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f295.
      lam __sem_target427.
        match
          __sem_target427
        with
          p310
        in
        let res93 =
            vAliasTypeAst_smapAccumL_Expr_TypeLabel
              (lam #var"223".
                 lam a311.
                   ({}, f295 a311))
              {}
              p310
          in
          res93.1
  let vAliasTypeAst_rappAccumL_Type_Type: all acc723. (acc723 -> Ast_Type -> (acc723, Ast_Type)) -> acc723 -> Ast_Type -> (acc723, Ast_Type) =
    lam f296.
      lam acc724.
        lam __sem_target428.
          match
            __sem_target428
          with
            AliasTypeAst_TyAlias t723
          then
            f296 acc724 t723.content
          else match
            __sem_target428
          with
            ty77
          in
          (acc724, ty77)
  let vAliasTypeAst_sfold_Expr_TypeLabel: all acc725. (acc725 -> Ast_Type -> acc725) -> acc725 -> Ast_Expr -> acc725 =
    lam f297.
      lam acc726.
        lam __sem_target429.
          match
            __sem_target429
          with
            p311
          in
          let res94 =
              vAliasTypeAst_smapAccumL_Expr_TypeLabel
                (lam acc727.
                   lam a312.
                     (f297 acc727 a312, a312))
                acc726
                p311
            in
            res94.0
  let vAliasTypeAst_smapAccumL_Expr_Expr: all acc728. (acc728 -> Ast_Expr -> (acc728, Ast_Expr)) -> acc728 -> Ast_Expr -> (acc728, Ast_Expr) =
    lam f298.
      lam acc729.
        lam __sem_target430.
          match
            __sem_target430
          with
            p312
          in
          (acc729, p312)
  let vAliasTypeAst_smapAccumL_Expr_Type: all acc730. (acc730 -> Ast_Type -> (acc730, Ast_Type)) -> acc730 -> Ast_Expr -> (acc730, Ast_Expr) =
    lam f299.
      lam acc731.
        lam __sem_target431.
          match
            __sem_target431
          with
            p313
          in
          (acc731, p313)
  let vAliasTypeAst_smapAccumL_Kind_Type: all acc732. (acc732 -> Ast_Type -> (acc732, Ast_Type)) -> acc732 -> Ast_Kind -> (acc732, Ast_Kind) =
    lam f300.
      lam acc733.
        lam __sem_target432.
          match
            __sem_target432
          with
            s106
          in
          (acc733, s106)
  let vAliasTypeAst_smapAccumL_Type_Type: all acc734. (acc734 -> Ast_Type -> (acc734, Ast_Type)) -> acc734 -> Ast_Type -> (acc734, Ast_Type) =
    lam f301.
      lam acc735.
        lam __sem_target433.
          match
            __sem_target433
          with
            AllTypeAst_TyAll t724
          then
            match
              vAliasTypeAst_smapAccumL_Kind_Type f301 acc735 t724.kind
            with
              (acc736, kind3)
            in
            match
                f301 acc736 t724.ty
              with
                (acc737, ty78)
              in
              (acc737, AllTypeAst_TyAll
                  { t724 with kind = kind3, ty = ty78 })
          else match
            __sem_target433
          with
            AliasTypeAst_TyAlias t725
          then
            match
              f301 acc735 t725.content
            with
              (acc738, content3)
            in
            match
                f301 acc738 t725.display
              with
                (acc739, display3)
              in
              (acc739, AliasTypeAst_TyAlias
                  { t725 with content = content3, display = display3 })
          else match
            __sem_target433
          with
            p314
          in
          (acc735, p314)
  let vAliasTypeAst_mapAccumLPre_Expr_Expr: all acc740. (acc740 -> Ast_Expr -> (acc740, Ast_Expr)) -> acc740 -> Ast_Expr -> (acc740, Ast_Expr) =
    lam f302.
      lam acc741.
        lam __sem_target434.
          match
            __sem_target434
          with
            expr68
          in
          match
              f302 acc741 expr68
            with
              (acc742, expr69)
            in
            vAliasTypeAst_smapAccumL_Expr_Expr (vAliasTypeAst_mapAccumLPre_Expr_Expr f302) acc742 expr69
  let vAliasTypeAst_mapAccumLPost_Expr_Expr: all acc743. (acc743 -> Ast_Expr -> (acc743, Ast_Expr)) -> acc743 -> Ast_Expr -> (acc743, Ast_Expr) =
    lam f303.
      lam acc744.
        lam __sem_target435.
          match
            __sem_target435
          with
            expr70
          in
          match
              vAliasTypeAst_smapAccumL_Expr_Expr (vAliasTypeAst_mapAccumLPost_Expr_Expr f303) acc744 expr70
            with
              (acc745, expr71)
            in
            f303 acc745 expr71
  let vAliasTypeAst_smapAccumL_Expr_TypeLabel: all acc746. (acc746 -> Ast_Type -> (acc746, Ast_Type)) -> acc746 -> Ast_Expr -> (acc746, Ast_Expr) =
    lam f304.
      lam acc747.
        lam __sem_target436.
          match
            __sem_target436
          with
            p315
          in
          match
              f304 acc747 (vAliasTypeAst_tyTm p315)
            with
              (acc748, ty79)
            in
            (acc748, vAliasTypeAst_withType ty79 p315)
in
con PolyKindAst_Poly: () -> Ast_Kind in
recursive
  let vPolyKindAst_tyTm: Ast_Expr -> Ast_Type = lam x123.
      never
  let vPolyKindAst_tyPat: Ast_Pat -> Ast_Type = lam x124.
      never
  let vPolyKindAst_infoTm: Ast_Expr -> Info = lam x125.
      never
  let vPolyKindAst_infoTy: Ast_Type -> Info = lam x126.
      never
  let vPolyKindAst_infoPat: Ast_Pat -> Info = lam x127.
      never
  let vPolyKindAst_withInfo: Info -> Ast_Expr -> Ast_Expr = lam x128.
      never
  let vPolyKindAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr = lam x129.
      never
  let vPolyKindAst_tyWithInfo: Info -> Ast_Type -> Ast_Type = lam x130.
      never
  let vPolyKindAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target353.
      match
        __sem_target353
      with
        ty66
      in
      vPolyKindAst_rapp_Type_Type vPolyKindAst_unwrapType ty66
  let vPolyKindAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target354.
      match
        __sem_target354
      with
        ty67
      in
      vPolyKindAst_rapp_Type_Type vPolyKindAst_inspectType ty67
  let vPolyKindAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x131.
      never
  let vPolyKindAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x132.
      never
  let vPolyKindAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f235.
      lam __sem_target355.
        match
          __sem_target355
        with
          p262
        in
        let res73 =
            vPolyKindAst_smapAccumL_Pat_Pat
              (lam #var"204".
                 lam a277.
                   ({}, f235 a277))
              {}
              p262
          in
          res73.1
  let vPolyKindAst_countPatNodes =
    lam count84.
      lam __sem_target356.
        match
          __sem_target356
        with
          t708
        in
        let count85 = addi count84 1 in
          let count86 =
            vPolyKindAst_sfold_Pat_Pat vPolyKindAst_countPatNodes count85 t708
          in
          let count87 =
            vPolyKindAst_sfold_Pat_Expr vPolyKindAst_countExprNodes count86 t708
          in
          let count88 =
            vPolyKindAst_sfold_Pat_Type vPolyKindAst_countTypeNodes count87 t708
          in
          count88
  let vPolyKindAst_sfold_Pat_Pat: all acc623. (acc623 -> Ast_Pat -> acc623) -> acc623 -> Ast_Pat -> acc623 =
    lam f236.
      lam acc624.
        lam __sem_target357.
          match
            __sem_target357
          with
            p263
          in
          let res74 =
              vPolyKindAst_smapAccumL_Pat_Pat
                (lam acc625.
                   lam a278.
                     (f236 acc625 a278, a278))
                acc624
                p263
            in
            res74.0
  let vPolyKindAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f237.
      lam __sem_target358.
        match
          __sem_target358
        with
          p264
        in
        match
            vPolyKindAst_smapAccumL_Expr_Pat
              (lam #var"205".
                 lam a279.
                   ({}, f237 a279))
              {}
              p264
          with
            (_, p265)
          in
          p265
  let vPolyKindAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f238.
      lam __sem_target359.
        match
          __sem_target359
        with
          p266
        in
        match
            vPolyKindAst_smapAccumL_Pat_Expr
              (lam #var"206".
                 lam a280.
                   ({}, f238 a280))
              {}
              p266
          with
            (_, p267)
          in
          p267
  let vPolyKindAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f239.
      lam __sem_target360.
        match
          __sem_target360
        with
          p268
        in
        match
            vPolyKindAst_smapAccumL_Pat_Type
              (lam #var"207".
                 lam a281.
                   ({}, f239 a281))
              {}
              p268
          with
            (_, p269)
          in
          p269
  let vPolyKindAst_countExprNodes =
    lam count89.
      lam __sem_target361.
        match
          __sem_target361
        with
          t709
        in
        let count90 = addi count89 1 in
          let count91 =
            vPolyKindAst_sfold_Expr_Expr vPolyKindAst_countExprNodes count90 t709
          in
          let count92 =
            vPolyKindAst_sfold_Expr_Type vPolyKindAst_countTypeNodes count91 t709
          in
          let count93 =
            vPolyKindAst_sfold_Expr_TypeLabel vPolyKindAst_countTypeNodes count92 t709
          in
          let count94 =
            vPolyKindAst_sfold_Expr_Pat vPolyKindAst_countPatNodes count93 t709
          in
          count94
  let vPolyKindAst_countTypeNodes =
    lam count95.
      lam __sem_target362.
        match
          __sem_target362
        with
          t710
        in
        let count96 = addi count95 1 in
          let count97 =
            vPolyKindAst_sfold_Type_Type vPolyKindAst_countTypeNodes count96 t710
          in
          count97
  let vPolyKindAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f240.
      lam __sem_target363.
        match
          __sem_target363
        with
          ty68
        in
        let res75 =
            vPolyKindAst_rappAccumL_Type_Type
              (lam #var"208".
                 lam t711.
                   ({}, f240 t711))
              {}
              ty68
          in
          res75.1
  let vPolyKindAst_sfold_Expr_Pat: all acc626. (acc626 -> Ast_Pat -> acc626) -> acc626 -> Ast_Expr -> acc626 =
    lam f241.
      lam acc627.
        lam __sem_target364.
          match
            __sem_target364
          with
            p270
          in
          match
              vPolyKindAst_smapAccumL_Expr_Pat
                (lam acc628.
                   lam a282.
                     (f241 acc628 a282, a282))
                acc627
                p270
            with
              (acc629, _)
            in
            acc629
  let vPolyKindAst_sfold_Pat_Expr: all acc630. (acc630 -> Ast_Expr -> acc630) -> acc630 -> Ast_Pat -> acc630 =
    lam f242.
      lam acc631.
        lam __sem_target365.
          match
            __sem_target365
          with
            p271
          in
          match
              vPolyKindAst_smapAccumL_Pat_Expr
                (lam acc632.
                   lam a283.
                     (f242 acc632 a283, a283))
                acc631
                p271
            with
              (acc633, _)
            in
            acc633
  let vPolyKindAst_sfold_Pat_Type: all acc634. (acc634 -> Ast_Type -> acc634) -> acc634 -> Ast_Pat -> acc634 =
    lam f243.
      lam acc635.
        lam __sem_target366.
          match
            __sem_target366
          with
            p272
          in
          match
              vPolyKindAst_smapAccumL_Pat_Type
                (lam acc636.
                   lam a284.
                     (f243 acc636 a284, a284))
                acc635
                p272
            with
              (acc637, _)
            in
            acc637
  let vPolyKindAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f244.
      lam __sem_target367.
        match
          __sem_target367
        with
          p273
        in
        let res76 =
            vPolyKindAst_smapAccumL_Expr_Expr
              (lam #var"209".
                 lam a285.
                   ({}, f244 a285))
              {}
              p273
          in
          res76.1
  let vPolyKindAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f245.
      lam __sem_target368.
        match
          __sem_target368
        with
          p274
        in
        let res77 =
            vPolyKindAst_smapAccumL_Expr_Type
              (lam #var"210".
                 lam a286.
                   ({}, f245 a286))
              {}
              p274
          in
          res77.1
  let vPolyKindAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f246: Ast_Type -> Ast_Type.
      lam __sem_target369.
        match
          __sem_target369
        with
          s99
        in
        match
            vPolyKindAst_smapAccumL_Kind_Type
              (lam #var"211".
                 lam x133.
                   ({}, f246 x133))
              {}
              s99
          with
            (_, s100)
          in
          s100
  let vPolyKindAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f247.
      lam __sem_target370.
        match
          __sem_target370
        with
          p275
        in
        let res78 =
            vPolyKindAst_smapAccumL_Type_Type
              (lam #var"212".
                 lam a287.
                   ({}, f247 a287))
              {}
              p275
          in
          res78.1
  let vPolyKindAst_sfold_Expr_Expr: all acc638. (acc638 -> Ast_Expr -> acc638) -> acc638 -> Ast_Expr -> acc638 =
    lam f248.
      lam acc639.
        lam __sem_target371.
          match
            __sem_target371
          with
            p276
          in
          let res79 =
              vPolyKindAst_smapAccumL_Expr_Expr
                (lam acc640.
                   lam a288.
                     (f248 acc640 a288, a288))
                acc639
                p276
            in
            res79.0
  let vPolyKindAst_sfold_Expr_Type: all acc641. (acc641 -> Ast_Type -> acc641) -> acc641 -> Ast_Expr -> acc641 =
    lam f249.
      lam acc642.
        lam __sem_target372.
          match
            __sem_target372
          with
            p277
          in
          let res80 =
              vPolyKindAst_smapAccumL_Expr_Type
                (lam acc643.
                   lam a289.
                     (f249 acc643 a289, a289))
                acc642
                p277
            in
            res80.0
  let vPolyKindAst_sfold_Kind_Type: all acc644. (acc644 -> Ast_Type -> acc644) -> acc644 -> Ast_Kind -> acc644 =
    lam f250: acc644 -> Ast_Type -> acc644.
      lam acc645: acc644.
        lam __sem_target373.
          match
            __sem_target373
          with
            s101
          in
          match
              vPolyKindAst_smapAccumL_Kind_Type
                (lam a290.
                   lam x134.
                     (f250 a290 x134, x134))
                acc645
                s101
            with
              (a291, _)
            in
            a291
  let vPolyKindAst_sfold_Type_Type: all acc646. (acc646 -> Ast_Type -> acc646) -> acc646 -> Ast_Type -> acc646 =
    lam f251.
      lam acc647.
        lam __sem_target374.
          match
            __sem_target374
          with
            p278
          in
          let res81 =
              vPolyKindAst_smapAccumL_Type_Type
                (lam acc648.
                   lam a292.
                     (f251 acc648 a292, a292))
                acc647
                p278
            in
            res81.0
  let vPolyKindAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f252.
      lam __sem_target375.
        match
          __sem_target375
        with
          expr54
        in
        let expr55 = f252 expr54 in
          vPolyKindAst_smap_Expr_Expr (vPolyKindAst_mapPre_Expr_Expr f252) expr55
  let vPolyKindAst_foldPre_Expr_Expr: all acc649. (acc649 -> Ast_Expr -> acc649) -> acc649 -> Ast_Expr -> acc649 =
    lam f253.
      lam acc650.
        lam __sem_target376.
          match
            __sem_target376
          with
            expr56
          in
          let acc651 = f253 acc650 expr56 in
            vPolyKindAst_sfold_Expr_Expr (vPolyKindAst_foldPre_Expr_Expr f253) acc651 expr56
  let vPolyKindAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f254.
      lam __sem_target377.
        match
          __sem_target377
        with
          expr57
        in
        f254
            (vPolyKindAst_smap_Expr_Expr (vPolyKindAst_mapPost_Expr_Expr f254) expr57)
  let vPolyKindAst_foldPost_Expr_Expr: all acc652. (acc652 -> Ast_Expr -> acc652) -> acc652 -> Ast_Expr -> acc652 =
    lam f255.
      lam acc653.
        lam __sem_target378.
          match
            __sem_target378
          with
            expr58
          in
          f255
              (vPolyKindAst_sfold_Expr_Expr (vPolyKindAst_foldPost_Expr_Expr f255) acc653 expr58)
              expr58
  let vPolyKindAst_smapAccumL_Pat_Pat: all acc654. (acc654 -> Ast_Pat -> (acc654, Ast_Pat)) -> acc654 -> Ast_Pat -> (acc654, Ast_Pat) =
    lam f256.
      lam acc655.
        lam __sem_target379.
          match
            __sem_target379
          with
            p279
          in
          (acc655, p279)
  let vPolyKindAst_smapAccumL_Expr_Pat: all acc656. (acc656 -> Ast_Pat -> (acc656, Ast_Pat)) -> acc656 -> Ast_Expr -> (acc656, Ast_Expr) =
    lam f257.
      lam acc657.
        lam __sem_target380.
          match
            __sem_target380
          with
            p280
          in
          (acc657, p280)
  let vPolyKindAst_smapAccumL_Pat_Expr: all acc658. (acc658 -> Ast_Expr -> (acc658, Ast_Expr)) -> acc658 -> Ast_Pat -> (acc658, Ast_Pat) =
    lam f258.
      lam acc659.
        lam __sem_target381.
          match
            __sem_target381
          with
            p281
          in
          (acc659, p281)
  let vPolyKindAst_smapAccumL_Pat_Type: all acc660. (acc660 -> Ast_Type -> (acc660, Ast_Type)) -> acc660 -> Ast_Pat -> (acc660, Ast_Pat) =
    lam f259.
      lam acc661.
        lam __sem_target382.
          match
            __sem_target382
          with
            p282
          in
          (acc661, p282)
  let vPolyKindAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f260.
      lam __sem_target383.
        match
          __sem_target383
        with
          p283
        in
        let res82 =
            vPolyKindAst_smapAccumL_Expr_TypeLabel
              (lam #var"213".
                 lam a293.
                   ({}, f260 a293))
              {}
              p283
          in
          res82.1
  let vPolyKindAst_rappAccumL_Type_Type: all acc662. (acc662 -> Ast_Type -> (acc662, Ast_Type)) -> acc662 -> Ast_Type -> (acc662, Ast_Type) =
    lam f261.
      lam acc663.
        lam __sem_target384.
          match
            __sem_target384
          with
            ty69
          in
          (acc663, ty69)
  let vPolyKindAst_sfold_Expr_TypeLabel: all acc664. (acc664 -> Ast_Type -> acc664) -> acc664 -> Ast_Expr -> acc664 =
    lam f262.
      lam acc665.
        lam __sem_target385.
          match
            __sem_target385
          with
            p284
          in
          let res83 =
              vPolyKindAst_smapAccumL_Expr_TypeLabel
                (lam acc666.
                   lam a294.
                     (f262 acc666 a294, a294))
                acc665
                p284
            in
            res83.0
  let vPolyKindAst_smapAccumL_Expr_Expr: all acc667. (acc667 -> Ast_Expr -> (acc667, Ast_Expr)) -> acc667 -> Ast_Expr -> (acc667, Ast_Expr) =
    lam f263.
      lam acc668.
        lam __sem_target386.
          match
            __sem_target386
          with
            p285
          in
          (acc668, p285)
  let vPolyKindAst_smapAccumL_Expr_Type: all acc669. (acc669 -> Ast_Type -> (acc669, Ast_Type)) -> acc669 -> Ast_Expr -> (acc669, Ast_Expr) =
    lam f264.
      lam acc670.
        lam __sem_target387.
          match
            __sem_target387
          with
            p286
          in
          (acc670, p286)
  let vPolyKindAst_smapAccumL_Kind_Type: all acc671. (acc671 -> Ast_Type -> (acc671, Ast_Type)) -> acc671 -> Ast_Kind -> (acc671, Ast_Kind) =
    lam f265.
      lam acc672.
        lam __sem_target388.
          match
            __sem_target388
          with
            s102
          in
          (acc672, s102)
  let vPolyKindAst_smapAccumL_Type_Type: all acc673. (acc673 -> Ast_Type -> (acc673, Ast_Type)) -> acc673 -> Ast_Type -> (acc673, Ast_Type) =
    lam f266.
      lam acc674.
        lam __sem_target389.
          match
            __sem_target389
          with
            p287
          in
          (acc674, p287)
  let vPolyKindAst_mapAccumLPre_Expr_Expr: all acc675. (acc675 -> Ast_Expr -> (acc675, Ast_Expr)) -> acc675 -> Ast_Expr -> (acc675, Ast_Expr) =
    lam f267.
      lam acc676.
        lam __sem_target390.
          match
            __sem_target390
          with
            expr59
          in
          match
              f267 acc676 expr59
            with
              (acc677, expr60)
            in
            vPolyKindAst_smapAccumL_Expr_Expr (vPolyKindAst_mapAccumLPre_Expr_Expr f267) acc677 expr60
  let vPolyKindAst_mapAccumLPost_Expr_Expr: all acc678. (acc678 -> Ast_Expr -> (acc678, Ast_Expr)) -> acc678 -> Ast_Expr -> (acc678, Ast_Expr) =
    lam f268.
      lam acc679.
        lam __sem_target391.
          match
            __sem_target391
          with
            expr61
          in
          match
              vPolyKindAst_smapAccumL_Expr_Expr (vPolyKindAst_mapAccumLPost_Expr_Expr f268) acc679 expr61
            with
              (acc680, expr62)
            in
            f268 acc680 expr62
  let vPolyKindAst_smapAccumL_Expr_TypeLabel: all acc681. (acc681 -> Ast_Type -> (acc681, Ast_Type)) -> acc681 -> Ast_Expr -> (acc681, Ast_Expr) =
    lam f269.
      lam acc682.
        lam __sem_target392.
          match
            __sem_target392
          with
            p288
          in
          match
              f269 acc682 (vPolyKindAst_tyTm p288)
            with
              (acc683, ty70)
            in
            (acc683, vPolyKindAst_withType ty70 p288)
in
con MonoKindAst_Mono: () -> Ast_Kind in
recursive
  let vMonoKindAst_tyTm: Ast_Expr -> Ast_Type = lam x107.
      never
  let vMonoKindAst_tyPat: Ast_Pat -> Ast_Type = lam x108.
      never
  let vMonoKindAst_infoTm: Ast_Expr -> Info = lam x109.
      never
  let vMonoKindAst_infoTy: Ast_Type -> Info = lam x114.
      never
  let vMonoKindAst_infoPat: Ast_Pat -> Info = lam x115.
      never
  let vMonoKindAst_withInfo: Info -> Ast_Expr -> Ast_Expr = lam x116.
      never
  let vMonoKindAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr = lam x117.
      never
  let vMonoKindAst_tyWithInfo: Info -> Ast_Type -> Ast_Type = lam x118.
      never
  let vMonoKindAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target313.
      match
        __sem_target313
      with
        ty61
      in
      vMonoKindAst_rapp_Type_Type vMonoKindAst_unwrapType ty61
  let vMonoKindAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target314.
      match
        __sem_target314
      with
        ty62
      in
      vMonoKindAst_rapp_Type_Type vMonoKindAst_inspectType ty62
  let vMonoKindAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x119.
      never
  let vMonoKindAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x120.
      never
  let vMonoKindAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f200.
      lam __sem_target315.
        match
          __sem_target315
        with
          p235
        in
        let res62 =
            vMonoKindAst_smapAccumL_Pat_Pat
              (lam #var"194".
                 lam a259.
                   ({}, f200 a259))
              {}
              p235
          in
          res62.1
  let vMonoKindAst_countPatNodes =
    lam count70.
      lam __sem_target316.
        match
          __sem_target316
        with
          t704
        in
        let count71 = addi count70 1 in
          let count72 =
            vMonoKindAst_sfold_Pat_Pat vMonoKindAst_countPatNodes count71 t704
          in
          let count73 =
            vMonoKindAst_sfold_Pat_Expr vMonoKindAst_countExprNodes count72 t704
          in
          let count74 =
            vMonoKindAst_sfold_Pat_Type vMonoKindAst_countTypeNodes count73 t704
          in
          count74
  let vMonoKindAst_sfold_Pat_Pat: all acc562. (acc562 -> Ast_Pat -> acc562) -> acc562 -> Ast_Pat -> acc562 =
    lam f201.
      lam acc563.
        lam __sem_target317.
          match
            __sem_target317
          with
            p236
          in
          let res63 =
              vMonoKindAst_smapAccumL_Pat_Pat
                (lam acc564.
                   lam a260.
                     (f201 acc564 a260, a260))
                acc563
                p236
            in
            res63.0
  let vMonoKindAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f202.
      lam __sem_target318.
        match
          __sem_target318
        with
          p237
        in
        match
            vMonoKindAst_smapAccumL_Expr_Pat
              (lam #var"195".
                 lam a261.
                   ({}, f202 a261))
              {}
              p237
          with
            (_, p238)
          in
          p238
  let vMonoKindAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f203.
      lam __sem_target319.
        match
          __sem_target319
        with
          p239
        in
        match
            vMonoKindAst_smapAccumL_Pat_Expr
              (lam #var"196".
                 lam a262.
                   ({}, f203 a262))
              {}
              p239
          with
            (_, p240)
          in
          p240
  let vMonoKindAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f204.
      lam __sem_target320.
        match
          __sem_target320
        with
          p241
        in
        match
            vMonoKindAst_smapAccumL_Pat_Type
              (lam #var"197".
                 lam a263.
                   ({}, f204 a263))
              {}
              p241
          with
            (_, p242)
          in
          p242
  let vMonoKindAst_countExprNodes =
    lam count75.
      lam __sem_target321.
        match
          __sem_target321
        with
          t705
        in
        let count76 = addi count75 1 in
          let count77 =
            vMonoKindAst_sfold_Expr_Expr vMonoKindAst_countExprNodes count76 t705
          in
          let count78 =
            vMonoKindAst_sfold_Expr_Type vMonoKindAst_countTypeNodes count77 t705
          in
          let count79 =
            vMonoKindAst_sfold_Expr_TypeLabel vMonoKindAst_countTypeNodes count78 t705
          in
          let count80 =
            vMonoKindAst_sfold_Expr_Pat vMonoKindAst_countPatNodes count79 t705
          in
          count80
  let vMonoKindAst_countTypeNodes =
    lam count81.
      lam __sem_target322.
        match
          __sem_target322
        with
          t706
        in
        let count82 = addi count81 1 in
          let count83 =
            vMonoKindAst_sfold_Type_Type vMonoKindAst_countTypeNodes count82 t706
          in
          count83
  let vMonoKindAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f205.
      lam __sem_target323.
        match
          __sem_target323
        with
          ty63
        in
        let res64 =
            vMonoKindAst_rappAccumL_Type_Type
              (lam #var"198".
                 lam t707.
                   ({}, f205 t707))
              {}
              ty63
          in
          res64.1
  let vMonoKindAst_sfold_Expr_Pat: all acc565. (acc565 -> Ast_Pat -> acc565) -> acc565 -> Ast_Expr -> acc565 =
    lam f206.
      lam acc566.
        lam __sem_target324.
          match
            __sem_target324
          with
            p243
          in
          match
              vMonoKindAst_smapAccumL_Expr_Pat
                (lam acc567.
                   lam a264.
                     (f206 acc567 a264, a264))
                acc566
                p243
            with
              (acc568, _)
            in
            acc568
  let vMonoKindAst_sfold_Pat_Expr: all acc569. (acc569 -> Ast_Expr -> acc569) -> acc569 -> Ast_Pat -> acc569 =
    lam f207.
      lam acc570.
        lam __sem_target325.
          match
            __sem_target325
          with
            p244
          in
          match
              vMonoKindAst_smapAccumL_Pat_Expr
                (lam acc571.
                   lam a265.
                     (f207 acc571 a265, a265))
                acc570
                p244
            with
              (acc572, _)
            in
            acc572
  let vMonoKindAst_sfold_Pat_Type: all acc573. (acc573 -> Ast_Type -> acc573) -> acc573 -> Ast_Pat -> acc573 =
    lam f208.
      lam acc574.
        lam __sem_target326.
          match
            __sem_target326
          with
            p245
          in
          match
              vMonoKindAst_smapAccumL_Pat_Type
                (lam acc575.
                   lam a266.
                     (f208 acc575 a266, a266))
                acc574
                p245
            with
              (acc576, _)
            in
            acc576
  let vMonoKindAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f209.
      lam __sem_target327.
        match
          __sem_target327
        with
          p246
        in
        let res65 =
            vMonoKindAst_smapAccumL_Expr_Expr
              (lam #var"199".
                 lam a267.
                   ({}, f209 a267))
              {}
              p246
          in
          res65.1
  let vMonoKindAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f210.
      lam __sem_target328.
        match
          __sem_target328
        with
          p247
        in
        let res66 =
            vMonoKindAst_smapAccumL_Expr_Type
              (lam #var"200".
                 lam a268.
                   ({}, f210 a268))
              {}
              p247
          in
          res66.1
  let vMonoKindAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f211: Ast_Type -> Ast_Type.
      lam __sem_target329.
        match
          __sem_target329
        with
          s95
        in
        match
            vMonoKindAst_smapAccumL_Kind_Type
              (lam #var"201".
                 lam x121.
                   ({}, f211 x121))
              {}
              s95
          with
            (_, s96)
          in
          s96
  let vMonoKindAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f212.
      lam __sem_target330.
        match
          __sem_target330
        with
          p248
        in
        let res67 =
            vMonoKindAst_smapAccumL_Type_Type
              (lam #var"202".
                 lam a269.
                   ({}, f212 a269))
              {}
              p248
          in
          res67.1
  let vMonoKindAst_sfold_Expr_Expr: all acc577. (acc577 -> Ast_Expr -> acc577) -> acc577 -> Ast_Expr -> acc577 =
    lam f213.
      lam acc578.
        lam __sem_target331.
          match
            __sem_target331
          with
            p249
          in
          let res68 =
              vMonoKindAst_smapAccumL_Expr_Expr
                (lam acc579.
                   lam a270.
                     (f213 acc579 a270, a270))
                acc578
                p249
            in
            res68.0
  let vMonoKindAst_sfold_Expr_Type: all acc580. (acc580 -> Ast_Type -> acc580) -> acc580 -> Ast_Expr -> acc580 =
    lam f214.
      lam acc581.
        lam __sem_target332.
          match
            __sem_target332
          with
            p250
          in
          let res69 =
              vMonoKindAst_smapAccumL_Expr_Type
                (lam acc582.
                   lam a271.
                     (f214 acc582 a271, a271))
                acc581
                p250
            in
            res69.0
  let vMonoKindAst_sfold_Kind_Type: all acc583. (acc583 -> Ast_Type -> acc583) -> acc583 -> Ast_Kind -> acc583 =
    lam f215: acc583 -> Ast_Type -> acc583.
      lam acc584: acc583.
        lam __sem_target333.
          match
            __sem_target333
          with
            s97
          in
          match
              vMonoKindAst_smapAccumL_Kind_Type
                (lam a272.
                   lam x122.
                     (f215 a272 x122, x122))
                acc584
                s97
            with
              (a273, _)
            in
            a273
  let vMonoKindAst_sfold_Type_Type: all acc585. (acc585 -> Ast_Type -> acc585) -> acc585 -> Ast_Type -> acc585 =
    lam f216.
      lam acc586.
        lam __sem_target334.
          match
            __sem_target334
          with
            p251
          in
          let res70 =
              vMonoKindAst_smapAccumL_Type_Type
                (lam acc587.
                   lam a274.
                     (f216 acc587 a274, a274))
                acc586
                p251
            in
            res70.0
  let vMonoKindAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f217.
      lam __sem_target335.
        match
          __sem_target335
        with
          expr45
        in
        let expr46 = f217 expr45 in
          vMonoKindAst_smap_Expr_Expr (vMonoKindAst_mapPre_Expr_Expr f217) expr46
  let vMonoKindAst_foldPre_Expr_Expr: all acc588. (acc588 -> Ast_Expr -> acc588) -> acc588 -> Ast_Expr -> acc588 =
    lam f218.
      lam acc589.
        lam __sem_target336.
          match
            __sem_target336
          with
            expr47
          in
          let acc590 = f218 acc589 expr47 in
            vMonoKindAst_sfold_Expr_Expr (vMonoKindAst_foldPre_Expr_Expr f218) acc590 expr47
  let vMonoKindAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f219.
      lam __sem_target337.
        match
          __sem_target337
        with
          expr48
        in
        f219
            (vMonoKindAst_smap_Expr_Expr (vMonoKindAst_mapPost_Expr_Expr f219) expr48)
  let vMonoKindAst_foldPost_Expr_Expr: all acc591. (acc591 -> Ast_Expr -> acc591) -> acc591 -> Ast_Expr -> acc591 =
    lam f220.
      lam acc592.
        lam __sem_target338.
          match
            __sem_target338
          with
            expr49
          in
          f220
              (vMonoKindAst_sfold_Expr_Expr (vMonoKindAst_foldPost_Expr_Expr f220) acc592 expr49)
              expr49
  let vMonoKindAst_smapAccumL_Pat_Pat: all acc593. (acc593 -> Ast_Pat -> (acc593, Ast_Pat)) -> acc593 -> Ast_Pat -> (acc593, Ast_Pat) =
    lam f221.
      lam acc594.
        lam __sem_target339.
          match
            __sem_target339
          with
            p252
          in
          (acc594, p252)
  let vMonoKindAst_smapAccumL_Expr_Pat: all acc595. (acc595 -> Ast_Pat -> (acc595, Ast_Pat)) -> acc595 -> Ast_Expr -> (acc595, Ast_Expr) =
    lam f222.
      lam acc596.
        lam __sem_target340.
          match
            __sem_target340
          with
            p253
          in
          (acc596, p253)
  let vMonoKindAst_smapAccumL_Pat_Expr: all acc597. (acc597 -> Ast_Expr -> (acc597, Ast_Expr)) -> acc597 -> Ast_Pat -> (acc597, Ast_Pat) =
    lam f223.
      lam acc598.
        lam __sem_target341.
          match
            __sem_target341
          with
            p254
          in
          (acc598, p254)
  let vMonoKindAst_smapAccumL_Pat_Type: all acc599. (acc599 -> Ast_Type -> (acc599, Ast_Type)) -> acc599 -> Ast_Pat -> (acc599, Ast_Pat) =
    lam f224.
      lam acc600.
        lam __sem_target342.
          match
            __sem_target342
          with
            p255
          in
          (acc600, p255)
  let vMonoKindAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f225.
      lam __sem_target343.
        match
          __sem_target343
        with
          p256
        in
        let res71 =
            vMonoKindAst_smapAccumL_Expr_TypeLabel
              (lam #var"203".
                 lam a275.
                   ({}, f225 a275))
              {}
              p256
          in
          res71.1
  let vMonoKindAst_rappAccumL_Type_Type: all acc601. (acc601 -> Ast_Type -> (acc601, Ast_Type)) -> acc601 -> Ast_Type -> (acc601, Ast_Type) =
    lam f226.
      lam acc602.
        lam __sem_target344.
          match
            __sem_target344
          with
            ty64
          in
          (acc602, ty64)
  let vMonoKindAst_sfold_Expr_TypeLabel: all acc603. (acc603 -> Ast_Type -> acc603) -> acc603 -> Ast_Expr -> acc603 =
    lam f227.
      lam acc604.
        lam __sem_target345.
          match
            __sem_target345
          with
            p257
          in
          let res72 =
              vMonoKindAst_smapAccumL_Expr_TypeLabel
                (lam acc605.
                   lam a276.
                     (f227 acc605 a276, a276))
                acc604
                p257
            in
            res72.0
  let vMonoKindAst_smapAccumL_Expr_Expr: all acc606. (acc606 -> Ast_Expr -> (acc606, Ast_Expr)) -> acc606 -> Ast_Expr -> (acc606, Ast_Expr) =
    lam f228.
      lam acc607.
        lam __sem_target346.
          match
            __sem_target346
          with
            p258
          in
          (acc607, p258)
  let vMonoKindAst_smapAccumL_Expr_Type: all acc608. (acc608 -> Ast_Type -> (acc608, Ast_Type)) -> acc608 -> Ast_Expr -> (acc608, Ast_Expr) =
    lam f229.
      lam acc609.
        lam __sem_target347.
          match
            __sem_target347
          with
            p259
          in
          (acc609, p259)
  let vMonoKindAst_smapAccumL_Kind_Type: all acc610. (acc610 -> Ast_Type -> (acc610, Ast_Type)) -> acc610 -> Ast_Kind -> (acc610, Ast_Kind) =
    lam f230.
      lam acc611.
        lam __sem_target348.
          match
            __sem_target348
          with
            s98
          in
          (acc611, s98)
  let vMonoKindAst_smapAccumL_Type_Type: all acc612. (acc612 -> Ast_Type -> (acc612, Ast_Type)) -> acc612 -> Ast_Type -> (acc612, Ast_Type) =
    lam f231.
      lam acc613.
        lam __sem_target349.
          match
            __sem_target349
          with
            p260
          in
          (acc613, p260)
  let vMonoKindAst_mapAccumLPre_Expr_Expr: all acc614. (acc614 -> Ast_Expr -> (acc614, Ast_Expr)) -> acc614 -> Ast_Expr -> (acc614, Ast_Expr) =
    lam f232.
      lam acc615.
        lam __sem_target350.
          match
            __sem_target350
          with
            expr50
          in
          match
              f232 acc615 expr50
            with
              (acc616, expr51)
            in
            vMonoKindAst_smapAccumL_Expr_Expr (vMonoKindAst_mapAccumLPre_Expr_Expr f232) acc616 expr51
  let vMonoKindAst_mapAccumLPost_Expr_Expr: all acc617. (acc617 -> Ast_Expr -> (acc617, Ast_Expr)) -> acc617 -> Ast_Expr -> (acc617, Ast_Expr) =
    lam f233.
      lam acc618.
        lam __sem_target351.
          match
            __sem_target351
          with
            expr52
          in
          match
              vMonoKindAst_smapAccumL_Expr_Expr (vMonoKindAst_mapAccumLPost_Expr_Expr f233) acc618 expr52
            with
              (acc619, expr53)
            in
            f233 acc619 expr53
  let vMonoKindAst_smapAccumL_Expr_TypeLabel: all acc620. (acc620 -> Ast_Type -> (acc620, Ast_Type)) -> acc620 -> Ast_Expr -> (acc620, Ast_Expr) =
    lam f234.
      lam acc621.
        lam __sem_target352.
          match
            __sem_target352
          with
            p261
          in
          match
              f234 acc621 (vMonoKindAst_tyTm p261)
            with
              (acc622, ty65)
            in
            (acc622, vMonoKindAst_withType ty65 p261)
in
con RecordKindAst_Record: {fields: Map SID Ast_Type} -> Ast_Kind in
recursive
  let vRecordKindAst_tyTm: Ast_Expr -> Ast_Type = lam x95.
      never
  let vRecordKindAst_tyPat: Ast_Pat -> Ast_Type = lam x96.
      never
  let vRecordKindAst_infoTm: Ast_Expr -> Info = lam x97.
      never
  let vRecordKindAst_infoTy: Ast_Type -> Info = lam x98.
      never
  let vRecordKindAst_infoPat: Ast_Pat -> Info = lam x99.
      never
  let vRecordKindAst_withInfo: Info -> Ast_Expr -> Ast_Expr = lam x100.
      never
  let vRecordKindAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr = lam x101.
      never
  let vRecordKindAst_tyWithInfo: Info -> Ast_Type -> Ast_Type = lam x102.
      never
  let vRecordKindAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target273.
      match
        __sem_target273
      with
        ty56
      in
      vRecordKindAst_rapp_Type_Type vRecordKindAst_unwrapType ty56
  let vRecordKindAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target274.
      match
        __sem_target274
      with
        ty57
      in
      vRecordKindAst_rapp_Type_Type vRecordKindAst_inspectType ty57
  let vRecordKindAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x103.
      never
  let vRecordKindAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x104.
      never
  let vRecordKindAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f165.
      lam __sem_target275.
        match
          __sem_target275
        with
          p197
        in
        let res51 =
            vRecordKindAst_smapAccumL_Pat_Pat
              (lam #var"183".
                 lam a241.
                   ({}, f165 a241))
              {}
              p197
          in
          res51.1
  let vRecordKindAst_countPatNodes =
    lam count56.
      lam __sem_target276.
        match
          __sem_target276
        with
          t700
        in
        let count57 = addi count56 1 in
          let count58 =
            vRecordKindAst_sfold_Pat_Pat vRecordKindAst_countPatNodes count57 t700
          in
          let count59 =
            vRecordKindAst_sfold_Pat_Expr vRecordKindAst_countExprNodes count58 t700
          in
          let count60 =
            vRecordKindAst_sfold_Pat_Type vRecordKindAst_countTypeNodes count59 t700
          in
          count60
  let vRecordKindAst_sfold_Pat_Pat: all acc499. (acc499 -> Ast_Pat -> acc499) -> acc499 -> Ast_Pat -> acc499 =
    lam f166.
      lam acc500.
        lam __sem_target277.
          match
            __sem_target277
          with
            p198
          in
          let res52 =
              vRecordKindAst_smapAccumL_Pat_Pat
                (lam acc501.
                   lam a242.
                     (f166 acc501 a242, a242))
                acc500
                p198
            in
            res52.0
  let vRecordKindAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f167.
      lam __sem_target278.
        match
          __sem_target278
        with
          p199
        in
        match
            vRecordKindAst_smapAccumL_Expr_Pat
              (lam #var"184".
                 lam a243.
                   ({}, f167 a243))
              {}
              p199
          with
            (_, p200)
          in
          p200
  let vRecordKindAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f168.
      lam __sem_target279.
        match
          __sem_target279
        with
          p201
        in
        match
            vRecordKindAst_smapAccumL_Pat_Expr
              (lam #var"185".
                 lam a244.
                   ({}, f168 a244))
              {}
              p201
          with
            (_, p202)
          in
          p202
  let vRecordKindAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f169.
      lam __sem_target280.
        match
          __sem_target280
        with
          p203
        in
        match
            vRecordKindAst_smapAccumL_Pat_Type
              (lam #var"186".
                 lam a245.
                   ({}, f169 a245))
              {}
              p203
          with
            (_, p204)
          in
          p204
  let vRecordKindAst_countExprNodes =
    lam count61.
      lam __sem_target281.
        match
          __sem_target281
        with
          t701
        in
        let count62 = addi count61 1 in
          let count63 =
            vRecordKindAst_sfold_Expr_Expr vRecordKindAst_countExprNodes count62 t701
          in
          let count64 =
            vRecordKindAst_sfold_Expr_Type vRecordKindAst_countTypeNodes count63 t701
          in
          let count65 =
            vRecordKindAst_sfold_Expr_TypeLabel vRecordKindAst_countTypeNodes count64 t701
          in
          let count66 =
            vRecordKindAst_sfold_Expr_Pat vRecordKindAst_countPatNodes count65 t701
          in
          count66
  let vRecordKindAst_countTypeNodes =
    lam count67.
      lam __sem_target282.
        match
          __sem_target282
        with
          t702
        in
        let count68 = addi count67 1 in
          let count69 =
            vRecordKindAst_sfold_Type_Type vRecordKindAst_countTypeNodes count68 t702
          in
          count69
  let vRecordKindAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f170.
      lam __sem_target283.
        match
          __sem_target283
        with
          ty58
        in
        let res53 =
            vRecordKindAst_rappAccumL_Type_Type
              (lam #var"187".
                 lam t703.
                   ({}, f170 t703))
              {}
              ty58
          in
          res53.1
  let vRecordKindAst_sfold_Expr_Pat: all acc502. (acc502 -> Ast_Pat -> acc502) -> acc502 -> Ast_Expr -> acc502 =
    lam f171.
      lam acc503.
        lam __sem_target284.
          match
            __sem_target284
          with
            p205
          in
          match
              vRecordKindAst_smapAccumL_Expr_Pat
                (lam acc504.
                   lam a246.
                     (f171 acc504 a246, a246))
                acc503
                p205
            with
              (acc505, _)
            in
            acc505
  let vRecordKindAst_sfold_Pat_Expr: all acc506. (acc506 -> Ast_Expr -> acc506) -> acc506 -> Ast_Pat -> acc506 =
    lam f172.
      lam acc507.
        lam __sem_target285.
          match
            __sem_target285
          with
            p206
          in
          match
              vRecordKindAst_smapAccumL_Pat_Expr
                (lam acc508.
                   lam a247.
                     (f172 acc508 a247, a247))
                acc507
                p206
            with
              (acc509, _)
            in
            acc509
  let vRecordKindAst_sfold_Pat_Type: all acc510. (acc510 -> Ast_Type -> acc510) -> acc510 -> Ast_Pat -> acc510 =
    lam f173.
      lam acc511.
        lam __sem_target286.
          match
            __sem_target286
          with
            p207
          in
          match
              vRecordKindAst_smapAccumL_Pat_Type
                (lam acc512.
                   lam a248.
                     (f173 acc512 a248, a248))
                acc511
                p207
            with
              (acc513, _)
            in
            acc513
  let vRecordKindAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f174.
      lam __sem_target287.
        match
          __sem_target287
        with
          p208
        in
        let res54 =
            vRecordKindAst_smapAccumL_Expr_Expr
              (lam #var"188".
                 lam a249.
                   ({}, f174 a249))
              {}
              p208
          in
          res54.1
  let vRecordKindAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f175.
      lam __sem_target288.
        match
          __sem_target288
        with
          p209
        in
        let res55 =
            vRecordKindAst_smapAccumL_Expr_Type
              (lam #var"189".
                 lam a250.
                   ({}, f175 a250))
              {}
              p209
          in
          res55.1
  let vRecordKindAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f176: Ast_Type -> Ast_Type.
      lam __sem_target289.
        match
          __sem_target289
        with
          s91
        in
        match
            vRecordKindAst_smapAccumL_Kind_Type
              (lam #var"190".
                 lam x105.
                   ({}, f176 x105))
              {}
              s91
          with
            (_, s92)
          in
          s92
  let vRecordKindAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f177.
      lam __sem_target290.
        match
          __sem_target290
        with
          p221
        in
        let res56 =
            vRecordKindAst_smapAccumL_Type_Type
              (lam #var"191".
                 lam a251.
                   ({}, f177 a251))
              {}
              p221
          in
          res56.1
  let vRecordKindAst_sfold_Expr_Expr: all acc514. (acc514 -> Ast_Expr -> acc514) -> acc514 -> Ast_Expr -> acc514 =
    lam f178.
      lam acc515.
        lam __sem_target291.
          match
            __sem_target291
          with
            p222
          in
          let res57 =
              vRecordKindAst_smapAccumL_Expr_Expr
                (lam acc516.
                   lam a252.
                     (f178 acc516 a252, a252))
                acc515
                p222
            in
            res57.0
  let vRecordKindAst_sfold_Expr_Type: all acc517. (acc517 -> Ast_Type -> acc517) -> acc517 -> Ast_Expr -> acc517 =
    lam f179.
      lam acc518.
        lam __sem_target292.
          match
            __sem_target292
          with
            p223
          in
          let res58 =
              vRecordKindAst_smapAccumL_Expr_Type
                (lam acc519.
                   lam a253.
                     (f179 acc519 a253, a253))
                acc518
                p223
            in
            res58.0
  let vRecordKindAst_sfold_Kind_Type: all acc520. (acc520 -> Ast_Type -> acc520) -> acc520 -> Ast_Kind -> acc520 =
    lam f180: acc520 -> Ast_Type -> acc520.
      lam acc521: acc520.
        lam __sem_target293.
          match
            __sem_target293
          with
            s93
          in
          match
              vRecordKindAst_smapAccumL_Kind_Type
                (lam a254.
                   lam x106.
                     (f180 a254 x106, x106))
                acc521
                s93
            with
              (a255, _)
            in
            a255
  let vRecordKindAst_sfold_Type_Type: all acc522. (acc522 -> Ast_Type -> acc522) -> acc522 -> Ast_Type -> acc522 =
    lam f181.
      lam acc523.
        lam __sem_target294.
          match
            __sem_target294
          with
            p224
          in
          let res59 =
              vRecordKindAst_smapAccumL_Type_Type
                (lam acc524.
                   lam a256.
                     (f181 acc524 a256, a256))
                acc523
                p224
            in
            res59.0
  let vRecordKindAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f182.
      lam __sem_target295.
        match
          __sem_target295
        with
          expr36
        in
        let expr37 = f182 expr36 in
          vRecordKindAst_smap_Expr_Expr (vRecordKindAst_mapPre_Expr_Expr f182) expr37
  let vRecordKindAst_foldPre_Expr_Expr: all acc525. (acc525 -> Ast_Expr -> acc525) -> acc525 -> Ast_Expr -> acc525 =
    lam f183.
      lam acc526.
        lam __sem_target296.
          match
            __sem_target296
          with
            expr38
          in
          let acc527 = f183 acc526 expr38 in
            vRecordKindAst_sfold_Expr_Expr (vRecordKindAst_foldPre_Expr_Expr f183) acc527 expr38
  let vRecordKindAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f184.
      lam __sem_target297.
        match
          __sem_target297
        with
          expr39
        in
        f184
            (vRecordKindAst_smap_Expr_Expr (vRecordKindAst_mapPost_Expr_Expr f184) expr39)
  let vRecordKindAst_foldPost_Expr_Expr: all acc528. (acc528 -> Ast_Expr -> acc528) -> acc528 -> Ast_Expr -> acc528 =
    lam f185.
      lam acc529.
        lam __sem_target298.
          match
            __sem_target298
          with
            expr40
          in
          f185
              (vRecordKindAst_sfold_Expr_Expr (vRecordKindAst_foldPost_Expr_Expr f185) acc529 expr40)
              expr40
  let vRecordKindAst_smapAccumL_Pat_Pat: all acc530. (acc530 -> Ast_Pat -> (acc530, Ast_Pat)) -> acc530 -> Ast_Pat -> (acc530, Ast_Pat) =
    lam f186.
      lam acc531.
        lam __sem_target299.
          match
            __sem_target299
          with
            p225
          in
          (acc531, p225)
  let vRecordKindAst_smapAccumL_Expr_Pat: all acc532. (acc532 -> Ast_Pat -> (acc532, Ast_Pat)) -> acc532 -> Ast_Expr -> (acc532, Ast_Expr) =
    lam f187.
      lam acc533.
        lam __sem_target300.
          match
            __sem_target300
          with
            p226
          in
          (acc533, p226)
  let vRecordKindAst_smapAccumL_Pat_Expr: all acc534. (acc534 -> Ast_Expr -> (acc534, Ast_Expr)) -> acc534 -> Ast_Pat -> (acc534, Ast_Pat) =
    lam f188.
      lam acc535.
        lam __sem_target301.
          match
            __sem_target301
          with
            p227
          in
          (acc535, p227)
  let vRecordKindAst_smapAccumL_Pat_Type: all acc536. (acc536 -> Ast_Type -> (acc536, Ast_Type)) -> acc536 -> Ast_Pat -> (acc536, Ast_Pat) =
    lam f189.
      lam acc537.
        lam __sem_target302.
          match
            __sem_target302
          with
            p228
          in
          (acc537, p228)
  let vRecordKindAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f190.
      lam __sem_target303.
        match
          __sem_target303
        with
          p229
        in
        let res60 =
            vRecordKindAst_smapAccumL_Expr_TypeLabel
              (lam #var"192".
                 lam a257.
                   ({}, f190 a257))
              {}
              p229
          in
          res60.1
  let vRecordKindAst_rappAccumL_Type_Type: all acc538. (acc538 -> Ast_Type -> (acc538, Ast_Type)) -> acc538 -> Ast_Type -> (acc538, Ast_Type) =
    lam f191.
      lam acc539.
        lam __sem_target304.
          match
            __sem_target304
          with
            ty59
          in
          (acc539, ty59)
  let vRecordKindAst_sfold_Expr_TypeLabel: all acc540. (acc540 -> Ast_Type -> acc540) -> acc540 -> Ast_Expr -> acc540 =
    lam f192.
      lam acc541.
        lam __sem_target305.
          match
            __sem_target305
          with
            p230
          in
          let res61 =
              vRecordKindAst_smapAccumL_Expr_TypeLabel
                (lam acc542.
                   lam a258.
                     (f192 acc542 a258, a258))
                acc541
                p230
            in
            res61.0
  let vRecordKindAst_smapAccumL_Expr_Expr: all acc543. (acc543 -> Ast_Expr -> (acc543, Ast_Expr)) -> acc543 -> Ast_Expr -> (acc543, Ast_Expr) =
    lam f193.
      lam acc544.
        lam __sem_target306.
          match
            __sem_target306
          with
            p231
          in
          (acc544, p231)
  let vRecordKindAst_smapAccumL_Expr_Type: all acc545. (acc545 -> Ast_Type -> (acc545, Ast_Type)) -> acc545 -> Ast_Expr -> (acc545, Ast_Expr) =
    lam f194.
      lam acc546.
        lam __sem_target307.
          match
            __sem_target307
          with
            p232
          in
          (acc546, p232)
  let vRecordKindAst_smapAccumL_Kind_Type: all acc547. (acc547 -> Ast_Type -> (acc547, Ast_Type)) -> acc547 -> Ast_Kind -> (acc547, Ast_Kind) =
    lam f195.
      lam acc548.
        lam __sem_target308.
          match
            __sem_target308
          with
            RecordKindAst_Record r265
          then
            match
              mapMapAccum
                (lam acc549.
                   lam #var"193".
                     lam e28.
                       f195 acc549 e28)
                acc548
                r265.fields
            with
              (acc550, flds3)
            in
            (acc550, RecordKindAst_Record
                { r265 with fields = flds3 })
          else match
            __sem_target308
          with
            s94
          in
          (acc548, s94)
  let vRecordKindAst_smapAccumL_Type_Type: all acc551. (acc551 -> Ast_Type -> (acc551, Ast_Type)) -> acc551 -> Ast_Type -> (acc551, Ast_Type) =
    lam f196.
      lam acc552.
        lam __sem_target309.
          match
            __sem_target309
          with
            p233
          in
          (acc552, p233)
  let vRecordKindAst_mapAccumLPre_Expr_Expr: all acc553. (acc553 -> Ast_Expr -> (acc553, Ast_Expr)) -> acc553 -> Ast_Expr -> (acc553, Ast_Expr) =
    lam f197.
      lam acc554.
        lam __sem_target310.
          match
            __sem_target310
          with
            expr41
          in
          match
              f197 acc554 expr41
            with
              (acc555, expr42)
            in
            vRecordKindAst_smapAccumL_Expr_Expr (vRecordKindAst_mapAccumLPre_Expr_Expr f197) acc555 expr42
  let vRecordKindAst_mapAccumLPost_Expr_Expr: all acc556. (acc556 -> Ast_Expr -> (acc556, Ast_Expr)) -> acc556 -> Ast_Expr -> (acc556, Ast_Expr) =
    lam f198.
      lam acc557.
        lam __sem_target311.
          match
            __sem_target311
          with
            expr43
          in
          match
              vRecordKindAst_smapAccumL_Expr_Expr (vRecordKindAst_mapAccumLPost_Expr_Expr f198) acc557 expr43
            with
              (acc558, expr44)
            in
            f198 acc558 expr44
  let vRecordKindAst_smapAccumL_Expr_TypeLabel: all acc559. (acc559 -> Ast_Type -> (acc559, Ast_Type)) -> acc559 -> Ast_Expr -> (acc559, Ast_Expr) =
    lam f199.
      lam acc560.
        lam __sem_target312.
          match
            __sem_target312
          with
            p234
          in
          match
              f199 acc560 (vRecordKindAst_tyTm p234)
            with
              (acc561, ty60)
            in
            (acc561, vRecordKindAst_withType ty60 p234)
in
con DataKindAst_Data: {types: Map Name {lower: Set Name, upper: Option (Set Name)}} -> Ast_Kind in
recursive
  let vDataKindAst_tyTm: Ast_Expr -> Ast_Type = lam x83.
      never
  let vDataKindAst_tyPat: Ast_Pat -> Ast_Type = lam x84.
      never
  let vDataKindAst_infoTm: Ast_Expr -> Info = lam x85.
      never
  let vDataKindAst_infoTy: Ast_Type -> Info = lam x86.
      never
  let vDataKindAst_infoPat: Ast_Pat -> Info = lam x87.
      never
  let vDataKindAst_withInfo: Info -> Ast_Expr -> Ast_Expr = lam x88.
      never
  let vDataKindAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr = lam x89.
      never
  let vDataKindAst_tyWithInfo: Info -> Ast_Type -> Ast_Type = lam x90.
      never
  let vDataKindAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target233.
      match
        __sem_target233
      with
        ty51
      in
      vDataKindAst_rapp_Type_Type vDataKindAst_unwrapType ty51
  let vDataKindAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target234.
      match
        __sem_target234
      with
        ty52
      in
      vDataKindAst_rapp_Type_Type vDataKindAst_inspectType ty52
  let vDataKindAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat = lam x91.
      never
  let vDataKindAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat = lam x92.
      never
  let vDataKindAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f130.
      lam __sem_target235.
        match
          __sem_target235
        with
          p170
        in
        let res40 =
            vDataKindAst_smapAccumL_Pat_Pat
              (lam #var"173".
                 lam a223.
                   ({}, f130 a223))
              {}
              p170
          in
          res40.1
  let vDataKindAst_countPatNodes =
    lam count42.
      lam __sem_target236.
        match
          __sem_target236
        with
          t696
        in
        let count43 = addi count42 1 in
          let count44 =
            vDataKindAst_sfold_Pat_Pat vDataKindAst_countPatNodes count43 t696
          in
          let count45 =
            vDataKindAst_sfold_Pat_Expr vDataKindAst_countExprNodes count44 t696
          in
          let count46 =
            vDataKindAst_sfold_Pat_Type vDataKindAst_countTypeNodes count45 t696
          in
          count46
  let vDataKindAst_sfold_Pat_Pat: all acc438. (acc438 -> Ast_Pat -> acc438) -> acc438 -> Ast_Pat -> acc438 =
    lam f131.
      lam acc439.
        lam __sem_target237.
          match
            __sem_target237
          with
            p171
          in
          let res41 =
              vDataKindAst_smapAccumL_Pat_Pat
                (lam acc440.
                   lam a224.
                     (f131 acc440 a224, a224))
                acc439
                p171
            in
            res41.0
  let vDataKindAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f132.
      lam __sem_target238.
        match
          __sem_target238
        with
          p172
        in
        match
            vDataKindAst_smapAccumL_Expr_Pat
              (lam #var"174".
                 lam a225.
                   ({}, f132 a225))
              {}
              p172
          with
            (_, p173)
          in
          p173
  let vDataKindAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f133.
      lam __sem_target239.
        match
          __sem_target239
        with
          p174
        in
        match
            vDataKindAst_smapAccumL_Pat_Expr
              (lam #var"175".
                 lam a226.
                   ({}, f133 a226))
              {}
              p174
          with
            (_, p175)
          in
          p175
  let vDataKindAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f134.
      lam __sem_target240.
        match
          __sem_target240
        with
          p176
        in
        match
            vDataKindAst_smapAccumL_Pat_Type
              (lam #var"176".
                 lam a227.
                   ({}, f134 a227))
              {}
              p176
          with
            (_, p177)
          in
          p177
  let vDataKindAst_countExprNodes =
    lam count47.
      lam __sem_target241.
        match
          __sem_target241
        with
          t697
        in
        let count48 = addi count47 1 in
          let count49 =
            vDataKindAst_sfold_Expr_Expr vDataKindAst_countExprNodes count48 t697
          in
          let count50 =
            vDataKindAst_sfold_Expr_Type vDataKindAst_countTypeNodes count49 t697
          in
          let count51 =
            vDataKindAst_sfold_Expr_TypeLabel vDataKindAst_countTypeNodes count50 t697
          in
          let count52 =
            vDataKindAst_sfold_Expr_Pat vDataKindAst_countPatNodes count51 t697
          in
          count52
  let vDataKindAst_countTypeNodes =
    lam count53.
      lam __sem_target242.
        match
          __sem_target242
        with
          t698
        in
        let count54 = addi count53 1 in
          let count55 =
            vDataKindAst_sfold_Type_Type vDataKindAst_countTypeNodes count54 t698
          in
          count55
  let vDataKindAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f135.
      lam __sem_target243.
        match
          __sem_target243
        with
          ty53
        in
        let res42 =
            vDataKindAst_rappAccumL_Type_Type
              (lam #var"177".
                 lam t699.
                   ({}, f135 t699))
              {}
              ty53
          in
          res42.1
  let vDataKindAst_sfold_Expr_Pat: all acc441. (acc441 -> Ast_Pat -> acc441) -> acc441 -> Ast_Expr -> acc441 =
    lam f136.
      lam acc442.
        lam __sem_target244.
          match
            __sem_target244
          with
            p178
          in
          match
              vDataKindAst_smapAccumL_Expr_Pat
                (lam acc443.
                   lam a228.
                     (f136 acc443 a228, a228))
                acc442
                p178
            with
              (acc444, _)
            in
            acc444
  let vDataKindAst_sfold_Pat_Expr: all acc445. (acc445 -> Ast_Expr -> acc445) -> acc445 -> Ast_Pat -> acc445 =
    lam f137.
      lam acc446.
        lam __sem_target245.
          match
            __sem_target245
          with
            p179
          in
          match
              vDataKindAst_smapAccumL_Pat_Expr
                (lam acc447.
                   lam a229.
                     (f137 acc447 a229, a229))
                acc446
                p179
            with
              (acc448, _)
            in
            acc448
  let vDataKindAst_sfold_Pat_Type: all acc449. (acc449 -> Ast_Type -> acc449) -> acc449 -> Ast_Pat -> acc449 =
    lam f138.
      lam acc450.
        lam __sem_target246.
          match
            __sem_target246
          with
            p180
          in
          match
              vDataKindAst_smapAccumL_Pat_Type
                (lam acc451.
                   lam a230.
                     (f138 acc451 a230, a230))
                acc450
                p180
            with
              (acc452, _)
            in
            acc452
  let vDataKindAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f139.
      lam __sem_target247.
        match
          __sem_target247
        with
          p181
        in
        let res43 =
            vDataKindAst_smapAccumL_Expr_Expr
              (lam #var"178".
                 lam a231.
                   ({}, f139 a231))
              {}
              p181
          in
          res43.1
  let vDataKindAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f140.
      lam __sem_target248.
        match
          __sem_target248
        with
          p182
        in
        let res44 =
            vDataKindAst_smapAccumL_Expr_Type
              (lam #var"179".
                 lam a232.
                   ({}, f140 a232))
              {}
              p182
          in
          res44.1
  let vDataKindAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f141: Ast_Type -> Ast_Type.
      lam __sem_target249.
        match
          __sem_target249
        with
          s87
        in
        match
            vDataKindAst_smapAccumL_Kind_Type
              (lam #var"180".
                 lam x93.
                   ({}, f141 x93))
              {}
              s87
          with
            (_, s88)
          in
          s88
  let vDataKindAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f142.
      lam __sem_target250.
        match
          __sem_target250
        with
          p183
        in
        let res45 =
            vDataKindAst_smapAccumL_Type_Type
              (lam #var"181".
                 lam a233.
                   ({}, f142 a233))
              {}
              p183
          in
          res45.1
  let vDataKindAst_sfold_Expr_Expr: all acc453. (acc453 -> Ast_Expr -> acc453) -> acc453 -> Ast_Expr -> acc453 =
    lam f143.
      lam acc454.
        lam __sem_target251.
          match
            __sem_target251
          with
            p184
          in
          let res46 =
              vDataKindAst_smapAccumL_Expr_Expr
                (lam acc455.
                   lam a234.
                     (f143 acc455 a234, a234))
                acc454
                p184
            in
            res46.0
  let vDataKindAst_sfold_Expr_Type: all acc456. (acc456 -> Ast_Type -> acc456) -> acc456 -> Ast_Expr -> acc456 =
    lam f144.
      lam acc457.
        lam __sem_target252.
          match
            __sem_target252
          with
            p185
          in
          let res47 =
              vDataKindAst_smapAccumL_Expr_Type
                (lam acc458.
                   lam a235.
                     (f144 acc458 a235, a235))
                acc457
                p185
            in
            res47.0
  let vDataKindAst_sfold_Kind_Type: all acc459. (acc459 -> Ast_Type -> acc459) -> acc459 -> Ast_Kind -> acc459 =
    lam f145: acc459 -> Ast_Type -> acc459.
      lam acc460: acc459.
        lam __sem_target253.
          match
            __sem_target253
          with
            s89
          in
          match
              vDataKindAst_smapAccumL_Kind_Type
                (lam a236.
                   lam x94.
                     (f145 a236 x94, x94))
                acc460
                s89
            with
              (a237, _)
            in
            a237
  let vDataKindAst_sfold_Type_Type: all acc461. (acc461 -> Ast_Type -> acc461) -> acc461 -> Ast_Type -> acc461 =
    lam f146.
      lam acc462.
        lam __sem_target254.
          match
            __sem_target254
          with
            p186
          in
          let res48 =
              vDataKindAst_smapAccumL_Type_Type
                (lam acc463.
                   lam a238.
                     (f146 acc463 a238, a238))
                acc462
                p186
            in
            res48.0
  let vDataKindAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f147.
      lam __sem_target255.
        match
          __sem_target255
        with
          expr27
        in
        let expr28 = f147 expr27 in
          vDataKindAst_smap_Expr_Expr (vDataKindAst_mapPre_Expr_Expr f147) expr28
  let vDataKindAst_foldPre_Expr_Expr: all acc464. (acc464 -> Ast_Expr -> acc464) -> acc464 -> Ast_Expr -> acc464 =
    lam f148.
      lam acc465.
        lam __sem_target256.
          match
            __sem_target256
          with
            expr29
          in
          let acc466 = f148 acc465 expr29 in
            vDataKindAst_sfold_Expr_Expr (vDataKindAst_foldPre_Expr_Expr f148) acc466 expr29
  let vDataKindAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f149.
      lam __sem_target257.
        match
          __sem_target257
        with
          expr30
        in
        f149
            (vDataKindAst_smap_Expr_Expr (vDataKindAst_mapPost_Expr_Expr f149) expr30)
  let vDataKindAst_foldPost_Expr_Expr: all acc467. (acc467 -> Ast_Expr -> acc467) -> acc467 -> Ast_Expr -> acc467 =
    lam f150.
      lam acc468.
        lam __sem_target258.
          match
            __sem_target258
          with
            expr31
          in
          f150
              (vDataKindAst_sfold_Expr_Expr (vDataKindAst_foldPost_Expr_Expr f150) acc468 expr31)
              expr31
  let vDataKindAst_smapAccumL_Pat_Pat: all acc469. (acc469 -> Ast_Pat -> (acc469, Ast_Pat)) -> acc469 -> Ast_Pat -> (acc469, Ast_Pat) =
    lam f151.
      lam acc470.
        lam __sem_target259.
          match
            __sem_target259
          with
            p187
          in
          (acc470, p187)
  let vDataKindAst_smapAccumL_Expr_Pat: all acc471. (acc471 -> Ast_Pat -> (acc471, Ast_Pat)) -> acc471 -> Ast_Expr -> (acc471, Ast_Expr) =
    lam f152.
      lam acc472.
        lam __sem_target260.
          match
            __sem_target260
          with
            p188
          in
          (acc472, p188)
  let vDataKindAst_smapAccumL_Pat_Expr: all acc473. (acc473 -> Ast_Expr -> (acc473, Ast_Expr)) -> acc473 -> Ast_Pat -> (acc473, Ast_Pat) =
    lam f153.
      lam acc474.
        lam __sem_target261.
          match
            __sem_target261
          with
            p189
          in
          (acc474, p189)
  let vDataKindAst_smapAccumL_Pat_Type: all acc475. (acc475 -> Ast_Type -> (acc475, Ast_Type)) -> acc475 -> Ast_Pat -> (acc475, Ast_Pat) =
    lam f154.
      lam acc476.
        lam __sem_target262.
          match
            __sem_target262
          with
            p190
          in
          (acc476, p190)
  let vDataKindAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f155.
      lam __sem_target263.
        match
          __sem_target263
        with
          p191
        in
        let res49 =
            vDataKindAst_smapAccumL_Expr_TypeLabel
              (lam #var"182".
                 lam a239.
                   ({}, f155 a239))
              {}
              p191
          in
          res49.1
  let vDataKindAst_rappAccumL_Type_Type: all acc477. (acc477 -> Ast_Type -> (acc477, Ast_Type)) -> acc477 -> Ast_Type -> (acc477, Ast_Type) =
    lam f156.
      lam acc478.
        lam __sem_target264.
          match
            __sem_target264
          with
            ty54
          in
          (acc478, ty54)
  let vDataKindAst_sfold_Expr_TypeLabel: all acc479. (acc479 -> Ast_Type -> acc479) -> acc479 -> Ast_Expr -> acc479 =
    lam f157.
      lam acc480.
        lam __sem_target265.
          match
            __sem_target265
          with
            p192
          in
          let res50 =
              vDataKindAst_smapAccumL_Expr_TypeLabel
                (lam acc481.
                   lam a240.
                     (f157 acc481 a240, a240))
                acc480
                p192
            in
            res50.0
  let vDataKindAst_smapAccumL_Expr_Expr: all acc482. (acc482 -> Ast_Expr -> (acc482, Ast_Expr)) -> acc482 -> Ast_Expr -> (acc482, Ast_Expr) =
    lam f158.
      lam acc483.
        lam __sem_target266.
          match
            __sem_target266
          with
            p193
          in
          (acc483, p193)
  let vDataKindAst_smapAccumL_Expr_Type: all acc484. (acc484 -> Ast_Type -> (acc484, Ast_Type)) -> acc484 -> Ast_Expr -> (acc484, Ast_Expr) =
    lam f159.
      lam acc485.
        lam __sem_target267.
          match
            __sem_target267
          with
            p194
          in
          (acc485, p194)
  let vDataKindAst_smapAccumL_Kind_Type: all acc486. (acc486 -> Ast_Type -> (acc486, Ast_Type)) -> acc486 -> Ast_Kind -> (acc486, Ast_Kind) =
    lam f160.
      lam acc487.
        lam __sem_target268.
          match
            __sem_target268
          with
            s90
          in
          (acc487, s90)
  let vDataKindAst_smapAccumL_Type_Type: all acc488. (acc488 -> Ast_Type -> (acc488, Ast_Type)) -> acc488 -> Ast_Type -> (acc488, Ast_Type) =
    lam f161.
      lam acc489.
        lam __sem_target269.
          match
            __sem_target269
          with
            p195
          in
          (acc489, p195)
  let vDataKindAst_mapAccumLPre_Expr_Expr: all acc490. (acc490 -> Ast_Expr -> (acc490, Ast_Expr)) -> acc490 -> Ast_Expr -> (acc490, Ast_Expr) =
    lam f162.
      lam acc491.
        lam __sem_target270.
          match
            __sem_target270
          with
            expr32
          in
          match
              f162 acc491 expr32
            with
              (acc492, expr33)
            in
            vDataKindAst_smapAccumL_Expr_Expr (vDataKindAst_mapAccumLPre_Expr_Expr f162) acc492 expr33
  let vDataKindAst_mapAccumLPost_Expr_Expr: all acc493. (acc493 -> Ast_Expr -> (acc493, Ast_Expr)) -> acc493 -> Ast_Expr -> (acc493, Ast_Expr) =
    lam f163.
      lam acc494.
        lam __sem_target271.
          match
            __sem_target271
          with
            expr34
          in
          match
              vDataKindAst_smapAccumL_Expr_Expr (vDataKindAst_mapAccumLPost_Expr_Expr f163) acc494 expr34
            with
              (acc495, expr35)
            in
            f163 acc495 expr35
  let vDataKindAst_smapAccumL_Expr_TypeLabel: all acc496. (acc496 -> Ast_Type -> (acc496, Ast_Type)) -> acc496 -> Ast_Expr -> (acc496, Ast_Expr) =
    lam f164.
      lam acc497.
        lam __sem_target272.
          match
            __sem_target272
          with
            p196
          in
          match
              f164 acc497 (vDataKindAst_tyTm p196)
            with
              (acc498, ty55)
            in
            (acc498, vDataKindAst_withType ty55 p196)
in
recursive
  let vMExprAst_tyTm: Ast_Expr -> Ast_Type =
    lam __sem_target179.
      match
        __sem_target179
      with
        VarAst_TmVar t589
      then
        t589.ty
      else match
        __sem_target179
      with
        AppAst_TmApp t590
      then
        t590.ty
      else match
        __sem_target179
      with
        LamAst_TmLam t591
      then
        t591.ty
      else match
        __sem_target179
      with
        LetAst_TmLet t592
      then
        t592.ty
      else match
        __sem_target179
      with
        RecLetsAst_TmRecLets t593
      then
        t593.ty
      else match
        __sem_target179
      with
        ConstAst_TmConst t594
      then
        t594.ty
      else match
        __sem_target179
      with
        SeqAst_TmSeq t595
      then
        t595.ty
      else match
        __sem_target179
      with
        RecordAst_TmRecord t596
      then
        t596.ty
      else match
        __sem_target179
      with
        RecordAst_TmRecordUpdate t597
      then
        t597.ty
      else match
        __sem_target179
      with
        TypeAst_TmType t598
      then
        t598.ty
      else match
        __sem_target179
      with
        DataAst_TmConDef t599
      then
        t599.ty
      else match
        __sem_target179
      with
        DataAst_TmConApp t600
      then
        t600.ty
      else match
        __sem_target179
      with
        MatchAst_TmMatch t601
      then
        t601.ty
      else match
        __sem_target179
      with
        UtestAst_TmUtest t602
      then
        t602.ty
      else match
        __sem_target179
      with
        NeverAst_TmNever t603
      then
        t603.ty
      else match
        __sem_target179
      with
        ExtAst_TmExt t604
      in
      t604.ty
  let vMExprAst_tyPat: Ast_Pat -> Ast_Type =
    lam __sem_target180.
      match
        __sem_target180
      with
        NamedPat_PatNamed r183
      then
        r183.ty
      else match
        __sem_target180
      with
        SeqTotPat_PatSeqTot r184
      then
        r184.ty
      else match
        __sem_target180
      with
        SeqEdgePat_PatSeqEdge r185
      then
        r185.ty
      else match
        __sem_target180
      with
        RecordPat_PatRecord r186
      then
        r186.ty
      else match
        __sem_target180
      with
        DataPat_PatCon r187
      then
        r187.ty
      else match
        __sem_target180
      with
        IntPat_PatInt r188
      then
        r188.ty
      else match
        __sem_target180
      with
        CharPat_PatChar r189
      then
        r189.ty
      else match
        __sem_target180
      with
        BoolPat_PatBool r190
      then
        r190.ty
      else match
        __sem_target180
      with
        AndPat_PatAnd r191
      then
        r191.ty
      else match
        __sem_target180
      with
        OrPat_PatOr r192
      then
        r192.ty
      else match
        __sem_target180
      with
        NotPat_PatNot r193
      in
      r193.ty
  let vMExprAst_infoTm: Ast_Expr -> Info =
    lam __sem_target181.
      match
        __sem_target181
      with
        VarAst_TmVar r194
      then
        r194.info
      else match
        __sem_target181
      with
        AppAst_TmApp r195
      then
        r195.info
      else match
        __sem_target181
      with
        LamAst_TmLam r196
      then
        r196.info
      else match
        __sem_target181
      with
        LetAst_TmLet r197
      then
        r197.info
      else match
        __sem_target181
      with
        RecLetsAst_TmRecLets r198
      then
        r198.info
      else match
        __sem_target181
      with
        ConstAst_TmConst r199
      then
        r199.info
      else match
        __sem_target181
      with
        SeqAst_TmSeq r200
      then
        r200.info
      else match
        __sem_target181
      with
        RecordAst_TmRecord r201
      then
        r201.info
      else match
        __sem_target181
      with
        RecordAst_TmRecordUpdate r202
      then
        r202.info
      else match
        __sem_target181
      with
        TypeAst_TmType r203
      then
        r203.info
      else match
        __sem_target181
      with
        DataAst_TmConDef r204
      then
        r204.info
      else match
        __sem_target181
      with
        DataAst_TmConApp r205
      then
        r205.info
      else match
        __sem_target181
      with
        MatchAst_TmMatch r206
      then
        r206.info
      else match
        __sem_target181
      with
        UtestAst_TmUtest r207
      then
        r207.info
      else match
        __sem_target181
      with
        NeverAst_TmNever r208
      then
        r208.info
      else match
        __sem_target181
      with
        ExtAst_TmExt r209
      in
      r209.info
  let vMExprAst_infoTy: Ast_Type -> Info =
    lam __sem_target182.
      match
        __sem_target182
      with
        UnknownTypeAst_TyUnknown r216
      then
        r216.info
      else match
        __sem_target182
      with
        BoolTypeAst_TyBool r217
      then
        r217.info
      else match
        __sem_target182
      with
        IntTypeAst_TyInt r218
      then
        r218.info
      else match
        __sem_target182
      with
        FloatTypeAst_TyFloat r219
      then
        r219.info
      else match
        __sem_target182
      with
        CharTypeAst_TyChar r220
      then
        r220.info
      else match
        __sem_target182
      with
        FunTypeAst_TyArrow r221
      then
        r221.info
      else match
        __sem_target182
      with
        SeqTypeAst_TySeq r222
      then
        r222.info
      else match
        __sem_target182
      with
        TensorTypeAst_TyTensor r223
      then
        r223.info
      else match
        __sem_target182
      with
        RecordTypeAst_TyRecord r224
      then
        r224.info
      else match
        __sem_target182
      with
        VariantTypeAst_TyVariant r225
      then
        r225.info
      else match
        __sem_target182
      with
        ConTypeAst_TyCon r226
      then
        r226.info
      else match
        __sem_target182
      with
        DataTypeAst_TyData r227
      then
        r227.info
      else match
        __sem_target182
      with
        VarTypeAst_TyVar t605
      then
        t605.info
      else match
        __sem_target182
      with
        AllTypeAst_TyAll t606
      then
        t606.info
      else match
        __sem_target182
      with
        AppTypeAst_TyApp r228
      then
        r228.info
      else match
        __sem_target182
      with
        AliasTypeAst_TyAlias t607
      in
      vMExprAst_infoTy t607.display
  let vMExprAst_infoPat: Ast_Pat -> Info =
    lam __sem_target183.
      match
        __sem_target183
      with
        NamedPat_PatNamed r229
      then
        r229.info
      else match
        __sem_target183
      with
        SeqTotPat_PatSeqTot r230
      then
        r230.info
      else match
        __sem_target183
      with
        SeqEdgePat_PatSeqEdge r231
      then
        r231.info
      else match
        __sem_target183
      with
        RecordPat_PatRecord r232
      then
        r232.info
      else match
        __sem_target183
      with
        DataPat_PatCon r233
      then
        r233.info
      else match
        __sem_target183
      with
        IntPat_PatInt r234
      then
        r234.info
      else match
        __sem_target183
      with
        CharPat_PatChar r235
      then
        r235.info
      else match
        __sem_target183
      with
        BoolPat_PatBool r236
      then
        r236.info
      else match
        __sem_target183
      with
        AndPat_PatAnd r237
      then
        r237.info
      else match
        __sem_target183
      with
        OrPat_PatOr r238
      then
        r238.info
      else match
        __sem_target183
      with
        NotPat_PatNot r239
      in
      r239.info
  let vMExprAst_withInfo: Info -> Ast_Expr -> Ast_Expr =
    lam info6.
      lam __sem_target184.
        match
          __sem_target184
        with
          VarAst_TmVar t608
        then
          VarAst_TmVar
            { t608 with info = info6 }
        else match
          __sem_target184
        with
          AppAst_TmApp t609
        then
          AppAst_TmApp
            { t609 with info = info6 }
        else match
          __sem_target184
        with
          LamAst_TmLam t610
        then
          LamAst_TmLam
            { t610 with info = info6 }
        else match
          __sem_target184
        with
          LetAst_TmLet t611
        then
          LetAst_TmLet
            { t611 with info = info6 }
        else match
          __sem_target184
        with
          RecLetsAst_TmRecLets t612
        then
          RecLetsAst_TmRecLets
            { t612 with info = info6 }
        else match
          __sem_target184
        with
          ConstAst_TmConst t613
        then
          ConstAst_TmConst
            { t613 with info = info6 }
        else match
          __sem_target184
        with
          SeqAst_TmSeq t614
        then
          SeqAst_TmSeq
            { t614 with info = info6 }
        else match
          __sem_target184
        with
          RecordAst_TmRecord t615
        then
          RecordAst_TmRecord
            { t615 with info = info6 }
        else match
          __sem_target184
        with
          RecordAst_TmRecordUpdate t616
        then
          RecordAst_TmRecordUpdate
            { t616 with info = info6 }
        else match
          __sem_target184
        with
          TypeAst_TmType t617
        then
          TypeAst_TmType
            { t617 with info = info6 }
        else match
          __sem_target184
        with
          DataAst_TmConDef t618
        then
          DataAst_TmConDef
            { t618 with info = info6 }
        else match
          __sem_target184
        with
          DataAst_TmConApp t619
        then
          DataAst_TmConApp
            { t619 with info = info6 }
        else match
          __sem_target184
        with
          MatchAst_TmMatch t620
        then
          MatchAst_TmMatch
            { t620 with info = info6 }
        else match
          __sem_target184
        with
          UtestAst_TmUtest t621
        then
          UtestAst_TmUtest
            { t621 with info = info6 }
        else match
          __sem_target184
        with
          NeverAst_TmNever t622
        then
          NeverAst_TmNever
            { t622 with info = info6 }
        else match
          __sem_target184
        with
          ExtAst_TmExt t623
        in
        ExtAst_TmExt
            { t623 with info = info6 }
  let vMExprAst_withType: Ast_Type -> Ast_Expr -> Ast_Expr =
    lam ty34: Ast_Type.
      lam __sem_target185.
        match
          __sem_target185
        with
          VarAst_TmVar t624
        then
          VarAst_TmVar
            { t624 with ty = ty34 }
        else match
          __sem_target185
        with
          AppAst_TmApp t625
        then
          AppAst_TmApp
            { t625 with ty = ty34 }
        else match
          __sem_target185
        with
          LamAst_TmLam t626
        then
          LamAst_TmLam
            { t626 with ty = ty34 }
        else match
          __sem_target185
        with
          LetAst_TmLet t627
        then
          LetAst_TmLet
            { t627 with ty = ty34 }
        else match
          __sem_target185
        with
          RecLetsAst_TmRecLets t628
        then
          RecLetsAst_TmRecLets
            { t628 with ty = ty34 }
        else match
          __sem_target185
        with
          ConstAst_TmConst t629
        then
          ConstAst_TmConst
            { t629 with ty = ty34 }
        else match
          __sem_target185
        with
          SeqAst_TmSeq t630
        then
          SeqAst_TmSeq
            { t630 with ty = ty34 }
        else match
          __sem_target185
        with
          RecordAst_TmRecord t631
        then
          RecordAst_TmRecord
            { t631 with ty = ty34 }
        else match
          __sem_target185
        with
          RecordAst_TmRecordUpdate t632
        then
          RecordAst_TmRecordUpdate
            { t632 with ty = ty34 }
        else match
          __sem_target185
        with
          TypeAst_TmType t633
        then
          TypeAst_TmType
            { t633 with ty = ty34 }
        else match
          __sem_target185
        with
          DataAst_TmConDef t634
        then
          DataAst_TmConDef
            { t634 with ty = ty34 }
        else match
          __sem_target185
        with
          DataAst_TmConApp t635
        then
          DataAst_TmConApp
            { t635 with ty = ty34 }
        else match
          __sem_target185
        with
          MatchAst_TmMatch t636
        then
          MatchAst_TmMatch
            { t636 with ty = ty34 }
        else match
          __sem_target185
        with
          UtestAst_TmUtest t637
        then
          UtestAst_TmUtest
            { t637 with ty = ty34 }
        else match
          __sem_target185
        with
          NeverAst_TmNever t638
        then
          NeverAst_TmNever
            { t638 with ty = ty34 }
        else match
          __sem_target185
        with
          ExtAst_TmExt t639
        in
        ExtAst_TmExt
            { t639 with ty = ty34 }
  let vMExprAst_stripTyAll =
    lam __sem_target186.
      match
        __sem_target186
      with
        AliasTypeAst_TyAlias t640 & ty35
      then
        let #var"X31" = vMExprAst_stripTyAll t640.content in
        match
          #var"X31"
        with
          ("", _)
        then
          ("", ty35)
        else match
          #var"X31"
        with
          stripped2
        in
        stripped2
      else match
        __sem_target186
      with
        ty36
      in
      vMExprAst_stripTyAllBase "" ty36
  let vMExprAst_tyWithInfo: Info -> Ast_Type -> Ast_Type =
    lam info7.
      lam __sem_target187.
        match
          __sem_target187
        with
          UnknownTypeAst_TyUnknown t641
        then
          UnknownTypeAst_TyUnknown
            { t641 with info = info7 }
        else match
          __sem_target187
        with
          BoolTypeAst_TyBool t642
        then
          BoolTypeAst_TyBool
            { t642 with info = info7 }
        else match
          __sem_target187
        with
          IntTypeAst_TyInt t643
        then
          IntTypeAst_TyInt
            { t643 with info = info7 }
        else match
          __sem_target187
        with
          FloatTypeAst_TyFloat t644
        then
          FloatTypeAst_TyFloat
            { t644 with info = info7 }
        else match
          __sem_target187
        with
          CharTypeAst_TyChar t645
        then
          CharTypeAst_TyChar
            { t645 with info = info7 }
        else match
          __sem_target187
        with
          FunTypeAst_TyArrow t646
        then
          FunTypeAst_TyArrow
            { t646 with info = info7 }
        else match
          __sem_target187
        with
          SeqTypeAst_TySeq t647
        then
          SeqTypeAst_TySeq
            { t647 with info = info7 }
        else match
          __sem_target187
        with
          TensorTypeAst_TyTensor t648
        then
          TensorTypeAst_TyTensor
            { t648 with info = info7 }
        else match
          __sem_target187
        with
          RecordTypeAst_TyRecord t649
        then
          RecordTypeAst_TyRecord
            { t649 with info = info7 }
        else match
          __sem_target187
        with
          VariantTypeAst_TyVariant t650
        then
          VariantTypeAst_TyVariant
            { t650 with info = info7 }
        else match
          __sem_target187
        with
          ConTypeAst_TyCon t651
        then
          ConTypeAst_TyCon
            { t651 with info = info7 }
        else match
          __sem_target187
        with
          DataTypeAst_TyData t652
        then
          DataTypeAst_TyData
            { t652 with info = info7 }
        else match
          __sem_target187
        with
          VarTypeAst_TyVar t653
        then
          VarTypeAst_TyVar
            { t653 with info = info7 }
        else match
          __sem_target187
        with
          AllTypeAst_TyAll t654
        then
          AllTypeAst_TyAll
            { t654 with info = info7 }
        else match
          __sem_target187
        with
          AppTypeAst_TyApp t655
        then
          AppTypeAst_TyApp
            { t655 with info = info7 }
        else match
          __sem_target187
        with
          AliasTypeAst_TyAlias t656
        in
        AliasTypeAst_TyAlias
            { t656 with display = vMExprAst_tyWithInfo info7 t656.display }
  let vMExprAst_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target188.
      match
        __sem_target188
      with
        ty37
      in
      vMExprAst_rapp_Type_Type vMExprAst_unwrapType ty37
  let vMExprAst_computeData: DataTypeAst_DataRec -> Map Name (Set Name) =
    lam __sem_target189.
      match
        __sem_target189
      with
        r240
      in
      match
          r240.positive
        with
          true
        then
          mapMap (setIntersect r240.cons) r240.universe
        else
          mapMap
            (lam x80.
               setSubtract x80 r240.cons)
            r240.universe
  let vMExprAst_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target190.
      match
        __sem_target190
      with
        AllTypeAst_TyAll t657
      then
        vMExprAst_inspectType t657.ty
      else match
        __sem_target190
      with
        ty38
      in
      vMExprAst_rapp_Type_Type vMExprAst_inspectType ty38
  let vMExprAst_withInfoPat: Info -> Ast_Pat -> Ast_Pat =
    lam info8.
      lam __sem_target191.
        match
          __sem_target191
        with
          NamedPat_PatNamed r241
        then
          NamedPat_PatNamed
            { r241 with info = info8 }
        else match
          __sem_target191
        with
          SeqTotPat_PatSeqTot r242
        then
          SeqTotPat_PatSeqTot
            { r242 with info = info8 }
        else match
          __sem_target191
        with
          SeqEdgePat_PatSeqEdge r243
        then
          SeqEdgePat_PatSeqEdge
            { r243 with info = info8 }
        else match
          __sem_target191
        with
          RecordPat_PatRecord r244
        then
          RecordPat_PatRecord
            { r244 with info = info8 }
        else match
          __sem_target191
        with
          DataPat_PatCon r245
        then
          DataPat_PatCon
            { r245 with info = info8 }
        else match
          __sem_target191
        with
          IntPat_PatInt r246
        then
          IntPat_PatInt
            { r246 with info = info8 }
        else match
          __sem_target191
        with
          CharPat_PatChar r247
        then
          CharPat_PatChar
            { r247 with info = info8 }
        else match
          __sem_target191
        with
          BoolPat_PatBool r248
        then
          BoolPat_PatBool
            { r248 with info = info8 }
        else match
          __sem_target191
        with
          AndPat_PatAnd r249
        then
          AndPat_PatAnd
            { r249 with info = info8 }
        else match
          __sem_target191
        with
          OrPat_PatOr r250
        then
          OrPat_PatOr
            { r250 with info = info8 }
        else match
          __sem_target191
        with
          NotPat_PatNot r251
        in
        NotPat_PatNot
            { r251 with info = info8 }
  let vMExprAst_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat =
    lam ty39: Ast_Type.
      lam __sem_target192.
        match
          __sem_target192
        with
          NamedPat_PatNamed r252
        then
          NamedPat_PatNamed
            { r252 with ty = ty39 }
        else match
          __sem_target192
        with
          SeqTotPat_PatSeqTot r253
        then
          SeqTotPat_PatSeqTot
            { r253 with ty = ty39 }
        else match
          __sem_target192
        with
          SeqEdgePat_PatSeqEdge r254
        then
          SeqEdgePat_PatSeqEdge
            { r254 with ty = ty39 }
        else match
          __sem_target192
        with
          RecordPat_PatRecord r255
        then
          RecordPat_PatRecord
            { r255 with ty = ty39 }
        else match
          __sem_target192
        with
          DataPat_PatCon r256
        then
          DataPat_PatCon
            { r256 with ty = ty39 }
        else match
          __sem_target192
        with
          IntPat_PatInt r257
        then
          IntPat_PatInt
            { r257 with ty = ty39 }
        else match
          __sem_target192
        with
          CharPat_PatChar r258
        then
          CharPat_PatChar
            { r258 with ty = ty39 }
        else match
          __sem_target192
        with
          BoolPat_PatBool r259
        then
          BoolPat_PatBool
            { r259 with ty = ty39 }
        else match
          __sem_target192
        with
          AndPat_PatAnd r260
        then
          AndPat_PatAnd
            { r260 with ty = ty39 }
        else match
          __sem_target192
        with
          OrPat_PatOr r261
        then
          OrPat_PatOr
            { r261 with ty = ty39 }
        else match
          __sem_target192
        with
          NotPat_PatNot r262
        in
        NotPat_PatNot
            { r262 with ty = ty39 }
  let vMExprAst_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f95.
      lam __sem_target193.
        match
          __sem_target193
        with
          p137
        in
        let res29 =
            vMExprAst_smapAccumL_Pat_Pat
              (lam #var"158".
                 lam a205.
                   ({}, f95 a205))
              {}
              p137
          in
          res29.1
  let vMExprAst_countPatNodes =
    lam count28.
      lam __sem_target194.
        match
          __sem_target194
        with
          t658
        in
        let count29 = addi count28 1 in
          let count30 = vMExprAst_sfold_Pat_Pat vMExprAst_countPatNodes count29 t658
          in
          let count31 =
            vMExprAst_sfold_Pat_Expr vMExprAst_countExprNodes count30 t658
          in
          let count32 =
            vMExprAst_sfold_Pat_Type vMExprAst_countTypeNodes count31 t658
          in
          count32
  let vMExprAst_sfold_Pat_Pat: all acc306. (acc306 -> Ast_Pat -> acc306) -> acc306 -> Ast_Pat -> acc306 =
    lam f96.
      lam acc307.
        lam __sem_target195.
          match
            __sem_target195
          with
            p138
          in
          let res30 =
              vMExprAst_smapAccumL_Pat_Pat
                (lam acc308.
                   lam a206.
                     (f96 acc308 a206, a206))
                acc307
                p138
            in
            res30.0
  let vMExprAst_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f97.
      lam __sem_target196.
        match
          __sem_target196
        with
          p139
        in
        match
            vMExprAst_smapAccumL_Expr_Pat
              (lam #var"159".
                 lam a207.
                   ({}, f97 a207))
              {}
              p139
          with
            (_, p140)
          in
          p140
  let vMExprAst_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f98.
      lam __sem_target197.
        match
          __sem_target197
        with
          p141
        in
        match
            vMExprAst_smapAccumL_Pat_Expr
              (lam #var"160".
                 lam a208.
                   ({}, f98 a208))
              {}
              p141
          with
            (_, p142)
          in
          p142
  let vMExprAst_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f99.
      lam __sem_target198.
        match
          __sem_target198
        with
          p143
        in
        match
            vMExprAst_smapAccumL_Pat_Type
              (lam #var"161".
                 lam a209.
                   ({}, f99 a209))
              {}
              p143
          with
            (_, p144)
          in
          p144
  let vMExprAst_countExprNodes =
    lam count33.
      lam __sem_target199.
        match
          __sem_target199
        with
          t659
        in
        let count34 = addi count33 1 in
          let count35 =
            vMExprAst_sfold_Expr_Expr vMExprAst_countExprNodes count34 t659
          in
          let count36 =
            vMExprAst_sfold_Expr_Type vMExprAst_countTypeNodes count35 t659
          in
          let count37 =
            vMExprAst_sfold_Expr_TypeLabel vMExprAst_countTypeNodes count36 t659
          in
          let count38 =
            vMExprAst_sfold_Expr_Pat vMExprAst_countPatNodes count37 t659
          in
          count38
  let vMExprAst_countTypeNodes =
    lam count39.
      lam __sem_target200.
        match
          __sem_target200
        with
          t660
        in
        let count40 = addi count39 1 in
          let count41 =
            vMExprAst_sfold_Type_Type vMExprAst_countTypeNodes count40 t660
          in
          count41
  let vMExprAst_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f100.
      lam __sem_target201.
        match
          __sem_target201
        with
          ty40
        in
        let res31 =
            vMExprAst_rappAccumL_Type_Type
              (lam #var"162".
                 lam t661.
                   ({}, f100 t661))
              {}
              ty40
          in
          res31.1
  let vMExprAst_sfold_Expr_Pat: all acc309. (acc309 -> Ast_Pat -> acc309) -> acc309 -> Ast_Expr -> acc309 =
    lam f101.
      lam acc310.
        lam __sem_target202.
          match
            __sem_target202
          with
            p145
          in
          match
              vMExprAst_smapAccumL_Expr_Pat
                (lam acc311.
                   lam a210.
                     (f101 acc311 a210, a210))
                acc310
                p145
            with
              (acc312, _)
            in
            acc312
  let vMExprAst_sfold_Pat_Expr: all acc313. (acc313 -> Ast_Expr -> acc313) -> acc313 -> Ast_Pat -> acc313 =
    lam f102.
      lam acc314.
        lam __sem_target203.
          match
            __sem_target203
          with
            p146
          in
          match
              vMExprAst_smapAccumL_Pat_Expr
                (lam acc315.
                   lam a211.
                     (f102 acc315 a211, a211))
                acc314
                p146
            with
              (acc316, _)
            in
            acc316
  let vMExprAst_sfold_Pat_Type: all acc317. (acc317 -> Ast_Type -> acc317) -> acc317 -> Ast_Pat -> acc317 =
    lam f103.
      lam acc318.
        lam __sem_target204.
          match
            __sem_target204
          with
            p147
          in
          match
              vMExprAst_smapAccumL_Pat_Type
                (lam acc319.
                   lam a212.
                     (f103 acc319 a212, a212))
                acc318
                p147
            with
              (acc320, _)
            in
            acc320
  let vMExprAst_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f104.
      lam __sem_target205.
        match
          __sem_target205
        with
          p148
        in
        let res32 =
            vMExprAst_smapAccumL_Expr_Expr
              (lam #var"163".
                 lam a213.
                   ({}, f104 a213))
              {}
              p148
          in
          res32.1
  let vMExprAst_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f105.
      lam __sem_target206.
        match
          __sem_target206
        with
          p149
        in
        let res33 =
            vMExprAst_smapAccumL_Expr_Type
              (lam #var"164".
                 lam a214.
                   ({}, f105 a214))
              {}
              p149
          in
          res33.1
  let vMExprAst_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f106: Ast_Type -> Ast_Type.
      lam __sem_target207.
        match
          __sem_target207
        with
          s83
        in
        match
            vMExprAst_smapAccumL_Kind_Type
              (lam #var"165".
                 lam x81.
                   ({}, f106 x81))
              {}
              s83
          with
            (_, s84)
          in
          s84
  let vMExprAst_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f107.
      lam __sem_target208.
        match
          __sem_target208
        with
          p150
        in
        let res34 =
            vMExprAst_smapAccumL_Type_Type
              (lam #var"166".
                 lam a215.
                   ({}, f107 a215))
              {}
              p150
          in
          res34.1
  let vMExprAst_sremoveUnknown =
    lam __sem_target209.
      match
        __sem_target209
      with
        UnknownTypeAst_TyUnknown _
      then
        None
          {}
      else match
        __sem_target209
      with
        ty41
      in
      Some
          ty41
  let vMExprAst_stripTyAllBase =
    lam vars2: [(Name, Ast_Kind)].
      lam __sem_target210.
        match
          __sem_target210
        with
          AllTypeAst_TyAll t662
        then
          vMExprAst_stripTyAllBase (snoc vars2 (t662.ident, t662.kind)) t662.ty
        else match
          __sem_target210
        with
          ty42
        in
        vMExprAst_rappAccumL_Type_Type vMExprAst_stripTyAllBase vars2 ty42
  let vMExprAst_sfold_Expr_Expr: all acc321. (acc321 -> Ast_Expr -> acc321) -> acc321 -> Ast_Expr -> acc321 =
    lam f108.
      lam acc322.
        lam __sem_target211.
          match
            __sem_target211
          with
            p151
          in
          let res35 =
              vMExprAst_smapAccumL_Expr_Expr
                (lam acc323.
                   lam a216.
                     (f108 acc323 a216, a216))
                acc322
                p151
            in
            res35.0
  let vMExprAst_sfold_Expr_Type: all acc324. (acc324 -> Ast_Type -> acc324) -> acc324 -> Ast_Expr -> acc324 =
    lam f109.
      lam acc325.
        lam __sem_target212.
          match
            __sem_target212
          with
            p152
          in
          let res36 =
              vMExprAst_smapAccumL_Expr_Type
                (lam acc326.
                   lam a217.
                     (f109 acc326 a217, a217))
                acc325
                p152
            in
            res36.0
  let vMExprAst_sfold_Kind_Type: all acc327. (acc327 -> Ast_Type -> acc327) -> acc327 -> Ast_Kind -> acc327 =
    lam f110: acc327 -> Ast_Type -> acc327.
      lam acc328: acc327.
        lam __sem_target213.
          match
            __sem_target213
          with
            s85
          in
          match
              vMExprAst_smapAccumL_Kind_Type
                (lam a218.
                   lam x82.
                     (f110 a218 x82, x82))
                acc328
                s85
            with
              (a219, _)
            in
            a219
  let vMExprAst_sfold_Type_Type: all acc329. (acc329 -> Ast_Type -> acc329) -> acc329 -> Ast_Type -> acc329 =
    lam f111.
      lam acc330.
        lam __sem_target214.
          match
            __sem_target214
          with
            p153
          in
          let res37 =
              vMExprAst_smapAccumL_Type_Type
                (lam acc331.
                   lam a220.
                     (f111 acc331 a220, a220))
                acc330
                p153
            in
            res37.0
  let vMExprAst_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f112.
      lam __sem_target215.
        match
          __sem_target215
        with
          expr18
        in
        let expr19 = f112 expr18 in
          vMExprAst_smap_Expr_Expr (vMExprAst_mapPre_Expr_Expr f112) expr19
  let vMExprAst_foldPre_Expr_Expr: all acc332. (acc332 -> Ast_Expr -> acc332) -> acc332 -> Ast_Expr -> acc332 =
    lam f113.
      lam acc333.
        lam __sem_target216.
          match
            __sem_target216
          with
            expr20
          in
          let acc334 = f113 acc333 expr20 in
            vMExprAst_sfold_Expr_Expr (vMExprAst_foldPre_Expr_Expr f113) acc334 expr20
  let vMExprAst_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f114.
      lam __sem_target217.
        match
          __sem_target217
        with
          expr21
        in
        f114
            (vMExprAst_smap_Expr_Expr (vMExprAst_mapPost_Expr_Expr f114) expr21)
  let vMExprAst_foldPost_Expr_Expr: all acc335. (acc335 -> Ast_Expr -> acc335) -> acc335 -> Ast_Expr -> acc335 =
    lam f115.
      lam acc336.
        lam __sem_target218.
          match
            __sem_target218
          with
            expr22
          in
          f115
              (vMExprAst_sfold_Expr_Expr (vMExprAst_foldPost_Expr_Expr f115) acc336 expr22)
              expr22
  let vMExprAst_smapAccumL_Pat_Pat: all acc337. (acc337 -> Ast_Pat -> (acc337, Ast_Pat)) -> acc337 -> Ast_Pat -> (acc337, Ast_Pat) =
    lam f116.
      lam acc338.
        lam __sem_target219.
          match
            __sem_target219
          with
            SeqTotPat_PatSeqTot r263
          then
            match
              mapAccumL f116 acc338 r263.pats
            with
              (acc339, pats2)
            in
            (acc339, SeqTotPat_PatSeqTot
                { r263 with pats = pats2 })
          else match
            __sem_target219
          with
            SeqEdgePat_PatSeqEdge p154
          then
            match
              mapAccumL f116 acc338 p154.prefix
            with
              (acc340, prefix2)
            in
            match
                mapAccumL f116 acc340 p154.postfix
              with
                (acc341, postfix2)
              in
              (acc341, SeqEdgePat_PatSeqEdge
                  { p154 with prefix = prefix2, postfix = postfix2 })
          else match
            __sem_target219
          with
            RecordPat_PatRecord p155
          then
            match
              mapMapAccum
                (lam acc342.
                   lam #var"167".
                     lam p156.
                       f116 acc342 p156)
                acc338
                p155.bindings
            with
              (acc343, bindings10)
            in
            (acc343, RecordPat_PatRecord
                { p155 with bindings = bindings10 })
          else match
            __sem_target219
          with
            DataPat_PatCon c15
          then
            match
              f116 acc338 c15.subpat
            with
              (acc344, subpat4)
            in
            (acc344, DataPat_PatCon
                { c15 with subpat = subpat4 })
          else match
            __sem_target219
          with
            AndPat_PatAnd p157
          then
            match
              f116 acc338 p157.lpat
            with
              (acc345, lpat4)
            in
            match
                f116 acc345 p157.rpat
              with
                (acc346, rpat4)
              in
              (acc346, AndPat_PatAnd
                  { p157 with lpat = lpat4, rpat = rpat4 })
          else match
            __sem_target219
          with
            OrPat_PatOr p158
          then
            match
              f116 acc338 p158.lpat
            with
              (acc347, lpat5)
            in
            match
                f116 acc347 p158.rpat
              with
                (acc348, rpat5)
              in
              (acc348, OrPat_PatOr
                  { p158 with lpat = lpat5, rpat = rpat5 })
          else match
            __sem_target219
          with
            NotPat_PatNot p159
          then
            match
              f116 acc338 p159.subpat
            with
              (acc349, subpat5)
            in
            (acc349, NotPat_PatNot
                { p159 with subpat = subpat5 })
          else match
            __sem_target219
          with
            p160
          in
          (acc338, p160)
  let vMExprAst_smapAccumL_Expr_Pat: all acc350. (acc350 -> Ast_Pat -> (acc350, Ast_Pat)) -> acc350 -> Ast_Expr -> (acc350, Ast_Expr) =
    lam f117.
      lam acc351.
        lam __sem_target220.
          match
            __sem_target220
          with
            MatchAst_TmMatch t663
          then
            match
              f117 acc351 t663.pat
            with
              (acc352, pat2)
            in
            (acc352, MatchAst_TmMatch
                { t663 with pat = pat2 })
          else match
            __sem_target220
          with
            p161
          in
          (acc351, p161)
  let vMExprAst_smapAccumL_Pat_Expr: all acc353. (acc353 -> Ast_Expr -> (acc353, Ast_Expr)) -> acc353 -> Ast_Pat -> (acc353, Ast_Pat) =
    lam f118.
      lam acc354.
        lam __sem_target221.
          match
            __sem_target221
          with
            p162
          in
          (acc354, p162)
  let vMExprAst_smapAccumL_Pat_Type: all acc355. (acc355 -> Ast_Type -> (acc355, Ast_Type)) -> acc355 -> Ast_Pat -> (acc355, Ast_Pat) =
    lam f119.
      lam acc356.
        lam __sem_target222.
          match
            __sem_target222
          with
            p163
          in
          (acc356, p163)
  let vMExprAst_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f120.
      lam __sem_target223.
        match
          __sem_target223
        with
          p164
        in
        let res38 =
            vMExprAst_smapAccumL_Expr_TypeLabel
              (lam #var"168".
                 lam a221.
                   ({}, f120 a221))
              {}
              p164
          in
          res38.1
  let vMExprAst_rappAccumL_Type_Type: all acc357. (acc357 -> Ast_Type -> (acc357, Ast_Type)) -> acc357 -> Ast_Type -> (acc357, Ast_Type) =
    lam f121.
      lam acc358.
        lam __sem_target224.
          match
            __sem_target224
          with
            AliasTypeAst_TyAlias t664
          then
            f121 acc358 t664.content
          else match
            __sem_target224
          with
            ty43
          in
          (acc358, ty43)
  let vMExprAst_sfold_Expr_TypeLabel: all acc359. (acc359 -> Ast_Type -> acc359) -> acc359 -> Ast_Expr -> acc359 =
    lam f122.
      lam acc360.
        lam __sem_target225.
          match
            __sem_target225
          with
            p165
          in
          let res39 =
              vMExprAst_smapAccumL_Expr_TypeLabel
                (lam acc361.
                   lam a222.
                     (f122 acc361 a222, a222))
                acc360
                p165
            in
            res39.0
  let vMExprAst_smapAccumL_Expr_Expr: all acc362. (acc362 -> Ast_Expr -> (acc362, Ast_Expr)) -> acc362 -> Ast_Expr -> (acc362, Ast_Expr) =
    lam f123.
      lam acc363.
        lam __sem_target226.
          match
            __sem_target226
          with
            AppAst_TmApp t665
          then
            match
              f123 acc363 t665.lhs
            with
              (acc364, lhs8)
            in
            match
                f123 acc364 t665.rhs
              with
                (acc365, rhs8)
              in
              (acc365, AppAst_TmApp
                  { t665 with lhs = lhs8, rhs = rhs8 })
          else match
            __sem_target226
          with
            LamAst_TmLam t666
          then
            match
              f123 acc363 t666.body
            with
              (acc366, body8)
            in
            (acc366, LamAst_TmLam
                { t666 with body = body8 })
          else match
            __sem_target226
          with
            LetAst_TmLet t667
          then
            match
              f123 acc363 t667.body
            with
              (acc367, body9)
            in
            match
                f123 acc367 t667.inexpr
              with
                (acc368, inexpr10)
              in
              (acc368, LetAst_TmLet
                  { t667 with body = body9, inexpr = inexpr10 })
          else match
            __sem_target226
          with
            RecLetsAst_TmRecLets t668
          then
            let bindingFunc6 =
              lam acc371.
                lam b43: RecLetsAst_RecLetBinding.
                  match
                    f123 acc371 b43.body
                  with
                    (acc372, body10)
                  in
                  (acc372, { b43 with body = body10 })
            in
            match
              mapAccumL bindingFunc6 acc363 t668.bindings
            with
              (acc369, bindings11)
            in
            match
                f123 acc369 t668.inexpr
              with
                (acc370, inexpr11)
              in
              (acc370, RecLetsAst_TmRecLets
                  { t668 with bindings = bindings11, inexpr = inexpr11 })
          else match
            __sem_target226
          with
            SeqAst_TmSeq t669
          then
            match
              mapAccumL f123 acc363 t669.tms
            with
              (acc373, tms2)
            in
            (acc373, SeqAst_TmSeq
                { t669 with tms = tms2 })
          else match
            __sem_target226
          with
            RecordAst_TmRecord t670
          then
            match
              mapMapAccum
                (lam acc374.
                   lam #var"169".
                     lam e24.
                       f123 acc374 e24)
                acc363
                t670.bindings
            with
              (acc375, bindings12)
            in
            (acc375, RecordAst_TmRecord
                { t670 with bindings = bindings12 })
          else match
            __sem_target226
          with
            RecordAst_TmRecordUpdate t671
          then
            match
              f123 acc363 t671.rec
            with
              (acc376, rec12)
            in
            match
                f123 acc376 t671.value
              with
                (acc377, value12)
              in
              (acc377, RecordAst_TmRecordUpdate
                  { t671 with rec = rec12, value = value12 })
          else match
            __sem_target226
          with
            TypeAst_TmType t672
          then
            match
              f123 acc363 t672.inexpr
            with
              (acc378, inexpr12)
            in
            (acc378, TypeAst_TmType
                { t672 with inexpr = inexpr12 })
          else match
            __sem_target226
          with
            DataAst_TmConDef t673
          then
            match
              f123 acc363 t673.inexpr
            with
              (acc379, inexpr13)
            in
            (acc379, DataAst_TmConDef
                { t673 with inexpr = inexpr13 })
          else match
            __sem_target226
          with
            DataAst_TmConApp t674
          then
            match
              f123 acc363 t674.body
            with
              (acc380, body11)
            in
            (acc380, DataAst_TmConApp
                { t674 with body = body11 })
          else match
            __sem_target226
          with
            MatchAst_TmMatch t675
          then
            match
              f123 acc363 t675.target
            with
              (acc381, target2)
            in
            match
                f123 acc381 t675.thn
              with
                (acc382, thn2)
              in
              match
                  f123 acc382 t675.els
                with
                  (acc383, els2)
                in
                (acc383, MatchAst_TmMatch
                    { t675 with target = target2, thn = thn2, els = els2 })
          else match
            __sem_target226
          with
            UtestAst_TmUtest t676
          then
            match
              f123 acc363 t676.test
            with
              (acc384, test2)
            in
            match
                f123 acc384 t676.expected
              with
                (acc385, expected2)
              in
              match
                  f123 acc385 t676.next
                with
                  (acc386, next2)
                in
                match
                    optionMapAccum f123 acc386 t676.tusing
                  with
                    (acc387, tusing2)
                  in
                  match
                      optionMapAccum f123 acc387 t676.tonfail
                    with
                      (acc388, tonfail2)
                    in
                    (acc388, UtestAst_TmUtest
                        { t676
                          with
                          test = test2,
                            expected = expected2,
                            next = next2,
                            tusing = tusing2,
                            tonfail = tonfail2 })
          else match
            __sem_target226
          with
            ExtAst_TmExt t677
          then
            match
              f123 acc363 t677.inexpr
            with
              (acc389, inexpr14)
            in
            (acc389, ExtAst_TmExt
                { t677 with inexpr = inexpr14 })
          else match
            __sem_target226
          with
            p166
          in
          (acc363, p166)
  let vMExprAst_smapAccumL_Expr_Type: all acc390. (acc390 -> Ast_Type -> (acc390, Ast_Type)) -> acc390 -> Ast_Expr -> (acc390, Ast_Expr) =
    lam f124.
      lam acc391.
        lam __sem_target227.
          match
            __sem_target227
          with
            LamAst_TmLam t678
          then
            match
              f124 acc391 t678.tyAnnot
            with
              (acc392, tyAnnot6)
            in
            (acc392, LamAst_TmLam
                { t678 with tyAnnot = tyAnnot6 })
          else match
            __sem_target227
          with
            LetAst_TmLet t679
          then
            match
              f124 acc391 t679.tyAnnot
            with
              (acc393, tyAnnot7)
            in
            (acc393, LetAst_TmLet
                { t679 with tyAnnot = tyAnnot7 })
          else match
            __sem_target227
          with
            RecLetsAst_TmRecLets t680
          then
            let bindingFunc7 =
              lam acc395.
                lam b44: RecLetsAst_RecLetBinding.
                  match
                    f124 acc395 b44.tyAnnot
                  with
                    (acc396, tyAnnot8)
                  in
                  (acc396, { b44 with tyAnnot = tyAnnot8 })
            in
            match
              mapAccumL bindingFunc7 acc391 t680.bindings
            with
              (acc394, bindings13)
            in
            (acc394, RecLetsAst_TmRecLets
                { t680 with bindings = bindings13 })
          else match
            __sem_target227
          with
            TypeAst_TmType t681
          then
            match
              f124 acc391 t681.tyIdent
            with
              (acc397, tyIdent6)
            in
            (acc397, TypeAst_TmType
                { t681 with tyIdent = tyIdent6 })
          else match
            __sem_target227
          with
            DataAst_TmConDef t682
          then
            match
              f124 acc391 t682.tyIdent
            with
              (acc398, tyIdent7)
            in
            (acc398, DataAst_TmConDef
                { t682 with tyIdent = tyIdent7 })
          else match
            __sem_target227
          with
            ExtAst_TmExt t683
          then
            match
              f124 acc391 t683.tyIdent
            with
              (acc399, tyIdent8)
            in
            (acc399, ExtAst_TmExt
                { t683 with tyIdent = tyIdent8 })
          else match
            __sem_target227
          with
            p167
          in
          (acc391, p167)
  let vMExprAst_smapAccumL_Kind_Type: all acc400. (acc400 -> Ast_Type -> (acc400, Ast_Type)) -> acc400 -> Ast_Kind -> (acc400, Ast_Kind) =
    lam f125.
      lam acc401.
        lam __sem_target228.
          match
            __sem_target228
          with
            RecordKindAst_Record r264
          then
            match
              mapMapAccum
                (lam acc402.
                   lam #var"170".
                     lam e25.
                       f125 acc402 e25)
                acc401
                r264.fields
            with
              (acc403, flds2)
            in
            (acc403, RecordKindAst_Record
                { r264 with fields = flds2 })
          else match
            __sem_target228
          with
            s86
          in
          (acc401, s86)
  let vMExprAst_smapAccumL_Type_Type: all acc404. (acc404 -> Ast_Type -> (acc404, Ast_Type)) -> acc404 -> Ast_Type -> (acc404, Ast_Type) =
    lam f126.
      lam acc405.
        lam __sem_target229.
          match
            __sem_target229
          with
            FunTypeAst_TyArrow t684
          then
            match
              f126 acc405 t684.from
            with
              (acc406, from2)
            in
            match
                f126 acc406 t684.to
              with
                (acc407, to2)
              in
              (acc407, FunTypeAst_TyArrow
                  { t684 with from = from2, to = to2 })
          else match
            __sem_target229
          with
            SeqTypeAst_TySeq t685
          then
            match
              f126 acc405 t685.ty
            with
              (acc408, ty44)
            in
            (acc408, SeqTypeAst_TySeq
                { t685 with ty = ty44 })
          else match
            __sem_target229
          with
            TensorTypeAst_TyTensor t686
          then
            match
              f126 acc405 t686.ty
            with
              (acc409, ty45)
            in
            (acc409, TensorTypeAst_TyTensor
                { t686 with ty = ty45 })
          else match
            __sem_target229
          with
            RecordTypeAst_TyRecord t687
          then
            match
              mapMapAccum
                (lam acc410.
                   lam #var"171".
                     lam e26.
                       f126 acc410 e26)
                acc405
                t687.fields
            with
              (acc411, fields2)
            in
            (acc411, RecordTypeAst_TyRecord
                { t687 with fields = fields2 })
          else match
            __sem_target229
          with
            VariantTypeAst_TyVariant t688
          then
            match
              mapMapAccum
                (lam acc412.
                   lam #var"172".
                     lam e27.
                       f126 acc412 e27)
                acc405
                t688.constrs
            with
              (acc413, constrs2)
            in
            (acc413, VariantTypeAst_TyVariant
                { t688 with constrs = constrs2 })
          else match
            __sem_target229
          with
            ConTypeAst_TyCon t689
          then
            match
              f126 acc405 t689.data
            with
              (acc414, data3)
            in
            (acc414, ConTypeAst_TyCon
                { t689 with data = data3 })
          else match
            __sem_target229
          with
            AllTypeAst_TyAll t690
          then
            match
              vMExprAst_smapAccumL_Kind_Type f126 acc405 t690.kind
            with
              (acc415, kind2)
            in
            match
                f126 acc415 t690.ty
              with
                (acc416, ty46)
              in
              (acc416, AllTypeAst_TyAll
                  { t690 with kind = kind2, ty = ty46 })
          else match
            __sem_target229
          with
            AppTypeAst_TyApp t691
          then
            match
              f126 acc405 t691.lhs
            with
              (acc417, lhs9)
            in
            match
                f126 acc417 t691.rhs
              with
                (acc418, rhs9)
              in
              (acc418, AppTypeAst_TyApp
                  { t691 with lhs = lhs9, rhs = rhs9 })
          else match
            __sem_target229
          with
            AliasTypeAst_TyAlias t692
          then
            match
              f126 acc405 t692.content
            with
              (acc419, content2)
            in
            match
                f126 acc419 t692.display
              with
                (acc420, display2)
              in
              (acc420, AliasTypeAst_TyAlias
                  { t692 with content = content2, display = display2 })
          else match
            __sem_target229
          with
            p168
          in
          (acc405, p168)
  let vMExprAst_mapAccumLPre_Expr_Expr: all acc421. (acc421 -> Ast_Expr -> (acc421, Ast_Expr)) -> acc421 -> Ast_Expr -> (acc421, Ast_Expr) =
    lam f127.
      lam acc422.
        lam __sem_target230.
          match
            __sem_target230
          with
            expr23
          in
          match
              f127 acc422 expr23
            with
              (acc423, expr24)
            in
            vMExprAst_smapAccumL_Expr_Expr (vMExprAst_mapAccumLPre_Expr_Expr f127) acc423 expr24
  let vMExprAst_mapAccumLPost_Expr_Expr: all acc424. (acc424 -> Ast_Expr -> (acc424, Ast_Expr)) -> acc424 -> Ast_Expr -> (acc424, Ast_Expr) =
    lam f128.
      lam acc425.
        lam __sem_target231.
          match
            __sem_target231
          with
            expr25
          in
          match
              vMExprAst_smapAccumL_Expr_Expr (vMExprAst_mapAccumLPost_Expr_Expr f128) acc425 expr25
            with
              (acc426, expr26)
            in
            f128 acc426 expr26
  let vMExprAst_smapAccumL_Expr_TypeLabel: all acc427. (acc427 -> Ast_Type -> (acc427, Ast_Type)) -> acc427 -> Ast_Expr -> (acc427, Ast_Expr) =
    lam f129.
      lam acc428.
        lam __sem_target232.
          match
            __sem_target232
          with
            LamAst_TmLam t693
          then
            match
              f129 acc428 t693.tyParam
            with
              (acc429, tyParam2)
            in
            match
                f129 acc429 t693.ty
              with
                (acc430, ty47)
              in
              (acc430, LamAst_TmLam
                  { t693 with tyParam = tyParam2, ty = ty47 })
          else match
            __sem_target232
          with
            LetAst_TmLet t694
          then
            match
              f129 acc428 t694.tyBody
            with
              (acc431, tyBody4)
            in
            match
                f129 acc431 t694.ty
              with
                (acc432, ty48)
              in
              (acc432, LetAst_TmLet
                  { t694 with tyBody = tyBody4, ty = ty48 })
          else match
            __sem_target232
          with
            RecLetsAst_TmRecLets t695
          then
            let bindingFunc8 =
              lam acc435.
                lam b45: RecLetsAst_RecLetBinding.
                  match
                    f129 acc435 b45.tyBody
                  with
                    (acc436, tyBody5)
                  in
                  (acc436, { b45 with tyBody = tyBody5 })
            in
            match
              mapAccumL bindingFunc8 acc428 t695.bindings
            with
              (acc433, bindings14)
            in
            match
                f129 acc433 t695.ty
              with
                (acc434, ty49)
              in
              (acc434, RecLetsAst_TmRecLets
                  { t695 with bindings = bindings14, ty = ty49 })
          else match
            __sem_target232
          with
            p169
          in
          match
              f129 acc428 (vMExprAst_tyTm p169)
            with
              (acc437, ty50)
            in
            (acc437, vMExprAst_withType ty50 p169)
in
external externalGammaLogPdf : Float -> Float -> Float -> Float
in
external externalGammaSample! : Float -> Float -> Float
in
let gammaPdf =
  lam shape9: Float.
    lam scale9: Float.
      lam x79: Float.
        exp1 (externalGammaLogPdf x79 shape9 scale9)
in
let gammaLogPdf =
  lam shape8: Float.
    lam scale8: Float.
      lam x78: Float.
        externalGammaLogPdf x78 shape8 scale8
in
let gammaSample =
  lam shape7: Float.
    lam scale7: Float.
      externalGammaSample shape7 scale7
in
external externalBinomialLogPmf : Int -> Float -> Int -> Float
in
external externalBinomialSample! : Float -> Int -> Int
in
let binomialPmf =
  lam p136: Float.
    lam n40: Int.
      lam x77: Int.
        exp1 (externalBinomialLogPmf x77 p136 n40)
in
let binomialLogPmf =
  lam p135: Float.
    lam n39: Int.
      lam x76: Int.
        externalBinomialLogPmf x76 p135 n39
in
let binomialSample =
  lam p134: Float.
    lam n38: Int.
      externalBinomialSample p134 n38
in
let bernoulliPmf =
  lam p133: Float.
    lam x75: Bool.
      match
        x75
      with
        true
      then
        p133
      else
        subf 1. p133
in
let bernoulliLogPmf =
  lam p132: Float.
    lam x74: Bool.
      log1 (bernoulliPmf p132 x74)
in
let bernoulliSample =
  lam p131: Float.
    match
      eqi 1 (externalBinomialSample p131 1)
    with
      true
    then
      true
    else
      false
in
external externalBetaLogPdf : Float -> Float -> Float -> Float
in
external externalBetaSample! : Float -> Float -> Float
in
let betaPdf =
  lam a204: Float.
    lam b42: Float.
      lam x73: Float.
        exp1 (externalBetaLogPdf x73 a204 b42)
in
let betaLogPdf =
  lam a203: Float.
    lam b41: Float.
      lam x72: Float.
        externalBetaLogPdf x72 a203 b41
in
let betaSample =
  lam a202: Float.
    lam b40: Float.
      externalBetaSample a202 b40
in
external externalGaussianLogPdf : Float -> Float -> Float -> Float
in
external externalGaussianSample! : Float -> Float -> Float
in
let gaussianPdf =
  lam mu6: Float.
    lam sigma4: Float.
      lam x71: Float.
        exp1 (externalGaussianLogPdf x71 mu6 sigma4)
in
let gaussianLogPdf =
  lam mu5: Float.
    lam sigma3: Float.
      lam x70: Float.
        externalGaussianLogPdf x70 mu5 sigma3
in
let gaussianSample =
  lam mu4: Float.
    lam sigma2: Float.
      externalGaussianSample mu4 sigma2
in
external externalMultinomialLogPmf : [Int] -> [Float] -> Float
in
external externalMultinomialSample! : Int -> [Float] -> [Int]
in
external externalCategoricalSample! : [Float] -> Int
in
let multinomialLogPmf: [Float] -> [Int] -> Float =
  lam ps5.
    lam ns6.
      externalMultinomialLogPmf ns6 ps5
in
let multinomialPmf: [Float] -> [Int] -> Float =
  lam ps4.
    lam ns5.
      exp1 (externalMultinomialLogPmf ns5 ps4)
in
let categoricalLogPmf: [Float] -> Int -> Float = lam ps3.
    lam x69.
      log1 (get ps3 x69)
in
let categoricalPmf: [Float] -> Int -> Float = lam ps2.
    lam x68.
      get ps2 x68
in
let multinomialSample: [Float] -> Int -> [Int] =
  lam ps1.
    lam n37.
      externalMultinomialSample n37 ps1
in
let categoricalSample: [Float] -> Int = lam ps.
    externalCategoricalSample ps
in
external externalDirichletLogPdf : [Float] -> [Float] -> Float
in
external externalDirichletSample : [Float] -> [Float]
in
let dirichletLogPdf: [Float] -> [Float] -> Float =
  lam alpha2.
    lam xs6.
      match
        eqfApprox 1e-15 (foldl addf 0. xs6) 1.
      with
        true
      then
        externalDirichletLogPdf xs6 alpha2
      else
        negf inf
in
let dirichletPdf: [Float] -> [Float] -> Float =
  lam alpha1.
    lam xs5.
      exp1 (externalDirichletLogPdf xs5 alpha1)
in
let dirichletSample: [Float] -> [Float] = lam alpha.
    externalDirichletSample alpha
in
external externalUniformContinuousSample! : Float -> Float -> Float
in
let uniformContinuousSample =
  lam a201.
    lam b39.
      externalUniformContinuousSample a201 b39
in
let uniformContinuousLogPdf =
  lam a200.
    lam b38.
      lam x67.
        match
          geqf x67 a200
        with
          true
        then
          match
            leqf x67 b38
          with
            true
          then
            subf (log1 1.) (log1 (subf b38 a200))
          else
            0.
        else
          0.
in
let uniformContinuousPdf =
  lam a199.
    lam b37.
      lam x66.
        match
          geqf x66 a199
        with
          true
        then
          match
            leqf x66 b37
          with
            true
          then
            divf 1. (subf b37 a199)
          else
            0.
        else
          0.
in
let uniformSample: () -> Float = lam #var"157".
    uniformContinuousSample 0. 1.
in
external externalUniformDiscreteSample! : Int -> Int -> Int
in
let uniformDiscreteSample =
  lam a198: Int.
    lam b36: Int.
      externalUniformDiscreteSample a198 b36
in
let uniformDiscreteLogPdf: Int -> Int -> Int -> Float =
  lam a197.
    lam b35.
      lam x65.
        match
          geqi x65 a197
        with
          true
        then
          match
            leqi x65 b35
          with
            true
          then
            subf (log1 1.) (log1 (int2float (addi 1 (subi b35 a197))))
          else
            0.
        else
          0.
in
let uniformDiscretePdf: Int -> Int -> Int -> Float =
  lam a196.
    lam b34.
      lam x64.
        match
          geqi x64 a196
        with
          true
        then
          match
            leqi x64 b34
          with
            true
          then
            divf 1. (int2float (addi 1 (subi b34 a196)))
          else
            0.
        else
          0.
in
let poissonLogPmf =
  lam lambda5: Float.
    lam x63: Int.
      subf
        (subf (mulf (int2float x63) (log1 lambda5)) lambda5)
        (logFactorial x63)
in
let poissonPmf =
  lam lambda4: Float.
    lam x62: Int.
      exp1 (poissonLogPmf lambda4 x62)
in
let poissonSample =
  lam lambda3: Float.
    let enlam = exp1 (negf lambda3) in
    let x60 = 0 in
    let prod = 1. in
    recursive
      let rec11 =
        lam x61.
          lam prod1.
            let u1 = uniformSample {} in
            let prod2 = mulf prod1 u1 in
            match
              gtf prod2 enlam
            with
              true
            then
              rec11 (addi x61 1) prod2
            else
              x61
    in
    rec11 x60 prod
in
external externalExponentialSample! : Float -> Float
in
let exponentialSample = lam lambda2: Float.
    externalExponentialSample lambda2
in
let exponentialLogPdf: Float -> Float -> Float =
  lam lambda1.
    lam x59.
      subf (log1 lambda1) (mulf lambda1 x59)
in
let exponentialPdf: Float -> Float -> Float =
  lam lambda.
    lam x58.
      exp1 (exponentialLogPdf lambda x58)
in
let negativeBinomialSample: Int -> Float -> Int =
  lam n36.
    lam p130.
      poissonSample
        (externalGammaSample (int2float n36) (divf (subf 1. p130) p130))
in
let negativeBinomialLogPmf: Int -> Float -> Int -> Float =
  lam n35.
    lam p129.
      lam x57.
        subf
          (addf
             (log1 (int2float n35))
             (externalBinomialLogPmf x57 (subf 1. p129) (addi x57 n35)))
          (log1 (int2float (addi n35 x57)))
in
let negativeBinomialPmf: Int -> Float -> Int -> Float =
  lam n34.
    lam p128.
      lam x56.
        exp1 (negativeBinomialLogPmf n34 p128 x56)
in
let geometricSample: Float -> Int = lam p127.
    negativeBinomialSample 1 p127
in
let geometricLogPmf: Float -> Int -> Float =
  lam p126.
    lam x55.
      addf (mulf (int2float x55) (log1 (subf 1. p126))) (log1 p126)
in
let geometricPmf: Float -> Int -> Float = lam p125.
    lam x54.
      exp1 (geometricLogPmf p125 x54)
in
external externalLomaxLogPdf : Float -> Float -> Float -> Float
in
external externalLomaxSample! : Float -> Float -> Float
in
let lomaxSample =
  lam shape6: Float.
    lam scale6: Float.
      externalLomaxSample shape6 scale6
in
let lomaxLogPdf: Float -> Float -> Float -> Float =
  lam shape5.
    lam scale5.
      lam x53.
        match
          ltf x53 0.
        with
          true
        then
          negf inf
        else
          let lhs7 = subf (log1 shape5) (log1 scale5) in
          let rhs7 = mulf (log1 (addf (divf x53 scale5) 1.)) (addf shape5 1.)
          in
          subf lhs7 rhs7
in
let lomaxPdf =
  lam shape4: Float.
    lam scale4: Float.
      lam x52: Float.
        exp1 (lomaxLogPdf shape4 scale4 x52)
in
let betabinSample =
  lam n33: Int.
    lam a195: Float.
      lam b33: Float.
        let p124 = betaSample a195 b33 in
        binomialSample p124 n33
in
let betabinLogPmf: Int -> Float -> Float -> Int -> Float =
  lam n32.
    lam a194.
      lam b32.
        lam x51.
          match
            gti x51 n32
          with
            true
          then
            negf inf
          else
            let lbeta1 =
              addf
                (subf
                   (logGamma (addf a194 (int2float x51)))
                   (logGamma (addf (int2float n32) (addf a194 b32))))
                (logGamma (addf b32 (int2float (subi n32 x51))))
            in
            let lbeta2 =
              addf
                (subf (logGamma a194) (logGamma (addf a194 b32)))
                (logGamma b32)
            in
            let lcomb = logCombination n32 x51 in
            addf lcomb (subf lbeta1 lbeta2)
in
let betabinPmf =
  lam n31: Int.
    lam a193: Float.
      lam b31: Float.
        lam x50: Int.
          exp1 (betabinLogPmf n31 a193 b31 x50)
in
external externalSetSeed! : Int -> ()
in
let setSeed: Int -> () =
  lam seed.
    let #var"156" = randSetSeed seed in
    externalSetSeed seed
in
type Eps =
  Int
in
type Dual a15
in
con Dual1: all a16. {e: Eps, x: Dual a16, xp: Dual a16} -> Dual a16 in
con Primal: all a17. a17 -> Dual a17 in
let dualLtE: Eps -> Eps -> Bool = lti in
let dualEqE: Eps -> Eps -> Bool = eqi in
let dualIsDual: all a192. Dual a192 -> Bool =
  lam n30.
    let #var"X30" = n30 in
    match
      #var"X30"
    with
      Primal _
    then
      false
    else match
      #var"X30"
    with
      Dual1 _
    in
    true
in
let dualCreateDual: all a191. (a191 -> Bool) -> Eps -> Dual a191 -> Dual a191 -> Dual a191 =
  lam isZero.
    lam e23.
      lam x49.
        lam xp3.
          match
            xp3
          with
            Primal v57
          then
            match
              isZero v57
            with
              true
            then
              x49
            else
              Dual1
                { e = e23, x = x49, xp = xp3 }
          else
            Dual1
              { e = e23, x = x49, xp = xp3 }
in
let dualEpsilon: all a190. Dual a190 -> Eps =
  lam n29.
    match
      n29
    with
      Dual1 dn2
    then
      dn2.e
    else
      error "Operand not a dual number"
in
let dualPrimal: all a189. Eps -> Dual a189 -> Dual a189 =
  lam e22.
    lam n28.
      let #var"X29" = n28 in
      match
        #var"X29"
      with
        Primal _
      then
        n28
      else match
        #var"X29"
      with
        Dual1 dn1
      in
      match
          dualLtE dn1.e e22
        with
          true
        then
          n28
        else dn1.x
in
recursive
  let dualPrimalRec: all a188. Dual a188 -> a188 =
    lam n26.
      let #var"X28" = n26 in
      match
        #var"X28"
      with
        Primal n27
      then
        n27
      else match
        #var"X28"
      with
        Dual1 {x = x48}
      in
      dualPrimalRec x48
in
let dualUnboxPrimalExn: all a187. Dual a187 -> a187 =
  lam n24.
    let #var"X27" = n24 in
    match
      #var"X27"
    with
      Primal n25
    then
      n25
    else match
      #var"X27"
    with
      _
    in
    error
        "Tried to unbox a dual number assumed to have no pertubation. The source of this error is likely an attempt to differentiate a non-differentiable function."
in
let dualPertubationExn: all a186. a186 -> Eps -> Dual a186 -> Dual a186 =
  lam zero.
    lam e20.
      lam n20.
        let #var"X26" = n20 in
        match
          #var"X26"
        with
          Primal _
        then
          Primal
            zero
        else match
          #var"X26"
        with
          Dual1 dn
        in
        match
            dualLtE dn.e e20
          with
            true
          then
            Primal
              zero
          else dn.xp
in
let e = ref 0 in
let dualGenEpsilon: () -> Eps =
  lam #var"154".
    let #var"155" = modref e (succ (deref e)) in
    deref e
in
let dualEq: all a185. (a185 -> a185 -> Bool) -> Dual a185 -> Dual a185 -> Bool =
  lam eq2.
    recursive
      let recur =
        lam n19.
          lam n23.
            let #var"X25" = (n19, n23) in
            match
              #var"X25"
            with
              (Primal r182, Primal r215)
            then
              eq2 r182 r215
            else match
              #var"X25"
            with
              (Dual1 {e = e19, x = x113, xp = xp1}, Dual1 {e = e21, x = x214, xp = xp2})
            then
              match
                dualEqE e19 e21
              with
                true
              then
                match
                  recur x113 x214
                with
                  true
                then
                  recur xp1 xp2
                else
                  false
              else
                false
            else match
              #var"X25"
            with
              (_, _)
            in
            false
    in
    recur
in
type DualNum =
  Dual Float
in
let dualnumGenEpsilon: () -> Eps = lam #var"153".
    dualGenEpsilon {}
in
let dualnumLtEpsilon: Eps -> Eps -> Bool = lam l24.
    lam r181.
      dualLtE l24 r181
in
let dualnumIsDualNum: DualNum -> Bool = lam x47.
    dualIsDual x47
in
let dualnumEpsilon: DualNum -> Eps = lam x46.
    dualEpsilon x46
in
let dualnumCreatePrimal: Float -> DualNum = lam x45.
    Primal
      x45
in
let dualnumCreateDual: Eps -> DualNum -> DualNum -> DualNum =
  lam e18.
    lam x44.
      lam xp.
        dualCreateDual (eqf 0.) e18 x44 xp
in
let dualnumPrimal: Eps -> DualNum -> DualNum = lam e17.
    lam x43.
      dualPrimal e17 x43
in
let dualnumPrimalRec: DualNum -> Float = lam x42.
    dualPrimalRec x42
in
let dualnumUnboxPrimalExn: DualNum -> Float = lam x41.
    dualUnboxPrimalExn x41
in
let dualnumPertubationExn: Eps -> DualNum -> DualNum = lam e16.
    lam x40.
      dualPertubationExn 0. e16 x40
in
let dualnumEq = lam l23.
    lam r180.
      dualEq l23 r180 in
let _dnum = dualnumCreateDual in
let _ltE = dualLtE in
let identity = lam x39.
    x39 in
let const = lam x38.
    lam #var"152".
      x38 in
let apply = lam f94.
    lam x37.
      f94 x37 in
let compose = lam f93.
    lam g.
      lam x36.
        f93 (g x36)
in
let curry = lam f92.
    lam x35.
      lam y3.
        f92 (x35, y3)
in
let uncurry: all a184. all b30. all c10. (a184 -> b30 -> c10) -> (a184, b30) -> c10 = lam f91.
    lam t588: (a184, b30).
      f91 t588.0 t588.1
in
let flip = lam f90.
    lam x34.
      lam y2.
        f90 y2 x34
in
let printLn =
  lam s82.
    let #var"151" = print (concat s82 "\n") in
    flushStdout {}
in
let printSeq = lam s81.
    print (join s81) in
let printSeqLn =
  lam s80.
    let #var"149" = printSeq s80 in
    let #var"150" = print "\n" in
    flushStdout {}
in
let dprintLn = lam x33.
    let #var"148" = dprint x33 in
    printLn ""
in
recursive
  let fix: all a183. all b29. ((a183 -> b29) -> a183 -> b29) -> a183 -> b29 = lam f89.
      lam e15.
        f89 (fix f89) e15
in
let repeat: (() -> ()) -> Int -> () =
  lam f88.
    lam n17.
      recursive
        let rec10 =
          lam n18.
            match
              leqi n18 0
            with
              true
            then
              {}
            else
              let #var"147" = f88 {} in
              rec10 (subi n18 1)
      in
      rec10 n17
in
let repeati: (Int -> ()) -> Int -> () =
  lam f87.
    lam n16.
      recursive
        let rec9 =
          lam i8.
            match
              geqi i8 n16
            with
              true
            then
              {}
            else
              let #var"146" = f87 i8 in
              rec9 (addi i8 1)
      in
      rec9 0
in
let fixMutual: all a182. all b28. [[a182 -> b28] -> a182 -> b28] -> [a182 -> b28] =
  lam l20.
    let l21 = map (lam li1.
           (li1,)) l20 in
    fix
      (lam self.
         lam l22.
           map
             (lam li: ([a182 -> b28] -> a182 -> b28,).
                lam x32.
                  li.0 (self l22) x32)
             l22)
      l21
in
let _dnum1 = dualnumCreateDual in
let _ltE1 = dualLtE in
let _isDualNum = dualnumIsDualNum in
let _epsilon = dualnumEpsilon in
let _primal = dualnumPrimal in
let _primalRec = dualnumPrimalRec in
let _pertubation = dualnumPertubationExn in
let _genEpsilon = dualGenEpsilon in
let _num0 = Primal
    0. in
let _num1 = Primal
    1. in
let _num2 = Primal
    2. in
let _num3 = Primal
    3. in
let _num4 = Primal
    4. in
let _num6 = Primal
    6. in
let _num8 = Primal
    8. in
let _num10 = Primal
    10. in
let _e0 = _genEpsilon {} in
let _e1 = _genEpsilon {} in
let _e2 = _genEpsilon {} in
let _e3 = _genEpsilon {} in
let _dnum0 = _dnum1 _e0 in
let _dnum11 = _dnum1 _e1 in
let _dnum010 = _dnum0 _num1 _num0 in
let _dnum011 = _dnum0 _num1 _num1 in
let _dnum012 = _dnum0 _num1 _num2 in
let _dnum020 = _dnum0 _num2 _num0 in
let _dnum021 = _dnum0 _num2 _num1 in
let _dnum022 = _dnum0 _num2 _num2 in
let _dnum031 = _dnum0 _num3 _num1 in
let _dnum034 = _dnum0 _num3 _num4 in
let _dnum036 = _dnum0 _num3 _num6 in
let _dnum040 = _dnum0 _num4 _num0 in
let _dnum044 = _dnum0 _num4 _num4 in
let _dnum048 = _dnum0 _num4 _num8 in
let _dnum111 = _dnum11 _num1 _num1 in
let _dnum112 = _dnum11 _num1 _num2 in
let _dnum122 = _dnum11 _num2 _num2 in
let _dnum134 = _dnum11 _num3 _num4 in
type Cmp2 =
  Float -> Float -> Bool
in
let dualnumLiftBoolFun2: Cmp2 -> DualNum -> DualNum -> Bool =
  lam cmp7.
    lam p123.
      lam p220.
        cmp7 (_primalRec p123) (_primalRec p220)
in
let _liftBool = dualnumLiftBoolFun2 in
let epsn = Primal
    1e-15 in
let eqn = _liftBool eqf in
let neqn = _liftBool neqf in
let ltn = _liftBool ltf in
let leqn = _liftBool leqf in
let gtn = _liftBool gtf in
let geqn = _liftBool geqf in
let _eqfApprox = eqfApprox 1e-06 in
recursive
  let addn =
    lam p120.
      lam p218.
        let #var"X24" = (p120, p218) in
        match
          #var"X24"
        with
          (Primal p121, Primal p219)
        then
          Primal
            (addf p121 p219)
        else match
          #var"X24"
        with
          (p122 & Primal _, Dual1 r178) | (Dual1 r178, p122 & Primal _)
        then
          Dual1
            { r178 with x = addn p122 r178.x }
        else match
          #var"X24"
        with
          (Dual1 r179, Dual1 r214)
        in
        match
            _ltE1 r179.e r214.e
          with
            true
          then
            Dual1
              { r214 with x = addn p120 r214.x }
          else match
            _ltE1 r214.e r179.e
          with
            true
          then
            Dual1
              { r179 with x = addn r179.x p218 }
          else
            Dual1
              { r179 with x = addn r179.x r214.x, xp = addn r179.xp r214.xp }
in
recursive
  let muln =
    lam p117.
      lam p216.
        let #var"X23" = (p117, p216) in
        match
          #var"X23"
        with
          (Primal p118, Primal p217)
        then
          Primal
            (mulf p118 p217)
        else match
          #var"X23"
        with
          (p119 & Primal _, Dual1 r176) | (Dual1 r176, p119 & Primal _)
        then
          Dual1
            { r176 with x = muln p119 r176.x, xp = muln p119 r176.xp }
        else match
          #var"X23"
        with
          (Dual1 r177, Dual1 r213)
        in
        match
            _ltE1 r177.e r213.e
          with
            true
          then
            Dual1
              { r213 with x = muln p117 r213.x, xp = muln p117 r213.xp }
          else match
            _ltE1 r213.e r177.e
          with
            true
          then
            Dual1
              { r177 with x = muln r177.x p216, xp = muln p216 r177.xp }
          else
            Dual1
              { r177
                with
                x = muln r177.x r213.x,
                  xp = addn (muln r213.x r177.xp) (muln r177.x r213.xp) }
in
let der: (DualNum -> DualNum) -> DualNum -> DualNum =
  lam f86.
    lam x31.
      let e14 = _genEpsilon {} in
      _pertubation e14 (f86 (_dnum1 e14 x31 (Primal
                 1.)))
in
recursive
  let nder: Int -> (DualNum -> DualNum) -> DualNum -> DualNum =
    lam n15.
      lam f85.
        match
          lti n15 0
        with
          true
        then
          error "Negative derivative order"
        else match
          eqi n15 0
        with
          true
        then
          f85
        else
          nder (subi n15 1) (der f85)
in
let total: ([DualNum] -> [DualNum]) -> [DualNum] -> [DualNum] -> [DualNum] =
  lam f84.
    lam x30.
      lam v56.
        let e13 = _genEpsilon {} in
        map (_pertubation e13) (f84 (zipWith (_dnum1 e13) x30 v56))
in
recursive
  let negn =
    lam p109.
      let #var"X22" = p109 in
      match
        #var"X22"
      with
        Primal p116
      then
        Primal
          (negf p116)
      else match
        #var"X22"
      with
        Dual1 r175
      in
      Dual1
          { r175 with x = negn r175.x, xp = negn r175.xp }
in
recursive
  let subn =
    lam p114.
      lam p214.
        let #var"X21" = (p114, p214) in
        match
          #var"X21"
        with
          (Primal p115, Primal p215)
        then
          Primal
            (subf p115 p215)
        else match
          #var"X21"
        with
          (Primal _, Dual1 r172)
        then
          Dual1
            { r172 with x = subn p114 r172.x, xp = negn r172.xp }
        else match
          #var"X21"
        with
          (Dual1 r173, Primal _)
        then
          Dual1
            { r173 with x = subn r173.x p214 }
        else match
          #var"X21"
        with
          (Dual1 r174, Dual1 r212)
        in
        match
            _ltE1 r174.e r212.e
          with
            true
          then
            Dual1
              { r212 with x = subn p114 r212.x }
          else match
            _ltE1 r212.e r174.e
          with
            true
          then
            Dual1
              { r174 with x = subn r174.x p214, xp = negn r174.xp }
          else
            Dual1
              { r174 with x = subn r174.x r212.x, xp = subn r174.xp r212.xp }
in
let absn =
  lam p108.
    match
      ltn p108 _num0
    with
      true
    then
      negn p108
    else
      p108
in
let eqnEps = lam l19.
    lam r171.
      ltn (absn (subn l19 r171)) epsn
in
recursive
  let divn =
    lam p112.
      lam p212.
        let dfdx11 = lam x213.
            divn (Primal
                 1.) x213
        in
        let dfdx21 =
          lam x112.
            lam x212.
              divn (negn x112) (muln x212 x212)
        in
        let #var"X20" = (p112, p212) in
        match
          #var"X20"
        with
          (Primal p113, Primal p213)
        then
          Primal
            (divf p113 p213)
        else match
          #var"X20"
        with
          (Primal _, Dual1 r168)
        then
          Dual1
            { r168
              with
              x = divn p112 r168.x,
                xp = muln (dfdx21 p112 r168.x) r168.xp }
        else match
          #var"X20"
        with
          (Dual1 r169, Primal _)
        then
          Dual1
            { r169 with x = divn r169.x p212, xp = muln (dfdx11 p212) r169.xp }
        else match
          #var"X20"
        with
          (Dual1 r170, Dual1 r211)
        in
        match
            _ltE1 r170.e r211.e
          with
            true
          then
            Dual1
              { r211
                with
                x = divn p112 r211.x,
                  xp = muln (dfdx21 p112 r211.x) r211.xp }
          else match
            _ltE1 r211.e r170.e
          with
            true
          then
            Dual1
              { r170 with x = divn r170.x p212, xp = muln (dfdx11 p212) r170.xp }
          else
            Dual1
              { r170
                with
                x = divn r170.x r211.x,
                  xp =
                  addn
                    (muln (dfdx11 r211.x) r170.xp)
                    (muln (dfdx21 r170.x r211.x) r211.xp) }
in
let pin = Primal
    pi in
recursive
  let sinn =
    lam p104.
      let #var"X18" = p104 in
      match
        #var"X18"
      with
        Primal p105
      then
        Primal
          (sin1 p105)
      else match
        #var"X18"
      with
        Dual1 r166
      in
      Dual1
          { r166 with x = sinn r166.x, xp = muln (cosn r166.x) r166.xp }
  let cosn =
    lam p106.
      let #var"X19" = p106 in
      match
        #var"X19"
      with
        Primal p107
      then
        Primal
          (cos1 p107)
      else match
        #var"X19"
      with
        Dual1 r167
      in
      Dual1
          { r167 with x = cosn r167.x, xp = negn (muln (sinn r167.x) r167.xp) }
in
recursive
  let expn =
    lam p102.
      let #var"X17" = p102 in
      match
        #var"X17"
      with
        Primal p103
      then
        Primal
          (exp1 p103)
      else match
        #var"X17"
      with
        Dual1 r165
      in
      Dual1
          { r165 with x = expn r165.x, xp = muln (expn r165.x) r165.xp }
in
recursive
  let logn =
    lam p100.
      let #var"X16" = p100 in
      match
        #var"X16"
      with
        Primal p101
      then
        Primal
          (log1 p101)
      else match
        #var"X16"
      with
        Dual1 r164
      in
      Dual1
          { r164 with x = logn r164.x, xp = divn r164.xp r164.x }
in
recursive
  let pown =
    lam p110.
      lam p210.
        let dfdx1 =
          lam x111.
            lam x211.
              muln
                x211
                (pown x111 (subn x211 (Primal
                         1.)))
        in
        let dfdx2 =
          lam x110.
            lam x210.
              match
                eqn x110 (Primal
                     0.)
              with
                true
              then
                match
                  gtn x210 (Primal
                       0.)
                with
                  true
                then
                  Primal
                    0.
                else
                  Primal
                    nan
              else
                muln (pown x110 x210) (logn x110)
        in
        let #var"X15" = (p110, p210) in
        match
          #var"X15"
        with
          (Primal p111, Primal p211)
        then
          Primal
            (pow1 p111 p211)
        else match
          #var"X15"
        with
          (Primal _, Dual1 r161)
        then
          Dual1
            { r161
              with
              x = pown p110 r161.x,
                xp = muln (dfdx2 p110 r161.x) r161.xp }
        else match
          #var"X15"
        with
          (Dual1 r162, Primal _)
        then
          Dual1
            { r162
              with
              x = pown r162.x p210,
                xp = muln (dfdx1 r162.x p210) r162.xp }
        else match
          #var"X15"
        with
          (Dual1 r163, Dual1 r210)
        in
        match
            _ltE1 r163.e r210.e
          with
            true
          then
            Dual1
              { r210
                with
                x = pown p110 r210.x,
                  xp = muln (dfdx2 p110 r210.x) r210.xp }
          else match
            _ltE1 r210.e r163.e
          with
            true
          then
            Dual1
              { r163
                with
                x = pown r163.x p210,
                  xp = muln (dfdx1 r163.x p210) r163.xp }
          else
            Dual1
              { r163
                with
                x = pown r163.x r210.x,
                  xp =
                  addn
                    (muln (dfdx1 r163.x r210.x) r163.xp)
                    (muln (dfdx2 r163.x r210.x) r210.xp) }
in
recursive
  let sqrtn =
    lam p98.
      let #var"X14" = p98 in
      match
        #var"X14"
      with
        Primal p99
      then
        Primal
          (sqrt1 p99)
      else match
        #var"X14"
      with
        Dual1 r160
      in
      Dual1
          { r160
            with
            x = sqrtn r160.x,
              xp =
              divn
                r160.xp
                (muln (Primal
                      2.) (sqrtn r160.x)) }
in
let wienerSample: () -> Float -> Float =
  lam #var"143".
    let trace = ref (mapSingleton cmpf 0. 0.) in
    lam t587.
      let tr1 = deref trace in
      mapFindOrElse
        (lam #var"144".
           let w6 =
             let #var"X13" = (mapFindLower t587 tr1, mapFindUpper t587 tr1)
             in
             match
               #var"X13"
             with
               (None _, None _)
             then
               error
                 "impossible, trace should always be initialized with { 0 => 0 }"
             else match
               #var"X13"
             with
               (Some (t1100, a180), None _)
             then
               gaussianSample a180 (sqrt1 (subf t587 t1100))
             else match
               #var"X13"
             with
               (None _, Some (t2100, b26))
             then
               gaussianSample b26 (sqrt1 (subf t2100 t587))
             else match
               #var"X13"
             with
               (Some (t1101, a181), Some (t2101, b27))
             in
             let mu3 =
                 addf
                   a181
                   (mulf (subf t587 t1101) (divf (subf b27 a181) (subf t2101 t1101)))
               in
               let sigma1 =
                 sqrt1
                   (mulf
                      (subf t2101 t587)
                      (divf (subf t1101 t587) (subf t2101 t1101)))
               in
               gaussianSample mu3 sigma1
           in
           let #var"145" = modref trace (mapInsert t587 w6 tr1) in
           w6)
        t587
        tr1
in
type RuntimeDistBase_Dist a18
in
recursive
  let vRuntimeDistBase_sample: all a178. RuntimeDistBase_Dist a178 -> a178 = lam x27.
      never
  let vRuntimeDistBase_logObserve: all a179. RuntimeDistBase_Dist a179 -> a179 -> Float = lam x28.
      never
  let vRuntimeDistBase_expectation: RuntimeDistBase_Dist Float -> Float = lam x29.
      never
in
con RuntimeDistElementary_DistNegativeBinomial: all a19. {n: Int, p: Float} -> RuntimeDistBase_Dist a19 in
con RuntimeDistElementary_DistMultinomial: all a20. {n: Int, p: [Float]} -> RuntimeDistBase_Dist a20 in
con RuntimeDistElementary_DistExponential: all a21. {rate: Float} -> RuntimeDistBase_Dist a21 in
con RuntimeDistElementary_DistCategorical: all a22. {p: [Float]} -> RuntimeDistBase_Dist a22 in
con RuntimeDistElementary_DistDirichlet: all a23. {a: [Float]} -> RuntimeDistBase_Dist a23 in
con RuntimeDistElementary_DistBernoulli: all a24. {p: Float} -> RuntimeDistBase_Dist a24 in
con RuntimeDistElementary_DistGaussian: all a25. {mu: Float, sigma: Float} -> RuntimeDistBase_Dist a25 in
con RuntimeDistElementary_DistBinomial: all a26. {n: Int, p: Float} -> RuntimeDistBase_Dist a26 in
con RuntimeDistElementary_DistUniform: all a27. {a: Float, b: Float} -> RuntimeDistBase_Dist a27 in
con RuntimeDistElementary_DistPoisson: all a28. {lambda: Float} -> RuntimeDistBase_Dist a28 in
con RuntimeDistElementary_DistBetabin: all a29. {a: Float, b: Float, n: Int} -> RuntimeDistBase_Dist a29 in
con RuntimeDistElementary_DistWiener: all a30. () -> RuntimeDistBase_Dist a30 in
con RuntimeDistElementary_DistLomax: all a31. {scale: Float, shape: Float} -> RuntimeDistBase_Dist a31 in
con RuntimeDistElementary_DistGamma: all a32. {scale: Float, shape: Float} -> RuntimeDistBase_Dist a32 in
con RuntimeDistElementary_DistBeta: all a33. {a: Float, b: Float} -> RuntimeDistBase_Dist a33 in
recursive
  let vRuntimeDistElementary_sample: all a176. RuntimeDistBase_Dist a176 -> a176 =
    lam __sem_target176.
      match
        __sem_target176
      with
        RuntimeDistElementary_DistGamma t548
      then
        unsafeCoerce (gammaSample t548.shape t548.scale)
      else match
        __sem_target176
      with
        RuntimeDistElementary_DistExponential t549
      then
        unsafeCoerce (exponentialSample t549.rate)
      else match
        __sem_target176
      with
        RuntimeDistElementary_DistPoisson t550
      then
        unsafeCoerce (poissonSample t550.lambda)
      else match
        __sem_target176
      with
        RuntimeDistElementary_DistBinomial t551
      then
        unsafeCoerce (binomialSample t551.p t551.n)
      else match
        __sem_target176
      with
        RuntimeDistElementary_DistBernoulli t552
      then
        unsafeCoerce (bernoulliSample t552.p)
      else match
        __sem_target176
      with
        RuntimeDistElementary_DistBeta t553
      then
        unsafeCoerce (betaSample t553.a t553.b)
      else match
        __sem_target176
      with
        RuntimeDistElementary_DistGaussian t554
      then
        unsafeCoerce (gaussianSample t554.mu t554.sigma)
      else match
        __sem_target176
      with
        RuntimeDistElementary_DistMultinomial t555
      then
        unsafeCoerce (multinomialSample t555.p t555.n)
      else match
        __sem_target176
      with
        RuntimeDistElementary_DistCategorical t556
      then
        unsafeCoerce (categoricalSample t556.p)
      else match
        __sem_target176
      with
        RuntimeDistElementary_DistDirichlet t557
      then
        unsafeCoerce (dirichletSample t557.a)
      else match
        __sem_target176
      with
        RuntimeDistElementary_DistUniform t558
      then
        unsafeCoerce (uniformContinuousSample t558.a t558.b)
      else match
        __sem_target176
      with
        RuntimeDistElementary_DistWiener _
      then
        unsafeCoerce (wienerSample {})
      else match
        __sem_target176
      with
        RuntimeDistElementary_DistLomax t559
      then
        unsafeCoerce (lomaxSample t559.shape t559.scale)
      else match
        __sem_target176
      with
        RuntimeDistElementary_DistBetabin t560
      then
        unsafeCoerce (betabinSample t560.n t560.a t560.b)
      else match
        __sem_target176
      with
        RuntimeDistElementary_DistNegativeBinomial t561
      in
      unsafeCoerce (negativeBinomialSample t561.n t561.p)
  let vRuntimeDistElementary_logObserve: all a177. RuntimeDistBase_Dist a177 -> a177 -> Float =
    lam __sem_target177.
      match
        __sem_target177
      with
        RuntimeDistElementary_DistGamma t562
      then
        unsafeCoerce (gammaLogPdf t562.shape t562.scale)
      else match
        __sem_target177
      with
        RuntimeDistElementary_DistExponential t563
      then
        unsafeCoerce (exponentialLogPdf t563.rate)
      else match
        __sem_target177
      with
        RuntimeDistElementary_DistPoisson t564
      then
        unsafeCoerce (poissonLogPmf t564.lambda)
      else match
        __sem_target177
      with
        RuntimeDistElementary_DistBinomial t565
      then
        unsafeCoerce (binomialLogPmf t565.p t565.n)
      else match
        __sem_target177
      with
        RuntimeDistElementary_DistBernoulli t566
      then
        unsafeCoerce (bernoulliLogPmf t566.p)
      else match
        __sem_target177
      with
        RuntimeDistElementary_DistBeta t567
      then
        unsafeCoerce (betaLogPdf t567.a t567.b)
      else match
        __sem_target177
      with
        RuntimeDistElementary_DistGaussian t568
      then
        unsafeCoerce (gaussianLogPdf t568.mu t568.sigma)
      else match
        __sem_target177
      with
        RuntimeDistElementary_DistMultinomial t569
      then
        unsafeCoerce
          (lam o6.
             match
               eqi t569.n (foldl1 addi o6)
             with
               true
             then
               multinomialLogPmf t569.p o6
             else
               negf inf)
      else match
        __sem_target177
      with
        RuntimeDistElementary_DistCategorical t570
      then
        unsafeCoerce (categoricalLogPmf t570.p)
      else match
        __sem_target177
      with
        RuntimeDistElementary_DistDirichlet t571
      then
        unsafeCoerce (dirichletLogPdf t571.a)
      else match
        __sem_target177
      with
        RuntimeDistElementary_DistUniform t572
      then
        unsafeCoerce (uniformContinuousLogPdf t572.a t572.b)
      else match
        __sem_target177
      with
        RuntimeDistElementary_DistWiener _
      then
        error "logObserve undefined for the Wiener process"
      else match
        __sem_target177
      with
        RuntimeDistElementary_DistLomax t573
      then
        unsafeCoerce (lomaxLogPdf t573.shape t573.scale)
      else match
        __sem_target177
      with
        RuntimeDistElementary_DistBetabin t574
      then
        unsafeCoerce (betabinLogPmf t574.n t574.a t574.b)
      else match
        __sem_target177
      with
        RuntimeDistElementary_DistNegativeBinomial t575
      in
      unsafeCoerce (negativeBinomialLogPmf t575.n t575.p)
  let vRuntimeDistElementary_expectation: RuntimeDistBase_Dist Float -> Float =
    lam __sem_target178.
      match
        __sem_target178
      with
        RuntimeDistElementary_DistGamma t576
      then
        mulf t576.shape t576.scale
      else match
        __sem_target178
      with
        RuntimeDistElementary_DistExponential t577
      then
        divf 1. t577.rate
      else match
        __sem_target178
      with
        RuntimeDistElementary_DistPoisson t578
      then
        t578.lambda
      else match
        __sem_target178
      with
        RuntimeDistElementary_DistBinomial t579
      then
        mulf t579.p (int2float t579.n)
      else match
        __sem_target178
      with
        RuntimeDistElementary_DistBernoulli t580
      then
        t580.p
      else match
        __sem_target178
      with
        RuntimeDistElementary_DistBeta t581
      then
        divf t581.a (addf t581.a t581.b)
      else match
        __sem_target178
      with
        RuntimeDistElementary_DistGaussian t582
      then
        t582.mu
      else match
        __sem_target178
      with
        RuntimeDistElementary_DistMultinomial t583
      then
        error "expectation undefined for the multinomial distribution"
      else match
        __sem_target178
      with
        RuntimeDistElementary_DistCategorical t584
      then
        error "expectation undefined for the categorical distribution"
      else match
        __sem_target178
      with
        RuntimeDistElementary_DistDirichlet t585
      then
        error "expectation undefined for the Dirichlet distribution"
      else match
        __sem_target178
      with
        RuntimeDistElementary_DistUniform t586
      then
        divf (addf t586.a t586.b) 2.
      else match
        __sem_target178
      with
        RuntimeDistElementary_DistWiener _
      in
      error "expectation undefined for the Wiener process"
in
con RuntimeDistElementaryDual_DistDual: all a34. RuntimeDistBase_Dist a34 -> RuntimeDistBase_Dist a34 in
recursive
  let vRuntimeDistElementaryDual_sample: all a174. RuntimeDistBase_Dist a174 -> a174 =
    lam __sem_target173.
      match
        __sem_target173
      with
        RuntimeDistElementary_DistGamma t509
      then
        unsafeCoerce (gammaSample t509.shape t509.scale)
      else match
        __sem_target173
      with
        RuntimeDistElementary_DistExponential t510
      then
        unsafeCoerce (exponentialSample t510.rate)
      else match
        __sem_target173
      with
        RuntimeDistElementary_DistPoisson t511
      then
        unsafeCoerce (poissonSample t511.lambda)
      else match
        __sem_target173
      with
        RuntimeDistElementary_DistBinomial t512
      then
        unsafeCoerce (binomialSample t512.p t512.n)
      else match
        __sem_target173
      with
        RuntimeDistElementary_DistBernoulli t513
      then
        unsafeCoerce (bernoulliSample t513.p)
      else match
        __sem_target173
      with
        RuntimeDistElementary_DistBeta t514
      then
        unsafeCoerce (betaSample t514.a t514.b)
      else match
        __sem_target173
      with
        RuntimeDistElementary_DistGaussian t515
      then
        unsafeCoerce (gaussianSample t515.mu t515.sigma)
      else match
        __sem_target173
      with
        RuntimeDistElementary_DistMultinomial t516
      then
        unsafeCoerce (multinomialSample t516.p t516.n)
      else match
        __sem_target173
      with
        RuntimeDistElementary_DistCategorical t517
      then
        unsafeCoerce (categoricalSample t517.p)
      else match
        __sem_target173
      with
        RuntimeDistElementary_DistDirichlet t518
      then
        unsafeCoerce (dirichletSample t518.a)
      else match
        __sem_target173
      with
        RuntimeDistElementary_DistUniform t519
      then
        unsafeCoerce (uniformContinuousSample t519.a t519.b)
      else match
        __sem_target173
      with
        RuntimeDistElementary_DistWiener _
      then
        unsafeCoerce (wienerSample {})
      else match
        __sem_target173
      with
        RuntimeDistElementary_DistLomax t520
      then
        unsafeCoerce (lomaxSample t520.shape t520.scale)
      else match
        __sem_target173
      with
        RuntimeDistElementary_DistBetabin t521
      then
        unsafeCoerce (betabinSample t521.n t521.a t521.b)
      else match
        __sem_target173
      with
        RuntimeDistElementary_DistNegativeBinomial t522
      then
        unsafeCoerce (negativeBinomialSample t522.n t522.p)
      else match
        __sem_target173
      with
        RuntimeDistElementaryDual_DistDual (d90 & (RuntimeDistElementary_DistGamma _ | RuntimeDistElementary_DistExponential _ | RuntimeDistElementary_DistBeta _ | RuntimeDistElementary_DistGaussian _ | RuntimeDistElementary_DistUniform _))
      then
        unsafeCoerce
          (Primal
             (vRuntimeDistElementaryDual_sample d90))
      else match
        __sem_target173
      with
        RuntimeDistElementaryDual_DistDual (d91 & RuntimeDistElementary_DistDirichlet _)
      then
        unsafeCoerce
          map
          (lam x23.
             Primal
               x23)
          (vRuntimeDistElementaryDual_sample d91)
      else match
        __sem_target173
      with
        RuntimeDistElementaryDual_DistDual (d92 & RuntimeDistElementary_DistWiener _)
      then
        unsafeCoerce
          (let f83 = unsafeCoerce (vRuntimeDistElementaryDual_sample d92)
           in
           lam x24.
             Primal
               (f83 (dualPrimalRec x24)))
      else match
        __sem_target173
      with
        RuntimeDistElementaryDual_DistDual d93
      in
      vRuntimeDistElementaryDual_sample d93
  let vRuntimeDistElementaryDual_logObserve: all a175. RuntimeDistBase_Dist a175 -> a175 -> Float =
    lam __sem_target174.
      match
        __sem_target174
      with
        RuntimeDistElementary_DistGamma t523
      then
        unsafeCoerce (gammaLogPdf t523.shape t523.scale)
      else match
        __sem_target174
      with
        RuntimeDistElementary_DistExponential t524
      then
        unsafeCoerce (exponentialLogPdf t524.rate)
      else match
        __sem_target174
      with
        RuntimeDistElementary_DistPoisson t525
      then
        unsafeCoerce (poissonLogPmf t525.lambda)
      else match
        __sem_target174
      with
        RuntimeDistElementary_DistBinomial t526
      then
        unsafeCoerce (binomialLogPmf t526.p t526.n)
      else match
        __sem_target174
      with
        RuntimeDistElementary_DistBernoulli t527
      then
        unsafeCoerce (bernoulliLogPmf t527.p)
      else match
        __sem_target174
      with
        RuntimeDistElementary_DistBeta t528
      then
        unsafeCoerce (betaLogPdf t528.a t528.b)
      else match
        __sem_target174
      with
        RuntimeDistElementary_DistGaussian t529
      then
        unsafeCoerce (gaussianLogPdf t529.mu t529.sigma)
      else match
        __sem_target174
      with
        RuntimeDistElementary_DistMultinomial t530
      then
        unsafeCoerce
          (lam o5.
             match
               eqi t530.n (foldl1 addi o5)
             with
               true
             then
               multinomialLogPmf t530.p o5
             else
               negf inf)
      else match
        __sem_target174
      with
        RuntimeDistElementary_DistCategorical t531
      then
        unsafeCoerce (categoricalLogPmf t531.p)
      else match
        __sem_target174
      with
        RuntimeDistElementary_DistDirichlet t532
      then
        unsafeCoerce (dirichletLogPdf t532.a)
      else match
        __sem_target174
      with
        RuntimeDistElementary_DistUniform t533
      then
        unsafeCoerce (uniformContinuousLogPdf t533.a t533.b)
      else match
        __sem_target174
      with
        RuntimeDistElementary_DistWiener _
      then
        error "logObserve undefined for the Wiener process"
      else match
        __sem_target174
      with
        RuntimeDistElementary_DistLomax t534
      then
        unsafeCoerce (lomaxLogPdf t534.shape t534.scale)
      else match
        __sem_target174
      with
        RuntimeDistElementary_DistBetabin t535
      then
        unsafeCoerce (betabinLogPmf t535.n t535.a t535.b)
      else match
        __sem_target174
      with
        RuntimeDistElementary_DistNegativeBinomial t536
      then
        unsafeCoerce (negativeBinomialLogPmf t536.n t536.p)
      else match
        __sem_target174
      with
        RuntimeDistElementaryDual_DistDual (d94 & (RuntimeDistElementary_DistGamma _ | RuntimeDistElementary_DistExponential _ | RuntimeDistElementary_DistBeta _ | RuntimeDistElementary_DistGaussian _ | RuntimeDistElementary_DistUniform _))
      then
        unsafeCoerce
          (lam x25.
             vRuntimeDistElementaryDual_logObserve d94 (dualPrimalRec x25))
      else match
        __sem_target174
      with
        RuntimeDistElementaryDual_DistDual (d95 & RuntimeDistElementary_DistDirichlet _)
      then
        unsafeCoerce
          vRuntimeDistElementaryDual_logObserve
          d95
          (map (lam x26.
                dualPrimalRec x26))
      else match
        __sem_target174
      with
        RuntimeDistElementaryDual_DistDual (d96 & RuntimeDistElementary_DistWiener _)
      then
        unsafeCoerce (vRuntimeDistElementaryDual_logObserve d96)
      else match
        __sem_target174
      with
        RuntimeDistElementaryDual_DistDual d97
      in
      vRuntimeDistElementaryDual_logObserve d97
  let vRuntimeDistElementaryDual_expectation: RuntimeDistBase_Dist Float -> Float =
    lam __sem_target175.
      match
        __sem_target175
      with
        RuntimeDistElementary_DistGamma t537
      then
        mulf t537.shape t537.scale
      else match
        __sem_target175
      with
        RuntimeDistElementary_DistExponential t538
      then
        divf 1. t538.rate
      else match
        __sem_target175
      with
        RuntimeDistElementary_DistPoisson t539
      then
        t539.lambda
      else match
        __sem_target175
      with
        RuntimeDistElementary_DistBinomial t540
      then
        mulf t540.p (int2float t540.n)
      else match
        __sem_target175
      with
        RuntimeDistElementary_DistBernoulli t541
      then
        t541.p
      else match
        __sem_target175
      with
        RuntimeDistElementary_DistBeta t542
      then
        divf t542.a (addf t542.a t542.b)
      else match
        __sem_target175
      with
        RuntimeDistElementary_DistGaussian t543
      then
        t543.mu
      else match
        __sem_target175
      with
        RuntimeDistElementary_DistMultinomial t544
      then
        error "expectation undefined for the multinomial distribution"
      else match
        __sem_target175
      with
        RuntimeDistElementary_DistCategorical t545
      then
        error "expectation undefined for the categorical distribution"
      else match
        __sem_target175
      with
        RuntimeDistElementary_DistDirichlet t546
      then
        error "expectation undefined for the Dirichlet distribution"
      else match
        __sem_target175
      with
        RuntimeDistElementary_DistUniform t547
      then
        divf (addf t547.a t547.b) 2.
      else match
        __sem_target175
      with
        RuntimeDistElementary_DistWiener _
      then
        error "expectation undefined for the Wiener process"
      else match
        __sem_target175
      with
        RuntimeDistElementaryDual_DistDual d98
      in
      vRuntimeDistElementaryDual_expectation d98
in
type RuntimeDistEmpirical_EmpiricalExtra
in
con RuntimeDistEmpirical_EmpNorm: {normConst: Float} -> RuntimeDistEmpirical_EmpiricalExtra in
con RuntimeDistEmpirical_EmpMCMC: {acceptRate: Float} -> RuntimeDistEmpirical_EmpiricalExtra in
con RuntimeDistEmpirical_DistEmpirical: all a35. {extra: RuntimeDistEmpirical_EmpiricalExtra, samples: [a35], degenerate: Bool, logWeights: [Float], cumulativeWeights: [Float]} -> RuntimeDistBase_Dist a35 in
recursive
  let vRuntimeDistEmpirical_sample: all a172. RuntimeDistBase_Dist a172 -> a172 =
    lam __sem_target163.
      match
        __sem_target163
      with
        RuntimeDistEmpirical_DistEmpirical t502
      in
      let x21 = uniformContinuousSample 0. (last t502.cumulativeWeights)
        in
        let cmp6 =
          lam y1.
            match
              ltf (subf y1 x21) 0.
            with
              true
            then
              negi 1
            else
              0
        in
        match
          lowerBoundBinarySearch cmp6 t502.cumulativeWeights
        with
          Some idx1
        then
          unsafeCoerce (get t502.samples idx1)
        else
          error "Sampling from empirical distribution failed"
  let vRuntimeDistEmpirical_logObserve: all a173. RuntimeDistBase_Dist a173 -> a173 -> Float =
    lam __sem_target164.
      match
        __sem_target164
      with
        RuntimeDistEmpirical_DistEmpirical t503
      in
      error "Log observe not supported for empirical distribution"
  let vRuntimeDistEmpirical_expectation: RuntimeDistBase_Dist Float -> Float =
    lam __sem_target165.
      match
        __sem_target165
      with
        RuntimeDistEmpirical_DistEmpirical t504
      in
      let weights10 = map exp1 t504.logWeights in
        foldl
          addf 0. (zipWith mulf weights10 (unsafeCoerce t504.samples))
  let vRuntimeDistEmpirical_empiricalSamples =
    lam __sem_target166.
      match
        __sem_target166
      with
        RuntimeDistEmpirical_DistEmpirical t505
      then
        (t505.samples, t505.logWeights)
      else match
        __sem_target166
      with
        _
      in
      ("", "")
  let vRuntimeDistEmpirical_empiricalNormConst =
    lam __sem_target167.
      match
        __sem_target167
      with
        RuntimeDistEmpirical_DistEmpirical t506
      then
        match
          t506.extra
        with
          RuntimeDistEmpirical_EmpNorm {normConst = normConst3}
        then
          normConst3
        else
          nan
      else match
        __sem_target167
      with
        _
      in
      nan
  let vRuntimeDistEmpirical_empiricalAcceptRate =
    lam __sem_target168.
      match
        __sem_target168
      with
        RuntimeDistEmpirical_DistEmpirical t507
      then
        match
          t507.extra
        with
          RuntimeDistEmpirical_EmpMCMC {acceptRate = acceptRate1}
        then
          acceptRate1
        else
          nan
      else match
        __sem_target168
      with
        _
      in
      nan
  let vRuntimeDistEmpirical_empiricalDegenerate =
    lam __sem_target169.
      match
        __sem_target169
      with
        RuntimeDistEmpirical_DistEmpirical t508
      then
        t508.degenerate
      else match
        __sem_target169
      with
        _
      in
      false
  let vRuntimeDistEmpirical_constructDistEmpirical =
    lam samples12.
      lam logWeights5.
        lam __sem_target170.
          match
            __sem_target170
          with
            extra3
          in
          let samples13 = toRope samples12 in
            let logWeights6 = toRope logWeights5 in
            let maxLogWeight1 =
              foldl
                (lam acc305.
                   lam lw6.
                     match
                       geqf lw6 acc305
                     with
                       true
                     then
                       lw6
                     else
                       acc305)
                (negf inf)
                logWeights6
            in
            let degenerate1 = eqf maxLogWeight1 (negf inf) in
            let lse1 =
              addf
                maxLogWeight1
                (log1
                   (foldl
                      (lam acc304.
                         lam lw5.
                           addf acc304 (exp1 (subf lw5 maxLogWeight1)))
                      0.
                      logWeights6))
            in
            let logWeights7 = map (lam lw4.
                   subf lw4 lse1) logWeights6
            in
            let f82 =
              lam acc302.
                lam x22.
                  let acc303 = addf acc302 (exp1 x22) in
                  (acc303, acc303)
            in
            match
              mapAccumL f82 0. logWeights7
            with
              (_, cumulativeWeights1)
            in
            let #var"140" =
                map (lam #var"141".
                     {}) cumulativeWeights1
              in
              RuntimeDistEmpirical_DistEmpirical
                { extra = extra3,
                  samples = samples13,
                  degenerate = degenerate1,
                  logWeights = logWeights7,
                  cumulativeWeights = cumulativeWeights1 }
  let vRuntimeDistEmpirical_constructDistEmpiricalHelper =
    lam __sem_target171.
      match
        __sem_target171
      with
        samples14
      in
      match
          unzip samples14
        with
          (logWeights8, samples15)
        in
        let extra4 =
            RuntimeDistEmpirical_EmpNorm
              { normConst = 0. }
          in
          vRuntimeDistEmpirical_constructDistEmpirical samples15 logWeights8 extra4
  let vRuntimeDistEmpirical_constructDistEmpiricalSubsample =
    lam n14.
      lam samples16.
        lam logWeights9.
          lam __sem_target172.
            match
              __sem_target172
            with
              extra5
            in
            let d89 =
                vRuntimeDistEmpirical_constructDistEmpirical samples16 logWeights9 extra5
              in
              let s79 =
                create
                  n14
                  (lam #var"142".
                     vRuntimeDistEmpirical_sample d89)
              in
              let l18 = make n14 0. in
              vRuntimeDistEmpirical_constructDistEmpirical s79 l18 extra5
in
recursive
  let vRuntimeDist_sample: all a170. RuntimeDistBase_Dist a170 -> a170 =
    lam __sem_target153.
      match
        __sem_target153
      with
        RuntimeDistElementary_DistGamma t456
      then
        unsafeCoerce (gammaSample t456.shape t456.scale)
      else match
        __sem_target153
      with
        RuntimeDistElementary_DistExponential t457
      then
        unsafeCoerce (exponentialSample t457.rate)
      else match
        __sem_target153
      with
        RuntimeDistElementary_DistPoisson t458
      then
        unsafeCoerce (poissonSample t458.lambda)
      else match
        __sem_target153
      with
        RuntimeDistElementary_DistBinomial t459
      then
        unsafeCoerce (binomialSample t459.p t459.n)
      else match
        __sem_target153
      with
        RuntimeDistElementary_DistBernoulli t460
      then
        unsafeCoerce (bernoulliSample t460.p)
      else match
        __sem_target153
      with
        RuntimeDistElementary_DistBeta t461
      then
        unsafeCoerce (betaSample t461.a t461.b)
      else match
        __sem_target153
      with
        RuntimeDistElementary_DistGaussian t462
      then
        unsafeCoerce (gaussianSample t462.mu t462.sigma)
      else match
        __sem_target153
      with
        RuntimeDistElementary_DistMultinomial t463
      then
        unsafeCoerce (multinomialSample t463.p t463.n)
      else match
        __sem_target153
      with
        RuntimeDistElementary_DistCategorical t464
      then
        unsafeCoerce (categoricalSample t464.p)
      else match
        __sem_target153
      with
        RuntimeDistElementary_DistDirichlet t465
      then
        unsafeCoerce (dirichletSample t465.a)
      else match
        __sem_target153
      with
        RuntimeDistElementary_DistUniform t466
      then
        unsafeCoerce (uniformContinuousSample t466.a t466.b)
      else match
        __sem_target153
      with
        RuntimeDistElementary_DistWiener _
      then
        unsafeCoerce (wienerSample {})
      else match
        __sem_target153
      with
        RuntimeDistElementary_DistLomax t467
      then
        unsafeCoerce (lomaxSample t467.shape t467.scale)
      else match
        __sem_target153
      with
        RuntimeDistElementary_DistBetabin t468
      then
        unsafeCoerce (betabinSample t468.n t468.a t468.b)
      else match
        __sem_target153
      with
        RuntimeDistElementary_DistNegativeBinomial t469
      then
        unsafeCoerce (negativeBinomialSample t469.n t469.p)
      else match
        __sem_target153
      with
        RuntimeDistElementaryDual_DistDual (d79 & (RuntimeDistElementary_DistGamma _ | RuntimeDistElementary_DistExponential _ | RuntimeDistElementary_DistBeta _ | RuntimeDistElementary_DistGaussian _ | RuntimeDistElementary_DistUniform _))
      then
        unsafeCoerce (Primal
             (vRuntimeDist_sample d79))
      else match
        __sem_target153
      with
        RuntimeDistElementaryDual_DistDual (d80 & RuntimeDistElementary_DistDirichlet _)
      then
        unsafeCoerce
          map
          (lam x15.
             Primal
               x15)
          (vRuntimeDist_sample d80)
      else match
        __sem_target153
      with
        RuntimeDistElementaryDual_DistDual (d81 & RuntimeDistElementary_DistWiener _)
      then
        unsafeCoerce
          (let f80 = unsafeCoerce (vRuntimeDist_sample d81) in
           lam x16.
             Primal
               (f80 (dualPrimalRec x16)))
      else match
        __sem_target153
      with
        RuntimeDistElementaryDual_DistDual d82
      then
        vRuntimeDist_sample d82
      else match
        __sem_target153
      with
        RuntimeDistEmpirical_DistEmpirical t470
      in
      let x17 = uniformContinuousSample 0. (last t470.cumulativeWeights)
        in
        let cmp5 =
          lam y.
            match
              ltf (subf y x17) 0.
            with
              true
            then
              negi 1
            else
              0
        in
        match
          lowerBoundBinarySearch cmp5 t470.cumulativeWeights
        with
          Some idx
        then
          unsafeCoerce (get t470.samples idx)
        else
          error "Sampling from empirical distribution failed"
  let vRuntimeDist_logObserve: all a171. RuntimeDistBase_Dist a171 -> a171 -> Float =
    lam __sem_target154.
      match
        __sem_target154
      with
        RuntimeDistElementary_DistGamma t471
      then
        unsafeCoerce (gammaLogPdf t471.shape t471.scale)
      else match
        __sem_target154
      with
        RuntimeDistElementary_DistExponential t472
      then
        unsafeCoerce (exponentialLogPdf t472.rate)
      else match
        __sem_target154
      with
        RuntimeDistElementary_DistPoisson t473
      then
        unsafeCoerce (poissonLogPmf t473.lambda)
      else match
        __sem_target154
      with
        RuntimeDistElementary_DistBinomial t474
      then
        unsafeCoerce (binomialLogPmf t474.p t474.n)
      else match
        __sem_target154
      with
        RuntimeDistElementary_DistBernoulli t475
      then
        unsafeCoerce (bernoulliLogPmf t475.p)
      else match
        __sem_target154
      with
        RuntimeDistElementary_DistBeta t476
      then
        unsafeCoerce (betaLogPdf t476.a t476.b)
      else match
        __sem_target154
      with
        RuntimeDistElementary_DistGaussian t477
      then
        unsafeCoerce (gaussianLogPdf t477.mu t477.sigma)
      else match
        __sem_target154
      with
        RuntimeDistElementary_DistMultinomial t478
      then
        unsafeCoerce
          (lam o4.
             match
               eqi t478.n (foldl1 addi o4)
             with
               true
             then
               multinomialLogPmf t478.p o4
             else
               negf inf)
      else match
        __sem_target154
      with
        RuntimeDistElementary_DistCategorical t479
      then
        unsafeCoerce (categoricalLogPmf t479.p)
      else match
        __sem_target154
      with
        RuntimeDistElementary_DistDirichlet t480
      then
        unsafeCoerce (dirichletLogPdf t480.a)
      else match
        __sem_target154
      with
        RuntimeDistElementary_DistUniform t481
      then
        unsafeCoerce (uniformContinuousLogPdf t481.a t481.b)
      else match
        __sem_target154
      with
        RuntimeDistElementary_DistWiener _
      then
        error "logObserve undefined for the Wiener process"
      else match
        __sem_target154
      with
        RuntimeDistElementary_DistLomax t482
      then
        unsafeCoerce (lomaxLogPdf t482.shape t482.scale)
      else match
        __sem_target154
      with
        RuntimeDistElementary_DistBetabin t483
      then
        unsafeCoerce (betabinLogPmf t483.n t483.a t483.b)
      else match
        __sem_target154
      with
        RuntimeDistElementary_DistNegativeBinomial t484
      then
        unsafeCoerce (negativeBinomialLogPmf t484.n t484.p)
      else match
        __sem_target154
      with
        RuntimeDistElementaryDual_DistDual (d83 & (RuntimeDistElementary_DistGamma _ | RuntimeDistElementary_DistExponential _ | RuntimeDistElementary_DistBeta _ | RuntimeDistElementary_DistGaussian _ | RuntimeDistElementary_DistUniform _))
      then
        unsafeCoerce
          (lam x18.
             vRuntimeDist_logObserve d83 (dualPrimalRec x18))
      else match
        __sem_target154
      with
        RuntimeDistElementaryDual_DistDual (d84 & RuntimeDistElementary_DistDirichlet _)
      then
        unsafeCoerce
          vRuntimeDist_logObserve
          d84
          (map (lam x19.
                dualPrimalRec x19))
      else match
        __sem_target154
      with
        RuntimeDistElementaryDual_DistDual (d85 & RuntimeDistElementary_DistWiener _)
      then
        unsafeCoerce (vRuntimeDist_logObserve d85)
      else match
        __sem_target154
      with
        RuntimeDistElementaryDual_DistDual d86
      then
        vRuntimeDist_logObserve d86
      else match
        __sem_target154
      with
        RuntimeDistEmpirical_DistEmpirical t485
      in
      error "Log observe not supported for empirical distribution"
  let vRuntimeDist_expectation: RuntimeDistBase_Dist Float -> Float =
    lam __sem_target155.
      match
        __sem_target155
      with
        RuntimeDistElementary_DistGamma t486
      then
        mulf t486.shape t486.scale
      else match
        __sem_target155
      with
        RuntimeDistElementary_DistExponential t487
      then
        divf 1. t487.rate
      else match
        __sem_target155
      with
        RuntimeDistElementary_DistPoisson t488
      then
        t488.lambda
      else match
        __sem_target155
      with
        RuntimeDistElementary_DistBinomial t489
      then
        mulf t489.p (int2float t489.n)
      else match
        __sem_target155
      with
        RuntimeDistElementary_DistBernoulli t490
      then
        t490.p
      else match
        __sem_target155
      with
        RuntimeDistElementary_DistBeta t491
      then
        divf t491.a (addf t491.a t491.b)
      else match
        __sem_target155
      with
        RuntimeDistElementary_DistGaussian t492
      then
        t492.mu
      else match
        __sem_target155
      with
        RuntimeDistElementary_DistMultinomial t493
      then
        error "expectation undefined for the multinomial distribution"
      else match
        __sem_target155
      with
        RuntimeDistElementary_DistCategorical t494
      then
        error "expectation undefined for the categorical distribution"
      else match
        __sem_target155
      with
        RuntimeDistElementary_DistDirichlet t495
      then
        error "expectation undefined for the Dirichlet distribution"
      else match
        __sem_target155
      with
        RuntimeDistElementary_DistUniform t496
      then
        divf (addf t496.a t496.b) 2.
      else match
        __sem_target155
      with
        RuntimeDistElementary_DistWiener _
      then
        error "expectation undefined for the Wiener process"
      else match
        __sem_target155
      with
        RuntimeDistElementaryDual_DistDual d87
      then
        vRuntimeDist_expectation d87
      else match
        __sem_target155
      with
        RuntimeDistEmpirical_DistEmpirical t497
      in
      let weights9 = map exp1 t497.logWeights in
        foldl addf 0. (zipWith mulf weights9 (unsafeCoerce t497.samples))
  let vRuntimeDist_empiricalSamples =
    lam __sem_target156.
      match
        __sem_target156
      with
        RuntimeDistEmpirical_DistEmpirical t498
      then
        (t498.samples, t498.logWeights)
      else match
        __sem_target156
      with
        _
      in
      ("", "")
  let vRuntimeDist_empiricalNormConst =
    lam __sem_target157.
      match
        __sem_target157
      with
        RuntimeDistEmpirical_DistEmpirical t499
      then
        match
          t499.extra
        with
          RuntimeDistEmpirical_EmpNorm {normConst = normConst2}
        then
          normConst2
        else
          nan
      else match
        __sem_target157
      with
        _
      in
      nan
  let vRuntimeDist_empiricalAcceptRate =
    lam __sem_target158.
      match
        __sem_target158
      with
        RuntimeDistEmpirical_DistEmpirical t500
      then
        match
          t500.extra
        with
          RuntimeDistEmpirical_EmpMCMC {acceptRate = acceptRate}
        then
          acceptRate
        else
          nan
      else match
        __sem_target158
      with
        _
      in
      nan
  let vRuntimeDist_empiricalDegenerate =
    lam __sem_target159.
      match
        __sem_target159
      with
        RuntimeDistEmpirical_DistEmpirical t501
      then
        t501.degenerate
      else match
        __sem_target159
      with
        _
      in
      false
  let vRuntimeDist_constructDistEmpirical =
    lam samples7.
      lam logWeights.
        lam __sem_target160.
          match
            __sem_target160
          with
            extra
          in
          let samples8 = toRope samples7 in
            let logWeights1 = toRope logWeights in
            let maxLogWeight =
              foldl
                (lam acc301.
                   lam lw3.
                     match
                       geqf lw3 acc301
                     with
                       true
                     then
                       lw3
                     else
                       acc301)
                (negf inf)
                logWeights1
            in
            let degenerate = eqf maxLogWeight (negf inf) in
            let lse =
              addf
                maxLogWeight
                (log1
                   (foldl
                      (lam acc300.
                         lam lw2.
                           addf acc300 (exp1 (subf lw2 maxLogWeight)))
                      0.
                      logWeights1))
            in
            let logWeights2 = map (lam lw1.
                   subf lw1 lse) logWeights1
            in
            let f81 =
              lam acc298.
                lam x20.
                  let acc299 = addf acc298 (exp1 x20) in
                  (acc299, acc299)
            in
            match
              mapAccumL f81 0. logWeights2
            with
              (_, cumulativeWeights)
            in
            let #var"137" =
                map (lam #var"138".
                     {}) cumulativeWeights
              in
              RuntimeDistEmpirical_DistEmpirical
                { extra = extra,
                  samples = samples8,
                  degenerate = degenerate,
                  logWeights = logWeights2,
                  cumulativeWeights = cumulativeWeights }
  let vRuntimeDist_constructDistEmpiricalHelper =
    lam __sem_target161.
      match
        __sem_target161
      with
        samples9
      in
      match
          unzip samples9
        with
          (logWeights3, samples10)
        in
        let extra1 =
            RuntimeDistEmpirical_EmpNorm
              { normConst = 0. }
          in
          vRuntimeDist_constructDistEmpirical samples10 logWeights3 extra1
  let vRuntimeDist_constructDistEmpiricalSubsample =
    lam n13.
      lam samples11.
        lam logWeights4.
          lam __sem_target162.
            match
              __sem_target162
            with
              extra2
            in
            let d88 =
                vRuntimeDist_constructDistEmpirical samples11 logWeights4 extra2
              in
              let s78 =
                create
                  n13
                  (lam #var"139".
                     vRuntimeDist_sample d88)
              in
              let l17 = make n13 0. in
              vRuntimeDist_constructDistEmpirical s78 l17 extra2
in
let distEmpiricalSamples: all a169. RuntimeDistBase_Dist a169 -> ([a169], [Float]) = vRuntimeDist_empiricalSamples
in
let distEmpiricalDegenerate: all a168. RuntimeDistBase_Dist a168 -> Bool = vRuntimeDist_empiricalDegenerate
in
let distEmpiricalNormConst: all a167. RuntimeDistBase_Dist a167 -> Float = vRuntimeDist_empiricalNormConst
in
let distEmpiricalAcceptRate: all a166. RuntimeDistBase_Dist a166 -> Float = vRuntimeDist_empiricalAcceptRate
in
let sample: all a165. RuntimeDistBase_Dist a165 -> a165 = vRuntimeDist_sample
in
let expectation: all a164. RuntimeDistBase_Dist Float -> Float = vRuntimeDist_expectation
in
let logObserve: all a163. RuntimeDistBase_Dist a163 -> a163 -> Float = vRuntimeDist_logObserve
in
let debug = false in
type DelayedGraph_DelayVar
in
type DelayedGraph_DsDist a36
in
type DelayedGraph_Param
in
con DelayedGraph_RandomVarV: {dist: all a37. Ref (DelayedGraph_DsDist a37), next: Ref (Option DelayedGraph_DelayVar), state: Ref Int, value: all a38. Ref (Option a38), margDist: all a39. Ref (Option (DelayedGraph_DsDist a39)), terminal: Ref Bool} -> DelayedGraph_DelayVar in
con DelayedGraph_DsDistNegativeBinomial: all a40. {n: DelayedGraph_Param, p: DelayedGraph_Param} -> DelayedGraph_DsDist a40 in
con DelayedGraph_DsDistMultinomial: all a41. {n: DelayedGraph_Param, p: DelayedGraph_Param} -> DelayedGraph_DsDist a41 in
con DelayedGraph_DsDistExponential: all a42. {rate: DelayedGraph_Param} -> DelayedGraph_DsDist a42 in
con DelayedGraph_DsDistCategorical: all a43. {p: DelayedGraph_Param} -> DelayedGraph_DsDist a43 in
con DelayedGraph_DsDistDirichlet: all a44. {a: DelayedGraph_Param} -> DelayedGraph_DsDist a44 in
con DelayedGraph_DsDistBernoulli: all a45. {p: DelayedGraph_Param} -> DelayedGraph_DsDist a45 in
con DelayedGraph_DsDistGaussian: all a46. {mu: DelayedGraph_Param, sigma: DelayedGraph_Param, meanScale: Float, meanOffset: Float} -> DelayedGraph_DsDist a46 in
con DelayedGraph_DsDistBinomial: all a47. {n: DelayedGraph_Param, p: DelayedGraph_Param} -> DelayedGraph_DsDist a47 in
con DelayedGraph_DsDistUniform: all a48. {a: DelayedGraph_Param, b: DelayedGraph_Param} -> DelayedGraph_DsDist a48 in
con DelayedGraph_DsDistPoisson: all a49. {scale: Float, lambda: DelayedGraph_Param} -> DelayedGraph_DsDist a49 in
con DelayedGraph_DsDistBetabin: all a50. {a: DelayedGraph_Param, b: DelayedGraph_Param, n: DelayedGraph_Param} -> DelayedGraph_DsDist a50 in
con DelayedGraph_DsDistLomax: all a51. {scale: DelayedGraph_Param, shape: DelayedGraph_Param} -> DelayedGraph_DsDist a51 in
con DelayedGraph_DsDistGamma: all a52. {scale: DelayedGraph_Param, shape: DelayedGraph_Param} -> DelayedGraph_DsDist a52 in
con DelayedGraph_DsDistBeta: all a53. {a: DelayedGraph_Param, b: DelayedGraph_Param} -> DelayedGraph_DsDist a53 in
con DelayedGraph_AffineParam: {aV: DelayedGraph_Param, meanScale: Float, meanOffset: Float} -> DelayedGraph_Param in
con DelayedGraph_FloatParam: Float -> DelayedGraph_Param in
con DelayedGraph_DelayParam: DelayedGraph_DelayVar -> DelayedGraph_Param in
con DelayedGraph_SeqFParam: [Float] -> DelayedGraph_Param in
con DelayedGraph_IntParam: Int -> DelayedGraph_Param in
recursive
  let vDelayedGraph_tyTm: Ast_Expr -> Ast_Type =
    lam __sem_target88.
      match
        __sem_target88
      with
        VarAst_TmVar t308
      then
        t308.ty
      else match
        __sem_target88
      with
        AppAst_TmApp t309
      then
        t309.ty
      else match
        __sem_target88
      with
        LamAst_TmLam t310
      then
        t310.ty
      else match
        __sem_target88
      with
        LetAst_TmLet t311
      then
        t311.ty
      else match
        __sem_target88
      with
        RecLetsAst_TmRecLets t312
      then
        t312.ty
      else match
        __sem_target88
      with
        ConstAst_TmConst t313
      then
        t313.ty
      else match
        __sem_target88
      with
        SeqAst_TmSeq t314
      then
        t314.ty
      else match
        __sem_target88
      with
        RecordAst_TmRecord t315
      then
        t315.ty
      else match
        __sem_target88
      with
        RecordAst_TmRecordUpdate t316
      then
        t316.ty
      else match
        __sem_target88
      with
        TypeAst_TmType t317
      then
        t317.ty
      else match
        __sem_target88
      with
        DataAst_TmConDef t318
      then
        t318.ty
      else match
        __sem_target88
      with
        DataAst_TmConApp t319
      then
        t319.ty
      else match
        __sem_target88
      with
        MatchAst_TmMatch t320
      then
        t320.ty
      else match
        __sem_target88
      with
        UtestAst_TmUtest t321
      then
        t321.ty
      else match
        __sem_target88
      with
        NeverAst_TmNever t322
      then
        t322.ty
      else match
        __sem_target88
      with
        ExtAst_TmExt t323
      in
      t323.ty
  let vDelayedGraph_d2str =
    lam __sem_target89.
      match
        __sem_target89
      with
        DelayedGraph_DsDistBernoulli d48
      then
        "DsDistBernoulli"
      else match
        __sem_target89
      with
        DelayedGraph_DsDistBeta d49
      then
        "DsDistBeta"
      else match
        __sem_target89
      with
        DelayedGraph_DsDistGaussian d50
      then
        "DsDistGaussian"
      else match
        __sem_target89
      with
        DelayedGraph_DsDistCategorical d51
      then
        "DsDistCategorical"
      else match
        __sem_target89
      with
        DelayedGraph_DsDistPoisson d52
      then
        "DsDistPoisson"
      else match
        __sem_target89
      with
        DelayedGraph_DsDistBinomial d53
      then
        "DsDistBinomial"
      else match
        __sem_target89
      with
        DelayedGraph_DsDistUniform d54
      then
        "DsDistUniform"
      else match
        __sem_target89
      with
        DelayedGraph_DsDistGamma d55
      then
        "DsDistGamma"
      else match
        __sem_target89
      with
        DelayedGraph_DsDistExponential d56
      then
        "DsDistExponential"
      else match
        __sem_target89
      with
        DelayedGraph_DsDistLomax d57
      then
        "DsDistLomax"
      else match
        __sem_target89
      with
        DelayedGraph_DsDistDirichlet d58
      then
        "DsDistDirichlet"
      else match
        __sem_target89
      with
        DelayedGraph_DsDistMultinomial d59
      then
        "DsDistMultinomial"
      else match
        __sem_target89
      with
        DelayedGraph_DsDistBetabin d60
      then
        "DsDistBetabin"
      else match
        __sem_target89
      with
        DelayedGraph_DsDistNegativeBinomial d61
      then
        "DsDistNegativeBinomial"
      else match
        __sem_target89
      with
        _
      in
      error "d2str: distribution is not supported"
  let vDelayedGraph_tyPat: Ast_Pat -> Ast_Type =
    lam __sem_target90.
      match
        __sem_target90
      with
        NamedPat_PatNamed r84
      then
        r84.ty
      else match
        __sem_target90
      with
        SeqTotPat_PatSeqTot r85
      then
        r85.ty
      else match
        __sem_target90
      with
        SeqEdgePat_PatSeqEdge r86
      then
        r86.ty
      else match
        __sem_target90
      with
        RecordPat_PatRecord r87
      then
        r87.ty
      else match
        __sem_target90
      with
        DataPat_PatCon r88
      then
        r88.ty
      else match
        __sem_target90
      with
        IntPat_PatInt r89
      then
        r89.ty
      else match
        __sem_target90
      with
        CharPat_PatChar r90
      then
        r90.ty
      else match
        __sem_target90
      with
        BoolPat_PatBool r91
      then
        r91.ty
      else match
        __sem_target90
      with
        AndPat_PatAnd r92
      then
        r92.ty
      else match
        __sem_target90
      with
        OrPat_PatOr r93
      then
        r93.ty
      else match
        __sem_target90
      with
        NotPat_PatNot r94
      in
      r94.ty
  let vDelayedGraph_v2str: DelayedGraph_DelayVar -> [Char] =
    lam __sem_target91.
      match
        __sem_target91
      with
        DelayedGraph_RandomVarV n10
      in
      let margDist2 =
          match
            deref n10.margDist
          with
            Some d62
          then
            vDelayedGraph_d2str d62
          else
            "no"
        in
        join
          [ "RV Node ",
            "dist ",
            vDelayedGraph_d2str (deref n10.dist),
            " margDist ",
            margDist2,
            "state: ",
            int2string (deref n10.state),
            "\n" ]
  let vDelayedGraph_infoTm: Ast_Expr -> Info =
    lam __sem_target92.
      match
        __sem_target92
      with
        VarAst_TmVar r95
      then
        r95.info
      else match
        __sem_target92
      with
        AppAst_TmApp r96
      then
        r96.info
      else match
        __sem_target92
      with
        LamAst_TmLam r97
      then
        r97.info
      else match
        __sem_target92
      with
        LetAst_TmLet r98
      then
        r98.info
      else match
        __sem_target92
      with
        RecLetsAst_TmRecLets r99
      then
        r99.info
      else match
        __sem_target92
      with
        ConstAst_TmConst r100
      then
        r100.info
      else match
        __sem_target92
      with
        SeqAst_TmSeq r101
      then
        r101.info
      else match
        __sem_target92
      with
        RecordAst_TmRecord r102
      then
        r102.info
      else match
        __sem_target92
      with
        RecordAst_TmRecordUpdate r103
      then
        r103.info
      else match
        __sem_target92
      with
        TypeAst_TmType r104
      then
        r104.info
      else match
        __sem_target92
      with
        DataAst_TmConDef r105
      then
        r105.info
      else match
        __sem_target92
      with
        DataAst_TmConApp r106
      then
        r106.info
      else match
        __sem_target92
      with
        MatchAst_TmMatch r107
      then
        r107.info
      else match
        __sem_target92
      with
        UtestAst_TmUtest r108
      then
        r108.info
      else match
        __sem_target92
      with
        NeverAst_TmNever r109
      then
        r109.info
      else match
        __sem_target92
      with
        ExtAst_TmExt r110
      in
      r110.info
  let vDelayedGraph_infoTy: Ast_Type -> Info =
    lam __sem_target93.
      match
        __sem_target93
      with
        UnknownTypeAst_TyUnknown r111
      then
        r111.info
      else match
        __sem_target93
      with
        BoolTypeAst_TyBool r112
      then
        r112.info
      else match
        __sem_target93
      with
        IntTypeAst_TyInt r113
      then
        r113.info
      else match
        __sem_target93
      with
        FloatTypeAst_TyFloat r114
      then
        r114.info
      else match
        __sem_target93
      with
        CharTypeAst_TyChar r115
      then
        r115.info
      else match
        __sem_target93
      with
        FunTypeAst_TyArrow r116
      then
        r116.info
      else match
        __sem_target93
      with
        SeqTypeAst_TySeq r117
      then
        r117.info
      else match
        __sem_target93
      with
        TensorTypeAst_TyTensor r118
      then
        r118.info
      else match
        __sem_target93
      with
        RecordTypeAst_TyRecord r119
      then
        r119.info
      else match
        __sem_target93
      with
        VariantTypeAst_TyVariant r120
      then
        r120.info
      else match
        __sem_target93
      with
        ConTypeAst_TyCon r121
      then
        r121.info
      else match
        __sem_target93
      with
        DataTypeAst_TyData r122
      then
        r122.info
      else match
        __sem_target93
      with
        VarTypeAst_TyVar t324
      then
        t324.info
      else match
        __sem_target93
      with
        AllTypeAst_TyAll t325
      then
        t325.info
      else match
        __sem_target93
      with
        AppTypeAst_TyApp r123
      then
        r123.info
      else match
        __sem_target93
      with
        AliasTypeAst_TyAlias t326
      in
      vDelayedGraph_infoTy t326.display
  let vDelayedGraph_sample: all a143. RuntimeDistBase_Dist a143 -> a143 =
    lam __sem_target94.
      match
        __sem_target94
      with
        RuntimeDistElementary_DistGamma t327
      then
        unsafeCoerce (gammaSample t327.shape t327.scale)
      else match
        __sem_target94
      with
        RuntimeDistElementary_DistExponential t328
      then
        unsafeCoerce (exponentialSample t328.rate)
      else match
        __sem_target94
      with
        RuntimeDistElementary_DistPoisson t329
      then
        unsafeCoerce (poissonSample t329.lambda)
      else match
        __sem_target94
      with
        RuntimeDistElementary_DistBinomial t330
      then
        unsafeCoerce (binomialSample t330.p t330.n)
      else match
        __sem_target94
      with
        RuntimeDistElementary_DistBernoulli t331
      then
        unsafeCoerce (bernoulliSample t331.p)
      else match
        __sem_target94
      with
        RuntimeDistElementary_DistBeta t332
      then
        unsafeCoerce (betaSample t332.a t332.b)
      else match
        __sem_target94
      with
        RuntimeDistElementary_DistGaussian t333
      then
        unsafeCoerce (gaussianSample t333.mu t333.sigma)
      else match
        __sem_target94
      with
        RuntimeDistElementary_DistMultinomial t334
      then
        unsafeCoerce (multinomialSample t334.p t334.n)
      else match
        __sem_target94
      with
        RuntimeDistElementary_DistCategorical t335
      then
        unsafeCoerce (categoricalSample t335.p)
      else match
        __sem_target94
      with
        RuntimeDistElementary_DistDirichlet t336
      then
        unsafeCoerce (dirichletSample t336.a)
      else match
        __sem_target94
      with
        RuntimeDistElementary_DistUniform t337
      then
        unsafeCoerce (uniformContinuousSample t337.a t337.b)
      else match
        __sem_target94
      with
        RuntimeDistElementary_DistWiener _
      then
        unsafeCoerce (wienerSample {})
      else match
        __sem_target94
      with
        RuntimeDistElementary_DistLomax t338
      then
        unsafeCoerce (lomaxSample t338.shape t338.scale)
      else match
        __sem_target94
      with
        RuntimeDistElementary_DistBetabin t339
      then
        unsafeCoerce (betabinSample t339.n t339.a t339.b)
      else match
        __sem_target94
      with
        RuntimeDistElementary_DistNegativeBinomial t340
      in
      unsafeCoerce (negativeBinomialSample t340.n t340.p)
  let vDelayedGraph_infoPat: Ast_Pat -> Info =
    lam __sem_target95.
      match
        __sem_target95
      with
        NamedPat_PatNamed r124
      then
        r124.info
      else match
        __sem_target95
      with
        SeqTotPat_PatSeqTot r125
      then
        r125.info
      else match
        __sem_target95
      with
        SeqEdgePat_PatSeqEdge r126
      then
        r126.info
      else match
        __sem_target95
      with
        RecordPat_PatRecord r127
      then
        r127.info
      else match
        __sem_target95
      with
        DataPat_PatCon r128
      then
        r128.info
      else match
        __sem_target95
      with
        IntPat_PatInt r129
      then
        r129.info
      else match
        __sem_target95
      with
        CharPat_PatChar r130
      then
        r130.info
      else match
        __sem_target95
      with
        BoolPat_PatBool r131
      then
        r131.info
      else match
        __sem_target95
      with
        AndPat_PatAnd r132
      then
        r132.info
      else match
        __sem_target95
      with
        OrPat_PatOr r133
      then
        r133.info
      else match
        __sem_target95
      with
        NotPat_PatNot r134
      in
      r134.info
  let vDelayedGraph_withInfo: Info -> Ast_Expr -> Ast_Expr =
    lam info3.
      lam __sem_target96.
        match
          __sem_target96
        with
          VarAst_TmVar t341
        then
          VarAst_TmVar
            { t341 with info = info3 }
        else match
          __sem_target96
        with
          AppAst_TmApp t342
        then
          AppAst_TmApp
            { t342 with info = info3 }
        else match
          __sem_target96
        with
          LamAst_TmLam t343
        then
          LamAst_TmLam
            { t343 with info = info3 }
        else match
          __sem_target96
        with
          LetAst_TmLet t344
        then
          LetAst_TmLet
            { t344 with info = info3 }
        else match
          __sem_target96
        with
          RecLetsAst_TmRecLets t345
        then
          RecLetsAst_TmRecLets
            { t345 with info = info3 }
        else match
          __sem_target96
        with
          ConstAst_TmConst t346
        then
          ConstAst_TmConst
            { t346 with info = info3 }
        else match
          __sem_target96
        with
          SeqAst_TmSeq t347
        then
          SeqAst_TmSeq
            { t347 with info = info3 }
        else match
          __sem_target96
        with
          RecordAst_TmRecord t348
        then
          RecordAst_TmRecord
            { t348 with info = info3 }
        else match
          __sem_target96
        with
          RecordAst_TmRecordUpdate t349
        then
          RecordAst_TmRecordUpdate
            { t349 with info = info3 }
        else match
          __sem_target96
        with
          TypeAst_TmType t350
        then
          TypeAst_TmType
            { t350 with info = info3 }
        else match
          __sem_target96
        with
          DataAst_TmConDef t351
        then
          DataAst_TmConDef
            { t351 with info = info3 }
        else match
          __sem_target96
        with
          DataAst_TmConApp t352
        then
          DataAst_TmConApp
            { t352 with info = info3 }
        else match
          __sem_target96
        with
          MatchAst_TmMatch t353
        then
          MatchAst_TmMatch
            { t353 with info = info3 }
        else match
          __sem_target96
        with
          UtestAst_TmUtest t354
        then
          UtestAst_TmUtest
            { t354 with info = info3 }
        else match
          __sem_target96
        with
          NeverAst_TmNever t355
        then
          NeverAst_TmNever
            { t355 with info = info3 }
        else match
          __sem_target96
        with
          ExtAst_TmExt t356
        in
        ExtAst_TmExt
            { t356 with info = info3 }
  let vDelayedGraph_withType: Ast_Type -> Ast_Expr -> Ast_Expr =
    lam ty17: Ast_Type.
      lam __sem_target97.
        match
          __sem_target97
        with
          VarAst_TmVar t357
        then
          VarAst_TmVar
            { t357 with ty = ty17 }
        else match
          __sem_target97
        with
          AppAst_TmApp t358
        then
          AppAst_TmApp
            { t358 with ty = ty17 }
        else match
          __sem_target97
        with
          LamAst_TmLam t359
        then
          LamAst_TmLam
            { t359 with ty = ty17 }
        else match
          __sem_target97
        with
          LetAst_TmLet t360
        then
          LetAst_TmLet
            { t360 with ty = ty17 }
        else match
          __sem_target97
        with
          RecLetsAst_TmRecLets t361
        then
          RecLetsAst_TmRecLets
            { t361 with ty = ty17 }
        else match
          __sem_target97
        with
          ConstAst_TmConst t362
        then
          ConstAst_TmConst
            { t362 with ty = ty17 }
        else match
          __sem_target97
        with
          SeqAst_TmSeq t363
        then
          SeqAst_TmSeq
            { t363 with ty = ty17 }
        else match
          __sem_target97
        with
          RecordAst_TmRecord t364
        then
          RecordAst_TmRecord
            { t364 with ty = ty17 }
        else match
          __sem_target97
        with
          RecordAst_TmRecordUpdate t365
        then
          RecordAst_TmRecordUpdate
            { t365 with ty = ty17 }
        else match
          __sem_target97
        with
          TypeAst_TmType t366
        then
          TypeAst_TmType
            { t366 with ty = ty17 }
        else match
          __sem_target97
        with
          DataAst_TmConDef t367
        then
          DataAst_TmConDef
            { t367 with ty = ty17 }
        else match
          __sem_target97
        with
          DataAst_TmConApp t368
        then
          DataAst_TmConApp
            { t368 with ty = ty17 }
        else match
          __sem_target97
        with
          MatchAst_TmMatch t369
        then
          MatchAst_TmMatch
            { t369 with ty = ty17 }
        else match
          __sem_target97
        with
          UtestAst_TmUtest t370
        then
          UtestAst_TmUtest
            { t370 with ty = ty17 }
        else match
          __sem_target97
        with
          NeverAst_TmNever t371
        then
          NeverAst_TmNever
            { t371 with ty = ty17 }
        else match
          __sem_target97
        with
          ExtAst_TmExt t372
        in
        ExtAst_TmExt
            { t372 with ty = ty17 }
  let vDelayedGraph_getParams =
    lam __sem_target98.
      match
        __sem_target98
      with
        DelayedGraph_DsDistBernoulli d63
      then
        [ d63.p ]
      else match
        __sem_target98
      with
        DelayedGraph_DsDistBeta d64
      then
        [ d64.a,
          d64.b ]
      else match
        __sem_target98
      with
        DelayedGraph_DsDistGaussian d65
      then
        [ d65.mu,
          d65.sigma ]
      else match
        __sem_target98
      with
        DelayedGraph_DsDistMultinomial d66
      then
        [ d66.n,
          d66.p ]
      else match
        __sem_target98
      with
        DelayedGraph_DsDistDirichlet d67
      then
        [ d67.a ]
      else match
        __sem_target98
      with
        DelayedGraph_DsDistCategorical d68
      then
        [ d68.p ]
      else match
        __sem_target98
      with
        DelayedGraph_DsDistPoisson d69
      then
        [ d69.lambda ]
      else match
        __sem_target98
      with
        DelayedGraph_DsDistBinomial d70
      then
        [ d70.n,
          d70.p ]
      else match
        __sem_target98
      with
        DelayedGraph_DsDistUniform d71
      then
        [ d71.a,
          d71.b ]
      else match
        __sem_target98
      with
        DelayedGraph_DsDistGamma d72
      then
        [ d72.shape,
          d72.scale ]
      else match
        __sem_target98
      with
        DelayedGraph_DsDistExponential d73
      then
        [ d73.rate ]
      else match
        __sem_target98
      with
        DelayedGraph_DsDistLomax d74
      then
        [ d74.shape,
          d74.scale ]
      else match
        __sem_target98
      with
        DelayedGraph_DsDistBetabin d75
      then
        [ d75.n,
          d75.a,
          d75.b ]
      else match
        __sem_target98
      with
        DelayedGraph_DsDistNegativeBinomial d76
      then
        [ d76.n,
          d76.p ]
      else match
        __sem_target98
      with
        _
      in
      never
  let vDelayedGraph_getParents =
    lam __sem_target99.
      match
        __sem_target99
      with
        t373
      in
      let params1 = vDelayedGraph_getParams t373 in
        foldl
          (lam acc165.
             lam p64.
               match
                 vDelayedGraph_getParentsH p64
               with
                 Some v52
               then
                 cons v52 acc165
               else
                 acc165)
          ""
          (reverse params1)
  let vDelayedGraph_logObserve: all a144. RuntimeDistBase_Dist a144 -> a144 -> Float =
    lam __sem_target100.
      match
        __sem_target100
      with
        RuntimeDistElementary_DistGamma t374
      then
        unsafeCoerce (gammaLogPdf t374.shape t374.scale)
      else match
        __sem_target100
      with
        RuntimeDistElementary_DistExponential t375
      then
        unsafeCoerce (exponentialLogPdf t375.rate)
      else match
        __sem_target100
      with
        RuntimeDistElementary_DistPoisson t376
      then
        unsafeCoerce (poissonLogPmf t376.lambda)
      else match
        __sem_target100
      with
        RuntimeDistElementary_DistBinomial t377
      then
        unsafeCoerce (binomialLogPmf t377.p t377.n)
      else match
        __sem_target100
      with
        RuntimeDistElementary_DistBernoulli t378
      then
        unsafeCoerce (bernoulliLogPmf t378.p)
      else match
        __sem_target100
      with
        RuntimeDistElementary_DistBeta t379
      then
        unsafeCoerce (betaLogPdf t379.a t379.b)
      else match
        __sem_target100
      with
        RuntimeDistElementary_DistGaussian t380
      then
        unsafeCoerce (gaussianLogPdf t380.mu t380.sigma)
      else match
        __sem_target100
      with
        RuntimeDistElementary_DistMultinomial t381
      then
        unsafeCoerce
          (lam o3.
             match
               eqi t381.n (foldl1 addi o3)
             with
               true
             then
               multinomialLogPmf t381.p o3
             else
               negf inf)
      else match
        __sem_target100
      with
        RuntimeDistElementary_DistCategorical t382
      then
        unsafeCoerce (categoricalLogPmf t382.p)
      else match
        __sem_target100
      with
        RuntimeDistElementary_DistDirichlet t383
      then
        unsafeCoerce (dirichletLogPdf t383.a)
      else match
        __sem_target100
      with
        RuntimeDistElementary_DistUniform t384
      then
        unsafeCoerce (uniformContinuousLogPdf t384.a t384.b)
      else match
        __sem_target100
      with
        RuntimeDistElementary_DistWiener _
      then
        error "logObserve undefined for the Wiener process"
      else match
        __sem_target100
      with
        RuntimeDistElementary_DistLomax t385
      then
        unsafeCoerce (lomaxLogPdf t385.shape t385.scale)
      else match
        __sem_target100
      with
        RuntimeDistElementary_DistBetabin t386
      then
        unsafeCoerce (betabinLogPmf t386.n t386.a t386.b)
      else match
        __sem_target100
      with
        RuntimeDistElementary_DistNegativeBinomial t387
      in
      unsafeCoerce (negativeBinomialLogPmf t387.n t387.p)
  let vDelayedGraph_stripTyAll =
    lam __sem_target101.
      match
        __sem_target101
      with
        AliasTypeAst_TyAlias t388 & ty18
      then
        let #var"X12" = vDelayedGraph_stripTyAll t388.content in
        match
          #var"X12"
        with
          ("", _)
        then
          ("", ty18)
        else match
          #var"X12"
        with
          stripped1
        in
        stripped1
      else match
        __sem_target101
      with
        ty19
      in
      vDelayedGraph_stripTyAllBase "" ty19
  let vDelayedGraph_tyWithInfo: Info -> Ast_Type -> Ast_Type =
    lam info4.
      lam __sem_target102.
        match
          __sem_target102
        with
          UnknownTypeAst_TyUnknown t389
        then
          UnknownTypeAst_TyUnknown
            { t389 with info = info4 }
        else match
          __sem_target102
        with
          BoolTypeAst_TyBool t390
        then
          BoolTypeAst_TyBool
            { t390 with info = info4 }
        else match
          __sem_target102
        with
          IntTypeAst_TyInt t391
        then
          IntTypeAst_TyInt
            { t391 with info = info4 }
        else match
          __sem_target102
        with
          FloatTypeAst_TyFloat t392
        then
          FloatTypeAst_TyFloat
            { t392 with info = info4 }
        else match
          __sem_target102
        with
          CharTypeAst_TyChar t393
        then
          CharTypeAst_TyChar
            { t393 with info = info4 }
        else match
          __sem_target102
        with
          FunTypeAst_TyArrow t394
        then
          FunTypeAst_TyArrow
            { t394 with info = info4 }
        else match
          __sem_target102
        with
          SeqTypeAst_TySeq t395
        then
          SeqTypeAst_TySeq
            { t395 with info = info4 }
        else match
          __sem_target102
        with
          TensorTypeAst_TyTensor t396
        then
          TensorTypeAst_TyTensor
            { t396 with info = info4 }
        else match
          __sem_target102
        with
          RecordTypeAst_TyRecord t397
        then
          RecordTypeAst_TyRecord
            { t397 with info = info4 }
        else match
          __sem_target102
        with
          VariantTypeAst_TyVariant t398
        then
          VariantTypeAst_TyVariant
            { t398 with info = info4 }
        else match
          __sem_target102
        with
          ConTypeAst_TyCon t399
        then
          ConTypeAst_TyCon
            { t399 with info = info4 }
        else match
          __sem_target102
        with
          DataTypeAst_TyData t400
        then
          DataTypeAst_TyData
            { t400 with info = info4 }
        else match
          __sem_target102
        with
          VarTypeAst_TyVar t401
        then
          VarTypeAst_TyVar
            { t401 with info = info4 }
        else match
          __sem_target102
        with
          AllTypeAst_TyAll t402
        then
          AllTypeAst_TyAll
            { t402 with info = info4 }
        else match
          __sem_target102
        with
          AppTypeAst_TyApp t403
        then
          AppTypeAst_TyApp
            { t403 with info = info4 }
        else match
          __sem_target102
        with
          AliasTypeAst_TyAlias t404
        in
        AliasTypeAst_TyAlias
            { t404 with display = vDelayedGraph_tyWithInfo info4 t404.display }
  let vDelayedGraph_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target103.
      match
        __sem_target103
      with
        ty20
      in
      vDelayedGraph_rapp_Type_Type vDelayedGraph_unwrapType ty20
  let vDelayedGraph_computeData: DataTypeAst_DataRec -> Map Name (Set Name) =
    lam __sem_target104.
      match
        __sem_target104
      with
        r135
      in
      match
          r135.positive
        with
          true
        then
          mapMap (setIntersect r135.cons) r135.universe
        else
          mapMap
            (lam x12.
               setSubtract x12 r135.cons)
            r135.universe
  let vDelayedGraph_expectation: RuntimeDistBase_Dist Float -> Float =
    lam __sem_target105.
      match
        __sem_target105
      with
        RuntimeDistElementary_DistGamma t405
      then
        mulf t405.shape t405.scale
      else match
        __sem_target105
      with
        RuntimeDistElementary_DistExponential t406
      then
        divf 1. t406.rate
      else match
        __sem_target105
      with
        RuntimeDistElementary_DistPoisson t407
      then
        t407.lambda
      else match
        __sem_target105
      with
        RuntimeDistElementary_DistBinomial t408
      then
        mulf t408.p (int2float t408.n)
      else match
        __sem_target105
      with
        RuntimeDistElementary_DistBernoulli t409
      then
        t409.p
      else match
        __sem_target105
      with
        RuntimeDistElementary_DistBeta t410
      then
        divf t410.a (addf t410.a t410.b)
      else match
        __sem_target105
      with
        RuntimeDistElementary_DistGaussian t411
      then
        t411.mu
      else match
        __sem_target105
      with
        RuntimeDistElementary_DistMultinomial t412
      then
        error "expectation undefined for the multinomial distribution"
      else match
        __sem_target105
      with
        RuntimeDistElementary_DistCategorical t413
      then
        error "expectation undefined for the categorical distribution"
      else match
        __sem_target105
      with
        RuntimeDistElementary_DistDirichlet t414
      then
        error "expectation undefined for the Dirichlet distribution"
      else match
        __sem_target105
      with
        RuntimeDistElementary_DistUniform t415
      then
        divf (addf t415.a t415.b) 2.
      else match
        __sem_target105
      with
        RuntimeDistElementary_DistWiener _
      in
      error "expectation undefined for the Wiener process"
  let vDelayedGraph_getMargDist =
    lam __sem_target106.
      match
        __sem_target106
      with
        DelayedGraph_RandomVarV t416
      in
      match
          deref t416.margDist
        with
          Some mDist4
        in
        mDist4
  let vDelayedGraph_getParentsH =
    lam __sem_target107.
      match
        __sem_target107
      with
        DelayedGraph_DelayParam v53
      then
        Some
          v53
      else match
        __sem_target107
      with
        DelayedGraph_AffineParam v54
      then
        match
          v54.aV
        with
          DelayedGraph_DelayParam v55
        in
        Some
            v55
      else match
        __sem_target107
      with
        _
      in
      None
          {}
  let vDelayedGraph_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target108.
      match
        __sem_target108
      with
        AllTypeAst_TyAll t417
      then
        vDelayedGraph_inspectType t417.ty
      else match
        __sem_target108
      with
        ty21
      in
      vDelayedGraph_rapp_Type_Type vDelayedGraph_inspectType ty21
  let vDelayedGraph_withInfoPat: Info -> Ast_Pat -> Ast_Pat =
    lam info5.
      lam __sem_target109.
        match
          __sem_target109
        with
          NamedPat_PatNamed r136
        then
          NamedPat_PatNamed
            { r136 with info = info5 }
        else match
          __sem_target109
        with
          SeqTotPat_PatSeqTot r137
        then
          SeqTotPat_PatSeqTot
            { r137 with info = info5 }
        else match
          __sem_target109
        with
          SeqEdgePat_PatSeqEdge r138
        then
          SeqEdgePat_PatSeqEdge
            { r138 with info = info5 }
        else match
          __sem_target109
        with
          RecordPat_PatRecord r139
        then
          RecordPat_PatRecord
            { r139 with info = info5 }
        else match
          __sem_target109
        with
          DataPat_PatCon r140
        then
          DataPat_PatCon
            { r140 with info = info5 }
        else match
          __sem_target109
        with
          IntPat_PatInt r141
        then
          IntPat_PatInt
            { r141 with info = info5 }
        else match
          __sem_target109
        with
          CharPat_PatChar r142
        then
          CharPat_PatChar
            { r142 with info = info5 }
        else match
          __sem_target109
        with
          BoolPat_PatBool r143
        then
          BoolPat_PatBool
            { r143 with info = info5 }
        else match
          __sem_target109
        with
          AndPat_PatAnd r144
        then
          AndPat_PatAnd
            { r144 with info = info5 }
        else match
          __sem_target109
        with
          OrPat_PatOr r145
        then
          OrPat_PatOr
            { r145 with info = info5 }
        else match
          __sem_target109
        with
          NotPat_PatNot r146
        in
        NotPat_PatNot
            { r146 with info = info5 }
  let vDelayedGraph_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat =
    lam ty22: Ast_Type.
      lam __sem_target110.
        match
          __sem_target110
        with
          NamedPat_PatNamed r147
        then
          NamedPat_PatNamed
            { r147 with ty = ty22 }
        else match
          __sem_target110
        with
          SeqTotPat_PatSeqTot r148
        then
          SeqTotPat_PatSeqTot
            { r148 with ty = ty22 }
        else match
          __sem_target110
        with
          SeqEdgePat_PatSeqEdge r149
        then
          SeqEdgePat_PatSeqEdge
            { r149 with ty = ty22 }
        else match
          __sem_target110
        with
          RecordPat_PatRecord r150
        then
          RecordPat_PatRecord
            { r150 with ty = ty22 }
        else match
          __sem_target110
        with
          DataPat_PatCon r151
        then
          DataPat_PatCon
            { r151 with ty = ty22 }
        else match
          __sem_target110
        with
          IntPat_PatInt r152
        then
          IntPat_PatInt
            { r152 with ty = ty22 }
        else match
          __sem_target110
        with
          CharPat_PatChar r153
        then
          CharPat_PatChar
            { r153 with ty = ty22 }
        else match
          __sem_target110
        with
          BoolPat_PatBool r154
        then
          BoolPat_PatBool
            { r154 with ty = ty22 }
        else match
          __sem_target110
        with
          AndPat_PatAnd r155
        then
          AndPat_PatAnd
            { r155 with ty = ty22 }
        else match
          __sem_target110
        with
          OrPat_PatOr r156
        then
          OrPat_PatOr
            { r156 with ty = ty22 }
        else match
          __sem_target110
        with
          NotPat_PatNot r157
        in
        NotPat_PatNot
            { r157 with ty = ty22 }
  let vDelayedGraph_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f45.
      lam __sem_target111.
        match
          __sem_target111
        with
          p65
        in
        let res18 =
            vDelayedGraph_smapAccumL_Pat_Pat
              (lam #var"122".
                 lam a145.
                   ({}, f45 a145))
              {}
              p65
          in
          res18.1
  let vDelayedGraph_countPatNodes =
    lam count14.
      lam __sem_target112.
        match
          __sem_target112
        with
          t418
        in
        let count15 = addi count14 1 in
          let count16 =
            vDelayedGraph_sfold_Pat_Pat vDelayedGraph_countPatNodes count15 t418
          in
          let count17 =
            vDelayedGraph_sfold_Pat_Expr vDelayedGraph_countExprNodes count16 t418
          in
          let count18 =
            vDelayedGraph_sfold_Pat_Type vDelayedGraph_countTypeNodes count17 t418
          in
          count18
  let vDelayedGraph_sfold_Pat_Pat: all acc166. (acc166 -> Ast_Pat -> acc166) -> acc166 -> Ast_Pat -> acc166 =
    lam f46.
      lam acc167.
        lam __sem_target113.
          match
            __sem_target113
          with
            p66
          in
          let res19 =
              vDelayedGraph_smapAccumL_Pat_Pat
                (lam acc168.
                   lam a146.
                     (f46 acc168 a146, a146))
                acc167
                p66
            in
            res19.0
  let vDelayedGraph_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f47.
      lam __sem_target114.
        match
          __sem_target114
        with
          p67
        in
        match
            vDelayedGraph_smapAccumL_Expr_Pat
              (lam #var"123".
                 lam a147.
                   ({}, f47 a147))
              {}
              p67
          with
            (_, p68)
          in
          p68
  let vDelayedGraph_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f48.
      lam __sem_target115.
        match
          __sem_target115
        with
          p69
        in
        match
            vDelayedGraph_smapAccumL_Pat_Expr
              (lam #var"124".
                 lam a148.
                   ({}, f48 a148))
              {}
              p69
          with
            (_, p70)
          in
          p70
  let vDelayedGraph_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f49.
      lam __sem_target116.
        match
          __sem_target116
        with
          p71
        in
        match
            vDelayedGraph_smapAccumL_Pat_Type
              (lam #var"125".
                 lam a149.
                   ({}, f49 a149))
              {}
              p71
          with
            (_, p72)
          in
          p72
  let vDelayedGraph_countExprNodes =
    lam count19.
      lam __sem_target117.
        match
          __sem_target117
        with
          t419
        in
        let count20 = addi count19 1 in
          let count21 =
            vDelayedGraph_sfold_Expr_Expr vDelayedGraph_countExprNodes count20 t419
          in
          let count22 =
            vDelayedGraph_sfold_Expr_Type vDelayedGraph_countTypeNodes count21 t419
          in
          let count23 =
            vDelayedGraph_sfold_Expr_TypeLabel vDelayedGraph_countTypeNodes count22 t419
          in
          let count24 =
            vDelayedGraph_sfold_Expr_Pat vDelayedGraph_countPatNodes count23 t419
          in
          count24
  let vDelayedGraph_countTypeNodes =
    lam count25.
      lam __sem_target118.
        match
          __sem_target118
        with
          t420
        in
        let count26 = addi count25 1 in
          let count27 =
            vDelayedGraph_sfold_Type_Type vDelayedGraph_countTypeNodes count26 t420
          in
          count27
  let vDelayedGraph_createDelayVar =
    lam __sem_target119.
      match
        __sem_target119
      with
        d77
      in
      DelayedGraph_RandomVarV
          { next = ref (None
                   {}),
            value = unsafeCoerce (ref (None
                      {})),
            dist = unsafeCoerce (ref d77),
            state = ref 0,
            margDist = unsafeCoerce (ref (None
                      {})),
            terminal = ref false }
  let vDelayedGraph_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f50.
      lam __sem_target120.
        match
          __sem_target120
        with
          ty23
        in
        let res20 =
            vDelayedGraph_rappAccumL_Type_Type
              (lam #var"126".
                 lam t421.
                   ({}, f50 t421))
              {}
              ty23
          in
          res20.1
  let vDelayedGraph_sfold_Expr_Pat: all acc169. (acc169 -> Ast_Pat -> acc169) -> acc169 -> Ast_Expr -> acc169 =
    lam f51.
      lam acc170.
        lam __sem_target121.
          match
            __sem_target121
          with
            p73
          in
          match
              vDelayedGraph_smapAccumL_Expr_Pat
                (lam acc171.
                   lam a150.
                     (f51 acc171 a150, a150))
                acc170
                p73
            with
              (acc172, _)
            in
            acc172
  let vDelayedGraph_sfold_Pat_Expr: all acc173. (acc173 -> Ast_Expr -> acc173) -> acc173 -> Ast_Pat -> acc173 =
    lam f52.
      lam acc174.
        lam __sem_target122.
          match
            __sem_target122
          with
            p74
          in
          match
              vDelayedGraph_smapAccumL_Pat_Expr
                (lam acc175.
                   lam a151.
                     (f52 acc175 a151, a151))
                acc174
                p74
            with
              (acc176, _)
            in
            acc176
  let vDelayedGraph_sfold_Pat_Type: all acc177. (acc177 -> Ast_Type -> acc177) -> acc177 -> Ast_Pat -> acc177 =
    lam f53.
      lam acc178.
        lam __sem_target123.
          match
            __sem_target123
          with
            p75
          in
          match
              vDelayedGraph_smapAccumL_Pat_Type
                (lam acc179.
                   lam a152.
                     (f53 acc179 a152, a152))
                acc178
                p75
            with
              (acc180, _)
            in
            acc180
  let vDelayedGraph_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f54.
      lam __sem_target124.
        match
          __sem_target124
        with
          p76
        in
        let res21 =
            vDelayedGraph_smapAccumL_Expr_Expr
              (lam #var"127".
                 lam a153.
                   ({}, f54 a153))
              {}
              p76
          in
          res21.1
  let vDelayedGraph_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f55.
      lam __sem_target125.
        match
          __sem_target125
        with
          p77
        in
        let res22 =
            vDelayedGraph_smapAccumL_Expr_Type
              (lam #var"128".
                 lam a154.
                   ({}, f55 a154))
              {}
              p77
          in
          res22.1
  let vDelayedGraph_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f56: Ast_Type -> Ast_Type.
      lam __sem_target126.
        match
          __sem_target126
        with
          s74
        in
        match
            vDelayedGraph_smapAccumL_Kind_Type
              (lam #var"129".
                 lam x13.
                   ({}, f56 x13))
              {}
              s74
          with
            (_, s75)
          in
          s75
  let vDelayedGraph_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f57.
      lam __sem_target127.
        match
          __sem_target127
        with
          p78
        in
        let res23 =
            vDelayedGraph_smapAccumL_Type_Type
              (lam #var"130".
                 lam a155.
                   ({}, f57 a155))
              {}
              p78
          in
          res23.1
  let vDelayedGraph_sremoveUnknown =
    lam __sem_target128.
      match
        __sem_target128
      with
        UnknownTypeAst_TyUnknown _
      then
        None
          {}
      else match
        __sem_target128
      with
        ty24
      in
      Some
          ty24
  let vDelayedGraph_stripTyAllBase =
    lam vars1: [(Name, Ast_Kind)].
      lam __sem_target129.
        match
          __sem_target129
        with
          AllTypeAst_TyAll t422
        then
          vDelayedGraph_stripTyAllBase (snoc vars1 (t422.ident, t422.kind)) t422.ty
        else match
          __sem_target129
        with
          ty25
        in
        vDelayedGraph_rappAccumL_Type_Type vDelayedGraph_stripTyAllBase vars1 ty25
  let vDelayedGraph_sfold_Expr_Expr: all acc181. (acc181 -> Ast_Expr -> acc181) -> acc181 -> Ast_Expr -> acc181 =
    lam f58.
      lam acc182.
        lam __sem_target130.
          match
            __sem_target130
          with
            p79
          in
          let res24 =
              vDelayedGraph_smapAccumL_Expr_Expr
                (lam acc183.
                   lam a156.
                     (f58 acc183 a156, a156))
                acc182
                p79
            in
            res24.0
  let vDelayedGraph_sfold_Expr_Type: all acc184. (acc184 -> Ast_Type -> acc184) -> acc184 -> Ast_Expr -> acc184 =
    lam f59.
      lam acc185.
        lam __sem_target131.
          match
            __sem_target131
          with
            p80
          in
          let res25 =
              vDelayedGraph_smapAccumL_Expr_Type
                (lam acc186.
                   lam a157.
                     (f59 acc186 a157, a157))
                acc185
                p80
            in
            res25.0
  let vDelayedGraph_sfold_Kind_Type: all acc187. (acc187 -> Ast_Type -> acc187) -> acc187 -> Ast_Kind -> acc187 =
    lam f60: acc187 -> Ast_Type -> acc187.
      lam acc188: acc187.
        lam __sem_target132.
          match
            __sem_target132
          with
            s76
          in
          match
              vDelayedGraph_smapAccumL_Kind_Type
                (lam a158.
                   lam x14.
                     (f60 a158 x14, x14))
                acc188
                s76
            with
              (a159, _)
            in
            a159
  let vDelayedGraph_sfold_Type_Type: all acc189. (acc189 -> Ast_Type -> acc189) -> acc189 -> Ast_Type -> acc189 =
    lam f61.
      lam acc190.
        lam __sem_target133.
          match
            __sem_target133
          with
            p81
          in
          let res26 =
              vDelayedGraph_smapAccumL_Type_Type
                (lam acc191.
                   lam a160.
                     (f61 acc191 a160, a160))
                acc190
                p81
            in
            res26.0
  let vDelayedGraph_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f62.
      lam __sem_target134.
        match
          __sem_target134
        with
          expr9
        in
        let expr10 = f62 expr9 in
          vDelayedGraph_smap_Expr_Expr (vDelayedGraph_mapPre_Expr_Expr f62) expr10
  let vDelayedGraph_createObsDelayVar =
    lam d78.
      lam __sem_target135.
        match
          __sem_target135
        with
          value10
        in
        DelayedGraph_RandomVarV
            { next = ref (None
                     {}),
              value =
                unsafeCoerce (ref (Some
                        value10)),
              dist = unsafeCoerce (ref d78),
              state = ref 0,
              margDist =
                unsafeCoerce (ref (None
                        {})),
              terminal = ref false }
  let vDelayedGraph_foldPre_Expr_Expr: all acc192. (acc192 -> Ast_Expr -> acc192) -> acc192 -> Ast_Expr -> acc192 =
    lam f63.
      lam acc193.
        lam __sem_target136.
          match
            __sem_target136
          with
            expr11
          in
          let acc194 = f63 acc193 expr11 in
            vDelayedGraph_sfold_Expr_Expr (vDelayedGraph_foldPre_Expr_Expr f63) acc194 expr11
  let vDelayedGraph_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f64.
      lam __sem_target137.
        match
          __sem_target137
        with
          expr12
        in
        f64
            (vDelayedGraph_smap_Expr_Expr (vDelayedGraph_mapPost_Expr_Expr f64) expr12)
  let vDelayedGraph_foldPost_Expr_Expr: all acc195. (acc195 -> Ast_Expr -> acc195) -> acc195 -> Ast_Expr -> acc195 =
    lam f65.
      lam acc196.
        lam __sem_target138.
          match
            __sem_target138
          with
            expr13
          in
          f65
              (vDelayedGraph_sfold_Expr_Expr (vDelayedGraph_foldPost_Expr_Expr f65) acc196 expr13)
              expr13
  let vDelayedGraph_smapAccumL_Pat_Pat: all acc197. (acc197 -> Ast_Pat -> (acc197, Ast_Pat)) -> acc197 -> Ast_Pat -> (acc197, Ast_Pat) =
    lam f66.
      lam acc198.
        lam __sem_target139.
          match
            __sem_target139
          with
            SeqTotPat_PatSeqTot r158
          then
            match
              mapAccumL f66 acc198 r158.pats
            with
              (acc199, pats1)
            in
            (acc199, SeqTotPat_PatSeqTot
                { r158 with pats = pats1 })
          else match
            __sem_target139
          with
            SeqEdgePat_PatSeqEdge p82
          then
            match
              mapAccumL f66 acc198 p82.prefix
            with
              (acc200, prefix1)
            in
            match
                mapAccumL f66 acc200 p82.postfix
              with
                (acc201, postfix1)
              in
              (acc201, SeqEdgePat_PatSeqEdge
                  { p82 with prefix = prefix1, postfix = postfix1 })
          else match
            __sem_target139
          with
            RecordPat_PatRecord p83
          then
            match
              mapMapAccum
                (lam acc202.
                   lam #var"131".
                     lam p84.
                       f66 acc202 p84)
                acc198
                p83.bindings
            with
              (acc203, bindings5)
            in
            (acc203, RecordPat_PatRecord
                { p83 with bindings = bindings5 })
          else match
            __sem_target139
          with
            DataPat_PatCon c9
          then
            match
              f66 acc198 c9.subpat
            with
              (acc204, subpat2)
            in
            (acc204, DataPat_PatCon
                { c9 with subpat = subpat2 })
          else match
            __sem_target139
          with
            AndPat_PatAnd p85
          then
            match
              f66 acc198 p85.lpat
            with
              (acc205, lpat2)
            in
            match
                f66 acc205 p85.rpat
              with
                (acc206, rpat2)
              in
              (acc206, AndPat_PatAnd
                  { p85 with lpat = lpat2, rpat = rpat2 })
          else match
            __sem_target139
          with
            OrPat_PatOr p86
          then
            match
              f66 acc198 p86.lpat
            with
              (acc207, lpat3)
            in
            match
                f66 acc207 p86.rpat
              with
                (acc208, rpat3)
              in
              (acc208, OrPat_PatOr
                  { p86 with lpat = lpat3, rpat = rpat3 })
          else match
            __sem_target139
          with
            NotPat_PatNot p87
          then
            match
              f66 acc198 p87.subpat
            with
              (acc209, subpat3)
            in
            (acc209, NotPat_PatNot
                { p87 with subpat = subpat3 })
          else match
            __sem_target139
          with
            p88
          in
          (acc198, p88)
  let vDelayedGraph_smapAccumL_Expr_Pat: all acc210. (acc210 -> Ast_Pat -> (acc210, Ast_Pat)) -> acc210 -> Ast_Expr -> (acc210, Ast_Expr) =
    lam f67.
      lam acc211.
        lam __sem_target140.
          match
            __sem_target140
          with
            MatchAst_TmMatch t423
          then
            match
              f67 acc211 t423.pat
            with
              (acc212, pat1)
            in
            (acc212, MatchAst_TmMatch
                { t423 with pat = pat1 })
          else match
            __sem_target140
          with
            p89
          in
          (acc211, p89)
  let vDelayedGraph_smapAccumL_Pat_Expr: all acc213. (acc213 -> Ast_Expr -> (acc213, Ast_Expr)) -> acc213 -> Ast_Pat -> (acc213, Ast_Pat) =
    lam f68.
      lam acc214.
        lam __sem_target141.
          match
            __sem_target141
          with
            p90
          in
          (acc214, p90)
  let vDelayedGraph_smapAccumL_Pat_Type: all acc215. (acc215 -> Ast_Type -> (acc215, Ast_Type)) -> acc215 -> Ast_Pat -> (acc215, Ast_Pat) =
    lam f69.
      lam acc216.
        lam __sem_target142.
          match
            __sem_target142
          with
            p91
          in
          (acc216, p91)
  let vDelayedGraph_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f70.
      lam __sem_target143.
        match
          __sem_target143
        with
          p92
        in
        let res27 =
            vDelayedGraph_smapAccumL_Expr_TypeLabel
              (lam #var"132".
                 lam a161.
                   ({}, f70 a161))
              {}
              p92
          in
          res27.1
  let vDelayedGraph_rappAccumL_Type_Type: all acc217. (acc217 -> Ast_Type -> (acc217, Ast_Type)) -> acc217 -> Ast_Type -> (acc217, Ast_Type) =
    lam f71.
      lam acc218.
        lam __sem_target144.
          match
            __sem_target144
          with
            AliasTypeAst_TyAlias t424
          then
            f71 acc218 t424.content
          else match
            __sem_target144
          with
            ty26
          in
          (acc218, ty26)
  let vDelayedGraph_sfold_Expr_TypeLabel: all acc219. (acc219 -> Ast_Type -> acc219) -> acc219 -> Ast_Expr -> acc219 =
    lam f72.
      lam acc220.
        lam __sem_target145.
          match
            __sem_target145
          with
            p93
          in
          let res28 =
              vDelayedGraph_smapAccumL_Expr_TypeLabel
                (lam acc221.
                   lam a162.
                     (f72 acc221 a162, a162))
                acc220
                p93
            in
            res28.0
  let vDelayedGraph_smapAccumL_Expr_Expr: all acc222. (acc222 -> Ast_Expr -> (acc222, Ast_Expr)) -> acc222 -> Ast_Expr -> (acc222, Ast_Expr) =
    lam f73.
      lam acc223.
        lam __sem_target146.
          match
            __sem_target146
          with
            AppAst_TmApp t425
          then
            match
              f73 acc223 t425.lhs
            with
              (acc224, lhs5)
            in
            match
                f73 acc224 t425.rhs
              with
                (acc225, rhs5)
              in
              (acc225, AppAst_TmApp
                  { t425 with lhs = lhs5, rhs = rhs5 })
          else match
            __sem_target146
          with
            LamAst_TmLam t426
          then
            match
              f73 acc223 t426.body
            with
              (acc226, body4)
            in
            (acc226, LamAst_TmLam
                { t426 with body = body4 })
          else match
            __sem_target146
          with
            LetAst_TmLet t427
          then
            match
              f73 acc223 t427.body
            with
              (acc227, body5)
            in
            match
                f73 acc227 t427.inexpr
              with
                (acc228, inexpr5)
              in
              (acc228, LetAst_TmLet
                  { t427 with body = body5, inexpr = inexpr5 })
          else match
            __sem_target146
          with
            RecLetsAst_TmRecLets t428
          then
            let bindingFunc3 =
              lam acc231.
                lam b23: RecLetsAst_RecLetBinding.
                  match
                    f73 acc231 b23.body
                  with
                    (acc232, body6)
                  in
                  (acc232, { b23 with body = body6 })
            in
            match
              mapAccumL bindingFunc3 acc223 t428.bindings
            with
              (acc229, bindings6)
            in
            match
                f73 acc229 t428.inexpr
              with
                (acc230, inexpr6)
              in
              (acc230, RecLetsAst_TmRecLets
                  { t428 with bindings = bindings6, inexpr = inexpr6 })
          else match
            __sem_target146
          with
            SeqAst_TmSeq t429
          then
            match
              mapAccumL f73 acc223 t429.tms
            with
              (acc233, tms1)
            in
            (acc233, SeqAst_TmSeq
                { t429 with tms = tms1 })
          else match
            __sem_target146
          with
            RecordAst_TmRecord t430
          then
            match
              mapMapAccum
                (lam acc234.
                   lam #var"133".
                     lam e9.
                       f73 acc234 e9)
                acc223
                t430.bindings
            with
              (acc235, bindings7)
            in
            (acc235, RecordAst_TmRecord
                { t430 with bindings = bindings7 })
          else match
            __sem_target146
          with
            RecordAst_TmRecordUpdate t431
          then
            match
              f73 acc223 t431.rec
            with
              (acc236, rec8)
            in
            match
                f73 acc236 t431.value
              with
                (acc237, value11)
              in
              (acc237, RecordAst_TmRecordUpdate
                  { t431 with rec = rec8, value = value11 })
          else match
            __sem_target146
          with
            TypeAst_TmType t432
          then
            match
              f73 acc223 t432.inexpr
            with
              (acc238, inexpr7)
            in
            (acc238, TypeAst_TmType
                { t432 with inexpr = inexpr7 })
          else match
            __sem_target146
          with
            DataAst_TmConDef t433
          then
            match
              f73 acc223 t433.inexpr
            with
              (acc239, inexpr8)
            in
            (acc239, DataAst_TmConDef
                { t433 with inexpr = inexpr8 })
          else match
            __sem_target146
          with
            DataAst_TmConApp t434
          then
            match
              f73 acc223 t434.body
            with
              (acc240, body7)
            in
            (acc240, DataAst_TmConApp
                { t434 with body = body7 })
          else match
            __sem_target146
          with
            MatchAst_TmMatch t435
          then
            match
              f73 acc223 t435.target
            with
              (acc241, target1)
            in
            match
                f73 acc241 t435.thn
              with
                (acc242, thn1)
              in
              match
                  f73 acc242 t435.els
                with
                  (acc243, els1)
                in
                (acc243, MatchAst_TmMatch
                    { t435 with target = target1, thn = thn1, els = els1 })
          else match
            __sem_target146
          with
            UtestAst_TmUtest t436
          then
            match
              f73 acc223 t436.test
            with
              (acc244, test1)
            in
            match
                f73 acc244 t436.expected
              with
                (acc245, expected1)
              in
              match
                  f73 acc245 t436.next
                with
                  (acc246, next1)
                in
                match
                    optionMapAccum f73 acc246 t436.tusing
                  with
                    (acc247, tusing1)
                  in
                  match
                      optionMapAccum f73 acc247 t436.tonfail
                    with
                      (acc248, tonfail1)
                    in
                    (acc248, UtestAst_TmUtest
                        { t436
                          with
                          test = test1,
                            expected = expected1,
                            next = next1,
                            tusing = tusing1,
                            tonfail = tonfail1 })
          else match
            __sem_target146
          with
            ExtAst_TmExt t437
          then
            match
              f73 acc223 t437.inexpr
            with
              (acc249, inexpr9)
            in
            (acc249, ExtAst_TmExt
                { t437 with inexpr = inexpr9 })
          else match
            __sem_target146
          with
            p94
          in
          (acc223, p94)
  let vDelayedGraph_smapAccumL_Expr_Type: all acc250. (acc250 -> Ast_Type -> (acc250, Ast_Type)) -> acc250 -> Ast_Expr -> (acc250, Ast_Expr) =
    lam f74.
      lam acc251.
        lam __sem_target147.
          match
            __sem_target147
          with
            LamAst_TmLam t438
          then
            match
              f74 acc251 t438.tyAnnot
            with
              (acc252, tyAnnot3)
            in
            (acc252, LamAst_TmLam
                { t438 with tyAnnot = tyAnnot3 })
          else match
            __sem_target147
          with
            LetAst_TmLet t439
          then
            match
              f74 acc251 t439.tyAnnot
            with
              (acc253, tyAnnot4)
            in
            (acc253, LetAst_TmLet
                { t439 with tyAnnot = tyAnnot4 })
          else match
            __sem_target147
          with
            RecLetsAst_TmRecLets t440
          then
            let bindingFunc4 =
              lam acc255.
                lam b24: RecLetsAst_RecLetBinding.
                  match
                    f74 acc255 b24.tyAnnot
                  with
                    (acc256, tyAnnot5)
                  in
                  (acc256, { b24 with tyAnnot = tyAnnot5 })
            in
            match
              mapAccumL bindingFunc4 acc251 t440.bindings
            with
              (acc254, bindings8)
            in
            (acc254, RecLetsAst_TmRecLets
                { t440 with bindings = bindings8 })
          else match
            __sem_target147
          with
            TypeAst_TmType t441
          then
            match
              f74 acc251 t441.tyIdent
            with
              (acc257, tyIdent3)
            in
            (acc257, TypeAst_TmType
                { t441 with tyIdent = tyIdent3 })
          else match
            __sem_target147
          with
            DataAst_TmConDef t442
          then
            match
              f74 acc251 t442.tyIdent
            with
              (acc258, tyIdent4)
            in
            (acc258, DataAst_TmConDef
                { t442 with tyIdent = tyIdent4 })
          else match
            __sem_target147
          with
            ExtAst_TmExt t443
          then
            match
              f74 acc251 t443.tyIdent
            with
              (acc259, tyIdent5)
            in
            (acc259, ExtAst_TmExt
                { t443 with tyIdent = tyIdent5 })
          else match
            __sem_target147
          with
            p95
          in
          (acc251, p95)
  let vDelayedGraph_smapAccumL_Kind_Type: all acc260. (acc260 -> Ast_Type -> (acc260, Ast_Type)) -> acc260 -> Ast_Kind -> (acc260, Ast_Kind) =
    lam f75.
      lam acc261.
        lam __sem_target148.
          match
            __sem_target148
          with
            RecordKindAst_Record r159
          then
            match
              mapMapAccum
                (lam acc262.
                   lam #var"134".
                     lam e10.
                       f75 acc262 e10)
                acc261
                r159.fields
            with
              (acc263, flds1)
            in
            (acc263, RecordKindAst_Record
                { r159 with fields = flds1 })
          else match
            __sem_target148
          with
            s77
          in
          (acc261, s77)
  let vDelayedGraph_smapAccumL_Type_Type: all acc264. (acc264 -> Ast_Type -> (acc264, Ast_Type)) -> acc264 -> Ast_Type -> (acc264, Ast_Type) =
    lam f76.
      lam acc265.
        lam __sem_target149.
          match
            __sem_target149
          with
            FunTypeAst_TyArrow t444
          then
            match
              f76 acc265 t444.from
            with
              (acc266, from1)
            in
            match
                f76 acc266 t444.to
              with
                (acc267, to1)
              in
              (acc267, FunTypeAst_TyArrow
                  { t444 with from = from1, to = to1 })
          else match
            __sem_target149
          with
            SeqTypeAst_TySeq t445
          then
            match
              f76 acc265 t445.ty
            with
              (acc268, ty27)
            in
            (acc268, SeqTypeAst_TySeq
                { t445 with ty = ty27 })
          else match
            __sem_target149
          with
            TensorTypeAst_TyTensor t446
          then
            match
              f76 acc265 t446.ty
            with
              (acc269, ty28)
            in
            (acc269, TensorTypeAst_TyTensor
                { t446 with ty = ty28 })
          else match
            __sem_target149
          with
            RecordTypeAst_TyRecord t447
          then
            match
              mapMapAccum
                (lam acc270.
                   lam #var"135".
                     lam e11.
                       f76 acc270 e11)
                acc265
                t447.fields
            with
              (acc271, fields1)
            in
            (acc271, RecordTypeAst_TyRecord
                { t447 with fields = fields1 })
          else match
            __sem_target149
          with
            VariantTypeAst_TyVariant t448
          then
            match
              mapMapAccum
                (lam acc272.
                   lam #var"136".
                     lam e12.
                       f76 acc272 e12)
                acc265
                t448.constrs
            with
              (acc273, constrs1)
            in
            (acc273, VariantTypeAst_TyVariant
                { t448 with constrs = constrs1 })
          else match
            __sem_target149
          with
            ConTypeAst_TyCon t449
          then
            match
              f76 acc265 t449.data
            with
              (acc274, data2)
            in
            (acc274, ConTypeAst_TyCon
                { t449 with data = data2 })
          else match
            __sem_target149
          with
            AllTypeAst_TyAll t450
          then
            match
              vDelayedGraph_smapAccumL_Kind_Type f76 acc265 t450.kind
            with
              (acc275, kind1)
            in
            match
                f76 acc275 t450.ty
              with
                (acc276, ty29)
              in
              (acc276, AllTypeAst_TyAll
                  { t450 with kind = kind1, ty = ty29 })
          else match
            __sem_target149
          with
            AppTypeAst_TyApp t451
          then
            match
              f76 acc265 t451.lhs
            with
              (acc277, lhs6)
            in
            match
                f76 acc277 t451.rhs
              with
                (acc278, rhs6)
              in
              (acc278, AppTypeAst_TyApp
                  { t451 with lhs = lhs6, rhs = rhs6 })
          else match
            __sem_target149
          with
            AliasTypeAst_TyAlias t452
          then
            match
              f76 acc265 t452.content
            with
              (acc279, content1)
            in
            match
                f76 acc279 t452.display
              with
                (acc280, display1)
              in
              (acc280, AliasTypeAst_TyAlias
                  { t452 with content = content1, display = display1 })
          else match
            __sem_target149
          with
            p96
          in
          (acc265, p96)
  let vDelayedGraph_mapAccumLPre_Expr_Expr: all acc281. (acc281 -> Ast_Expr -> (acc281, Ast_Expr)) -> acc281 -> Ast_Expr -> (acc281, Ast_Expr) =
    lam f77.
      lam acc282.
        lam __sem_target150.
          match
            __sem_target150
          with
            expr14
          in
          match
              f77 acc282 expr14
            with
              (acc283, expr15)
            in
            vDelayedGraph_smapAccumL_Expr_Expr (vDelayedGraph_mapAccumLPre_Expr_Expr f77) acc283 expr15
  let vDelayedGraph_mapAccumLPost_Expr_Expr: all acc284. (acc284 -> Ast_Expr -> (acc284, Ast_Expr)) -> acc284 -> Ast_Expr -> (acc284, Ast_Expr) =
    lam f78.
      lam acc285.
        lam __sem_target151.
          match
            __sem_target151
          with
            expr16
          in
          match
              vDelayedGraph_smapAccumL_Expr_Expr (vDelayedGraph_mapAccumLPost_Expr_Expr f78) acc285 expr16
            with
              (acc286, expr17)
            in
            f78 acc286 expr17
  let vDelayedGraph_smapAccumL_Expr_TypeLabel: all acc287. (acc287 -> Ast_Type -> (acc287, Ast_Type)) -> acc287 -> Ast_Expr -> (acc287, Ast_Expr) =
    lam f79.
      lam acc288.
        lam __sem_target152.
          match
            __sem_target152
          with
            LamAst_TmLam t453
          then
            match
              f79 acc288 t453.tyParam
            with
              (acc289, tyParam1)
            in
            match
                f79 acc289 t453.ty
              with
                (acc290, ty30)
              in
              (acc290, LamAst_TmLam
                  { t453 with tyParam = tyParam1, ty = ty30 })
          else match
            __sem_target152
          with
            LetAst_TmLet t454
          then
            match
              f79 acc288 t454.tyBody
            with
              (acc291, tyBody2)
            in
            match
                f79 acc291 t454.ty
              with
                (acc292, ty31)
              in
              (acc292, LetAst_TmLet
                  { t454 with tyBody = tyBody2, ty = ty31 })
          else match
            __sem_target152
          with
            RecLetsAst_TmRecLets t455
          then
            let bindingFunc5 =
              lam acc295.
                lam b25: RecLetsAst_RecLetBinding.
                  match
                    f79 acc295 b25.tyBody
                  with
                    (acc296, tyBody3)
                  in
                  (acc296, { b25 with tyBody = tyBody3 })
            in
            match
              mapAccumL bindingFunc5 acc288 t455.bindings
            with
              (acc293, bindings9)
            in
            match
                f79 acc293 t455.ty
              with
                (acc294, ty32)
              in
              (acc294, RecLetsAst_TmRecLets
                  { t455 with bindings = bindings9, ty = ty32 })
          else match
            __sem_target152
          with
            p97
          in
          match
              f79 acc288 (vDelayedGraph_tyTm p97)
            with
              (acc297, ty33)
            in
            (acc297, vDelayedGraph_withType ty33 p97)
in
recursive
  let vDelayedSampling_tyTm: Ast_Expr -> Ast_Type =
    lam __sem_target10.
      match
        __sem_target10
      with
        VarAst_TmVar t137
      then
        t137.ty
      else match
        __sem_target10
      with
        AppAst_TmApp t138
      then
        t138.ty
      else match
        __sem_target10
      with
        LamAst_TmLam t139
      then
        t139.ty
      else match
        __sem_target10
      with
        LetAst_TmLet t140
      then
        t140.ty
      else match
        __sem_target10
      with
        RecLetsAst_TmRecLets t141
      then
        t141.ty
      else match
        __sem_target10
      with
        ConstAst_TmConst t142
      then
        t142.ty
      else match
        __sem_target10
      with
        SeqAst_TmSeq t143
      then
        t143.ty
      else match
        __sem_target10
      with
        RecordAst_TmRecord t144
      then
        t144.ty
      else match
        __sem_target10
      with
        RecordAst_TmRecordUpdate t145
      then
        t145.ty
      else match
        __sem_target10
      with
        TypeAst_TmType t146
      then
        t146.ty
      else match
        __sem_target10
      with
        DataAst_TmConDef t147
      then
        t147.ty
      else match
        __sem_target10
      with
        DataAst_TmConApp t148
      then
        t148.ty
      else match
        __sem_target10
      with
        MatchAst_TmMatch t149
      then
        t149.ty
      else match
        __sem_target10
      with
        UtestAst_TmUtest t150
      then
        t150.ty
      else match
        __sem_target10
      with
        NeverAst_TmNever t151
      then
        t151.ty
      else match
        __sem_target10
      with
        ExtAst_TmExt t152
      in
      t152.ty
  let vDelayedSampling_d2str =
    lam __sem_target11.
      match
        __sem_target11
      with
        DelayedGraph_DsDistBernoulli d17
      then
        "DsDistBernoulli"
      else match
        __sem_target11
      with
        DelayedGraph_DsDistBeta d18
      then
        "DsDistBeta"
      else match
        __sem_target11
      with
        DelayedGraph_DsDistGaussian d19
      then
        "DsDistGaussian"
      else match
        __sem_target11
      with
        DelayedGraph_DsDistCategorical d20
      then
        "DsDistCategorical"
      else match
        __sem_target11
      with
        DelayedGraph_DsDistPoisson d21
      then
        "DsDistPoisson"
      else match
        __sem_target11
      with
        DelayedGraph_DsDistBinomial d22
      then
        "DsDistBinomial"
      else match
        __sem_target11
      with
        DelayedGraph_DsDistUniform d23
      then
        "DsDistUniform"
      else match
        __sem_target11
      with
        DelayedGraph_DsDistGamma d24
      then
        "DsDistGamma"
      else match
        __sem_target11
      with
        DelayedGraph_DsDistExponential d25
      then
        "DsDistExponential"
      else match
        __sem_target11
      with
        DelayedGraph_DsDistLomax d26
      then
        "DsDistLomax"
      else match
        __sem_target11
      with
        DelayedGraph_DsDistDirichlet d27
      then
        "DsDistDirichlet"
      else match
        __sem_target11
      with
        DelayedGraph_DsDistMultinomial d28
      then
        "DsDistMultinomial"
      else match
        __sem_target11
      with
        DelayedGraph_DsDistBetabin d29
      then
        "DsDistBetabin"
      else match
        __sem_target11
      with
        DelayedGraph_DsDistNegativeBinomial d30
      then
        "DsDistNegativeBinomial"
      else match
        __sem_target11
      with
        _
      in
      error "d2str: distribution is not supported"
  let vDelayedSampling_graft: all a106. (RuntimeDistBase_Dist a106 -> a106) -> DelayedGraph_DelayVar -> () =
    lam sampleT.
      lam __sem_target12.
        match
          __sem_target12
        with
          DelayedGraph_RandomVarV v37 & t153
        in
        let #var"88" =
            match
              eqi (deref v37.state) 1
            with
              true
            then
              let #var"89" = modref v37.terminal true in
              let child = deref v37.next in
              match
                child
              with
                Some child1
              then
                vDelayedSampling_prune sampleT child1
              else
                {}
            else
              let parents =
                filter
                  (lam p10.
                     match
                       p10
                     with
                       DelayedGraph_RandomVarV p11
                     in
                     neqi (deref p11.state) 2)
                  (vDelayedSampling_getParents (deref v37.dist))
              in
              match
                null parents
              with
                true
              then
                let #var"90" = vDelayedSampling_marginalize sampleT t153 in
                modref v37.terminal true
              else
                let #var"91" =
                  match
                    gti (length parents) 1
                  with
                    true
                  then
                    iter
                      (lam p9.
                         vDelayedSampling_valueDs sampleT p9)
                      (tail parents)
                  else
                    {}
                in
                let parent = get parents 0 in
                let #var"92" = vDelayedSampling_graft sampleT parent in
                vDelayedSampling_marginalize sampleT t153
          in
          modref v37.terminal true
  let vDelayedSampling_prune: all a107. (RuntimeDistBase_Dist a107 -> a107) -> DelayedGraph_DelayVar -> () =
    lam sampleT1.
      lam __sem_target13.
        match
          __sem_target13
        with
          DelayedGraph_RandomVarV v38 & t154
        in
        let child2 = deref v38.next in
          let #var"93" =
            match
              child2
            with
              Some child3
            then
              vDelayedSampling_prune sampleT1 child3
            else
              {}
          in
          vDelayedSampling_sampleDs sampleT1 t154
  let vDelayedSampling_tyPat: Ast_Pat -> Ast_Type =
    lam __sem_target14.
      match
        __sem_target14
      with
        NamedPat_PatNamed r7
      then
        r7.ty
      else match
        __sem_target14
      with
        SeqTotPat_PatSeqTot r8
      then
        r8.ty
      else match
        __sem_target14
      with
        SeqEdgePat_PatSeqEdge r9
      then
        r9.ty
      else match
        __sem_target14
      with
        RecordPat_PatRecord r10
      then
        r10.ty
      else match
        __sem_target14
      with
        DataPat_PatCon r11
      then
        r11.ty
      else match
        __sem_target14
      with
        IntPat_PatInt r12
      then
        r12.ty
      else match
        __sem_target14
      with
        CharPat_PatChar r13
      then
        r13.ty
      else match
        __sem_target14
      with
        BoolPat_PatBool r14
      then
        r14.ty
      else match
        __sem_target14
      with
        AndPat_PatAnd r15
      then
        r15.ty
      else match
        __sem_target14
      with
        OrPat_PatOr r16
      then
        r16.ty
      else match
        __sem_target14
      with
        NotPat_PatNot r17
      in
      r17.ty
  let vDelayedSampling_v2str: DelayedGraph_DelayVar -> [Char] =
    lam __sem_target15.
      match
        __sem_target15
      with
        DelayedGraph_RandomVarV n6
      in
      let margDist =
          match
            deref n6.margDist
          with
            Some d31
          then
            vDelayedSampling_d2str d31
          else
            "no"
        in
        join
          [ "RV Node ",
            "dist ",
            vDelayedSampling_d2str (deref n6.dist),
            " margDist ",
            margDist,
            "state: ",
            int2string (deref n6.state),
            "\n" ]
  let vDelayedSampling_value: all a108. (RuntimeDistBase_Dist a108 -> a108) -> DelayedGraph_Param -> a108 =
    lam sampleT2.
      lam __sem_target16.
        match
          __sem_target16
        with
          DelayedGraph_DelayParam v39
        then
          let #var"94" = vDelayedSampling_valueDs sampleT2 v39 in
          vDelayedSampling_getValue v39
        else match
          __sem_target16
        with
          DelayedGraph_AffineParam v40
        then
          unsafeCoerce
            (addf
               (mulf
                  (unsafeCoerce (vDelayedSampling_value sampleT2 v40.aV))
                  v40.meanScale)
               v40.meanOffset)
        else match
          __sem_target16
        with
          DelayedGraph_FloatParam v41
        then
          unsafeCoerce v41
        else match
          __sem_target16
        with
          DelayedGraph_IntParam v42
        then
          unsafeCoerce v42
        else match
          __sem_target16
        with
          DelayedGraph_SeqFParam v43
        in
        unsafeCoerce v43
  let vDelayedSampling_infoTm: Ast_Expr -> Info =
    lam __sem_target17.
      match
        __sem_target17
      with
        VarAst_TmVar r18
      then
        r18.info
      else match
        __sem_target17
      with
        AppAst_TmApp r19
      then
        r19.info
      else match
        __sem_target17
      with
        LamAst_TmLam r20
      then
        r20.info
      else match
        __sem_target17
      with
        LetAst_TmLet r21
      then
        r21.info
      else match
        __sem_target17
      with
        RecLetsAst_TmRecLets r22
      then
        r22.info
      else match
        __sem_target17
      with
        ConstAst_TmConst r23
      then
        r23.info
      else match
        __sem_target17
      with
        SeqAst_TmSeq r24
      then
        r24.info
      else match
        __sem_target17
      with
        RecordAst_TmRecord r25
      then
        r25.info
      else match
        __sem_target17
      with
        RecordAst_TmRecordUpdate r26
      then
        r26.info
      else match
        __sem_target17
      with
        TypeAst_TmType r27
      then
        r27.info
      else match
        __sem_target17
      with
        DataAst_TmConDef r28
      then
        r28.info
      else match
        __sem_target17
      with
        DataAst_TmConApp r29
      then
        r29.info
      else match
        __sem_target17
      with
        MatchAst_TmMatch r30
      then
        r30.info
      else match
        __sem_target17
      with
        UtestAst_TmUtest r31
      then
        r31.info
      else match
        __sem_target17
      with
        NeverAst_TmNever r32
      then
        r32.info
      else match
        __sem_target17
      with
        ExtAst_TmExt r33
      in
      r33.info
  let vDelayedSampling_infoTy: Ast_Type -> Info =
    lam __sem_target18.
      match
        __sem_target18
      with
        UnknownTypeAst_TyUnknown r34
      then
        r34.info
      else match
        __sem_target18
      with
        BoolTypeAst_TyBool r35
      then
        r35.info
      else match
        __sem_target18
      with
        IntTypeAst_TyInt r36
      then
        r36.info
      else match
        __sem_target18
      with
        FloatTypeAst_TyFloat r37
      then
        r37.info
      else match
        __sem_target18
      with
        CharTypeAst_TyChar r38
      then
        r38.info
      else match
        __sem_target18
      with
        FunTypeAst_TyArrow r39
      then
        r39.info
      else match
        __sem_target18
      with
        SeqTypeAst_TySeq r40
      then
        r40.info
      else match
        __sem_target18
      with
        TensorTypeAst_TyTensor r41
      then
        r41.info
      else match
        __sem_target18
      with
        RecordTypeAst_TyRecord r42
      then
        r42.info
      else match
        __sem_target18
      with
        VariantTypeAst_TyVariant r43
      then
        r43.info
      else match
        __sem_target18
      with
        ConTypeAst_TyCon r44
      then
        r44.info
      else match
        __sem_target18
      with
        DataTypeAst_TyData r45
      then
        r45.info
      else match
        __sem_target18
      with
        VarTypeAst_TyVar t155
      then
        t155.info
      else match
        __sem_target18
      with
        AllTypeAst_TyAll t156
      then
        t156.info
      else match
        __sem_target18
      with
        AppTypeAst_TyApp r46
      then
        r46.info
      else match
        __sem_target18
      with
        AliasTypeAst_TyAlias t157
      in
      vDelayedSampling_infoTy t157.display
  let vDelayedSampling_sample: all a109. RuntimeDistBase_Dist a109 -> a109 =
    lam __sem_target19.
      match
        __sem_target19
      with
        RuntimeDistElementary_DistGamma t158
      then
        unsafeCoerce (gammaSample t158.shape t158.scale)
      else match
        __sem_target19
      with
        RuntimeDistElementary_DistExponential t159
      then
        unsafeCoerce (exponentialSample t159.rate)
      else match
        __sem_target19
      with
        RuntimeDistElementary_DistPoisson t160
      then
        unsafeCoerce (poissonSample t160.lambda)
      else match
        __sem_target19
      with
        RuntimeDistElementary_DistBinomial t161
      then
        unsafeCoerce (binomialSample t161.p t161.n)
      else match
        __sem_target19
      with
        RuntimeDistElementary_DistBernoulli t162
      then
        unsafeCoerce (bernoulliSample t162.p)
      else match
        __sem_target19
      with
        RuntimeDistElementary_DistBeta t163
      then
        unsafeCoerce (betaSample t163.a t163.b)
      else match
        __sem_target19
      with
        RuntimeDistElementary_DistGaussian t164
      then
        unsafeCoerce (gaussianSample t164.mu t164.sigma)
      else match
        __sem_target19
      with
        RuntimeDistElementary_DistMultinomial t165
      then
        unsafeCoerce (multinomialSample t165.p t165.n)
      else match
        __sem_target19
      with
        RuntimeDistElementary_DistCategorical t166
      then
        unsafeCoerce (categoricalSample t166.p)
      else match
        __sem_target19
      with
        RuntimeDistElementary_DistDirichlet t167
      then
        unsafeCoerce (dirichletSample t167.a)
      else match
        __sem_target19
      with
        RuntimeDistElementary_DistUniform t168
      then
        unsafeCoerce (uniformContinuousSample t168.a t168.b)
      else match
        __sem_target19
      with
        RuntimeDistElementary_DistWiener _
      then
        unsafeCoerce (wienerSample {})
      else match
        __sem_target19
      with
        RuntimeDistElementary_DistLomax t169
      then
        unsafeCoerce (lomaxSample t169.shape t169.scale)
      else match
        __sem_target19
      with
        RuntimeDistElementary_DistBetabin t170
      then
        unsafeCoerce (betabinSample t170.n t170.a t170.b)
      else match
        __sem_target19
      with
        RuntimeDistElementary_DistNegativeBinomial t171
      in
      unsafeCoerce (negativeBinomialSample t171.n t171.p)
  let vDelayedSampling_unwrap: all a110. DelayedGraph_Param -> a110 =
    lam __sem_target20.
      match
        __sem_target20
      with
        DelayedGraph_DelayParam r47
      then
        unsafeCoerce (vDelayedSampling_getValue r47)
      else match
        __sem_target20
      with
        DelayedGraph_FloatParam f9
      then
        unsafeCoerce f9
      else match
        __sem_target20
      with
        DelayedGraph_IntParam i6
      then
        unsafeCoerce i6
      else match
        __sem_target20
      with
        DelayedGraph_SeqFParam s67
      in
      unsafeCoerce s67
  let vDelayedSampling_infoPat: Ast_Pat -> Info =
    lam __sem_target21.
      match
        __sem_target21
      with
        NamedPat_PatNamed r48
      then
        r48.info
      else match
        __sem_target21
      with
        SeqTotPat_PatSeqTot r49
      then
        r49.info
      else match
        __sem_target21
      with
        SeqEdgePat_PatSeqEdge r50
      then
        r50.info
      else match
        __sem_target21
      with
        RecordPat_PatRecord r51
      then
        r51.info
      else match
        __sem_target21
      with
        DataPat_PatCon r52
      then
        r52.info
      else match
        __sem_target21
      with
        IntPat_PatInt r53
      then
        r53.info
      else match
        __sem_target21
      with
        CharPat_PatChar r54
      then
        r54.info
      else match
        __sem_target21
      with
        BoolPat_PatBool r55
      then
        r55.info
      else match
        __sem_target21
      with
        AndPat_PatAnd r56
      then
        r56.info
      else match
        __sem_target21
      with
        OrPat_PatOr r57
      then
        r57.info
      else match
        __sem_target21
      with
        NotPat_PatNot r58
      in
      r58.info
  let vDelayedSampling_realize: all a111. (RuntimeDistBase_Dist a111 -> a111) -> DelayedGraph_DelayVar -> () =
    lam sampleT3.
      lam __sem_target22.
        match
          __sem_target22
        with
          DelayedGraph_RandomVarV v44 & t172
        in
        let parents1 =
            filter
              (lam p13.
                 match
                   p13
                 with
                   DelayedGraph_RandomVarV p14
                 in
                 eqi (deref p14.state) 1)
              (vDelayedSampling_getParents (deref v44.dist))
          in
          let #var"95" = modref v44.state 2 in
          let #var"96" = modref v44.terminal false in
          match
            null parents1
          with
            true
          then
            match
              deref v44.margDist
            with
              Some mdist
            in
            let #var"97" = modref v44.dist mdist in
              {}
          else
            let parent1 = get parents1 0 in
            match
              parent1
            with
              DelayedGraph_RandomVarV p12
            in
            match
                deref p12.margDist
              with
                Some mDist
              in
              let ppDist =
                  vDelayedSampling_posterior (vDelayedSampling_getValue t172) (mDist, deref v44.dist)
                in
                let #var"98" = modref p12.margDist ppDist in
                let #var"99" = modref p12.next (None
                       {})
                in
                match
                  deref v44.margDist
                with
                  Some mdist1
                in
                modref v44.dist mdist1
  let vDelayedSampling_valueDs: all a112. (RuntimeDistBase_Dist a112 -> a112) -> DelayedGraph_DelayVar -> () =
    lam sampleT4.
      lam __sem_target23.
        match
          __sem_target23
        with
          DelayedGraph_RandomVarV v45 & t173
        in
        match
            eqi (deref v45.state) 2
          with
            true
          then
            {}
          else
            let #var"100" = vDelayedSampling_graft sampleT4 t173 in
            vDelayedSampling_sampleDs sampleT4 t173
  let vDelayedSampling_getValue: all a113. DelayedGraph_DelayVar -> a113 =
    lam __sem_target24.
      match
        __sem_target24
      with
        DelayedGraph_RandomVarV n7
      in
      match
          deref n7.value
        with
          Some value7
        then
          value7
        else
          error "DelayedSampling:Random variable is not realized."
  let vDelayedSampling_sampleDs: all a114. (RuntimeDistBase_Dist a114 -> a114) -> DelayedGraph_DelayVar -> () =
    lam sampleT5.
      lam __sem_target25.
        match
          __sem_target25
        with
          DelayedGraph_RandomVarV n8 & t174
        in
        let #var"101" =
            match
              deref n8.value
            with
              None {}
            then
              match
                deref n8.margDist
              with
                Some margDist1
              in
              let sampledV =
                  sampleT5 (vDelayedSampling_transformDsDist sampleT5 margDist1)
                in
                modref n8.value (Some
                     sampledV)
            else
              {}
          in
          vDelayedSampling_realize sampleT5 t174
  let vDelayedSampling_withInfo: Info -> Ast_Expr -> Ast_Expr =
    lam info.
      lam __sem_target26.
        match
          __sem_target26
        with
          VarAst_TmVar t175
        then
          VarAst_TmVar
            { t175 with info = info }
        else match
          __sem_target26
        with
          AppAst_TmApp t176
        then
          AppAst_TmApp
            { t176 with info = info }
        else match
          __sem_target26
        with
          LamAst_TmLam t177
        then
          LamAst_TmLam
            { t177 with info = info }
        else match
          __sem_target26
        with
          LetAst_TmLet t178
        then
          LetAst_TmLet
            { t178 with info = info }
        else match
          __sem_target26
        with
          RecLetsAst_TmRecLets t179
        then
          RecLetsAst_TmRecLets
            { t179 with info = info }
        else match
          __sem_target26
        with
          ConstAst_TmConst t180
        then
          ConstAst_TmConst
            { t180 with info = info }
        else match
          __sem_target26
        with
          SeqAst_TmSeq t181
        then
          SeqAst_TmSeq
            { t181 with info = info }
        else match
          __sem_target26
        with
          RecordAst_TmRecord t182
        then
          RecordAst_TmRecord
            { t182 with info = info }
        else match
          __sem_target26
        with
          RecordAst_TmRecordUpdate t183
        then
          RecordAst_TmRecordUpdate
            { t183 with info = info }
        else match
          __sem_target26
        with
          TypeAst_TmType t184
        then
          TypeAst_TmType
            { t184 with info = info }
        else match
          __sem_target26
        with
          DataAst_TmConDef t185
        then
          DataAst_TmConDef
            { t185 with info = info }
        else match
          __sem_target26
        with
          DataAst_TmConApp t186
        then
          DataAst_TmConApp
            { t186 with info = info }
        else match
          __sem_target26
        with
          MatchAst_TmMatch t187
        then
          MatchAst_TmMatch
            { t187 with info = info }
        else match
          __sem_target26
        with
          UtestAst_TmUtest t188
        then
          UtestAst_TmUtest
            { t188 with info = info }
        else match
          __sem_target26
        with
          NeverAst_TmNever t189
        then
          NeverAst_TmNever
            { t189 with info = info }
        else match
          __sem_target26
        with
          ExtAst_TmExt t190
        in
        ExtAst_TmExt
            { t190 with info = info }
  let vDelayedSampling_withType: Ast_Type -> Ast_Expr -> Ast_Expr =
    lam ty: Ast_Type.
      lam __sem_target27.
        match
          __sem_target27
        with
          VarAst_TmVar t191
        then
          VarAst_TmVar
            { t191 with ty = ty }
        else match
          __sem_target27
        with
          AppAst_TmApp t192
        then
          AppAst_TmApp
            { t192 with ty = ty }
        else match
          __sem_target27
        with
          LamAst_TmLam t193
        then
          LamAst_TmLam
            { t193 with ty = ty }
        else match
          __sem_target27
        with
          LetAst_TmLet t194
        then
          LetAst_TmLet
            { t194 with ty = ty }
        else match
          __sem_target27
        with
          RecLetsAst_TmRecLets t195
        then
          RecLetsAst_TmRecLets
            { t195 with ty = ty }
        else match
          __sem_target27
        with
          ConstAst_TmConst t196
        then
          ConstAst_TmConst
            { t196 with ty = ty }
        else match
          __sem_target27
        with
          SeqAst_TmSeq t197
        then
          SeqAst_TmSeq
            { t197 with ty = ty }
        else match
          __sem_target27
        with
          RecordAst_TmRecord t198
        then
          RecordAst_TmRecord
            { t198 with ty = ty }
        else match
          __sem_target27
        with
          RecordAst_TmRecordUpdate t199
        then
          RecordAst_TmRecordUpdate
            { t199 with ty = ty }
        else match
          __sem_target27
        with
          TypeAst_TmType t200
        then
          TypeAst_TmType
            { t200 with ty = ty }
        else match
          __sem_target27
        with
          DataAst_TmConDef t201
        then
          DataAst_TmConDef
            { t201 with ty = ty }
        else match
          __sem_target27
        with
          DataAst_TmConApp t202
        then
          DataAst_TmConApp
            { t202 with ty = ty }
        else match
          __sem_target27
        with
          MatchAst_TmMatch t203
        then
          MatchAst_TmMatch
            { t203 with ty = ty }
        else match
          __sem_target27
        with
          UtestAst_TmUtest t204
        then
          UtestAst_TmUtest
            { t204 with ty = ty }
        else match
          __sem_target27
        with
          NeverAst_TmNever t205
        then
          NeverAst_TmNever
            { t205 with ty = ty }
        else match
          __sem_target27
        with
          ExtAst_TmExt t206
        in
        ExtAst_TmExt
            { t206 with ty = ty }
  let vDelayedSampling_getParams =
    lam __sem_target28.
      match
        __sem_target28
      with
        DelayedGraph_DsDistBernoulli d32
      then
        [ d32.p ]
      else match
        __sem_target28
      with
        DelayedGraph_DsDistBeta d33
      then
        [ d33.a,
          d33.b ]
      else match
        __sem_target28
      with
        DelayedGraph_DsDistGaussian d34
      then
        [ d34.mu,
          d34.sigma ]
      else match
        __sem_target28
      with
        DelayedGraph_DsDistMultinomial d35
      then
        [ d35.n,
          d35.p ]
      else match
        __sem_target28
      with
        DelayedGraph_DsDistDirichlet d36
      then
        [ d36.a ]
      else match
        __sem_target28
      with
        DelayedGraph_DsDistCategorical d37
      then
        [ d37.p ]
      else match
        __sem_target28
      with
        DelayedGraph_DsDistPoisson d38
      then
        [ d38.lambda ]
      else match
        __sem_target28
      with
        DelayedGraph_DsDistBinomial d39
      then
        [ d39.n,
          d39.p ]
      else match
        __sem_target28
      with
        DelayedGraph_DsDistUniform d40
      then
        [ d40.a,
          d40.b ]
      else match
        __sem_target28
      with
        DelayedGraph_DsDistGamma d41
      then
        [ d41.shape,
          d41.scale ]
      else match
        __sem_target28
      with
        DelayedGraph_DsDistExponential d42
      then
        [ d42.rate ]
      else match
        __sem_target28
      with
        DelayedGraph_DsDistLomax d43
      then
        [ d43.shape,
          d43.scale ]
      else match
        __sem_target28
      with
        DelayedGraph_DsDistBetabin d44
      then
        [ d44.n,
          d44.a,
          d44.b ]
      else match
        __sem_target28
      with
        DelayedGraph_DsDistNegativeBinomial d45
      then
        [ d45.n,
          d45.p ]
      else match
        __sem_target28
      with
        _
      in
      never
  let vDelayedSampling_posterior: all a115. all a116. a116 -> (DelayedGraph_DsDist a115, DelayedGraph_DsDist a116) -> Option (DelayedGraph_DsDist a115) =
    lam obs3.
      lam __sem_target29.
        match
          __sem_target29
        with
          (DelayedGraph_DsDistBeta p15, DelayedGraph_DsDistBernoulli l5)
        then
          let a117 = vDelayedSampling_unwrap p15.a in
          let b17 = vDelayedSampling_unwrap p15.b in
          let pAB =
            match
              unsafeCoerce obs3
            with
              true
            then
              (addf a117 1., b17)
            else
              (a117, addf b17 1.)
          in
          Some
            (DelayedGraph_DsDistBeta
               { a = DelayedGraph_FloatParam
                     pAB.0,
                 b = DelayedGraph_FloatParam
                     pAB.1 })
        else match
          __sem_target29
        with
          (DelayedGraph_DsDistBeta p16, DelayedGraph_DsDistBinomial l6)
        then
          let a118 = vDelayedSampling_unwrap p16.a in
          let b18 = vDelayedSampling_unwrap p16.b in
          let n9 = vDelayedSampling_unwrap l6.n in
          let pAB1 =
            (addf a118 (int2float (unsafeCoerce obs3)), addf b18 (int2float (subi n9 (unsafeCoerce obs3))))
          in
          Some
            (DelayedGraph_DsDistBeta
               { a = DelayedGraph_FloatParam
                     pAB1.0,
                 b = DelayedGraph_FloatParam
                     pAB1.1 })
        else match
          __sem_target29
        with
          (DelayedGraph_DsDistGaussian p17, DelayedGraph_DsDistGaussian l7)
        then
          let mu0 =
            addf
              (mulf (vDelayedSampling_unwrap p17.mu) l7.meanScale)
              l7.meanOffset
          in
          let s0 = mulf (vDelayedSampling_unwrap p17.sigma) (absf l7.meanScale)
          in
          let s68 = vDelayedSampling_unwrap l7.sigma in
          let s216 = mulf s68 s68 in
          let s02 = mulf s0 s0 in
          let muRHS = addf (divf mu0 s02) (divf (unsafeCoerce obs3) s216)
          in
          let muLHS = divf 1. (addf (divf 1. s02) (divf 1. s216)) in
          let pMu = divf (subf (mulf muRHS muLHS) l7.meanOffset) l7.meanScale
          in
          let pSigma = divf (externalSqrt muLHS) (absf l7.meanScale) in
          Some
            (DelayedGraph_DsDistGaussian
               { mu = DelayedGraph_FloatParam
                     pMu,
                 sigma = DelayedGraph_FloatParam
                     pSigma,
                 meanScale = 1.,
                 meanOffset = 0. })
        else match
          __sem_target29
        with
          (DelayedGraph_DsDistGamma p18, DelayedGraph_DsDistExponential l8)
        then
          let shape = vDelayedSampling_unwrap p18.shape in
          let scale = vDelayedSampling_unwrap p18.scale in
          let pSh = addf shape 1. in
          let pSc = addf 1. (mulf (unsafeCoerce obs3) scale) in
          let pSc1 = divf scale pSc in
          Some
            (DelayedGraph_DsDistGamma
               { scale = DelayedGraph_FloatParam
                     pSc1,
                 shape = DelayedGraph_FloatParam
                     pSh })
        else match
          __sem_target29
        with
          (DelayedGraph_DsDistDirichlet p19, DelayedGraph_DsDistCategorical l9)
        then
          let a119 = vDelayedSampling_unwrap p19.a in
          let sum2 = foldl addf 0. a119 in
          let a120 =
            mapi
              (lam i7.
                 lam e3.
                   match
                     eqi (unsafeCoerce obs3) i7
                   with
                     true
                   then
                     addf e3 1.
                   else
                     e3)
              a119
          in
          Some
            (DelayedGraph_DsDistDirichlet
               { a = DelayedGraph_SeqFParam
                     a120 })
        else match
          __sem_target29
        with
          (DelayedGraph_DsDistGamma p20, DelayedGraph_DsDistPoisson l10)
        then
          let shape1 = vDelayedSampling_unwrap p20.shape in
          let scale1 = vDelayedSampling_unwrap p20.scale in
          let pSh1 = addf shape1 (int2float (unsafeCoerce obs3)) in
          let pSc2 = divf scale1 (addf (mulf scale1 l10.scale) 1.) in
          Some
            (DelayedGraph_DsDistGamma
               { scale = DelayedGraph_FloatParam
                     pSc2,
                 shape = DelayedGraph_FloatParam
                     pSh1 })
        else match
          __sem_target29
        with
          _
        in
        None
            {}
  let vDelayedSampling_getParents =
    lam __sem_target30.
      match
        __sem_target30
      with
        t207
      in
      let params = vDelayedSampling_getParams t207 in
        foldl
          (lam acc32.
             lam p21.
               match
                 vDelayedSampling_getParentsH p21
               with
                 Some v46
               then
                 cons v46 acc32
               else
                 acc32)
          ""
          (reverse params)
  let vDelayedSampling_isTerminal =
    lam __sem_target31.
      match
        __sem_target31
      with
        DelayedGraph_RandomVarV v47 & t208
      in
      match
          eqi (deref v47.state) 1
        with
          true
        then
          deref v47.terminal
        else
          false
  let vDelayedSampling_logObserve: all a121. RuntimeDistBase_Dist a121 -> a121 -> Float =
    lam __sem_target32.
      match
        __sem_target32
      with
        RuntimeDistElementary_DistGamma t209
      then
        unsafeCoerce (gammaLogPdf t209.shape t209.scale)
      else match
        __sem_target32
      with
        RuntimeDistElementary_DistExponential t212
      then
        unsafeCoerce (exponentialLogPdf t212.rate)
      else match
        __sem_target32
      with
        RuntimeDistElementary_DistPoisson t213
      then
        unsafeCoerce (poissonLogPmf t213.lambda)
      else match
        __sem_target32
      with
        RuntimeDistElementary_DistBinomial t214
      then
        unsafeCoerce (binomialLogPmf t214.p t214.n)
      else match
        __sem_target32
      with
        RuntimeDistElementary_DistBernoulli t215
      then
        unsafeCoerce (bernoulliLogPmf t215.p)
      else match
        __sem_target32
      with
        RuntimeDistElementary_DistBeta t216
      then
        unsafeCoerce (betaLogPdf t216.a t216.b)
      else match
        __sem_target32
      with
        RuntimeDistElementary_DistGaussian t217
      then
        unsafeCoerce (gaussianLogPdf t217.mu t217.sigma)
      else match
        __sem_target32
      with
        RuntimeDistElementary_DistMultinomial t218
      then
        unsafeCoerce
          (lam o2.
             match
               eqi t218.n (foldl1 addi o2)
             with
               true
             then
               multinomialLogPmf t218.p o2
             else
               negf inf)
      else match
        __sem_target32
      with
        RuntimeDistElementary_DistCategorical t219
      then
        unsafeCoerce (categoricalLogPmf t219.p)
      else match
        __sem_target32
      with
        RuntimeDistElementary_DistDirichlet t220
      then
        unsafeCoerce (dirichletLogPdf t220.a)
      else match
        __sem_target32
      with
        RuntimeDistElementary_DistUniform t221
      then
        unsafeCoerce (uniformContinuousLogPdf t221.a t221.b)
      else match
        __sem_target32
      with
        RuntimeDistElementary_DistWiener _
      then
        error "logObserve undefined for the Wiener process"
      else match
        __sem_target32
      with
        RuntimeDistElementary_DistLomax t222
      then
        unsafeCoerce (lomaxLogPdf t222.shape t222.scale)
      else match
        __sem_target32
      with
        RuntimeDistElementary_DistBetabin t223
      then
        unsafeCoerce (betabinLogPmf t223.n t223.a t223.b)
      else match
        __sem_target32
      with
        RuntimeDistElementary_DistNegativeBinomial t224
      in
      unsafeCoerce (negativeBinomialLogPmf t224.n t224.p)
  let vDelayedSampling_stripTyAll =
    lam __sem_target33.
      match
        __sem_target33
      with
        AliasTypeAst_TyAlias t225 & ty1
      then
        let #var"X11" = vDelayedSampling_stripTyAll t225.content in
        match
          #var"X11"
        with
          ("", _)
        then
          ("", ty1)
        else match
          #var"X11"
        with
          stripped
        in
        stripped
      else match
        __sem_target33
      with
        ty2
      in
      vDelayedSampling_stripTyAllBase "" ty2
  let vDelayedSampling_tyWithInfo: Info -> Ast_Type -> Ast_Type =
    lam info1.
      lam __sem_target34.
        match
          __sem_target34
        with
          UnknownTypeAst_TyUnknown t226
        then
          UnknownTypeAst_TyUnknown
            { t226 with info = info1 }
        else match
          __sem_target34
        with
          BoolTypeAst_TyBool t227
        then
          BoolTypeAst_TyBool
            { t227 with info = info1 }
        else match
          __sem_target34
        with
          IntTypeAst_TyInt t228
        then
          IntTypeAst_TyInt
            { t228 with info = info1 }
        else match
          __sem_target34
        with
          FloatTypeAst_TyFloat t229
        then
          FloatTypeAst_TyFloat
            { t229 with info = info1 }
        else match
          __sem_target34
        with
          CharTypeAst_TyChar t230
        then
          CharTypeAst_TyChar
            { t230 with info = info1 }
        else match
          __sem_target34
        with
          FunTypeAst_TyArrow t231
        then
          FunTypeAst_TyArrow
            { t231 with info = info1 }
        else match
          __sem_target34
        with
          SeqTypeAst_TySeq t232
        then
          SeqTypeAst_TySeq
            { t232 with info = info1 }
        else match
          __sem_target34
        with
          TensorTypeAst_TyTensor t233
        then
          TensorTypeAst_TyTensor
            { t233 with info = info1 }
        else match
          __sem_target34
        with
          RecordTypeAst_TyRecord t234
        then
          RecordTypeAst_TyRecord
            { t234 with info = info1 }
        else match
          __sem_target34
        with
          VariantTypeAst_TyVariant t235
        then
          VariantTypeAst_TyVariant
            { t235 with info = info1 }
        else match
          __sem_target34
        with
          ConTypeAst_TyCon t236
        then
          ConTypeAst_TyCon
            { t236 with info = info1 }
        else match
          __sem_target34
        with
          DataTypeAst_TyData t237
        then
          DataTypeAst_TyData
            { t237 with info = info1 }
        else match
          __sem_target34
        with
          VarTypeAst_TyVar t238
        then
          VarTypeAst_TyVar
            { t238 with info = info1 }
        else match
          __sem_target34
        with
          AllTypeAst_TyAll t239
        then
          AllTypeAst_TyAll
            { t239 with info = info1 }
        else match
          __sem_target34
        with
          AppTypeAst_TyApp t240
        then
          AppTypeAst_TyApp
            { t240 with info = info1 }
        else match
          __sem_target34
        with
          AliasTypeAst_TyAlias t241
        in
        AliasTypeAst_TyAlias
            { t241
              with
              display = vDelayedSampling_tyWithInfo info1 t241.display }
  let vDelayedSampling_unwrapType: Ast_Type -> Ast_Type =
    lam __sem_target35.
      match
        __sem_target35
      with
        ty3
      in
      vDelayedSampling_rapp_Type_Type vDelayedSampling_unwrapType ty3
  let vDelayedSampling_computeData: DataTypeAst_DataRec -> Map Name (Set Name) =
    lam __sem_target36.
      match
        __sem_target36
      with
        r59
      in
      match
          r59.positive
        with
          true
        then
          mapMap (setIntersect r59.cons) r59.universe
        else
          mapMap
            (lam x9.
               setSubtract x9 r59.cons)
            r59.universe
  let vDelayedSampling_expectation: RuntimeDistBase_Dist Float -> Float =
    lam __sem_target37.
      match
        __sem_target37
      with
        RuntimeDistElementary_DistGamma t242
      then
        mulf t242.shape t242.scale
      else match
        __sem_target37
      with
        RuntimeDistElementary_DistExponential t243
      then
        divf 1. t243.rate
      else match
        __sem_target37
      with
        RuntimeDistElementary_DistPoisson t244
      then
        t244.lambda
      else match
        __sem_target37
      with
        RuntimeDistElementary_DistBinomial t245
      then
        mulf t245.p (int2float t245.n)
      else match
        __sem_target37
      with
        RuntimeDistElementary_DistBernoulli t246
      then
        t246.p
      else match
        __sem_target37
      with
        RuntimeDistElementary_DistBeta t247
      then
        divf t247.a (addf t247.a t247.b)
      else match
        __sem_target37
      with
        RuntimeDistElementary_DistGaussian t248
      then
        t248.mu
      else match
        __sem_target37
      with
        RuntimeDistElementary_DistMultinomial t249
      then
        error "expectation undefined for the multinomial distribution"
      else match
        __sem_target37
      with
        RuntimeDistElementary_DistCategorical t250
      then
        error "expectation undefined for the categorical distribution"
      else match
        __sem_target37
      with
        RuntimeDistElementary_DistDirichlet t251
      then
        error "expectation undefined for the Dirichlet distribution"
      else match
        __sem_target37
      with
        RuntimeDistElementary_DistUniform t252
      then
        divf (addf t252.a t252.b) 2.
      else match
        __sem_target37
      with
        RuntimeDistElementary_DistWiener _
      in
      error "expectation undefined for the Wiener process"
  let vDelayedSampling_getMargDist =
    lam __sem_target38.
      match
        __sem_target38
      with
        DelayedGraph_RandomVarV t253
      in
      match
          deref t253.margDist
        with
          Some mDist1
        in
        mDist1
  let vDelayedSampling_getParentsH =
    lam __sem_target39.
      match
        __sem_target39
      with
        DelayedGraph_DelayParam v48
      then
        Some
          v48
      else match
        __sem_target39
      with
        DelayedGraph_AffineParam v49
      then
        match
          v49.aV
        with
          DelayedGraph_DelayParam v50
        in
        Some
            v50
      else match
        __sem_target39
      with
        _
      in
      None
          {}
  let vDelayedSampling_inspectType: Ast_Type -> Ast_Type =
    lam __sem_target40.
      match
        __sem_target40
      with
        AllTypeAst_TyAll t254
      then
        vDelayedSampling_inspectType t254.ty
      else match
        __sem_target40
      with
        ty4
      in
      vDelayedSampling_rapp_Type_Type vDelayedSampling_inspectType ty4
  let vDelayedSampling_marginalize: all a122. (RuntimeDistBase_Dist a122 -> a122) -> DelayedGraph_DelayVar -> () =
    lam sampleT6.
      lam __sem_target41.
        match
          __sem_target41
        with
          DelayedGraph_RandomVarV v51 & t255
        in
        let parents2 =
            filter
              (lam p23.
                 vDelayedSampling_isTerminal p23)
              (vDelayedSampling_getParents (deref v51.dist))
          in
          match
            null parents2
          with
            true
          then
            let #var"102" = modref v51.state 1 in
            modref v51.margDist (Some
                 (deref v51.dist))
          else
            let parent2 = get parents2 0 in
            match
              parent2
            with
              DelayedGraph_RandomVarV p22
            in
            match
                deref p22.margDist
              with
                Some pDist
              in
              let mDist2 = vDelayedSampling_posteriorPredictive (pDist, deref v51.dist)
                in
                let mDist3 =
                  match
                    mDist2
                  with
                    None {}
                  then
                    let #var"105" = vDelayedSampling_valueDs sampleT6 parent2 in
                    Some
                      (deref v51.dist)
                  else
                    let #var"106" = modref p22.next (Some
                           t255)
                    in
                    mDist2
                in
                let #var"103" = modref p22.terminal false in
                let #var"104" = modref v51.state 1 in
                modref v51.margDist mDist3
  let vDelayedSampling_withInfoPat: Info -> Ast_Pat -> Ast_Pat =
    lam info2.
      lam __sem_target42.
        match
          __sem_target42
        with
          NamedPat_PatNamed r60
        then
          NamedPat_PatNamed
            { r60 with info = info2 }
        else match
          __sem_target42
        with
          SeqTotPat_PatSeqTot r61
        then
          SeqTotPat_PatSeqTot
            { r61 with info = info2 }
        else match
          __sem_target42
        with
          SeqEdgePat_PatSeqEdge r62
        then
          SeqEdgePat_PatSeqEdge
            { r62 with info = info2 }
        else match
          __sem_target42
        with
          RecordPat_PatRecord r63
        then
          RecordPat_PatRecord
            { r63 with info = info2 }
        else match
          __sem_target42
        with
          DataPat_PatCon r64
        then
          DataPat_PatCon
            { r64 with info = info2 }
        else match
          __sem_target42
        with
          IntPat_PatInt r65
        then
          IntPat_PatInt
            { r65 with info = info2 }
        else match
          __sem_target42
        with
          CharPat_PatChar r66
        then
          CharPat_PatChar
            { r66 with info = info2 }
        else match
          __sem_target42
        with
          BoolPat_PatBool r67
        then
          BoolPat_PatBool
            { r67 with info = info2 }
        else match
          __sem_target42
        with
          AndPat_PatAnd r68
        then
          AndPat_PatAnd
            { r68 with info = info2 }
        else match
          __sem_target42
        with
          OrPat_PatOr r69
        then
          OrPat_PatOr
            { r69 with info = info2 }
        else match
          __sem_target42
        with
          NotPat_PatNot r70
        in
        NotPat_PatNot
            { r70 with info = info2 }
  let vDelayedSampling_withTypePat: Ast_Type -> Ast_Pat -> Ast_Pat =
    lam ty5: Ast_Type.
      lam __sem_target43.
        match
          __sem_target43
        with
          NamedPat_PatNamed r71
        then
          NamedPat_PatNamed
            { r71 with ty = ty5 }
        else match
          __sem_target43
        with
          SeqTotPat_PatSeqTot r72
        then
          SeqTotPat_PatSeqTot
            { r72 with ty = ty5 }
        else match
          __sem_target43
        with
          SeqEdgePat_PatSeqEdge r73
        then
          SeqEdgePat_PatSeqEdge
            { r73 with ty = ty5 }
        else match
          __sem_target43
        with
          RecordPat_PatRecord r74
        then
          RecordPat_PatRecord
            { r74 with ty = ty5 }
        else match
          __sem_target43
        with
          DataPat_PatCon r75
        then
          DataPat_PatCon
            { r75 with ty = ty5 }
        else match
          __sem_target43
        with
          IntPat_PatInt r76
        then
          IntPat_PatInt
            { r76 with ty = ty5 }
        else match
          __sem_target43
        with
          CharPat_PatChar r77
        then
          CharPat_PatChar
            { r77 with ty = ty5 }
        else match
          __sem_target43
        with
          BoolPat_PatBool r78
        then
          BoolPat_PatBool
            { r78 with ty = ty5 }
        else match
          __sem_target43
        with
          AndPat_PatAnd r79
        then
          AndPat_PatAnd
            { r79 with ty = ty5 }
        else match
          __sem_target43
        with
          OrPat_PatOr r80
        then
          OrPat_PatOr
            { r80 with ty = ty5 }
        else match
          __sem_target43
        with
          NotPat_PatNot r81
        in
        NotPat_PatNot
            { r81 with ty = ty5 }
  let vDelayedSampling_smap_Pat_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Pat -> Ast_Pat =
    lam f10.
      lam __sem_target44.
        match
          __sem_target44
        with
          p24
        in
        let res7 =
            vDelayedSampling_smapAccumL_Pat_Pat
              (lam #var"107".
                 lam a123.
                   ({}, f10 a123))
              {}
              p24
          in
          res7.1
  let vDelayedSampling_countPatNodes =
    lam count.
      lam __sem_target45.
        match
          __sem_target45
        with
          t256
        in
        let count1 = addi count 1 in
          let count2 =
            vDelayedSampling_sfold_Pat_Pat vDelayedSampling_countPatNodes count1 t256
          in
          let count3 =
            vDelayedSampling_sfold_Pat_Expr vDelayedSampling_countExprNodes count2 t256
          in
          let count4 =
            vDelayedSampling_sfold_Pat_Type vDelayedSampling_countTypeNodes count3 t256
          in
          count4
  let vDelayedSampling_sfold_Pat_Pat: all acc33. (acc33 -> Ast_Pat -> acc33) -> acc33 -> Ast_Pat -> acc33 =
    lam f11.
      lam acc34.
        lam __sem_target46.
          match
            __sem_target46
          with
            p25
          in
          let res8 =
              vDelayedSampling_smapAccumL_Pat_Pat
                (lam acc35.
                   lam a124.
                     (f11 acc35 a124, a124))
                acc34
                p25
            in
            res8.0
  let vDelayedSampling_smap_Expr_Pat: (Ast_Pat -> Ast_Pat) -> Ast_Expr -> Ast_Expr =
    lam f12.
      lam __sem_target47.
        match
          __sem_target47
        with
          p26
        in
        match
            vDelayedSampling_smapAccumL_Expr_Pat
              (lam #var"108".
                 lam a125.
                   ({}, f12 a125))
              {}
              p26
          with
            (_, p27)
          in
          p27
  let vDelayedSampling_smap_Pat_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Pat -> Ast_Pat =
    lam f13.
      lam __sem_target48.
        match
          __sem_target48
        with
          p28
        in
        match
            vDelayedSampling_smapAccumL_Pat_Expr
              (lam #var"109".
                 lam a126.
                   ({}, f13 a126))
              {}
              p28
          with
            (_, p29)
          in
          p29
  let vDelayedSampling_smap_Pat_Type: (Ast_Type -> Ast_Type) -> Ast_Pat -> Ast_Pat =
    lam f14.
      lam __sem_target49.
        match
          __sem_target49
        with
          p30
        in
        match
            vDelayedSampling_smapAccumL_Pat_Type
              (lam #var"110".
                 lam a127.
                   ({}, f14 a127))
              {}
              p30
          with
            (_, p31)
          in
          p31
  let vDelayedSampling_countExprNodes =
    lam count5.
      lam __sem_target50.
        match
          __sem_target50
        with
          t257
        in
        let count6 = addi count5 1 in
          let count7 =
            vDelayedSampling_sfold_Expr_Expr vDelayedSampling_countExprNodes count6 t257
          in
          let count8 =
            vDelayedSampling_sfold_Expr_Type vDelayedSampling_countTypeNodes count7 t257
          in
          let count9 =
            vDelayedSampling_sfold_Expr_TypeLabel vDelayedSampling_countTypeNodes count8 t257
          in
          let count10 =
            vDelayedSampling_sfold_Expr_Pat vDelayedSampling_countPatNodes count9 t257
          in
          count10
  let vDelayedSampling_countTypeNodes =
    lam count11.
      lam __sem_target51.
        match
          __sem_target51
        with
          t258
        in
        let count12 = addi count11 1 in
          let count13 =
            vDelayedSampling_sfold_Type_Type vDelayedSampling_countTypeNodes count12 t258
          in
          count13
  let vDelayedSampling_createDelayVar =
    lam __sem_target52.
      match
        __sem_target52
      with
        d46
      in
      DelayedGraph_RandomVarV
          { next = ref (None
                   {}),
            value = unsafeCoerce (ref (None
                      {})),
            dist = unsafeCoerce (ref d46),
            state = ref 0,
            margDist = unsafeCoerce (ref (None
                      {})),
            terminal = ref false }
  let vDelayedSampling_rapp_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f15.
      lam __sem_target53.
        match
          __sem_target53
        with
          ty6
        in
        let res9 =
            vDelayedSampling_rappAccumL_Type_Type
              (lam #var"111".
                 lam t259.
                   ({}, f15 t259))
              {}
              ty6
          in
          res9.1
  let vDelayedSampling_sfold_Expr_Pat: all acc36. (acc36 -> Ast_Pat -> acc36) -> acc36 -> Ast_Expr -> acc36 =
    lam f16.
      lam acc37.
        lam __sem_target54.
          match
            __sem_target54
          with
            p32
          in
          match
              vDelayedSampling_smapAccumL_Expr_Pat
                (lam acc38.
                   lam a128.
                     (f16 acc38 a128, a128))
                acc37
                p32
            with
              (acc39, _)
            in
            acc39
  let vDelayedSampling_sfold_Pat_Expr: all acc40. (acc40 -> Ast_Expr -> acc40) -> acc40 -> Ast_Pat -> acc40 =
    lam f17.
      lam acc41.
        lam __sem_target55.
          match
            __sem_target55
          with
            p33
          in
          match
              vDelayedSampling_smapAccumL_Pat_Expr
                (lam acc42.
                   lam a129.
                     (f17 acc42 a129, a129))
                acc41
                p33
            with
              (acc43, _)
            in
            acc43
  let vDelayedSampling_sfold_Pat_Type: all acc44. (acc44 -> Ast_Type -> acc44) -> acc44 -> Ast_Pat -> acc44 =
    lam f18.
      lam acc45.
        lam __sem_target56.
          match
            __sem_target56
          with
            p34
          in
          match
              vDelayedSampling_smapAccumL_Pat_Type
                (lam acc46.
                   lam a130.
                     (f18 acc46 a130, a130))
                acc45
                p34
            with
              (acc47, _)
            in
            acc47
  let vDelayedSampling_smap_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f19.
      lam __sem_target57.
        match
          __sem_target57
        with
          p35
        in
        let res10 =
            vDelayedSampling_smapAccumL_Expr_Expr
              (lam #var"112".
                 lam a131.
                   ({}, f19 a131))
              {}
              p35
          in
          res10.1
  let vDelayedSampling_smap_Expr_Type: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f20.
      lam __sem_target58.
        match
          __sem_target58
        with
          p36
        in
        let res11 =
            vDelayedSampling_smapAccumL_Expr_Type
              (lam #var"113".
                 lam a132.
                   ({}, f20 a132))
              {}
              p36
          in
          res11.1
  let vDelayedSampling_smap_Kind_Type: (Ast_Type -> Ast_Type) -> Ast_Kind -> Ast_Kind =
    lam f21: Ast_Type -> Ast_Type.
      lam __sem_target59.
        match
          __sem_target59
        with
          s69
        in
        match
            vDelayedSampling_smapAccumL_Kind_Type
              (lam #var"114".
                 lam x10.
                   ({}, f21 x10))
              {}
              s69
          with
            (_, s70)
          in
          s70
  let vDelayedSampling_smap_Type_Type: (Ast_Type -> Ast_Type) -> Ast_Type -> Ast_Type =
    lam f22.
      lam __sem_target60.
        match
          __sem_target60
        with
          p37
        in
        let res12 =
            vDelayedSampling_smapAccumL_Type_Type
              (lam #var"115".
                 lam a133.
                   ({}, f22 a133))
              {}
              p37
          in
          res12.1
  let vDelayedSampling_sremoveUnknown =
    lam __sem_target61.
      match
        __sem_target61
      with
        UnknownTypeAst_TyUnknown _
      then
        None
          {}
      else match
        __sem_target61
      with
        ty7
      in
      Some
          ty7
  let vDelayedSampling_stripTyAllBase =
    lam vars: [(Name, Ast_Kind)].
      lam __sem_target62.
        match
          __sem_target62
        with
          AllTypeAst_TyAll t260
        then
          vDelayedSampling_stripTyAllBase (snoc vars (t260.ident, t260.kind)) t260.ty
        else match
          __sem_target62
        with
          ty8
        in
        vDelayedSampling_rappAccumL_Type_Type vDelayedSampling_stripTyAllBase vars ty8
  let vDelayedSampling_sfold_Expr_Expr: all acc48. (acc48 -> Ast_Expr -> acc48) -> acc48 -> Ast_Expr -> acc48 =
    lam f23.
      lam acc49.
        lam __sem_target63.
          match
            __sem_target63
          with
            p38
          in
          let res13 =
              vDelayedSampling_smapAccumL_Expr_Expr
                (lam acc50.
                   lam a134.
                     (f23 acc50 a134, a134))
                acc49
                p38
            in
            res13.0
  let vDelayedSampling_sfold_Expr_Type: all acc51. (acc51 -> Ast_Type -> acc51) -> acc51 -> Ast_Expr -> acc51 =
    lam f24.
      lam acc52.
        lam __sem_target64.
          match
            __sem_target64
          with
            p39
          in
          let res14 =
              vDelayedSampling_smapAccumL_Expr_Type
                (lam acc53.
                   lam a135.
                     (f24 acc53 a135, a135))
                acc52
                p39
            in
            res14.0
  let vDelayedSampling_sfold_Kind_Type: all acc54. (acc54 -> Ast_Type -> acc54) -> acc54 -> Ast_Kind -> acc54 =
    lam f25: acc54 -> Ast_Type -> acc54.
      lam acc55: acc54.
        lam __sem_target65.
          match
            __sem_target65
          with
            s71
          in
          match
              vDelayedSampling_smapAccumL_Kind_Type
                (lam a136.
                   lam x11.
                     (f25 a136 x11, x11))
                acc55
                s71
            with
              (a137, _)
            in
            a137
  let vDelayedSampling_sfold_Type_Type: all acc56. (acc56 -> Ast_Type -> acc56) -> acc56 -> Ast_Type -> acc56 =
    lam f26.
      lam acc57.
        lam __sem_target66.
          match
            __sem_target66
          with
            p40
          in
          let res15 =
              vDelayedSampling_smapAccumL_Type_Type
                (lam acc58.
                   lam a138.
                     (f26 acc58 a138, a138))
                acc57
                p40
            in
            res15.0
  let vDelayedSampling_transformDsDist =
    lam sampleT7.
      lam __sem_target67.
        match
          __sem_target67
        with
          DelayedGraph_DsDistBernoulli t261
        then
          RuntimeDistElementary_DistBernoulli
            { p = vDelayedSampling_value (unsafeCoerce sampleT7) t261.p }
        else match
          __sem_target67
        with
          DelayedGraph_DsDistBeta t262
        then
          RuntimeDistElementary_DistBeta
            { a = vDelayedSampling_value (unsafeCoerce sampleT7) t262.a,
              b = vDelayedSampling_value (unsafeCoerce sampleT7) t262.b }
        else match
          __sem_target67
        with
          DelayedGraph_DsDistGaussian t263
        then
          RuntimeDistElementary_DistGaussian
            { mu =
                addf
                  t263.meanOffset
                  (mulf
                     t263.meanScale
                     (vDelayedSampling_value (unsafeCoerce sampleT7) t263.mu)),
              sigma =
                vDelayedSampling_value (unsafeCoerce sampleT7) t263.sigma }
        else match
          __sem_target67
        with
          DelayedGraph_DsDistCategorical t264
        then
          RuntimeDistElementary_DistCategorical
            { p = vDelayedSampling_value (unsafeCoerce sampleT7) t264.p }
        else match
          __sem_target67
        with
          DelayedGraph_DsDistPoisson t265
        then
          RuntimeDistElementary_DistPoisson
            { lambda =
                mulf
                  t265.scale
                  (vDelayedSampling_value (unsafeCoerce sampleT7) t265.lambda) }
        else match
          __sem_target67
        with
          DelayedGraph_DsDistBinomial t266
        then
          RuntimeDistElementary_DistBinomial
            { n = vDelayedSampling_value (unsafeCoerce sampleT7) t266.n,
              p = vDelayedSampling_value (unsafeCoerce sampleT7) t266.p }
        else match
          __sem_target67
        with
          DelayedGraph_DsDistUniform t267
        then
          RuntimeDistElementary_DistUniform
            { a = vDelayedSampling_value (unsafeCoerce sampleT7) t267.a,
              b = vDelayedSampling_value (unsafeCoerce sampleT7) t267.b }
        else match
          __sem_target67
        with
          DelayedGraph_DsDistGamma t268
        then
          RuntimeDistElementary_DistGamma
            { scale =
                vDelayedSampling_value (unsafeCoerce sampleT7) t268.scale,
              shape =
                vDelayedSampling_value (unsafeCoerce sampleT7) t268.shape }
        else match
          __sem_target67
        with
          DelayedGraph_DsDistExponential t269
        then
          RuntimeDistElementary_DistExponential
            { rate =
                vDelayedSampling_value (unsafeCoerce sampleT7) t269.rate }
        else match
          __sem_target67
        with
          DelayedGraph_DsDistLomax t270
        then
          RuntimeDistElementary_DistLomax
            { scale =
                vDelayedSampling_value (unsafeCoerce sampleT7) t270.scale,
              shape =
                vDelayedSampling_value (unsafeCoerce sampleT7) t270.shape }
        else match
          __sem_target67
        with
          DelayedGraph_DsDistDirichlet t271
        then
          RuntimeDistElementary_DistDirichlet
            { a = vDelayedSampling_value (unsafeCoerce sampleT7) t271.a }
        else match
          __sem_target67
        with
          DelayedGraph_DsDistMultinomial t272
        then
          RuntimeDistElementary_DistMultinomial
            { n = vDelayedSampling_value (unsafeCoerce sampleT7) t272.n,
              p = vDelayedSampling_value (unsafeCoerce sampleT7) t272.p }
        else match
          __sem_target67
        with
          DelayedGraph_DsDistBetabin t273
        then
          RuntimeDistElementary_DistBetabin
            { n = vDelayedSampling_value (unsafeCoerce sampleT7) t273.n,
              a = vDelayedSampling_value (unsafeCoerce sampleT7) t273.a,
              b = vDelayedSampling_value (unsafeCoerce sampleT7) t273.b }
        else match
          __sem_target67
        with
          DelayedGraph_DsDistNegativeBinomial t274
        then
          RuntimeDistElementary_DistNegativeBinomial
            { n = vDelayedSampling_value (unsafeCoerce sampleT7) t274.n,
              p = vDelayedSampling_value (unsafeCoerce sampleT7) t274.p }
        else match
          __sem_target67
        with
          _
        in
        error "not supported currently."
  let vDelayedSampling_mapPre_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f27.
      lam __sem_target68.
        match
          __sem_target68
        with
          expr
        in
        let expr1 = f27 expr in
          vDelayedSampling_smap_Expr_Expr (vDelayedSampling_mapPre_Expr_Expr f27) expr1
  let vDelayedSampling_createObsDelayVar =
    lam d47.
      lam __sem_target69.
        match
          __sem_target69
        with
          value8
        in
        DelayedGraph_RandomVarV
            { next = ref (None
                     {}),
              value =
                unsafeCoerce (ref (Some
                        value8)),
              dist = unsafeCoerce (ref d47),
              state = ref 0,
              margDist =
                unsafeCoerce (ref (None
                        {})),
              terminal = ref false }
  let vDelayedSampling_foldPre_Expr_Expr: all acc59. (acc59 -> Ast_Expr -> acc59) -> acc59 -> Ast_Expr -> acc59 =
    lam f28.
      lam acc60.
        lam __sem_target70.
          match
            __sem_target70
          with
            expr2
          in
          let acc61 = f28 acc60 expr2 in
            vDelayedSampling_sfold_Expr_Expr (vDelayedSampling_foldPre_Expr_Expr f28) acc61 expr2
  let vDelayedSampling_mapPost_Expr_Expr: (Ast_Expr -> Ast_Expr) -> Ast_Expr -> Ast_Expr =
    lam f29.
      lam __sem_target71.
        match
          __sem_target71
        with
          expr3
        in
        f29
            (vDelayedSampling_smap_Expr_Expr (vDelayedSampling_mapPost_Expr_Expr f29) expr3)
  let vDelayedSampling_foldPost_Expr_Expr: all acc62. (acc62 -> Ast_Expr -> acc62) -> acc62 -> Ast_Expr -> acc62 =
    lam f30.
      lam acc63.
        lam __sem_target72.
          match
            __sem_target72
          with
            expr4
          in
          f30
              (vDelayedSampling_sfold_Expr_Expr (vDelayedSampling_foldPost_Expr_Expr f30) acc63 expr4)
              expr4
  let vDelayedSampling_smapAccumL_Pat_Pat: all acc64. (acc64 -> Ast_Pat -> (acc64, Ast_Pat)) -> acc64 -> Ast_Pat -> (acc64, Ast_Pat) =
    lam f31.
      lam acc65.
        lam __sem_target73.
          match
            __sem_target73
          with
            SeqTotPat_PatSeqTot r82
          then
            match
              mapAccumL f31 acc65 r82.pats
            with
              (acc66, pats)
            in
            (acc66, SeqTotPat_PatSeqTot
                { r82 with pats = pats })
          else match
            __sem_target73
          with
            SeqEdgePat_PatSeqEdge p41
          then
            match
              mapAccumL f31 acc65 p41.prefix
            with
              (acc67, prefix)
            in
            match
                mapAccumL f31 acc67 p41.postfix
              with
                (acc68, postfix)
              in
              (acc68, SeqEdgePat_PatSeqEdge
                  { p41 with prefix = prefix, postfix = postfix })
          else match
            __sem_target73
          with
            RecordPat_PatRecord p42
          then
            match
              mapMapAccum
                (lam acc69.
                   lam #var"116".
                     lam p43.
                       f31 acc69 p43)
                acc65
                p42.bindings
            with
              (acc70, bindings)
            in
            (acc70, RecordPat_PatRecord
                { p42 with bindings = bindings })
          else match
            __sem_target73
          with
            DataPat_PatCon c8
          then
            match
              f31 acc65 c8.subpat
            with
              (acc71, subpat)
            in
            (acc71, DataPat_PatCon
                { c8 with subpat = subpat })
          else match
            __sem_target73
          with
            AndPat_PatAnd p44
          then
            match
              f31 acc65 p44.lpat
            with
              (acc72, lpat)
            in
            match
                f31 acc72 p44.rpat
              with
                (acc73, rpat)
              in
              (acc73, AndPat_PatAnd
                  { p44 with lpat = lpat, rpat = rpat })
          else match
            __sem_target73
          with
            OrPat_PatOr p45
          then
            match
              f31 acc65 p45.lpat
            with
              (acc74, lpat1)
            in
            match
                f31 acc74 p45.rpat
              with
                (acc75, rpat1)
              in
              (acc75, OrPat_PatOr
                  { p45 with lpat = lpat1, rpat = rpat1 })
          else match
            __sem_target73
          with
            NotPat_PatNot p46
          then
            match
              f31 acc65 p46.subpat
            with
              (acc76, subpat1)
            in
            (acc76, NotPat_PatNot
                { p46 with subpat = subpat1 })
          else match
            __sem_target73
          with
            p47
          in
          (acc65, p47)
  let vDelayedSampling_posteriorPredictive =
    lam __sem_target74.
      match
        __sem_target74
      with
        (DelayedGraph_DsDistBeta p48, DelayedGraph_DsDistBernoulli l11)
      then
        let a139 = vDelayedSampling_unwrap p48.a in
        let b19 = vDelayedSampling_unwrap p48.b in
        let pp = divf a139 (addf a139 b19) in
        Some
          (DelayedGraph_DsDistBernoulli
             { l11 with p = DelayedGraph_FloatParam
                   pp })
      else match
        __sem_target74
      with
        (DelayedGraph_DsDistBeta p49, DelayedGraph_DsDistBinomial l12)
      then
        Some
          (DelayedGraph_DsDistBetabin
             { n = l12.n, a = p49.a, b = p49.b })
      else match
        __sem_target74
      with
        (DelayedGraph_DsDistGaussian p50, DelayedGraph_DsDistGaussian ({mu = DelayedGraph_DelayParam _} & l13))
      then
        let mu01 =
          addf
            (mulf (vDelayedSampling_unwrap p50.mu) l13.meanScale)
            l13.meanOffset
        in
        let s01 =
          mulf (vDelayedSampling_unwrap p50.sigma) (absf l13.meanScale)
        in
        let s72 = vDelayedSampling_unwrap l13.sigma in
        let s217 = mulf s72 s72 in
        let s021 = mulf s01 s01 in
        let ppM = mulf s021 (divf mu01 s021) in
        let ppS = externalSqrt (addf s021 s217) in
        Some
          (DelayedGraph_DsDistGaussian
             { mu = DelayedGraph_FloatParam
                   ppM,
               sigma = DelayedGraph_FloatParam
                   ppS,
               meanScale = 1.,
               meanOffset = 0. })
      else match
        __sem_target74
      with
        (DelayedGraph_DsDistGamma p51, DelayedGraph_DsDistExponential l14)
      then
        let shape2 = vDelayedSampling_unwrap p51.shape in
        let scale2 = vDelayedSampling_unwrap p51.scale in
        let pScale = divf 1. scale2 in
        Some
          (DelayedGraph_DsDistLomax
             { scale = DelayedGraph_FloatParam
                   pScale,
               shape = DelayedGraph_FloatParam
                   shape2 })
      else match
        __sem_target74
      with
        (DelayedGraph_DsDistDirichlet p52, DelayedGraph_DsDistCategorical l15)
      then
        let a140 = vDelayedSampling_unwrap p52.a in
        let sum3 = foldl addf 0. a140 in
        let p53 = map (lam e4.
               divf e4 sum3) a140 in
        Some
          (DelayedGraph_DsDistCategorical
             { p = DelayedGraph_SeqFParam
                   p53 })
      else match
        __sem_target74
      with
        (DelayedGraph_DsDistGamma p54, DelayedGraph_DsDistPoisson l16)
      then
        let shape3 = ceilfi (vDelayedSampling_unwrap p54.shape) in
        let scale3 = vDelayedSampling_unwrap p54.scale in
        let pSc3 = divf 1. (addf (mulf scale3 l16.scale) 1.) in
        Some
          (DelayedGraph_DsDistNegativeBinomial
             { n = DelayedGraph_IntParam
                   shape3,
               p = DelayedGraph_FloatParam
                   pSc3 })
      else match
        __sem_target74
      with
        (_, _)
      in
      None
          {}
  let vDelayedSampling_smapAccumL_Expr_Pat: all acc77. (acc77 -> Ast_Pat -> (acc77, Ast_Pat)) -> acc77 -> Ast_Expr -> (acc77, Ast_Expr) =
    lam f32.
      lam acc78.
        lam __sem_target75.
          match
            __sem_target75
          with
            MatchAst_TmMatch t275
          then
            match
              f32 acc78 t275.pat
            with
              (acc79, pat)
            in
            (acc79, MatchAst_TmMatch
                { t275 with pat = pat })
          else match
            __sem_target75
          with
            p55
          in
          (acc78, p55)
  let vDelayedSampling_smapAccumL_Pat_Expr: all acc80. (acc80 -> Ast_Expr -> (acc80, Ast_Expr)) -> acc80 -> Ast_Pat -> (acc80, Ast_Pat) =
    lam f33.
      lam acc81.
        lam __sem_target76.
          match
            __sem_target76
          with
            p56
          in
          (acc81, p56)
  let vDelayedSampling_smapAccumL_Pat_Type: all acc82. (acc82 -> Ast_Type -> (acc82, Ast_Type)) -> acc82 -> Ast_Pat -> (acc82, Ast_Pat) =
    lam f34.
      lam acc83.
        lam __sem_target77.
          match
            __sem_target77
          with
            p57
          in
          (acc83, p57)
  let vDelayedSampling_smap_Expr_TypeLabel: (Ast_Type -> Ast_Type) -> Ast_Expr -> Ast_Expr =
    lam f35.
      lam __sem_target78.
        match
          __sem_target78
        with
          p58
        in
        let res16 =
            vDelayedSampling_smapAccumL_Expr_TypeLabel
              (lam #var"117".
                 lam a141.
                   ({}, f35 a141))
              {}
              p58
          in
          res16.1
  let vDelayedSampling_rappAccumL_Type_Type: all acc84. (acc84 -> Ast_Type -> (acc84, Ast_Type)) -> acc84 -> Ast_Type -> (acc84, Ast_Type) =
    lam f36.
      lam acc85.
        lam __sem_target79.
          match
            __sem_target79
          with
            AliasTypeAst_TyAlias t276
          then
            f36 acc85 t276.content
          else match
            __sem_target79
          with
            ty9
          in
          (acc85, ty9)
  let vDelayedSampling_sfold_Expr_TypeLabel: all acc86. (acc86 -> Ast_Type -> acc86) -> acc86 -> Ast_Expr -> acc86 =
    lam f37.
      lam acc87.
        lam __sem_target80.
          match
            __sem_target80
          with
            p59
          in
          let res17 =
              vDelayedSampling_smapAccumL_Expr_TypeLabel
                (lam acc88.
                   lam a142.
                     (f37 acc88 a142, a142))
                acc87
                p59
            in
            res17.0
  let vDelayedSampling_smapAccumL_Expr_Expr: all acc89. (acc89 -> Ast_Expr -> (acc89, Ast_Expr)) -> acc89 -> Ast_Expr -> (acc89, Ast_Expr) =
    lam f38.
      lam acc90.
        lam __sem_target81.
          match
            __sem_target81
          with
            AppAst_TmApp t277
          then
            match
              f38 acc90 t277.lhs
            with
              (acc91, lhs3)
            in
            match
                f38 acc91 t277.rhs
              with
                (acc92, rhs3)
              in
              (acc92, AppAst_TmApp
                  { t277 with lhs = lhs3, rhs = rhs3 })
          else match
            __sem_target81
          with
            LamAst_TmLam t278
          then
            match
              f38 acc90 t278.body
            with
              (acc93, body)
            in
            (acc93, LamAst_TmLam
                { t278 with body = body })
          else match
            __sem_target81
          with
            LetAst_TmLet t279
          then
            match
              f38 acc90 t279.body
            with
              (acc94, body1)
            in
            match
                f38 acc94 t279.inexpr
              with
                (acc95, inexpr)
              in
              (acc95, LetAst_TmLet
                  { t279 with body = body1, inexpr = inexpr })
          else match
            __sem_target81
          with
            RecLetsAst_TmRecLets t280
          then
            let bindingFunc =
              lam acc98.
                lam b20: RecLetsAst_RecLetBinding.
                  match
                    f38 acc98 b20.body
                  with
                    (acc99, body2)
                  in
                  (acc99, { b20 with body = body2 })
            in
            match
              mapAccumL bindingFunc acc90 t280.bindings
            with
              (acc96, bindings1)
            in
            match
                f38 acc96 t280.inexpr
              with
                (acc97, inexpr1)
              in
              (acc97, RecLetsAst_TmRecLets
                  { t280 with bindings = bindings1, inexpr = inexpr1 })
          else match
            __sem_target81
          with
            SeqAst_TmSeq t281
          then
            match
              mapAccumL f38 acc90 t281.tms
            with
              (acc100, tms)
            in
            (acc100, SeqAst_TmSeq
                { t281 with tms = tms })
          else match
            __sem_target81
          with
            RecordAst_TmRecord t282
          then
            match
              mapMapAccum
                (lam acc101.
                   lam #var"118".
                     lam e5.
                       f38 acc101 e5)
                acc90
                t282.bindings
            with
              (acc102, bindings2)
            in
            (acc102, RecordAst_TmRecord
                { t282 with bindings = bindings2 })
          else match
            __sem_target81
          with
            RecordAst_TmRecordUpdate t283
          then
            match
              f38 acc90 t283.rec
            with
              (acc103, rec7)
            in
            match
                f38 acc103 t283.value
              with
                (acc104, value9)
              in
              (acc104, RecordAst_TmRecordUpdate
                  { t283 with rec = rec7, value = value9 })
          else match
            __sem_target81
          with
            TypeAst_TmType t284
          then
            match
              f38 acc90 t284.inexpr
            with
              (acc105, inexpr2)
            in
            (acc105, TypeAst_TmType
                { t284 with inexpr = inexpr2 })
          else match
            __sem_target81
          with
            DataAst_TmConDef t285
          then
            match
              f38 acc90 t285.inexpr
            with
              (acc106, inexpr3)
            in
            (acc106, DataAst_TmConDef
                { t285 with inexpr = inexpr3 })
          else match
            __sem_target81
          with
            DataAst_TmConApp t286
          then
            match
              f38 acc90 t286.body
            with
              (acc107, body3)
            in
            (acc107, DataAst_TmConApp
                { t286 with body = body3 })
          else match
            __sem_target81
          with
            MatchAst_TmMatch t287
          then
            match
              f38 acc90 t287.target
            with
              (acc108, target)
            in
            match
                f38 acc108 t287.thn
              with
                (acc109, thn)
              in
              match
                  f38 acc109 t287.els
                with
                  (acc110, els)
                in
                (acc110, MatchAst_TmMatch
                    { t287 with target = target, thn = thn, els = els })
          else match
            __sem_target81
          with
            UtestAst_TmUtest t288
          then
            match
              f38 acc90 t288.test
            with
              (acc111, test)
            in
            match
                f38 acc111 t288.expected
              with
                (acc112, expected)
              in
              match
                  f38 acc112 t288.next
                with
                  (acc113, next)
                in
                match
                    optionMapAccum f38 acc113 t288.tusing
                  with
                    (acc114, tusing)
                  in
                  match
                      optionMapAccum f38 acc114 t288.tonfail
                    with
                      (acc115, tonfail)
                    in
                    (acc115, UtestAst_TmUtest
                        { t288
                          with
                          test = test,
                            expected = expected,
                            next = next,
                            tusing = tusing,
                            tonfail = tonfail })
          else match
            __sem_target81
          with
            ExtAst_TmExt t289
          then
            match
              f38 acc90 t289.inexpr
            with
              (acc116, inexpr4)
            in
            (acc116, ExtAst_TmExt
                { t289 with inexpr = inexpr4 })
          else match
            __sem_target81
          with
            p60
          in
          (acc90, p60)
  let vDelayedSampling_smapAccumL_Expr_Type: all acc117. (acc117 -> Ast_Type -> (acc117, Ast_Type)) -> acc117 -> Ast_Expr -> (acc117, Ast_Expr) =
    lam f39.
      lam acc118.
        lam __sem_target82.
          match
            __sem_target82
          with
            LamAst_TmLam t290
          then
            match
              f39 acc118 t290.tyAnnot
            with
              (acc119, tyAnnot)
            in
            (acc119, LamAst_TmLam
                { t290 with tyAnnot = tyAnnot })
          else match
            __sem_target82
          with
            LetAst_TmLet t291
          then
            match
              f39 acc118 t291.tyAnnot
            with
              (acc120, tyAnnot1)
            in
            (acc120, LetAst_TmLet
                { t291 with tyAnnot = tyAnnot1 })
          else match
            __sem_target82
          with
            RecLetsAst_TmRecLets t292
          then
            let bindingFunc1 =
              lam acc122.
                lam b21: RecLetsAst_RecLetBinding.
                  match
                    f39 acc122 b21.tyAnnot
                  with
                    (acc123, tyAnnot2)
                  in
                  (acc123, { b21 with tyAnnot = tyAnnot2 })
            in
            match
              mapAccumL bindingFunc1 acc118 t292.bindings
            with
              (acc121, bindings3)
            in
            (acc121, RecLetsAst_TmRecLets
                { t292 with bindings = bindings3 })
          else match
            __sem_target82
          with
            TypeAst_TmType t293
          then
            match
              f39 acc118 t293.tyIdent
            with
              (acc124, tyIdent)
            in
            (acc124, TypeAst_TmType
                { t293 with tyIdent = tyIdent })
          else match
            __sem_target82
          with
            DataAst_TmConDef t294
          then
            match
              f39 acc118 t294.tyIdent
            with
              (acc125, tyIdent1)
            in
            (acc125, DataAst_TmConDef
                { t294 with tyIdent = tyIdent1 })
          else match
            __sem_target82
          with
            ExtAst_TmExt t295
          then
            match
              f39 acc118 t295.tyIdent
            with
              (acc126, tyIdent2)
            in
            (acc126, ExtAst_TmExt
                { t295 with tyIdent = tyIdent2 })
          else match
            __sem_target82
          with
            p61
          in
          (acc118, p61)
  let vDelayedSampling_smapAccumL_Kind_Type: all acc127. (acc127 -> Ast_Type -> (acc127, Ast_Type)) -> acc127 -> Ast_Kind -> (acc127, Ast_Kind) =
    lam f40.
      lam acc128.
        lam __sem_target83.
          match
            __sem_target83
          with
            RecordKindAst_Record r83
          then
            match
              mapMapAccum
                (lam acc129.
                   lam #var"119".
                     lam e6.
                       f40 acc129 e6)
                acc128
                r83.fields
            with
              (acc130, flds)
            in
            (acc130, RecordKindAst_Record
                { r83 with fields = flds })
          else match
            __sem_target83
          with
            s73
          in
          (acc128, s73)
  let vDelayedSampling_smapAccumL_Type_Type: all acc131. (acc131 -> Ast_Type -> (acc131, Ast_Type)) -> acc131 -> Ast_Type -> (acc131, Ast_Type) =
    lam f41.
      lam acc132.
        lam __sem_target84.
          match
            __sem_target84
          with
            FunTypeAst_TyArrow t296
          then
            match
              f41 acc132 t296.from
            with
              (acc133, from)
            in
            match
                f41 acc133 t296.to
              with
                (acc134, to)
              in
              (acc134, FunTypeAst_TyArrow
                  { t296 with from = from, to = to })
          else match
            __sem_target84
          with
            SeqTypeAst_TySeq t297
          then
            match
              f41 acc132 t297.ty
            with
              (acc135, ty10)
            in
            (acc135, SeqTypeAst_TySeq
                { t297 with ty = ty10 })
          else match
            __sem_target84
          with
            TensorTypeAst_TyTensor t298
          then
            match
              f41 acc132 t298.ty
            with
              (acc136, ty11)
            in
            (acc136, TensorTypeAst_TyTensor
                { t298 with ty = ty11 })
          else match
            __sem_target84
          with
            RecordTypeAst_TyRecord t299
          then
            match
              mapMapAccum
                (lam acc137.
                   lam #var"120".
                     lam e7.
                       f41 acc137 e7)
                acc132
                t299.fields
            with
              (acc138, fields)
            in
            (acc138, RecordTypeAst_TyRecord
                { t299 with fields = fields })
          else match
            __sem_target84
          with
            VariantTypeAst_TyVariant t300
          then
            match
              mapMapAccum
                (lam acc139.
                   lam #var"121".
                     lam e8.
                       f41 acc139 e8)
                acc132
                t300.constrs
            with
              (acc140, constrs)
            in
            (acc140, VariantTypeAst_TyVariant
                { t300 with constrs = constrs })
          else match
            __sem_target84
          with
            ConTypeAst_TyCon t301
          then
            match
              f41 acc132 t301.data
            with
              (acc141, data1)
            in
            (acc141, ConTypeAst_TyCon
                { t301 with data = data1 })
          else match
            __sem_target84
          with
            AllTypeAst_TyAll t302
          then
            match
              vDelayedSampling_smapAccumL_Kind_Type f41 acc132 t302.kind
            with
              (acc142, kind)
            in
            match
                f41 acc142 t302.ty
              with
                (acc143, ty12)
              in
              (acc143, AllTypeAst_TyAll
                  { t302 with kind = kind, ty = ty12 })
          else match
            __sem_target84
          with
            AppTypeAst_TyApp t303
          then
            match
              f41 acc132 t303.lhs
            with
              (acc144, lhs4)
            in
            match
                f41 acc144 t303.rhs
              with
                (acc145, rhs4)
              in
              (acc145, AppTypeAst_TyApp
                  { t303 with lhs = lhs4, rhs = rhs4 })
          else match
            __sem_target84
          with
            AliasTypeAst_TyAlias t304
          then
            match
              f41 acc132 t304.content
            with
              (acc146, content)
            in
            match
                f41 acc146 t304.display
              with
                (acc147, display)
              in
              (acc147, AliasTypeAst_TyAlias
                  { t304 with content = content, display = display })
          else match
            __sem_target84
          with
            p62
          in
          (acc132, p62)
  let vDelayedSampling_mapAccumLPre_Expr_Expr: all acc148. (acc148 -> Ast_Expr -> (acc148, Ast_Expr)) -> acc148 -> Ast_Expr -> (acc148, Ast_Expr) =
    lam f42.
      lam acc149.
        lam __sem_target85.
          match
            __sem_target85
          with
            expr5
          in
          match
              f42 acc149 expr5
            with
              (acc150, expr6)
            in
            vDelayedSampling_smapAccumL_Expr_Expr (vDelayedSampling_mapAccumLPre_Expr_Expr f42) acc150 expr6
  let vDelayedSampling_mapAccumLPost_Expr_Expr: all acc151. (acc151 -> Ast_Expr -> (acc151, Ast_Expr)) -> acc151 -> Ast_Expr -> (acc151, Ast_Expr) =
    lam f43.
      lam acc152.
        lam __sem_target86.
          match
            __sem_target86
          with
            expr7
          in
          match
              vDelayedSampling_smapAccumL_Expr_Expr (vDelayedSampling_mapAccumLPost_Expr_Expr f43) acc152 expr7
            with
              (acc153, expr8)
            in
            f43 acc153 expr8
  let vDelayedSampling_smapAccumL_Expr_TypeLabel: all acc154. (acc154 -> Ast_Type -> (acc154, Ast_Type)) -> acc154 -> Ast_Expr -> (acc154, Ast_Expr) =
    lam f44.
      lam acc155.
        lam __sem_target87.
          match
            __sem_target87
          with
            LamAst_TmLam t305
          then
            match
              f44 acc155 t305.tyParam
            with
              (acc156, tyParam)
            in
            match
                f44 acc156 t305.ty
              with
                (acc157, ty13)
              in
              (acc157, LamAst_TmLam
                  { t305 with tyParam = tyParam, ty = ty13 })
          else match
            __sem_target87
          with
            LetAst_TmLet t306
          then
            match
              f44 acc155 t306.tyBody
            with
              (acc158, tyBody)
            in
            match
                f44 acc158 t306.ty
              with
                (acc159, ty14)
              in
              (acc159, LetAst_TmLet
                  { t306 with tyBody = tyBody, ty = ty14 })
          else match
            __sem_target87
          with
            RecLetsAst_TmRecLets t307
          then
            let bindingFunc2 =
              lam acc162.
                lam b22: RecLetsAst_RecLetBinding.
                  match
                    f44 acc162 b22.tyBody
                  with
                    (acc163, tyBody1)
                  in
                  (acc163, { b22 with tyBody = tyBody1 })
            in
            match
              mapAccumL bindingFunc2 acc155 t307.bindings
            with
              (acc160, bindings4)
            in
            match
                f44 acc160 t307.ty
              with
                (acc161, ty15)
              in
              (acc161, RecLetsAst_TmRecLets
                  { t307 with bindings = bindings4, ty = ty15 })
          else match
            __sem_target87
          with
            p63
          in
          match
              f44 acc155 (vDelayedSampling_tyTm p63)
            with
              (acc164, ty16)
            in
            (acc164, vDelayedSampling_withType ty16 p63)
in
let marginalize =
  lam a105.
    lam t136.
      vDelayedSampling_marginalize a105 t136
in
let graft =
  lam a104.
    lam t135.
      vDelayedSampling_graft a104 t135
in
let prune =
  lam a103.
    lam t134.
      vDelayedSampling_prune a103 t134
in
let getMargDist = lam v36.
    vDelayedSampling_getMargDist v36
in
let sampleDs =
  lam a102.
    lam t133.
      vDelayedSampling_sampleDs a102 t133
in
let valueDs =
  lam a101.
    lam t132.
      vDelayedSampling_valueDs a101 t132
in
let realize =
  lam a100.
    lam t131.
      vDelayedSampling_realize a100 t131
in
let unwrap = lam p8.
    vDelayedSampling_unwrap p8 in
let posteriorPredictive = lam r6.
    vDelayedSampling_posteriorPredictive r6
in
let posterior = lam o1.
    lam r5.
      vDelayedSampling_posterior o1 r5
in
let v2str = lam v35.
    vDelayedSampling_v2str v35 in
let getValue = lam v34.
    vDelayedSampling_getValue v34 in
let value = lam a99.
    lam v33.
      vDelayedSampling_value a99 v33
in
let transformDsDist =
  lam a98.
    lam d16.
      vDelayedSampling_transformDsDist a98 d16
in
let createDelayVar = lam d15.
    vDelayedSampling_createDelayVar d15
in
let createObsDelayVar =
  lam d14.
    lam o.
      vDelayedSampling_createObsDelayVar d14 o
in
type WriteChannel
in
type ReadChannel
in
external fileExists! : [Char] -> Bool
in
external deleteFile! : [Char] -> ()
in
let deleteFile1 =
  lam s66.
    match
      fileExists s66
    with
      true
    then
      deleteFile s66
    else
      {}
in
external fileSize! : [Char] -> Int
in
external writeOpen! : [Char] -> (WriteChannel, Bool)
in
let writeOpen1: [Char] -> Option WriteChannel =
  lam name1.
    match
      writeOpen name1
    with
      (wc, true)
    then
      Some
        wc
    else
      None
        {}
in
external writeString! : WriteChannel -> [Char] -> ()
in
let writeString1: WriteChannel -> [Char] -> () = lam c7.
    lam s65.
      writeString c7 s65
in
external writeFlush! : WriteChannel -> ()
in
external writeClose! : WriteChannel -> ()
in
external readOpen! : [Char] -> (ReadChannel, Bool)
in
let readOpen1: [Char] -> Option ReadChannel =
  lam name.
    match
      readOpen name
    with
      (rc3, true)
    then
      Some
        rc3
    else
      None
        {}
in
external readLine! : ReadChannel -> ([Char], Bool)
in
let readLine1: ReadChannel -> Option [Char] =
  lam rc2.
    match
      readLine rc2
    with
      (s64, false)
    then
      Some
        s64
    else
      None
        {}
in
external readBytes! : ReadChannel -> Int -> ([Char], Bool, Bool)
in
let readBytes1: ReadChannel -> Int -> Option [Char] =
  lam rc1.
    lam len1.
      let #var"X10" = readBytes rc1 len1 in
      match
        #var"X10"
      with
        ("", true, _)
      then
        None
          {}
      else match
        #var"X10"
      with
        (s63, _, false)
      then
        Some
          s63
      else match
        #var"X10"
      with
        (_, _, _)
      in
      None
          {}
in
recursive
  let readBytesBuffered: ReadChannel -> Int -> Option [Char] =
    lam rc.
      lam len.
        let #var"X9" = readBytes1 rc len in
        match
          #var"X9"
        with
          Some s62
        then
          let actual_length = length s62 in
          match
            eqi actual_length len
          with
            true
          then
            Some
              s62
          else match
            readBytesBuffered rc (subi len actual_length)
          with
            Some s215
          then
            Some
              (join [ s62,
                   s215 ])
          else
            None
              {}
        else match
          #var"X9"
        with
          None {}
        in
        None
            {}
in
external readString! : ReadChannel -> [Char]
in
external readClose! : ReadChannel -> ()
in
external stdin! : ReadChannel
in
external stdout! : WriteChannel
in
external stderr! : WriteChannel
in
type Res a54 =
  ([Float], [a54])
in
type ResOption a55 =
  ([Float], [Option a55])
in
(match
     compileOptions.seedIsSome
   with
     true
   then
     setSeed compileOptions.seed
   else
     {})
; let negInf = divf (negf 1.) 0. in
let numarg =
  lam #var"86".
    match
      neqi (length argv) 2
    with
      true
    then
      let #var"87" =
        writeString1
          stderr
          "The number of particles/points need to be given as a program argument.\n"
      in
      exit 1
    else
      string2int (get argv 1)
in
let saveCSV =
  lam res6.
    lam names4.
      lam filename.
        lam expOnLogWeights1.
          match
            writeOpen1 filename
          with
            Some ch
          then
            let #var"82" = writeString1 ch (strJoin "," names4) in
            let #var"83" = writeString1 ch "\n" in
            let #var"84" =
              iter
                (lam lst.
                   let #var"85" = writeString1 ch (strJoin "," (map float2string lst))
                   in
                   writeString1 ch "\n")
                (expOnLogWeights1 res6)
            in
            writeClose ch
          else
            writeString1
              stderr
              (join
                 [ "Cannot write to file ",
                   filename,
                   "\n" ])
in
let printStatistics =
  lam res5.
    lam names2.
      lam normConst1.
        lam expVals2.
          lam varianceVals1.
            let pad = 18 in
            let padPrint =
              lam s61.
                lam n5.
                  match
                    geqi n5 (length s61)
                  with
                    true
                  then
                    let #var"80" = print s61 in
                    print
                      (create
                         (subi n5 (length s61))
                         (lam #var"81".
                            ' '))
                  else
                    print s61
            in
            let #var"68" = padPrint "Variable" 14 in
            let #var"69" = padPrint "Expected Value" pad in
            let #var"70" = padPrint "Variance" pad in
            let #var"71" = padPrint "Standard Deviation" pad in
            let #var"72" = print "\n" in
            recursive
              let work4 =
                lam names3.
                  lam ev.
                    lam vv.
                      match
                        (names3, ev, vv)
                      with
                        ([ n4 ] ++ ns4, [ e2 ] ++ es1, [ v32 ] ++ vs)
                      then
                        match
                          isPrefix eqChar "#" n4
                        with
                          true
                        then
                          work4 ns4 ev vv
                        else
                          let #var"75" = padPrint n4 14 in
                          let #var"76" = padPrint (float2string e2) pad in
                          let #var"77" = padPrint (float2string v32) pad in
                          let #var"78" = padPrint (float2string (sqrt1 v32)) pad in
                          let #var"79" = print "\n" in
                          work4 ns4 es1 vs
                      else
                        {}
            in
            let #var"73" = work4 names2 expVals2 varianceVals1 in
            let #var"74" = print "\n" in
            print
              (join
                 [ "Normalization constant: ",
                   float2string normConst1,
                   "\n" ])
in
let systematicSample: all a97. [a97] -> [Float] -> Float -> Int -> [a97] =
  lam seq2.
    lam weights7.
      lam weightSum.
        lam sampleCount.
          let step = divf weightSum (int2float sampleCount) in
          recursive
            let systematicSampleRec =
              lam seq3.
                lam weights8.
                  lam u.
                    lam out1.
                      match
                        null weights8
                      with
                        true
                      then
                        out1
                      else match
                        ltf u (head weights8)
                      with
                        true
                      then
                        systematicSampleRec seq3 weights8 (addf u step) (cons (head seq3) out1)
                      else
                        systematicSampleRec (tail seq3) (tail weights8) (subf u (head weights8)) out1
          in
          systematicSampleRec seq2 weights7 (uniformContinuousSample 0. step) (toList "")
in
let normConstant: [Float] -> Float =
  lam res4.
    let max1 =
      foldl
        (lam acc31.
           lam x8.
             match
               geqf x8 acc31
             with
               true
             then
               x8
             else
               acc31)
        negInf
        res4
    in
    match
      eqf max1 negInf
    with
      true
    then
      negInf
    else
      let sum1 =
        foldl
          (lam acc30.
             lam x7.
               addf (exp1 (subf x7 max1)) acc30)
          0.
          res4
      in
      subf (addf max1 (log1 sum1)) (log1 (int2float (length res4)))
in
let expectedValues =
  lam res3: [[Float]].
    lam normConst.
      foldl
        (lam acc28.
           lam t130.
             let w5 = exp1 (subf (head t130) normConst) in
             let ys = tail t130 in
             recursive
               let work3 =
                 lam acc29.
                   lam xs3.
                     match
                       (acc29, xs3)
                     with
                       ([ a96 ] ++ as1, [ x6 ] ++ xs4)
                     then
                       cons (addf (mulf x6 w5) a96) (work3 as1 xs4)
                     else
                       ""
             in
             work3 acc28 ys)
        (create
           (subi (length (head res3)) 1)
           (lam #var"67".
              0.))
        res3
in
let variance =
  lam res2.
    lam expVals1.
      let sum =
        foldl
          (lam acc26.
             lam t129.
               recursive
                 let work2 =
                   lam acc27.
                     lam xs1.
                       lam expv.
                         match
                           (acc27, xs1, expv)
                         with
                           ([ a95 ] ++ as, [ x5 ] ++ xs2, [ e1 ] ++ es)
                         then
                           let v31 = subf x5 e1 in
                           cons (addf a95 (mulf v31 v31)) (work2 as xs2 es)
                         else
                           ""
               in
               work2 acc26 (tail t129) expVals1)
          (create
             (subi (length (head res2)) 1)
             (lam #var"66".
                0.))
          res2
      in
      let dval = int2float (length res2) in
      map (lam x4.
           divf x4 dval) sum
in
let expOnLogWeights =
  lam res1.
    mapReverse
      (lam t128.
         match
           t128
         with
           [ x3 ] ++ xs
         in
         cons (exp1 x3) xs)
      res1
in
let output =
  lam res: [[Float]].
    lam names: [[Char]].
      let names1 = cons "#" names in
      let nc = normConstant (map head res) in
      let expVals = expectedValues res nc in
      let varianceVals = variance res expVals in
      let #var"65" = printStatistics res names1 nc expVals varianceVals
      in
      saveCSV res names1 "data.csv" expOnLogWeights
in
let printSamples: all a94. (a94 -> [Char]) -> [Float] -> [a94] -> () =
  lam printFun1.
    lam weights4.
      lam samples4.
        recursive
          let rec6: [Float] -> [a94] -> () =
            lam weights5.
              lam samples5.
                match
                  null weights5
                with
                  true
                then
                  {}
                else
                  let w4 = head weights5 in
                  let weights6 = tail weights5 in
                  let s60 = head samples5 in
                  let samples6 = tail samples5 in
                  let #var"61" = print (printFun1 s60) in
                  let #var"62" = print " " in
                  let #var"63" = print (float2string w4) in
                  let #var"64" = print "\n" in
                  rec6 weights6 samples6
        in
        match
          compileOptions.printSamples
        with
          true
        then
          rec6 weights4 samples4
        else
          {}
in
let printSamplesOption: all a93. (a93 -> [Char]) -> [Float] -> [Option a93] -> () =
  lam printFun.
    lam weights1.
      lam samples1.
        recursive
          let rec5: [Float] -> [Option a93] -> () =
            lam weights2.
              lam samples2.
                match
                  null weights2
                with
                  true
                then
                  {}
                else
                  let w3 = head weights2 in
                  let weights3 = tail weights2 in
                  let s58 = head samples2 in
                  let samples3 = tail samples2 in
                  let #var"57" =
                    match
                      s58
                    with
                      Some s59
                    then
                      print (printFun s59)
                    else
                      print "."
                  in
                  let #var"58" = print " " in
                  let #var"59" = print (float2string w3) in
                  let #var"60" = print "\n" in
                  rec5 weights3 samples3
        in
        match
          compileOptions.printSamples
        with
          true
        then
          rec5 weights1 samples1
        else
          {}
in
let _mcmcAccepts = ref 0 in
let _mcmcSamples = ref (negi 1) in
let mcmcAcceptInit =
  lam n3.
    let #var"56" = modref _mcmcSamples n3 in
    modref _mcmcAccepts 0
in
let mcmcAccept =
  lam #var"55".
    modref _mcmcAccepts (addi (deref _mcmcAccepts) 1)
in
let mcmcAcceptRate =
  lam #var"54".
    divf
      (int2float (deref _mcmcAccepts))
      (int2float (deref _mcmcSamples))
in
let seqToStr =
  lam elToStr.
    lam seq1.
      join
        [ "[",
          strJoin "," (map elToStr seq1),
          "]" ]
in
type Checkpoint a56
in
con Resample: all a57. {k: () -> Checkpoint a57} -> Checkpoint a57 in
con End: all a58. a58 -> Checkpoint a58 in
type State =
  Ref Float
in
let resample = lam k32.
    Resample
      { k = k32 } in
let updateWeight =
  lam weight1.
    lam state2.
      modref state2 (addf (deref state2) weight1)
in
let stopFirstAssume = lam dist.
    lam cont4.
      (Some
        dist, cont4)
in
let stopInit = lam cont3.
    (None
      {}, cont3) in
let run: all a90. all b16. Unknown -> (State -> (Option (RuntimeDistBase_Dist b16), b16 -> Checkpoint a90)) -> RuntimeDistBase_Dist a90 =
  lam config1.
    lam model.
      let particleCount3 = config1.particles in
      let logParticleCount = log1 (int2float particleCount3) in
      let state1 = ref 0. in
      type Stop a91 =
        {weight: Float, checkpoint: Checkpoint a91}
      in
      let start: (b16 -> Checkpoint a90) -> Float -> (() -> b16) -> Int -> Stop a90 =
        lam cont2.
          lam weight.
            lam sampleFun.
              lam #var"52".
                let #var"53" = modref state1 weight in
                let checkpoint1: Checkpoint a90 = cont2 (sampleFun {}) in
                { weight = deref state1, checkpoint = checkpoint1 }
      in
      let propagate =
        lam particle.
          lam contWeight1.
            let #var"51" = modref state1 contWeight1 in
            match
              particle.checkpoint
            with
              Resample {k = k31}
            then
              let checkpoint = k31 {} in
              { weight = deref state1, checkpoint = checkpoint }
            else match
              particle.checkpoint
            with
              End _
            in
            particle
      in
      recursive
        let runRec =
          lam particles1.
            match
              forAll
                (lam p2.
                   match
                     p2.checkpoint
                   with
                     End _
                   then
                     true
                   else
                     false)
                particles1
            with
              true
            then
              unzip
                (mapReverse
                   (lam p3.
                      (p3.weight, match
                        p3.checkpoint
                      with
                        End a92
                      in
                      a92))
                   particles1)
            else
              let maxWeight =
                foldl
                  (lam acc25.
                     lam p7.
                       match
                         geqf p7.weight acc25
                       with
                         true
                       then
                         p7.weight
                       else
                         acc25)
                  (negf inf)
                  particles1
              in
              let expWeights =
                reverse
                  (mapReverse
                     (lam p6.
                        exp1 (subf p6.weight maxWeight))
                     particles1)
              in
              let sums =
                foldl
                  (lam acc24.
                     lam w2.
                       (addf acc24.0 w2, addf acc24.1 (mulf w2 w2)))
                  (0., 0.)
                  expWeights
              in
              let ess = divf (mulf sums.0 sums.0) sums.1 in
              match
                ltf (mulf 0.7 (int2float particleCount3)) ess
              with
                true
              then
                let particles2 =
                  mapReverse
                    (lam p4.
                       propagate p4 p4.weight)
                    particles1
                in
                runRec particles2
              else
                let contWeight = subf (addf maxWeight (log1 sums.0)) logParticleCount
                in
                let resampled = systematicSample particles1 expWeights sums.0 particleCount3
                in
                let particles3 =
                  mapReverse
                    (lam p5.
                       propagate p5 contWeight)
                    resampled
                in
                runRec particles3
      in
      match
        model state1
      with
        (d12, cont1)
      in
      let particles: [Stop a90] =
          match
            d12
          with
            Some d13
          then
            match
              d13
            with
              RuntimeDistEmpirical_DistEmpirical r4
            then
              match
                eqi particleCount3 (length r4.samples)
              with
                true
              then
                foldl2
                  (lam acc23.
                     lam s57.
                       lam lw.
                         cons
                           (start
                              cont1
                              lw
                              (lam #var"47".
                                 s57)
                              0)
                           acc23)
                  (toList "")
                  r4.samples
                  r4.logWeights
              else
                createList
                  particleCount3
                  (start
                     cont1
                     0.
                     (lam #var"48".
                        vRuntimeDist_sample d13))
            else
              createList
                particleCount3
                (start
                   cont1
                   0.
                   (lam #var"49".
                      vRuntimeDist_sample d13))
          else
            createList
              particleCount3
              (start
                 cont1 0. (lam #var"50".
                    unsafeCoerce {}))
        in
        match
          runRec particles
        with
          (weights, samples)
        in
        match
            compileOptions.subsample
          with
            true
          then
            vRuntimeDist_constructDistEmpiricalSubsample
              compileOptions.subsampleSize
              samples
              weights
              (RuntimeDistEmpirical_EmpNorm
                 { normConst = normConstant weights })
          else
            vRuntimeDist_constructDistEmpirical
              samples
              weights
              (RuntimeDistEmpirical_EmpNorm
                 { normConst = normConstant weights })
in
let and1: Bool -> Bool -> Bool =
  lam a89: Bool.
    lam b15: Bool.
      match
        a89
      with
        true
      then
        b15
      else
        false
in
type Option1 a59
in
con Some1: all a60. a60 -> Option1 a60 in
con None1: all a61. () -> Option1 a61 in
type These2 a62 b7
in
type Either1 a63 b8
in
con Left1: all a64. all b9. a64 -> Either1 a64 b9 in
con Right1: all a65. all b10. b10 -> Either1 a65 b10 in
recursive
  let work1: all b14. all a88. (a88 -> b14 -> Bool) -> [a88] -> [b14] -> Bool =
    lam eq1: a88 -> b14 -> Bool.
      lam s114: [a88].
        lam s214: [b14].
          match
            (s114, s214)
          with
            ([ h12 ] ++ t127, [ h22 ] ++ t211)
          then
            match
              eq1 h12 h22
            with
              true
            then
              work1 eq1 t127 t211
            else
              false
          else
            true
in
let eqSeq1: all a87. all b13. (a87 -> b13 -> Bool) -> [a87] -> [b13] -> Bool =
  lam eq: a87 -> b13 -> Bool.
    lam s113: [a87].
      lam s213: [b13].
        let n12 = length s113 in
        let n22 = length s213 in
        let ndiff1 = subi n12 n22 in
        match
          eqi ndiff1 0
        with
          true
        then
          work1 eq s113 s213
        else
          false
in
let join1: all a86. [[a86]] -> [a86] = lam seqs: [[a86]].
    foldl concat "" seqs
in
recursive
  let find: all a85. (a85 -> Bool) -> [a85] -> Option1 a85 =
    lam p1: a85 -> Bool.
      lam seq: [a85].
        match
          null seq
        with
          true
        then
          None1
            {}
        else match
          p1 (head seq)
        with
          true
        then
          Some1
            (head seq)
        else
          find p1 (tail seq)
in
recursive
  let work: all a84. (a84 -> a84 -> Int) -> [a84] -> [a84] -> Int =
    lam cmp4: a84 -> a84 -> Int.
      lam s112: [a84].
        lam s212: [a84].
          match
            (s112, s212)
          with
            ([ h11 ] ++ t126, [ h21 ] ++ t210)
          then
            let c6 = cmp4 h11 h21 in
            match
              eqi c6 0
            with
              true
            then
              work cmp4 t126 t210
            else
              c6
          else
            0
in
let seqCmp1: all a83. (a83 -> a83 -> Int) -> [a83] -> [a83] -> Int =
  lam cmp3: a83 -> a83 -> Int.
    lam s111: [a83].
      lam s211: [a83].
        let n11 = length s111 in
        let n21 = length s211 in
        let ndiff = subi n11 n21 in
        match
          eqi ndiff 0
        with
          true
        then
          work cmp3 s111 s211
        else
          ndiff
in
recursive
  let seqJoin: all a82. [a82] -> [[a82]] -> [a82] =
    lam delim: [a82].
      lam ss4: [[a82]].
        match
          null ss4
        with
          true
        then
          ""
        else match
          eqi (length ss4) 1
        with
          true
        then
          head ss4
        else
          concat (concat (head ss4) delim) (seqJoin delim (tail ss4))
in
let printLn1 =
  lam s56.
    let #var"46" = print (concat s56 "\n") in
    flushStdout {}
in
let eqChar1 = lam c14.
    lam c24.
      eqc c14 c24 in
let leqChar1 =
  lam c13.
    lam c23.
      leqi (char2int c13) (char2int c23)
in
let geqChar1 =
  lam c12.
    lam c22.
      geqi (char2int c12) (char2int c22)
in
let cmpChar1 =
  lam c11.
    lam c21.
      subi (char2int c11) (char2int c21)
in
let eqString1 = lam s110.
    lam s210.
      eqSeq1 eqc s110 s210
in
let cmpString1: [Char] -> [Char] -> Int = seqCmp1 cmpChar1 in
recursive
  let string2int_rechelper =
    lam s55.
      lam acc22.
        match
          null s55
        with
          true
        then
          acc22
        else
          let fsd = subi (char2int (head s55)) (char2int '0') in
          string2int_rechelper (tail s55) (addi (muli 10 acc22) fsd)
in
let string2int1 =
  lam s54.
    match
      s54
    with
      ""
    then
      0
    else match
      eqChar1 '-' (head s54)
    with
      true
    then
      negi (string2int_rechelper (tail s54) 0)
    else
      string2int_rechelper s54 0
in
let digit2char1 = lam d11.
    int2char (addi d11 (char2int '0'))
in
recursive
  let int2string_rechelper =
    lam n2.
      lam acc21.
        match
          lti n2 10
        with
          true
        then
          cons (digit2char1 n2) acc21
        else
          int2string_rechelper (divi n2 10) (cons (digit2char1 (modi n2 10)) acc21)
in
let int2string1 =
  lam n1.
    match
      lti n1 0
    with
      true
    then
      cons '-' (int2string_rechelper (negi n1) "")
    else
      int2string_rechelper n1 ""
in
let strJoin1: [Char] -> [[Char]] -> [Char] = seqJoin in
type AVLTreeImpl_AuxTree1 a66 a67
in
type AVLTreeImpl_AVL1 a68 a69
in
con AVLTreeImpl_Node1: all k5. all v5. {h: Int, l: AVLTreeImpl_AVL1 k5 v5, r: AVLTreeImpl_AVL1 k5 v5, key: k5, value: v5} -> AVLTreeImpl_AVL1 k5 v5 in
con AVLTreeImpl_Leaf1: all k6. all v6. () -> AVLTreeImpl_AVL1 k6 v6 in
recursive
  let vAVLTreeImpl_avlJoin: all k13. all v14. k13 -> v14 -> AVLTreeImpl_AVL1 k13 v14 -> AVLTreeImpl_AVL1 k13 v14 -> AVLTreeImpl_AVL1 k13 v14 =
    lam k14: k13.
      lam v15: v14.
        lam l1: AVLTreeImpl_AVL1 k13 v14.
          lam __sem_target: AVLTreeImpl_AVL1 k13 v14.
            match
              __sem_target
            with
              r
            in
            let lh = vAVLTreeImpl_avlHeight l1 in
              let rh = vAVLTreeImpl_avlHeight r in
              match
                gti lh (addi rh 1)
              with
                true
              then
                vAVLTreeImpl_avlJoinRight k14 v15 r l1
              else match
                gti rh (addi lh 1)
              with
                true
              then
                vAVLTreeImpl_avlJoinLeft k14 v15 l1 r
              else
                vAVLTreeImpl_avlCreate k14 v15 l1 r
  let vAVLTreeImpl_avlEmpty: all k15. all v16. () -> AVLTreeImpl_AVL1 k15 v16 =
    lam __sem_target1: ().
      match
        __sem_target1
      with
        {}
      in
      AVLTreeImpl_Leaf1
          {}
  let vAVLTreeImpl_avlCreate: all k16. all v17. k16 -> v17 -> AVLTreeImpl_AVL1 k16 v17 -> AVLTreeImpl_AVL1 k16 v17 -> AVLTreeImpl_AVL1 k16 v17 =
    lam k17: k16.
      lam v18: v17.
        lam l2: AVLTreeImpl_AVL1 k16 v17.
          lam __sem_target2: AVLTreeImpl_AVL1 k16 v17.
            match
              __sem_target2
            with
              r1
            in
            let lh1 = vAVLTreeImpl_avlHeight l2 in
              let rh1 = vAVLTreeImpl_avlHeight r1 in
              let h =
                addi
                  (match
                     geqi lh1 rh1
                   with
                     true
                   then
                     lh1
                   else
                     rh1)
                  1
              in
              AVLTreeImpl_Node1
                { r = r1, key = k17, value = v18, h = h, l = l2 }
  let vAVLTreeImpl_avlHeight: all k18. all v19. AVLTreeImpl_AVL1 k18 v19 -> Int =
    lam __sem_target3: AVLTreeImpl_AVL1 k18 v19.
      match
        __sem_target3
      with
        AVLTreeImpl_Leaf1 _
      then
        0
      else match
        __sem_target3
      with
        AVLTreeImpl_Node1 {h = h4}
      in
      h4
  let vAVLTreeImpl_avlInsert: all k19. all v20. (k19 -> k19 -> Int) -> k19 -> v20 -> AVLTreeImpl_AVL1 k19 v20 -> AVLTreeImpl_AVL1 k19 v20 =
    lam cmp1: k19 -> k19 -> Int.
      lam k20: k19.
        lam v21: v20.
          lam __sem_target4: AVLTreeImpl_AVL1 k19 v20.
            match
              __sem_target4
            with
              AVLTreeImpl_Leaf1 _
            then
              AVLTreeImpl_Node1
                { r = AVLTreeImpl_Leaf1
                      {},
                  key = k20,
                  value = v21,
                  h = 1,
                  l = AVLTreeImpl_Leaf1
                      {} }
            else match
              __sem_target4
            with
              AVLTreeImpl_Node1 t122
            in
            let d9 = cmp1 k20 t122.key in
              match
                lti d9 0
              with
                true
              then
                vAVLTreeImpl_avlJoin
                  t122.key
                  t122.value
                  (vAVLTreeImpl_avlInsert cmp1 k20 v21 t122.l)
                  t122.r
              else match
                gti d9 0
              with
                true
              then
                vAVLTreeImpl_avlJoin
                  t122.key
                  t122.value
                  t122.l
                  (vAVLTreeImpl_avlInsert cmp1 k20 v21 t122.r)
              else
                AVLTreeImpl_Node1
                  { t122 with value = v21 }
  let vAVLTreeImpl_avlLookup: all k21. all v22. (k21 -> k21 -> Int) -> k21 -> AVLTreeImpl_AVL1 k21 v22 -> Option1 v22 =
    lam cmp2: k21 -> k21 -> Int.
      lam k22: k21.
        lam __sem_target5: AVLTreeImpl_AVL1 k21 v22.
          match
            __sem_target5
          with
            AVLTreeImpl_Leaf1 _
          then
            None1
              {}
          else match
            __sem_target5
          with
            AVLTreeImpl_Node1 t123
          in
          let d10 = cmp2 k22 t123.key in
            match
              lti d10 0
            with
              true
            then
              vAVLTreeImpl_avlLookup cmp2 k22 t123.l
            else match
              gti d10 0
            with
              true
            then
              vAVLTreeImpl_avlLookup cmp2 k22 t123.r
            else
              Some1
                t123.value
  let vAVLTreeImpl_avlJoinLeft: all k23. all v23. k23 -> v23 -> AVLTreeImpl_AVL1 k23 v23 -> AVLTreeImpl_AVL1 k23 v23 -> AVLTreeImpl_AVL1 k23 v23 =
    lam k24: k23.
      lam v24: v23.
        lam l3: AVLTreeImpl_AVL1 k23 v23.
          lam __sem_target6: AVLTreeImpl_AVL1 k23 v23.
            match
              __sem_target6
            with
              AVLTreeImpl_Node1 tr
            then
              match
                leqi
                  (vAVLTreeImpl_avlHeight tr.l)
                  (addi (vAVLTreeImpl_avlHeight l3) 1)
              with
                true
              then
                let t124 = vAVLTreeImpl_avlCreate k24 v24 l3 tr.l in
                match
                  leqi
                    (vAVLTreeImpl_avlHeight t124)
                    (addi (vAVLTreeImpl_avlHeight tr.r) 1)
                with
                  true
                then
                  vAVLTreeImpl_avlCreate tr.key tr.value t124 tr.r
                else
                  vAVLTreeImpl_avlRotateRight
                    tr.key
                    tr.value
                    tr.r
                    (vAVLTreeImpl_avlRotateLeft k24 v24 l3 tr.l)
              else
                let tx = vAVLTreeImpl_avlJoinLeft k24 v24 l3 tr.l in
                match
                  leqi
                    (vAVLTreeImpl_avlHeight tx)
                    (addi (vAVLTreeImpl_avlHeight tr.r) 1)
                with
                  true
                then
                  vAVLTreeImpl_avlCreate tr.key tr.value tx tr.r
                else
                  vAVLTreeImpl_avlRotateRight tr.key tr.value tr.r tx
            else match
              __sem_target6
            with
              AVLTreeImpl_Leaf1 _
            in
            error "avlJoinLeft: empty tree"
  let vAVLTreeImpl_avlJoinRight: all k25. all v25. k25 -> v25 -> AVLTreeImpl_AVL1 k25 v25 -> AVLTreeImpl_AVL1 k25 v25 -> AVLTreeImpl_AVL1 k25 v25 =
    lam k26: k25.
      lam v26: v25.
        lam r2: AVLTreeImpl_AVL1 k25 v25.
          lam __sem_target7: AVLTreeImpl_AVL1 k25 v25.
            match
              __sem_target7
            with
              AVLTreeImpl_Node1 tl
            then
              match
                leqi
                  (vAVLTreeImpl_avlHeight tl.r)
                  (addi (vAVLTreeImpl_avlHeight r2) 1)
              with
                true
              then
                let t125 = vAVLTreeImpl_avlCreate k26 v26 tl.r r2 in
                match
                  leqi
                    (vAVLTreeImpl_avlHeight t125)
                    (addi (vAVLTreeImpl_avlHeight tl.l) 1)
                with
                  true
                then
                  vAVLTreeImpl_avlCreate tl.key tl.value tl.l t125
                else
                  vAVLTreeImpl_avlRotateLeft
                    tl.key
                    tl.value
                    tl.l
                    (vAVLTreeImpl_avlRotateRight k26 v26 r2 tl.r)
              else
                let tx1 = vAVLTreeImpl_avlJoinRight k26 v26 r2 tl.r in
                match
                  leqi
                    (vAVLTreeImpl_avlHeight tx1)
                    (addi (vAVLTreeImpl_avlHeight tl.l) 1)
                with
                  true
                then
                  vAVLTreeImpl_avlCreate tl.key tl.value tl.l tx1
                else
                  vAVLTreeImpl_avlRotateLeft tl.key tl.value tl.l tx1
            else match
              __sem_target7
            with
              AVLTreeImpl_Leaf1 _
            in
            error "avlJoinRight: empty tree"
  let vAVLTreeImpl_avlRotateLeft: all k27. all v27. k27 -> v27 -> AVLTreeImpl_AVL1 k27 v27 -> AVLTreeImpl_AVL1 k27 v27 -> AVLTreeImpl_AVL1 k27 v27 =
    lam k28: k27.
      lam v28: v27.
        lam l4: AVLTreeImpl_AVL1 k27 v27.
          lam __sem_target8: AVLTreeImpl_AVL1 k27 v27.
            match
              __sem_target8
            with
              AVLTreeImpl_Node1 (rt & {r = rr, l = rl})
            then
              vAVLTreeImpl_avlCreate rt.key rt.value (vAVLTreeImpl_avlCreate k28 v28 l4 rl) rr
            else match
              __sem_target8
            with
              AVLTreeImpl_Leaf1 _
            in
            error "avlRotateLeft: empty tree"
  let vAVLTreeImpl_avlRotateRight: all k29. all v29. k29 -> v29 -> AVLTreeImpl_AVL1 k29 v29 -> AVLTreeImpl_AVL1 k29 v29 -> AVLTreeImpl_AVL1 k29 v29 =
    lam k30: k29.
      lam v30: v29.
        lam r3: AVLTreeImpl_AVL1 k29 v29.
          lam __sem_target9: AVLTreeImpl_AVL1 k29 v29.
            match
              __sem_target9
            with
              AVLTreeImpl_Node1 (lt2 & {r = lr, l = ll})
            then
              vAVLTreeImpl_avlCreate lt2.key lt2.value ll (vAVLTreeImpl_avlCreate k30 v30 lr r3)
            else match
              __sem_target9
            with
              AVLTreeImpl_Leaf1 _
            in
            error "avlRotateRight: empty tree"
in
type Map1 k7 v7 =
  {cmp: k7 -> k7 -> Int, root: AVLTreeImpl_AVL1 k7 v7}
in
let mapEmpty1: all k12. all v13. (k12 -> k12 -> Int) -> Map1 k12 v13 =
  lam cmp: k12 -> k12 -> Int.
    { cmp = cmp, root = vAVLTreeImpl_avlEmpty {} }
in
let mapLookup1: all k10. all v12. k10 -> Map1 k10 v12 -> Option1 v12 =
  lam k11: k10.
    lam m1: Map1 k10 v12.
      vAVLTreeImpl_avlLookup m1.cmp k11 m1.root
in
let mapInsert1: all k8. all v10. k8 -> v10 -> Map1 k8 v10 -> Map1 k8 v10 =
  lam k9: k8.
    lam v11: v10.
      lam m: Map1 k8 v10.
        { m with root = vAVLTreeImpl_avlInsert m.cmp k9 v11 m.root }
in
let exp2 = lam x2: Float.
    externalExp x2 in
let sqrt2: Float -> Float = lam x1: Float.
    externalSqrt x1
in
let maxi1 =
  lam a81.
    lam b12.
      match
        gti a81 b12
      with
        true
      then
        a81
      else
        b12
in
type JsonValue
in
con JsonObject: Map1 [Char] JsonValue -> JsonValue in
con JsonArray: [JsonValue] -> JsonValue in
con JsonString: [Char] -> JsonValue in
con JsonFloat: Float -> JsonValue in
con JsonInt: Int -> JsonValue in
con JsonBool: Bool -> JsonValue in
con JsonNull: () -> JsonValue in
recursive
  let _jsonErrorString: Int -> [Char] -> [Char] =
    lam pos2: Int.
      lam msg1: [Char].
        join1
          [ "Error at position ",
            int2string1 pos2,
            ": ",
            msg1 ]
  let _jsonError: Int -> [Char] -> Either1 (JsonValue, [Char], Int) [Char] =
    lam pos3: Int.
      lam msg2: [Char].
        Right1
          (_jsonErrorString pos3 msg2)
  let _jsonEatWhitespace: [Char] -> Int -> ([Char], Int) =
    lam s28: [Char].
      lam pos4: Int.
        match
          s28
        with
          [ ' ' | '\n' | '\r' | '\t' ] ++ ws
        then
          _jsonEatWhitespace ws (addi pos4 1)
        else
          (s28, pos4)
  let _jsonEatInt: [Char] -> [Char] -> Int -> ([Char], [Char], Int) =
    lam acc13: [Char].
      lam s29: [Char].
        lam pos5: Int.
          match
            s29
          with
            [ c1 ] ++ ws1
          then
            match
              and1 (geqChar1 c1 '0') (leqChar1 c1 '9')
            with
              true
            then
              _jsonEatInt (snoc acc13 c1) ws1 (addi pos5 1)
            else
              (acc13, s29, pos5)
          else
            (acc13, s29, pos5)
  let _jsonParse: ([Char] -> [Char] -> Int) -> [Char] -> Int -> Either1 (JsonValue, [Char], Int) [Char] =
    lam cmpString8: [Char] -> [Char] -> Int.
      lam s30: [Char].
        lam pos6: Int.
          match
            _jsonEatWhitespace s30 pos6
          with
            (s31, pos7)
          in
          let #var"X3" = s31 in
            match
              #var"X3"
            with
              "{" ++ ws2
            then
              _jsonParseObject cmpString8 ws2 (addi pos7 1)
            else match
              #var"X3"
            with
              "[" ++ ws3
            then
              _jsonParseArray cmpString8 ws3 (addi pos7 1)
            else match
              #var"X3"
            with
              "\"" ++ ws4
            then
              _jsonParseString "" ws4 (addi pos7 1)
            else match
              #var"X3"
            with
              "-" ++ ws5
            then
              _jsonParseNegativeNumber ws5 (addi pos7 1)
            else match
              #var"X3"
            with
              [ '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' ] ++ _
            then
              _jsonParseNumber s31 pos7
            else match
              #var"X3"
            with
              "true" ++ ws6
            then
              Left1
                (JsonBool
                  true, ws6, addi pos7 4)
            else match
              #var"X3"
            with
              "false" ++ ws7
            then
              Left1
                (JsonBool
                  false, ws7, addi pos7 5)
            else match
              #var"X3"
            with
              "null" ++ ws8
            then
              Left1
                (JsonNull
                  {}, ws8, addi pos7 4)
            else match
              #var"X3"
            with
              _
            in
            _jsonError pos7 "Invalid start to a JSON value."
  let _jsonParseObject: ([Char] -> [Char] -> Int) -> [Char] -> Int -> Either1 (JsonValue, [Char], Int) [Char] =
    lam cmpString9: [Char] -> [Char] -> Int.
      lam s32: [Char].
        lam pos8: Int.
          match
            _jsonEatWhitespace s32 pos8
          with
            (s33, pos9)
          in
          let acc14 = mapEmpty1 cmpString9 in
            match
              s33
            with
              "}" ++ ws9
            then
              Left1
                (JsonObject
                  acc14, ws9, addi pos9 1)
            else
              _jsonParseObjectContents cmpString9 acc14 s33 pos9
  let _jsonParseObjectContents: ([Char] -> [Char] -> Int) -> Map1 [Char] JsonValue -> [Char] -> Int -> Either1 (JsonValue, [Char], Int) [Char] =
    lam cmpString10: [Char] -> [Char] -> Int.
      lam acc15: Map1 [Char] JsonValue.
        lam s34: [Char].
          lam pos10: Int.
            match
              _jsonEatWhitespace s34 pos10
            with
              (s35, pos11)
            in
            let #var"X4" = _jsonParse cmpString10 s35 pos11 in
              match
                #var"X4"
              with
                Left1 (JsonString key, s36, pos12)
              then
                match
                  _jsonEatWhitespace s36 pos12
                with
                  (s37, pos13)
                in
                match
                    s37
                  with
                    ":" ++ ws10
                  then
                    match
                      _jsonEatWhitespace ws10 (addi pos13 1)
                    with
                      (s38, pos14)
                    in
                    let #var"X5" = _jsonParse cmpString10 s38 pos14 in
                      match
                        #var"X5"
                      with
                        Left1 (value5, s39, pos15)
                      then
                        let acc16 = mapInsert1 key value5 acc15 in
                        match
                          _jsonEatWhitespace s39 pos15
                        with
                          (s40, pos16)
                        in
                        match
                            s40
                          with
                            "," ++ ws11
                          then
                            _jsonParseObjectContents cmpString10 acc16 ws11 (addi pos16 1)
                          else match
                            s40
                          with
                            "}" ++ ws12
                          then
                            Left1
                              (JsonObject
                                acc16, ws12, addi pos16 1)
                          else
                            _jsonError pos16 "Expected comma or closing bracket for JSON object."
                      else match
                        #var"X5"
                      with
                        Right1 err1
                      in
                      Right1
                          err1
                  else
                    _jsonError pos13 "Expected colon after property key."
              else match
                #var"X4"
              with
                Left1 _
              then
                _jsonError pos11 "Expected string as property key."
              else match
                #var"X4"
              with
                Right1 err2
              in
              Right1
                  err2
  let _jsonParseArray: ([Char] -> [Char] -> Int) -> [Char] -> Int -> Either1 (JsonValue, [Char], Int) [Char] =
    lam cmpString11: [Char] -> [Char] -> Int.
      lam s41: [Char].
        lam pos17: Int.
          match
            _jsonEatWhitespace s41 pos17
          with
            (s42, pos18)
          in
          match
              s42
            with
              "]" ++ ws13
            then
              Left1
                (JsonArray
                  "", ws13, addi pos18 1)
            else
              _jsonParseArrayContents cmpString11 "" s42 pos18
  let _jsonParseArrayContents: ([Char] -> [Char] -> Int) -> [JsonValue] -> [Char] -> Int -> Either1 (JsonValue, [Char], Int) [Char] =
    lam cmpString12: [Char] -> [Char] -> Int.
      lam acc17: [JsonValue].
        lam s43: [Char].
          lam pos19: Int.
            match
              _jsonEatWhitespace s43 pos19
            with
              (s44, pos20)
            in
            let result2 = _jsonParse cmpString12 s44 pos20 in
              let #var"X6" = result2 in
              match
                #var"X6"
              with
                Left1 (value6, s45, pos21)
              then
                let acc18 = snoc acc17 value6 in
                match
                  _jsonEatWhitespace s45 pos21
                with
                  (s46, pos22)
                in
                match
                    s46
                  with
                    "," ++ ws14
                  then
                    _jsonParseArrayContents cmpString12 acc18 ws14 (addi pos22 1)
                  else match
                    s46
                  with
                    "]" ++ ws15
                  then
                    Left1
                      (JsonArray
                        acc18, ws15, addi pos22 1)
                  else
                    _jsonError pos22 "Expected comma or closing bracket of JSON array."
              else match
                #var"X6"
              with
                Right1 err3
              in
              Right1
                  err3
  let hex2int: Char -> Option1 Int =
    lam hc: Char.
      match
        and1 (geqChar1 hc '0') (leqChar1 hc '9')
      with
        true
      then
        Some1
          (subi (char2int hc) (char2int '0'))
      else match
        and1 (geqChar1 hc 'A') (leqChar1 hc 'F')
      with
        true
      then
        Some1
          (addi (subi (char2int hc) (char2int 'A')) 10)
      else match
        and1 (geqChar1 hc 'a') (leqChar1 hc 'f')
      with
        true
      then
        Some1
          (addi (subi (char2int hc) (char2int 'a')) 10)
      else
        None1
          {}
  let t121: Option1 Int -> Char -> Option1 Int =
    lam acc19: Option1 Int.
      lam hc1: Char.
        match
          acc19
        with
          Some1 accv
        then
          match
            hex2int hc1
          with
            Some1 hv
          then
            Some1
              (addi (muli accv 16) hv)
          else
            None1
              {}
        else
          None1
            {}
  let _jsonParseString: [Char] -> [Char] -> Int -> Either1 (JsonValue, [Char], Int) [Char] =
    lam acc20: [Char].
      lam s47: [Char].
        lam pos23: Int.
          match
            s47
          with
            [ '\\',
              c2 ] ++ ws16
          then
            let #var"X7" = c2 in
            match
              #var"X7"
            with
              '\"'
            then
              _jsonParseString (snoc acc20 '\"') ws16 (addi pos23 2)
            else match
              #var"X7"
            with
              '\\'
            then
              _jsonParseString (snoc acc20 '\\') ws16 (addi pos23 2)
            else match
              #var"X7"
            with
              '/'
            then
              _jsonParseString (snoc acc20 '/') ws16 (addi pos23 2)
            else match
              #var"X7"
            with
              'b'
            then
              _jsonParseString (snoc acc20 (int2char 8)) ws16 (addi pos23 2)
            else match
              #var"X7"
            with
              'f'
            then
              _jsonParseString (snoc acc20 (int2char 12)) ws16 (addi pos23 2)
            else match
              #var"X7"
            with
              'n'
            then
              _jsonParseString (snoc acc20 '\n') ws16 (addi pos23 2)
            else match
              #var"X7"
            with
              'r'
            then
              _jsonParseString (snoc acc20 '\r') ws16 (addi pos23 2)
            else match
              #var"X7"
            with
              't'
            then
              _jsonParseString (snoc acc20 '\t') ws16 (addi pos23 2)
            else match
              #var"X7"
            with
              'u'
            then
              match
                ws16
              with
                [ h3,
                  h2,
                  h1,
                  h0 ] ++ ws17
              then
                let conv =
                  foldl
                    t121
                    (Some1
                       0)
                    [ h3,
                      h2,
                      h1,
                      h0 ]
                in
                match
                  conv
                with
                  Some1 v9
                then
                  _jsonParseString (snoc acc20 (int2char v9)) ws17 (addi pos23 6)
                else
                  _jsonError (addi pos23 2) "Expected 4 hexadecimal characters"
              else
                _jsonError (addi pos23 2) "Expected 4 hexadecimal characters"
            else match
              #var"X7"
            with
              _
            in
            _jsonError
                (addi pos23 1)
                (join1
                   [ "Invalid escape char \'",
                     [ c2 ],
                     "\' (decimal value: ",
                     int2string1 (char2int c2),
                     ")" ])
          else match
            s47
          with
            "\"" ++ ws18
          then
            Left1
              (JsonString
                acc20, ws18, addi pos23 1)
          else match
            s47
          with
            [ c3 ] ++ ws19
          then
            _jsonParseString (snoc acc20 c3) ws19 (addi pos23 1)
          else
            _jsonError pos23 "Non-terminated string."
  let _jsonParseNegativeNumber: [Char] -> Int -> Either1 (JsonValue, [Char], Int) [Char] =
    lam s48: [Char].
      lam pos24: Int.
        let num = _jsonParseNumber s48 pos24 in
        let #var"X8" = num in
        match
          #var"X8"
        with
          Left1 (JsonInt i5, s49, pos25)
        then
          Left1
            (JsonInt
              (negi i5), s49, pos25)
        else match
          #var"X8"
        with
          Left1 (JsonFloat f8, s50, pos26)
        then
          Left1
            (JsonFloat
              (negf f8), s50, pos26)
        else match
          #var"X8"
        with
          Left1 _
        then
          _jsonError pos24 "Internal error, did not get a number back."
        else match
          #var"X8"
        with
          Right1 err4
        in
        Right1
            err4
  let _jsonParseNumber: [Char] -> Int -> Either1 (JsonValue, [Char], Int) [Char] =
    lam s51: [Char].
      lam pos27: Int.
        match
          s51
        with
          "0" ++ ws20
        then
          _jsonParseNumberDecimals "0" ws20 (addi pos27 1)
        else match
          s51
        with
          [ c4 & ('1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9') ] ++ ws21
        then
          match
            _jsonEatInt [ c4 ] ws21 (addi pos27 1)
          with
            (intStr, ws22, pos28)
          in
          _jsonParseNumberDecimals intStr ws22 pos28
        else
          _jsonError pos27 "Expected a number."
  let _jsonParseNumberDecimals: [Char] -> [Char] -> Int -> Either1 (JsonValue, [Char], Int) [Char] =
    lam intStr1: [Char].
      lam s52: [Char].
        lam pos29: Int.
          match
            s52
          with
            "." ++ ws23
          then
            match
              _jsonEatInt "" ws23 (addi pos29 1)
            with
              (decimals, ws24, pos30)
            in
            match
                null decimals
              with
                true
              then
                _jsonError pos30 "Expected decimals after dot in a number."
              else
                _jsonParseNumberExponent intStr1 decimals ws24 pos30
          else match
            s52
          with
            [ 'e' | 'E' ] ++ _
          then
            _jsonParseNumberExponent intStr1 "0" s52 pos29
          else
            Left1
              (JsonInt
                (string2int1 intStr1), s52, pos29)
  let _jsonParseNumberExponent: [Char] -> [Char] -> [Char] -> Int -> Either1 (JsonValue, [Char], Int) [Char] =
    lam intStr2: [Char].
      lam decimals1: [Char].
        lam s53: [Char].
          lam pos31: Int.
            match
              s53
            with
              [ 'e' | 'E' ] ++ ws25
            then
              match
                ws25
              with
                [ c5 & ('+' | '-') ] ++ ws26
              then
                match
                  _jsonEatInt "" ws26 (addi pos31 2)
                with
                  (exponent, ws27, pos32)
                in
                match
                    null exponent
                  with
                    true
                  then
                    _jsonError pos32 "Expected exponent digits."
                  else
                    let floatStr =
                      join1
                        [ intStr2,
                          ".",
                          decimals1,
                          "e",
                          [ c5 ],
                          exponent ]
                    in
                    Left1
                      (JsonFloat
                        (string2float floatStr), ws27, pos32)
              else match
                _jsonEatInt "" ws25 (addi pos31 1)
              with
                (exponent1, ws28, pos33)
              in
              match
                  null exponent1
                with
                  true
                then
                  _jsonError pos33 "Expected exponent digits."
                else
                  let floatStr1 =
                    join1
                      [ intStr2,
                        ".",
                        decimals1,
                        "e",
                        exponent1 ]
                  in
                  Left1
                    (JsonFloat
                      (string2float floatStr1), ws28, pos33)
            else
              let floatStr2 =
                join1
                  [ intStr2,
                    ".",
                    decimals1 ]
              in
              Left1
                (JsonFloat
                  (string2float floatStr2), s53, pos31)
in
let jsonParse: ([Char] -> [Char] -> Int) -> [Char] -> Either1 JsonValue [Char] =
  lam cmpString7: [Char] -> [Char] -> Int.
    lam s25: [Char].
      let result1 = _jsonParse cmpString7 s25 0 in
      let #var"X2" = result1 in
      match
        #var"X2"
      with
        Left1 (value4, s26, pos)
      then
        match
          _jsonEatWhitespace s26 pos
        with
          (s27, pos1)
        in
        match
            null s27
          with
            true
          then
            Left1
              value4
          else
            Right1
              (_jsonErrorString pos1 "Trailing JSON content.")
      else match
        #var"X2"
      with
        Right1 err
      in
      Right1
          err
in
let jsonParseExn: ([Char] -> [Char] -> Int) -> [Char] -> JsonValue =
  lam cmpString6: [Char] -> [Char] -> Int.
    lam s24: [Char].
      let result = jsonParse cmpString6 s24 in
      let #var"X1" = result in
      match
        #var"X1"
      with
        Left1 value3
      then
        value3
      else match
        #var"X1"
      with
        Right1 errmsg
      in
      error errmsg
in
type WriteChannel1
in
type ReadChannel1
in
type Signal =
  Int
in
external setSigintHandler : (Signal -> ()) -> ()
in
type Timespec =
  (Int, Int)
in
external getMonotonicTime : () -> Timespec
in
external getWallClockTime : () -> Timespec
in
external getProcessCpuTime : () -> Timespec
in
external clockNanosleep : Timespec -> ()
in
external rtpplSetMaxPriority : () -> Int
in
external rtpplSetPriority : Int -> Int
in
external rtpplOpenFileDescriptor : [Char] -> Int -> Int
in
external rtpplCloseFileDescriptor : Int -> ()
in
type Opaque
in
external rtpplReadFloat : Int -> [(Timespec, Float)]
in
external rtpplWriteFloatRecord : Int -> Int -> (Timespec, Opaque) -> ()
in
let nanosPerSec = 1000000000 in
let nanosToTimespec: Int -> Int -> Timespec =
  lam nanosPerSec17: Int.
    lam nanos: Int.
      let s23 = divi nanos nanosPerSec17 in
      let ns3 = modi nanos nanosPerSec17 in
      (s23, ns3)
in
let timespecToNanos: Int -> Timespec -> Int =
  lam nanosPerSec16: Int.
    lam ts: Timespec.
      match
        ts
      with
        (s22, ns2)
      in
      addi (muli s22 nanosPerSec16) ns2
in
let addTimespec: Int -> Timespec -> Timespec -> Timespec =
  lam nanosPerSec15: Int.
    lam lhs2: Timespec.
      lam rhs2: Timespec.
        match
          (lhs2, rhs2)
        with
          ((ls2, lns2), (rs2, rns2))
        in
        let s21 = addi ls2 rs2 in
          let ns1 = addi lns2 rns2 in
          match
            geqi ns1 nanosPerSec15
          with
            true
          then
            (addi s21 1, subi ns1 nanosPerSec15)
          else
            (s21, ns1)
in
let diffTimespec: Int -> Timespec -> Timespec -> Timespec =
  lam nanosPerSec14: Int.
    lam lhs1: Timespec.
      lam rhs1: Timespec.
        match
          (lhs1, rhs1)
        with
          ((ls1, lns1), (rs1, rns1))
        in
        let s20 = subi ls1 rs1 in
          let ns = subi lns1 rns1 in
          match
            lti ns 0
          with
            true
          then
            (subi s20 1, addi ns nanosPerSec14)
          else
            (s20, ns)
in
let cmpTimespec: Timespec -> Timespec -> Int =
  lam lhs: Timespec.
    lam rhs: Timespec.
      match
        (lhs, rhs)
      with
        ((ls, lns), (rs, rns))
      in
      match
          gti ls rs
        with
          true
        then
          1
        else match
          lti ls rs
        with
          true
        then
          negi 1
        else match
          gti lns rns
        with
          true
        then
          1
        else match
          lti lns rns
        with
          true
        then
          negi 1
        else
          0
in
let monoLogicalTime: Ref Timespec = ref (0, 0) in
let wallLogicalTime: Ref Timespec = ref (0, 0) in
let cpuExecutionTime: Ref Timespec = ref (0, 0) in
let particleCount: Ref Int = ref 0 in
let taskBudget: Ref Int = ref 0 in
let taskExecTimes: Ref [Int] = ref "" in
let slowdown: Ref Int = ref 1 in
let delayBy: Int -> Ref Timespec -> Ref Timespec -> Ref Int -> Int -> Int =
  lam nanosPerSec13: Int.
    lam monoLogicalTime6: Ref Timespec.
      lam wallLogicalTime13: Ref Timespec.
        lam slowdown10: Ref Int.
          lam delayNs1: Int.
            let oldPriority = rtpplSetMaxPriority {} in
            let logicalIntervalTime = nanosToTimespec nanosPerSec13 delayNs1
            in
            let adjustedDelay = muli delayNs1 (deref slowdown10) in
            let intervalTime = nanosToTimespec nanosPerSec13 adjustedDelay
            in
            let endTime = getMonotonicTime {} in
            let elapsedTime = diffTimespec nanosPerSec13 endTime (deref monoLogicalTime6)
            in
            let waitTime =
              addTimespec nanosPerSec13 (deref monoLogicalTime6) intervalTime
            in
            let overrun1 =
              let c = cmpTimespec intervalTime elapsedTime in
              match
                gti c 0
              with
                true
              then
                let #var"45" = clockNanosleep waitTime in
                0
              else match
                lti c 0
              with
                true
              then
                let elapsedTime1 = diffTimespec nanosPerSec13 endTime waitTime
                in
                timespecToNanos nanosPerSec13 elapsedTime1
              else
                0
            in
            let #var"42" = modref monoLogicalTime6 waitTime in
            let #var"43" =
              modref
                wallLogicalTime13
                (addTimespec nanosPerSec13 (deref wallLogicalTime13) logicalIntervalTime)
            in
            let #var"44" = rtpplSetPriority oldPriority in
            overrun1
in
type TSV a70 =
  (Timespec, a70)
in
let timestamp: all a80. Int -> Ref Timespec -> TSV a80 -> Int =
  lam nanosPerSec12: Int.
    lam wallLogicalTime12: Ref Timespec.
      lam tsv2: TSV a80.
        let lt1 = deref wallLogicalTime12 in
        timespecToNanos nanosPerSec12 (diffTimespec nanosPerSec12 tsv2.0 lt1)
in
let value1: all a79. TSV a79 -> a79 = lam tsv1: TSV a79.
    tsv1.1
in
let tsv: all a78. Int -> Ref Timespec -> Int -> a78 -> TSV a78 =
  lam nanosPerSec11: Int.
    lam wallLogicalTime11: Ref Timespec.
      lam offset: Int.
        lam value2: a78.
          let lt = deref wallLogicalTime11 in
          (addTimespec nanosPerSec11 lt (nanosToTimespec nanosPerSec11 offset), value2)
in
let writeCollectionMessage =
  lam nanosPerSec10.
    lam cpuExecutionTime6.
      lam taskExecTimes8.
        lam #var"40".
          let cpu = getProcessCpuTime {} in
          let execTime =
            timespecToNanos
              nanosPerSec10
              (diffTimespec nanosPerSec10 cpu (deref cpuExecutionTime6))
          in
          let #var"41" = modref cpuExecutionTime6 cpu in
          modref taskExecTimes8 (snoc (deref taskExecTimes8) execTime)
in
let sdelay =
  lam nanosPerSec9.
    lam monoLogicalTime5.
      lam wallLogicalTime10.
        lam cpuExecutionTime5.
          lam taskExecTimes7.
            lam slowdown9.
              lam flushOutputs1: () -> ().
                lam updateInputs1: () -> ().
                  lam delayNs: Int.
                    let #var"37" = flushOutputs1 {} in
                    let #var"38" =
                      writeCollectionMessage nanosPerSec9 cpuExecutionTime5 taskExecTimes7 {}
                    in
                    let overrun =
                      delayBy
                        nanosPerSec9
                        monoLogicalTime5
                        wallLogicalTime10
                        slowdown9
                        delayNs
                    in
                    let #var"39" = updateInputs1 {} in
                    overrun
in
let rtpplFixedInferRunner = lam pc.
    lam inferModel1.
      inferModel1 pc
in
let openFileDescriptor: [Char] -> Int -> Int =
  lam file: [Char].
    lam bufsz: Int.
      rtpplOpenFileDescriptor file bufsz
in
let closeFileDescriptor: Int -> () = lam fd2: Int.
    rtpplCloseFileDescriptor fd2
in
let t: Int -> Int -> (Timespec, Opaque) -> () =
  lam fd1: Int.
    lam nfields1: Int.
      lam msg: (Timespec, Opaque).
        rtpplWriteFloatRecord fd1 nfields1 msg
in
let rtpplWriteFloatRecords =
  lam fd.
    lam nfields.
      lam msgs.
        iter (t fd nfields) msgs
in
let storeCollectedResults =
  lam strJoin4.
    lam taskBudget4.
      lam taskExecTimes6.
        lam slowdown8.
          lam taskId7.
            let collectionFile = concat taskId7 ".collect" in
            let execTimes = deref taskExecTimes6 in
            let wcet = foldl maxi1 0 execTimes in
            let overran =
              let b11 = deref taskBudget4 in
              match
                lti b11 0
              with
                true
              then
                0
              else match
                gti wcet (muli (deref taskBudget4) (deref slowdown8))
              with
                true
              then
                1
              else
                0
            in
            let data = map int2string1 (snoc execTimes overran) in
            writeFile collectionFile (strJoin4 "\n" data)
in
let getJsonValueExn =
  lam obj3.
    lam id2.
      match
        obj3
      with
        JsonObject vals1
      then
        match
          mapLookup1 id2 vals1
        with
          Some1 v8
        then
          v8
        else
          error (concat "Could not find JSON field " id2)
      else
        error
          "Attempted to access field of JSON value of non-object type"
in
let getJsonStringExn =
  lam obj2.
    lam id1.
      match
        getJsonValueExn obj2 id1
      with
        JsonString s19
      then
        s19
      else
        error
          (join1
             [ "Expected field ",
               id1,
               " to be a string value" ])
in
let getJsonIntExn =
  lam obj1.
    lam id.
      match
        getJsonValueExn obj1 id
      with
        JsonInt n
      then
        n
      else
        error
          (join1
             [ "Expected field ",
               id,
               " to be an integer value" ])
in
let isTaskObj =
  lam taskId6.
    lam taskObj.
      eqString1 (getJsonStringExn taskObj "id") taskId6
in
let findTask =
  lam obj.
    lam taskId5.
      match
        getJsonValueExn obj "tasks"
      with
        JsonArray vals
      then
        match
          find (isTaskObj taskId5) vals
        with
          Some1 taskValue
        then
          taskValue
        else
          error (concat "Failed to find task " taskId5)
      else
        error "Could not find tasks list in JSON configuration"
in
let readJsonConfig =
  lam cmpString5.
    lam configFile1.
      lam taskId4.
        let config = jsonParseExn cmpString5 (readFile configFile1) in
        let jsonTask = findTask config taskId4 in
        let numParticles = getJsonIntExn jsonTask "particles" in
        let budget1 = getJsonIntExn jsonTask "budget" in
        let slowdown7 = getJsonIntExn (getJsonValueExn config "config") "slowdown"
        in
        (numParticles, budget1, slowdown7)
in
let rtpplReadConfigurationFile =
  lam cmpString4.
    lam taskId3.
      let configFile = "system.json" in
      match
        fileExists configFile
      with
        true
      then
        readJsonConfig cmpString4 configFile taskId3
      else
        error
          (join1
             [ "Failed to read system configuration in \'",
               configFile,
               "\'" ])
in
let rtpplLoadConfiguration =
  lam cmpString3.
    lam particleCount2.
      lam taskBudget3.
        lam slowdown6.
          lam taskId2.
            match
              rtpplReadConfigurationFile cmpString3 taskId2
            with
              (nparticles, budget, slowd)
            in
            let #var"35" = modref particleCount2 nparticles in
              let #var"36" = modref taskBudget3 budget in
              modref slowdown6 slowd
in
let t1: ([Char] -> [[Char]] -> [Char]) -> Ref Int -> Ref [Int] -> Ref Int -> (() -> ()) -> [Char] -> Signal -> () =
  lam strJoin3: [Char] -> [[Char]] -> [Char].
    lam taskBudget2: Ref Int.
      lam taskExecTimes5: Ref [Int].
        lam slowdown5: Ref Int.
          lam closeFileDescriptors2: () -> ().
            lam taskId1: [Char].
              lam #var"32": Signal.
                let #var"33" = closeFileDescriptors2 {} in
                let #var"34" =
                  storeCollectedResults strJoin3 taskBudget2 taskExecTimes5 slowdown5 taskId1
                in
                exit 0
in
let rtpplRuntimeInit: all a77. ([Char] -> [Char] -> Int) -> ([Char] -> [[Char]] -> [Char]) -> Ref Timespec -> Ref Timespec -> Ref Timespec -> Ref Int -> Ref Int -> Ref [Int] -> Ref Int -> (() -> ()) -> (() -> ()) -> [Char] -> (() -> a77) -> () =
  lam cmpString2: [Char] -> [Char] -> Int.
    lam strJoin2: [Char] -> [[Char]] -> [Char].
      lam monoLogicalTime4: Ref Timespec.
        lam wallLogicalTime9: Ref Timespec.
          lam cpuExecutionTime4: Ref Timespec.
            lam particleCount1: Ref Int.
              lam taskBudget1: Ref Int.
                lam taskExecTimes4: Ref [Int].
                  lam slowdown4: Ref Int.
                    lam updateInputSequences: () -> ().
                      lam closeFileDescriptors1: () -> ().
                        lam taskId: [Char].
                          lam cont: () -> a77.
                            let #var"25" =
                              setSigintHandler
                                (t1
                                   strJoin2
                                   taskBudget1
                                   taskExecTimes4
                                   slowdown4
                                   closeFileDescriptors1
                                   taskId)
                            in
                            let #var"26" =
                              rtpplLoadConfiguration cmpString2 particleCount1 taskBudget1 slowdown4 taskId
                            in
                            let #var"27" = modref monoLogicalTime4 (getMonotonicTime {}) in
                            let #var"28" = modref wallLogicalTime9 (getWallClockTime {}) in
                            let #var"29" = modref cpuExecutionTime4 (getProcessCpuTime {})
                            in
                            let #var"30" = updateInputSequences {} in
                            let #var"31" = cont {} in
                            {}
in
let fileDescriptors =
  { bias = openFileDescriptor "bias" 4194304,
    in1 = openFileDescriptor "cf-in1" 4194304 }
in
let closeFileDescriptors =
  lam fileDescriptors6.
    lam #var"24".
      let close_bias = closeFileDescriptor fileDescriptors6.bias in
      let close_in1 = closeFileDescriptor fileDescriptors6.in1 in
      {}
in
let inputSeqs = ref { in1 = "" } in
let outputSeqs = ref { out1 = "" } in
let updateInputs =
  lam fileDescriptors5.
    lam inputSeqs4.
      lam #var"23".
        modref inputSeqs4 { in1 = rtpplReadFloat fileDescriptors5.in1 }
in
let flushOutputs =
  lam fileDescriptors4.
    lam outputSeqs4.
      lam #var"21".
        let w_cf_bias =
          rtpplWriteFloatRecords
            fileDescriptors4.bias
            2
            (unsafeCoerce (deref outputSeqs4).out1)
        in
        let #var"22" = modref outputSeqs4 { out1 = "" } in
        {}
in
let print: [Char] -> () = lam s18: [Char].
    print s18 in
let printLine: [Char] -> () = lam s17: [Char].
    printLn1 s17
in
let floatToString: Float -> [Char] = lam f7: Float.
    float2string f7
in
let intToString: Int -> [Char] = lam i4: Int.
    int2string1 i4
in
recursive
  let range1: Int -> Int -> [Int] =
    lam lo: Int.
      lam hi: Int.
        match
          lti lo hi
        with
          true
        then
          cons lo (range1 (addi lo 1) hi)
        else
          ""
in
let t2: Float -> () -> TSV Float -> () =
  lam bias1231: Float.
    lam #var"8": ().
      lam obs: TSV Float.
        let #var"9" =
          match
            eqf (value1 obs) 0.
          with
            true
          then
            let #var"10": () = error "Cannot use observe outside of inferred model"
            in
            {}
          else
            let #var"11": () = error "Cannot use observe outside of inferred model"
            in
            {}
        in
        {}
in
let coinFlipModel: RuntimeDistBase_Dist Float -> [TSV Float] -> Float =
  lam prior: RuntimeDistBase_Dist Float.
    lam observations1: [TSV Float].
      let bias123 = error "Cannot use assume outside of inferred model"
      in
      let #var"7" = foldl (t2 bias123) {} observations1 in
      bias123
in
let printObs: Int -> Ref Timespec -> TSV Float -> () =
  lam nanosPerSec8: Int.
    lam wallLogicalTime8: Ref Timespec.
      lam obs2: TSV Float.
        let #var"18" =
          print
            (intToString (timestamp nanosPerSec8 wallLogicalTime8 obs2))
        in
        let #var"19" = print " " in
        let #var"20" = printLine (floatToString (value1 obs2)) in
        {}
in
let t3: Int -> Ref Timespec -> () -> TSV Float -> () =
  lam nanosPerSec7: Int.
    lam wallLogicalTime7: Ref Timespec.
      lam #var"16": ().
        lam obs1: TSV Float.
          let #var"17" = printObs nanosPerSec7 wallLogicalTime7 obs1 in
          {}
in
let printInput: Int -> Ref Timespec -> [TSV Float] -> () =
  lam nanosPerSec6: Int.
    lam wallLogicalTime6: Ref Timespec.
      lam observations: [TSV Float].
        let #var"14" = printLine "Received observations:" in
        let #var"15" = foldl (t3 nanosPerSec6 wallLogicalTime6) {} observations
        in
        {}
in
let t4: {s: [Float], w: [Float]} -> Float -> Int -> Float =
  lam s16: {s: [Float], w: [Float]}.
    lam acc11: Float.
      lam i3: Int.
        let acc12 = addf acc11 (mulf (get s16.s i3) (exp2 (get s16.w i3)))
        in
        acc12
in
let expectedValue: RuntimeDistBase_Dist Float -> Float =
  lam d8: RuntimeDistBase_Dist Float.
    let acc9 = 0. in
    let s14 =
      match
        distEmpiricalSamples d8
      with
        (s15, w1)
      in
      { s = s15, w = w1 }
    in
    let acc10 = foldl (t4 s14) acc9 (range1 0 (length s14.s)) in
    acc10
in
let t5: Float -> {s: [Float], w: [Float]} -> Float -> Int -> Float =
  lam mu2: Float.
    lam s13: {s: [Float], w: [Float]}.
      lam acc7: Float.
        lam i2: Int.
          let acc8 =
            addf
              acc7
              (mulf
                 (mulf (subf (get s13.s i2) mu2) (subf (get s13.s i2) mu2))
                 (exp2 (get s13.w i2)))
          in
          acc8
in
let stddev: RuntimeDistBase_Dist Float -> Float -> Float =
  lam d7: RuntimeDistBase_Dist Float.
    lam mu1: Float.
      let acc5 = 0. in
      let s11 =
        match
          distEmpiricalSamples d7
        with
          (s12, w)
        in
        { s = s12, w = w }
      in
      let acc6 = foldl (t5 mu1 s11) acc5 (range1 0 (length s11.s)) in
      sqrt2 acc6
in
let t6 =
  lam d6: RuntimeDistBase_Dist Float.
    lam indata3: [((Int, Int), Float)].
      lam state: State.
        let map =
          lam f6.
            let t107 =
              lam s9.
                recursive
                  let rec4 =
                    lam s10.
                      let t109 =
                        match
                          s10
                        with
                          ""
                        then
                          let t110 = "" in
                          t110
                        else
                          let t111 =
                            match
                              s10
                            with
                              [ a75 ]
                            then
                              let t112 = f6 a75 in
                              let t113 = [ t112 ] in
                              t113
                            else
                              let t114 =
                                match
                                  s10
                                with
                                  [ a76 ] ++ ss3
                                then
                                  let t115 = cons in
                                  let t116 = f6 a76 in
                                  let t117 = t115 t116 in
                                  let t118 = rec4 ss3 in
                                  let t119 = t117 t118 in
                                  t119
                                else
                                  let t120 = never in
                                  t120
                              in
                              t114
                          in
                          t111
                      in
                      t109
                in
                let t108 = rec4 s9 in
                t108
            in
            t107
        in
        let iter =
          lam f5.
            let t104 =
              lam s8.
                let t105 = map f5 in
                let #var"13" = t105 s8 in
                let t106 = {} in
                t106
            in
            t104
        in
        let mapi =
          lam f4.
            let t80 =
              lam s6.
                recursive
                  let rec3 =
                    lam i1.
                      let t84 =
                        lam s7.
                          let t85 =
                            match
                              s7
                            with
                              ""
                            then
                              let t86 = "" in
                              t86
                            else
                              let t87 =
                                match
                                  s7
                                with
                                  [ a73 ]
                                then
                                  let t88 = f4 i1 in
                                  let t89 = t88 a73 in
                                  let t90 = [ t89 ] in
                                  t90
                                else
                                  let t91 =
                                    match
                                      s7
                                    with
                                      [ a74 ] ++ ss2
                                    then
                                      let t92 = cons in
                                      let t93 = f4 i1 in
                                      let t94 = t93 a74 in
                                      let t95 = t92 t94 in
                                      let t96 = addi in
                                      let t97 = t96 i1 in
                                      let t98 = 1 in
                                      let t99 = t97 t98 in
                                      let t100 = rec3 t99 in
                                      let t101 = t100 ss2 in
                                      let t102 = t95 t101 in
                                      t102
                                    else
                                      let t103 = never in
                                      t103
                                  in
                                  t91
                              in
                              t87
                          in
                          t85
                      in
                      t84
                in
                let t81 = 0 in
                let t82 = rec3 t81 in
                let t83 = t82 s6 in
                t83
            in
            t80
        in
        let iteri =
          lam f3.
            let t77 =
              lam s5.
                let t78 = mapi f3 in
                let #var"12" = t78 s5 in
                let t79 = {} in
                t79
            in
            t77
        in
        let foldl =
          lam f2.
            let t65 =
              lam acc3.
                let t66 =
                  lam s3.
                    recursive
                      let rec2 =
                        lam acc4.
                          let t69 =
                            lam s4.
                              let t70 =
                                match
                                  s4
                                with
                                  ""
                                then
                                  acc4
                                else
                                  let t71 =
                                    match
                                      s4
                                    with
                                      [ a72 ] ++ ss1
                                    then
                                      let t72 = f2 acc4 in
                                      let t73 = t72 a72 in
                                      let t74 = rec2 t73 in
                                      let t75 = t74 ss1 in
                                      t75
                                    else
                                      let t76 = never in
                                      t76
                                  in
                                  t71
                              in
                              t70
                          in
                          t69
                    in
                    let t67 = rec2 acc3 in
                    let t68 = t67 s3 in
                    t68
                in
                t66
            in
            t65
        in
        let foldr =
          lam f1.
            let t53 =
              lam acc1.
                let t54 =
                  lam s1.
                    recursive
                      let rec1 =
                        lam acc2.
                          let t57 =
                            lam s2.
                              let t58 =
                                match
                                  s2
                                with
                                  ""
                                then
                                  acc2
                                else
                                  let t59 =
                                    match
                                      s2
                                    with
                                      [ a71 ] ++ ss
                                    then
                                      let t60 = f1 a71 in
                                      let t61 = rec1 acc2 in
                                      let t62 = t61 ss in
                                      let t63 = t60 t62 in
                                      t63
                                    else
                                      let t64 = never in
                                      t64
                                  in
                                  t59
                              in
                              t58
                          in
                          t57
                    in
                    let t55 = rec1 acc1 in
                    let t56 = t55 s1 in
                    t56
                in
                t54
            in
            t53
        in
        let create =
          lam l.
            let t29 =
              lam f.
                recursive
                  let rec =
                    lam i.
                      let t37 =
                        lam acc.
                          let t38 = geqi in
                          let t39 = t38 i in
                          let t40 = 0 in
                          let t41 = t39 t40 in
                          let t42 =
                            match
                              t41
                            with
                              true
                            then
                              let t43 = subi in
                              let t44 = t43 i in
                              let t45 = 1 in
                              let t46 = t44 t45 in
                              let t47 = rec t46 in
                              let t48 = cons in
                              let t49 = f i in
                              let t50 = t48 t49 in
                              let t51 = t50 acc in
                              let t52 = t47 t51 in
                              t52
                            else
                              acc
                          in
                          t42
                      in
                      t37
                in
                let t30 = subi in
                let t31 = t30 l in
                let t32 = 1 in
                let t33 = t31 t32 in
                let t34 = rec t33 in
                let t35 = "" in
                let t36 = t34 t35 in
                t36
            in
            t29
        in
        let t9 = {} in
        let #var"3": () = {} in
        stopFirstAssume
          d6
          (lam bias123.
             let t10 = foldl in
             let bias1231: Float = bias123 in
             let t11 =
               lam #var"8": ().
                 let t15 =
                   lam obs.
                     let t16 = eqf in
                     let t17 =
                       match
                         obs
                       with
                         {#label"1" = #var"X"}
                       then
                         #var"X"
                       else
                         let t28 = never in
                         t28
                     in
                     let t18 = t16 t17 in
                     let t19 = 0. in
                     let t20 = t18 t19 in
                     let #var"9" =
                       match
                         t20
                       with
                         true
                       then
                         let t22 = false in
                         let t23 =
                           RuntimeDistElementary_DistBernoulli
                             { p = bias1231 }
                         in
                         let #var"10": () = updateWeight (logObserve t23 t22) state in
                         let t24 = {} in
                         t24
                       else
                         let t25 = true in
                         let t26 =
                           RuntimeDistElementary_DistBernoulli
                             { p = bias1231 }
                         in
                         let #var"11": () = updateWeight (logObserve t26 t25) state in
                         let t27 = {} in
                         t27
                     in
                     let t21 = {} in
                     t21
                 in
                 t15
             in
             let t12 = t10 t11 in
             let t13 = {} in
             let t14 = t12 t13 in
             let #var"7" = t14 indata3 in
             (lam x.
                End
                  x) bias123)
in
recursive
  let t8: RuntimeDistBase_Dist Float -> [((Int, Int), Float)] -> () -> Float =
    lam d2: RuntimeDistBase_Dist Float.
      lam indata: [((Int, Int), Float)].
        lam #var"3": ().
          coinFlipModel d2 indata
  let inferModel =
    lam d3.
      lam indata1.
        lam p.
          run { particles = p } (t6 d3 indata1)
  let loopFn =
    lam fileDescriptors3.
      lam inputSeqs3.
        lam outputSeqs3.
          lam nanosPerSec4.
            lam monoLogicalTime3.
              lam wallLogicalTime4.
                lam cpuExecutionTime3.
                  lam taskExecTimes3.
                    lam slowdown3.
                      lam nanosPerSec5.
                        lam wallLogicalTime5.
                          lam d4.
                            match
                              true
                            with
                              true
                            then
                              let #var"4" =
                                sdelay
                                  nanosPerSec4
                                  monoLogicalTime3
                                  wallLogicalTime4
                                  cpuExecutionTime3
                                  taskExecTimes3
                                  slowdown3
                                  (flushOutputs fileDescriptors3 outputSeqs3)
                                  (updateInputs fileDescriptors3 inputSeqs3)
                                  1000000000
                              in
                              let indata2: [((Int, Int), Float)] = unsafeCoerce (deref inputSeqs3).in1
                              in
                              let #var"5" = printInput nanosPerSec5 wallLogicalTime5 indata2
                              in
                              let d5: RuntimeDistBase_Dist Unknown = rtpplFixedInferRunner 100 (inferModel d4 indata2)
                              in
                              let mu = expectedValue d5 in
                              let sigma = stddev d5 mu in
                              let #var"6" =
                                let out = deref outputSeqs3 in
                                modref
                                  outputSeqs3
                                  { out
                                    with
                                    out1 =
                                      cons
                                        (tsv nanosPerSec4 wallLogicalTime4 0 { mu = mu, sigma = sigma })
                                        out.out1 }
                              in
                              loopFn
                                fileDescriptors3
                                inputSeqs3
                                outputSeqs3
                                nanosPerSec4
                                monoLogicalTime3
                                wallLogicalTime4
                                cpuExecutionTime3
                                taskExecTimes3
                                slowdown3
                                nanosPerSec5
                                wallLogicalTime5
                                d5
                            else
                              d4
in
let #var"RTPPL_CoinFlip": {in1: Int, bias: Int} -> Ref {in1: [(Timespec, Float)]} -> Ref {out1: [TSV {mu: Float, sigma: Float}]} -> Int -> Ref Timespec -> Ref Timespec -> Ref Timespec -> Ref [Int] -> Ref Int -> Int -> Ref Timespec -> () -> () =
  lam fileDescriptors2.
    lam inputSeqs2.
      lam outputSeqs2.
        lam nanosPerSec2.
          lam monoLogicalTime2.
            lam wallLogicalTime2.
              lam cpuExecutionTime2.
                lam taskExecTimes2.
                  lam slowdown2.
                    lam nanosPerSec3: Int.
                      lam wallLogicalTime3: Ref Timespec.
                        lam #var"2": ().
                          let d =
                            RuntimeDistElementary_DistUniform
                              { a = 0., b = 1. }
                          in
                          let d1 =
                            loopFn
                              fileDescriptors2
                              inputSeqs2
                              outputSeqs2
                              nanosPerSec2
                              monoLogicalTime2
                              wallLogicalTime2
                              cpuExecutionTime2
                              taskExecTimes2
                              slowdown2
                              nanosPerSec3
                              wallLogicalTime3
                              d
                          in
                          {}
in
let t7: {in1: Int, bias: Int} -> Ref {in1: [(Timespec, Float)]} -> Ref {out1: [TSV {mu: Float, sigma: Float}]} -> Int -> Ref Timespec -> Ref Timespec -> Ref Timespec -> Ref [Int] -> Ref Int -> () -> () =
  lam fileDescriptors1.
    lam inputSeqs1.
      lam outputSeqs1.
        lam nanosPerSec1.
          lam monoLogicalTime1.
            lam wallLogicalTime1.
              lam cpuExecutionTime1.
                lam taskExecTimes1.
                  lam slowdown1.
                    lam #var"1".
                      #var"RTPPL_CoinFlip"
                        fileDescriptors1
                        inputSeqs1
                        outputSeqs1
                        nanosPerSec1
                        monoLogicalTime1
                        wallLogicalTime1
                        cpuExecutionTime1
                        taskExecTimes1
                        slowdown1
                        nanosPerSec1
                        wallLogicalTime1
                        #var"1"
in
rtpplRuntimeInit
  cmpString1
  strJoin1
  monoLogicalTime
  wallLogicalTime
  cpuExecutionTime
  particleCount
  taskBudget
  taskExecTimes
  slowdown
  (updateInputs fileDescriptors inputSeqs)
  (closeFileDescriptors fileDescriptors)
  "cf"
  (t7
     fileDescriptors
     inputSeqs
     outputSeqs
     nanosPerSec
     monoLogicalTime
     wallLogicalTime
     cpuExecutionTime
     taskExecTimes
     slowdown)